/****** Object:  StoredProcedure [dbo].[WeekFirstDay2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WeekFirstDay2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[WeekFirstDay2]
GO
/****** Object:  StoredProcedure [dbo].[WeekFirstDay]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WeekFirstDay]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[WeekFirstDay]
GO
/****** Object:  StoredProcedure [dbo].[WeekDays]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WeekDays]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[WeekDays]
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialIdCo2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateServicesSerialIdCo2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateServicesSerialIdCo2]
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialIdCo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateServicesSerialIdCo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateServicesSerialIdCo]
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialId2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateServicesSerialId2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateServicesSerialId2]
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateServicesSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateServicesSerialId]
GO
/****** Object:  StoredProcedure [dbo].[UpdateSalesDetailsComponants]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateSalesDetailsComponants]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateSalesDetailsComponants]
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialIdCo2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateReservationsSerialIdCo2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateReservationsSerialIdCo2]
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialIdCo0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateReservationsSerialIdCo0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateReservationsSerialIdCo0]
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialIdCo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateReservationsSerialIdCo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateReservationsSerialIdCo]
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialId2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateReservationsSerialId2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateReservationsSerialId2]
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateReservationsSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateReservationsSerialId]
GO
/****** Object:  StoredProcedure [dbo].[UpdatePrintUser]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdatePrintUser]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdatePrintUser]
GO
/****** Object:  StoredProcedure [dbo].[UpdateLogo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateLogo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateLogo]
GO
/****** Object:  StoredProcedure [dbo].[UpdateItemPurchasePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateItemPurchasePrice]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateItemPurchasePrice]
GO
/****** Object:  StoredProcedure [dbo].[UpdateItemImportPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateItemImportPrice]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateItemImportPrice]
GO
/****** Object:  StoredProcedure [dbo].[UpdateExchange]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateExchange]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateExchange]
GO
/****** Object:  StoredProcedure [dbo].[UpdateDoctorPrices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateDoctorPrices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateDoctorPrices]
GO
/****** Object:  StoredProcedure [dbo].[UpdateDocNoAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateDocNoAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateDocNoAll]
GO
/****** Object:  StoredProcedure [dbo].[UpdateDocNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateDocNo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateDocNo]
GO
/****** Object:  StoredProcedure [dbo].[UpdateCustomersTempBal0All]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateCustomersTempBal0All]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateCustomersTempBal0All]
GO
/****** Object:  StoredProcedure [dbo].[updateCustomersTempBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[updateCustomersTempBal0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[updateCustomersTempBal0]
GO
/****** Object:  StoredProcedure [dbo].[UpdateCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateCost]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateCost]
GO
/****** Object:  StoredProcedure [dbo].[UpdateChartBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateChartBal0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateChartBal0]
GO
/****** Object:  StoredProcedure [dbo].[ulv]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ulv]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ulv]
GO
/****** Object:  StoredProcedure [dbo].[testserialtemp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[testserialtemp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[testserialtemp]
GO
/****** Object:  StoredProcedure [dbo].[TestLogin]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TestLogin]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TestLogin]
GO
/****** Object:  StoredProcedure [dbo].[TestDuplicatedSerial]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TestDuplicatedSerial]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TestDuplicatedSerial]
GO
/****** Object:  StoredProcedure [dbo].[StopPro]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StopPro]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[StopPro]
GO
/****** Object:  StoredProcedure [dbo].[sp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp]
GO
/****** Object:  StoredProcedure [dbo].[SolveChart]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SolveChart]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SolveChart]
GO
/****** Object:  StoredProcedure [dbo].[slv]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[slv]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[slv]
GO
/****** Object:  StoredProcedure [dbo].[sla]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sla]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sla]
GO
/****** Object:  StoredProcedure [dbo].[Shrink]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Shrink]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Shrink]
GO
/****** Object:  StoredProcedure [dbo].[sh]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sh]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sh]
GO
/****** Object:  StoredProcedure [dbo].[SetNewChatIsSeen]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SetNewChatIsSeen]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SetNewChatIsSeen]
GO
/****** Object:  StoredProcedure [dbo].[SetNewChatIsDelivered]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SetNewChatIsDelivered]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SetNewChatIsDelivered]
GO
/****** Object:  StoredProcedure [dbo].[SetCaseStatus]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SetCaseStatus]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SetCaseStatus]
GO
/****** Object:  StoredProcedure [dbo].[SetBalances]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SetBalances]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SetBalances]
GO
/****** Object:  StoredProcedure [dbo].[SendChat]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SendChat]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SendChat]
GO
/****** Object:  StoredProcedure [dbo].[SaveCaseDataAttachments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SaveCaseDataAttachments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SaveCaseDataAttachments]
GO
/****** Object:  StoredProcedure [dbo].[SaveAttandanceLog]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SaveAttandanceLog]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SaveAttandanceLog]
GO
/****** Object:  StoredProcedure [dbo].[SAT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SAT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SAT]
GO
/****** Object:  StoredProcedure [dbo].[rs]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rs]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rs]
GO
/****** Object:  StoredProcedure [dbo].[RestoreDeletedSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RestoreDeletedSales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[RestoreDeletedSales]
GO
/****** Object:  StoredProcedure [dbo].[ReservationsClinicsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ReservationsClinicsONE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ReservationsClinicsONE]
GO
/****** Object:  StoredProcedure [dbo].[RemoveMenu]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RemoveMenu]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[RemoveMenu]
GO
/****** Object:  StoredProcedure [dbo].[RefundSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RefundSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[RefundSerialId]
GO
/****** Object:  StoredProcedure [dbo].[PrintTbl2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintTbl2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintTbl2]
GO
/****** Object:  StoredProcedure [dbo].[PrintTbl]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintTbl]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintTbl]
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsWithTel]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintReservationsWithTel]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintReservationsWithTel]
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsRooms]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintReservationsRooms]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintReservationsRooms]
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsOperations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintReservationsOperations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintReservationsOperations]
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsClinics]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintReservationsClinics]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintReservationsClinics]
GO
/****** Object:  StoredProcedure [dbo].[PrintReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintReservations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintReservations]
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeSizeColorOccasion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintBarcodeSizeColorOccasion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintBarcodeSizeColorOccasion]
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeSizeColor]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintBarcodeSizeColor]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintBarcodeSizeColor]
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeFromSalesDetailsSizeColor]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintBarcodeFromSalesDetailsSizeColor]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintBarcodeFromSalesDetailsSizeColor]
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeFromSalesDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintBarcodeFromSalesDetails]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintBarcodeFromSalesDetails]
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcode]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrintBarcode]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PrintBarcode]
GO
/****** Object:  StoredProcedure [dbo].[ppp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ppp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ppp]
GO
/****** Object:  StoredProcedure [dbo].[OpenNewYear]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OpenNewYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OpenNewYear]
GO
/****** Object:  StoredProcedure [dbo].[LoadTypes2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadTypes2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadTypes2]
GO
/****** Object:  StoredProcedure [dbo].[LoadTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadTypes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadTypes]
GO
/****** Object:  StoredProcedure [dbo].[LoadRoomsData]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadRoomsData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadRoomsData]
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsRooms]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadReservationsRooms]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadReservationsRooms]
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsOperations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadReservationsOperations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadReservationsOperations]
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsClinicsShow]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadReservationsClinicsShow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadReservationsClinicsShow]
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsClinics]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadReservationsClinics]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadReservationsClinics]
GO
/****** Object:  StoredProcedure [dbo].[LoadReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadReservations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadReservations]
GO
/****** Object:  StoredProcedure [dbo].[LoadLabTestItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadLabTestItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadLabTestItems]
GO
/****** Object:  StoredProcedure [dbo].[LoadLaboratoryTests]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadLaboratoryTests]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadLaboratoryTests]
GO
/****** Object:  StoredProcedure [dbo].[LoadInvestorsBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadInvestorsBal0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadInvestorsBal0]
GO
/****** Object:  StoredProcedure [dbo].[LoadGroups2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadGroups2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadGroups2]
GO
/****** Object:  StoredProcedure [dbo].[LoadGroups]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadGroups]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LoadGroups]
GO
/****** Object:  StoredProcedure [dbo].[LA]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[LA]
GO
/****** Object:  StoredProcedure [dbo].[KidneysWashMotionItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[KidneysWashMotionItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[KidneysWashMotionItems]
GO
/****** Object:  StoredProcedure [dbo].[ipc]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ipc]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ipc]
GO
/****** Object:  StoredProcedure [dbo].[InsertTasksUsers]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[InsertTasksUsers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[InsertTasksUsers]
GO
/****** Object:  StoredProcedure [dbo].[ImportInvoiceCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ImportInvoiceCost]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ImportInvoiceCost]
GO
/****** Object:  StoredProcedure [dbo].[GTS]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GTS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GTS]
GO
/****** Object:  StoredProcedure [dbo].[GetVisitingTypeEmployees]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVisitingTypeEmployees]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetVisitingTypeEmployees]
GO
/****** Object:  StoredProcedure [dbo].[GetVisitingTypeDegrees]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVisitingTypeDegrees]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetVisitingTypeDegrees]
GO
/****** Object:  StoredProcedure [dbo].[getTeacherGraph]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getTeacherGraph]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getTeacherGraph]
GO
/****** Object:  StoredProcedure [dbo].[getTasksUsers]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getTasksUsers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getTasksUsers]
GO
/****** Object:  StoredProcedure [dbo].[GetTasks]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetTasks]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetTasks]
GO
/****** Object:  StoredProcedure [dbo].[GetSupliersPaymentsUnpaid]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSupliersPaymentsUnpaid]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSupliersPaymentsUnpaid]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreExpiredItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreExpiredItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreExpiredItems]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBalLimit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreBalLimit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreBalLimit]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBale]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreBale]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreBale]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreBal3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreBal3]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal2Limit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreBal2Limit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreBal2Limit]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreBal2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreBal2]
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreBal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStoreBal]
GO
/****** Object:  StoredProcedure [dbo].[GetStatisticsInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStatisticsInvoices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStatisticsInvoices]
GO
/****** Object:  StoredProcedure [dbo].[GetStagnantItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStagnantItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStagnantItems]
GO
/****** Object:  StoredProcedure [dbo].[GetStagnantCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStagnantCustomers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetStagnantCustomers]
GO
/****** Object:  StoredProcedure [dbo].[GetSpecialOrders20]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSpecialOrders20]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSpecialOrders20]
GO
/****** Object:  StoredProcedure [dbo].[GetSpecialOrders2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSpecialOrders2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSpecialOrders2]
GO
/****** Object:  StoredProcedure [dbo].[GetSpecialOrders]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSpecialOrders]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSpecialOrders]
GO
/****** Object:  StoredProcedure [dbo].[GetServicesToEdit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServicesToEdit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetServicesToEdit]
GO
/****** Object:  StoredProcedure [dbo].[GetServicesONE]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServicesONE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetServicesONE]
GO
/****** Object:  StoredProcedure [dbo].[getServicesIsLabToLabRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getServicesIsLabToLabRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getServicesIsLabToLabRPT]
GO
/****** Object:  StoredProcedure [dbo].[getServicesIsLabToLab]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getServicesIsLabToLab]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getServicesIsLabToLab]
GO
/****** Object:  StoredProcedure [dbo].[GetServices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetServices]
GO
/****** Object:  StoredProcedure [dbo].[GetServicePrices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServicePrices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetServicePrices]
GO
/****** Object:  StoredProcedure [dbo].[GetserviceCompaniesData]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetserviceCompaniesData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetserviceCompaniesData]
GO
/****** Object:  StoredProcedure [dbo].[GetServiceCompanies]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceCompanies]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetServiceCompanies]
GO
/****** Object:  StoredProcedure [dbo].[getSellerSalesInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getSellerSalesInvoices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getSellerSalesInvoices]
GO
/****** Object:  StoredProcedure [dbo].[getSellerCustomersBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getSellerCustomersBal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getSellerCustomersBal]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesWindowSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesWindowSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesWindowSub]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesWindow]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesWindow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesWindow]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSubRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSubRpt]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesSubRpt]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSpecific]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSpecific]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesSpecific]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSerialDetailsByInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSerialDetailsByInvoiceNo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesSerialDetailsByInvoiceNo]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSerialDetails2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSerialDetails2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesSerialDetails2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSerialDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSerialDetails]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesSerialDetails]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesRPT4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesRPT4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesRPT4]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesRPT2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesRPT2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesRPT2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesReturn]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesReturn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesReturn]
GO
/****** Object:  StoredProcedure [dbo].[getSalesMasterPreProd]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getSalesMasterPreProd]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getSalesMasterPreProd]
GO
/****** Object:  StoredProcedure [dbo].[getSalesMaster]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getSalesMaster]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getSalesMaster]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesItemComponantsSerial]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesItemComponantsSerial]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesItemComponantsSerial]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesItemComponants]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesItemComponants]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesItemComponants]
GO
/****** Object:  StoredProcedure [dbo].[GetSalesDeliveryDates]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesDeliveryDates]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalesDeliveryDates]
GO
/****** Object:  StoredProcedure [dbo].[getSalesAttachments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getSalesAttachments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getSalesAttachments]
GO
/****** Object:  StoredProcedure [dbo].[GetSales_Image]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSales_Image]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSales_Image]
GO
/****** Object:  StoredProcedure [dbo].[GetSales_H]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSales_H]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSales_H]
GO
/****** Object:  StoredProcedure [dbo].[GetSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSales]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistoryShifts]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryHistoryShifts]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryHistoryShifts]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistoryNotShifts]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryHistoryNotShifts]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryHistoryNotShifts]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistoryAllTax]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryHistoryAllTax]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryHistoryAllTax]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistory2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryHistory2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryHistory2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryHistory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryHistory]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmployees2Adding2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmployees2Adding2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmployees2Adding2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmployees2Adding]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmployees2Adding]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmployees2Adding]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmpDirectBonus2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmpDirectBonus2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus_3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmpDirectBonus_3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmpDirectBonus_3]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus_2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmpDirectBonus_2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmpDirectBonus_2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmpDirectBonus]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmpDirectBonus]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp43]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp43]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp43]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp40]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp40]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp40]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp31Sub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp31Sub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp31Sub]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp31]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp31]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp31]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2SubBack]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2SubBack]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2SubBack]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub46]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub46]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub46]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub44]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub44]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub44]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub41]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub41]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub41]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub38]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub38]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub38]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub37]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub37]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub37]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub36]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub36]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub36]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub35]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub35]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub35]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub33]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub33]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub33]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub30]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub30]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub30]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub29]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub29]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub29]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub26]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub26]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub26]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub25_2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub25_2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub25_2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub25]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub25]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub25]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub2]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2Sub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2Sub]
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalaryEmp2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSalaryEmp2]
GO
/****** Object:  StoredProcedure [dbo].[GetRoomTable]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomTable]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRoomTable]
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataPayment4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomsDataPayment4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRoomsDataPayment4]
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomsDataPayment]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRoomsDataPayment]
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomsDataOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRoomsDataOne]
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataAllAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomsDataAllAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRoomsDataAllAll]
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomsDataAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRoomsDataAll]
GO
/****** Object:  StoredProcedure [dbo].[GetRooms]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRooms]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRooms]
GO
/****** Object:  StoredProcedure [dbo].[GetResetAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetResetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetResetAll]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationTests]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationTests]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationTests]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsRoomsONE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsRoomsONE]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsDataAllCanceled]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsRoomsDataAllCanceled]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsRoomsDataAllCanceled]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsDataAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsRoomsDataAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsRoomsDataAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsDataAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsRoomsDataAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsRoomsDataAll]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsOperationsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsOperationsONE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsOperationsONE]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsMain]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsMain]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsMain]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsHistory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsHistory]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsDoctors]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsDoctors]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsDoctors]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsDepartments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsDepartments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsDepartments]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsClinicsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationsClinicsONE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationsClinicsONE]
GO
/****** Object:  StoredProcedure [dbo].[GetReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservations]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationRays]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationRays]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationRays]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationONE]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationONE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationONE]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationCbo4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationCbo4]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo3Data_Distinct]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationCbo3Data_Distinct]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationCbo3Data_Distinct]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo3Data]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationCbo3Data]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationCbo3Data]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationCbo3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationCbo3]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationCbo2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationCbo2]
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo1]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReservationCbo1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetReservationCbo1]
GO
/****** Object:  StoredProcedure [dbo].[getReplacement]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getReplacement]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getReplacement]
GO
/****** Object:  StoredProcedure [dbo].[GetRefundSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRefundSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRefundSerialId]
GO
/****** Object:  StoredProcedure [dbo].[GetProfitRatioPayments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetProfitRatioPayments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetProfitRatioPayments]
GO
/****** Object:  StoredProcedure [dbo].[GetProfitRatioDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetProfitRatioDetails]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetProfitRatioDetails]
GO
/****** Object:  StoredProcedure [dbo].[GetProfitRatio]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetProfitRatio]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetProfitRatio]
GO
/****** Object:  StoredProcedure [dbo].[GetProductionPlan]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetProductionPlan]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetProductionPlan]
GO
/****** Object:  StoredProcedure [dbo].[GetProductionItemCollectionMotion2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetProductionItemCollectionMotion2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetProductionItemCollectionMotion2]
GO
/****** Object:  StoredProcedure [dbo].[GetProductionItemCollectionMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetProductionItemCollectionMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetProductionItemCollectionMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetPrintIDsHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPrintIDsHistory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPrintIDsHistory]
GO
/****** Object:  StoredProcedure [dbo].[GetPrintCertificatesHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPrintCertificatesHistory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPrintCertificatesHistory]
GO
/****** Object:  StoredProcedure [dbo].[GetPreProductionOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPreProductionOrder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPreProductionOrder]
GO
/****** Object:  StoredProcedure [dbo].[GetPregnancy]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPregnancy]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPregnancy]
GO
/****** Object:  StoredProcedure [dbo].[getPLCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getPLCustomers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getPLCustomers]
GO
/****** Object:  StoredProcedure [dbo].[getPL_CheckInOut2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getPL_CheckInOut2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getPL_CheckInOut2]
GO
/****** Object:  StoredProcedure [dbo].[getPL_CheckInOut]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getPL_CheckInOut]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getPL_CheckInOut]
GO
/****** Object:  StoredProcedure [dbo].[GetOutcomeRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOutcomeRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOutcomeRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetOutcomeDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOutcomeDetailed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOutcomeDetailed]
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationsRoomschedule]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOperationsRoomschedule]
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomsAllPre]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationsRoomsAllPre]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOperationsRoomsAllPre]
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomsAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationsRoomsAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOperationsRoomsAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomsAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationsRoomsAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOperationsRoomsAll]
GO
/****** Object:  StoredProcedure [dbo].[GetOccasionDisc]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOccasionDisc]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetOccasionDisc]
GO
/****** Object:  StoredProcedure [dbo].[GetNurseShiftSummary]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNurseShiftSummary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetNurseShiftSummary]
GO
/****** Object:  StoredProcedure [dbo].[GetNonRecievedImportMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNonRecievedImportMessages]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetNonRecievedImportMessages]
GO
/****** Object:  StoredProcedure [dbo].[GetNolonRemainingRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonRemainingRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetNolonRemainingRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetNolonRemaining]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonRemaining]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetNolonRemaining]
GO
/****** Object:  StoredProcedure [dbo].[GetNewHefz]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNewHefz]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetNewHefz]
GO
/****** Object:  StoredProcedure [dbo].[GetNewChat]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNewChat]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetNewChat]
GO
/****** Object:  StoredProcedure [dbo].[GetMyImages]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMyImages]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMyImages]
GO
/****** Object:  StoredProcedure [dbo].[GetMsgs]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMsgs]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMsgs]
GO
/****** Object:  StoredProcedure [dbo].[GetMSG]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMSG]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMSG]
GO
/****** Object:  StoredProcedure [dbo].[getMonthlySales2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getMonthlySales2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getMonthlySales2]
GO
/****** Object:  StoredProcedure [dbo].[getMonthlySales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getMonthlySales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getMonthlySales]
GO
/****** Object:  StoredProcedure [dbo].[getMonthlyPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getMonthlyPayment]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getMonthlyPayment]
GO
/****** Object:  StoredProcedure [dbo].[GetMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMessages]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMessages]
GO
/****** Object:  StoredProcedure [dbo].[GetMaxSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMaxSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMaxSerialId]
GO
/****** Object:  StoredProcedure [dbo].[GetMachinesOutcomeMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMachinesOutcomeMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMachinesOutcomeMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetMachinesMotionRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMachinesMotionRpt]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMachinesMotionRpt]
GO
/****** Object:  StoredProcedure [dbo].[GetMachinesMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMachinesMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetMachinesMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetLoansStatus]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLoansStatus]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLoansStatus]
GO
/****** Object:  StoredProcedure [dbo].[GetLoans]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLoans]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLoans]
GO
/****** Object:  StoredProcedure [dbo].[GetLeaveRequests2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLeaveRequests2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLeaveRequests2]
GO
/****** Object:  StoredProcedure [dbo].[GetLeaveRequests]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLeaveRequests]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLeaveRequests]
GO
/****** Object:  StoredProcedure [dbo].[GetLabTestsRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLabTestsRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLabTestsRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetLabTests2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLabTests2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLabTests2]
GO
/****** Object:  StoredProcedure [dbo].[GetLabTests]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLabTests]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLabTests]
GO
/****** Object:  StoredProcedure [dbo].[GetLabService]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLabService]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLabService]
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotionCase]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetKidneysWashMotionCase]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetKidneysWashMotionCase]
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotion2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetKidneysWashMotion2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetKidneysWashMotion2]
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotion1]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetKidneysWashMotion1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetKidneysWashMotion1]
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetKidneysWashMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetKidneysWashMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSalesTotal80]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSalesTotal80]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSalesTotal80]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSalesTotal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSalesTotal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSalesTotal]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSalesPre]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSalesPre]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSalesPre]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales42]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSales42]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSales42]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales40]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSales40]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSales40]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales25]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSales25]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSales25]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsSales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsSales]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsQty2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsQty2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsQty2]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsProfit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsProfit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsProfit]
GO
/****** Object:  StoredProcedure [dbo].[GetItemsFromPurchaseOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemsFromPurchaseOrder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemsFromPurchaseOrder]
GO
/****** Object:  StoredProcedure [dbo].[GetItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItems]
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemMotion3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemMotion3]
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion2Fifo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemMotion2Fifo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemMotion2Fifo]
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemMotion2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemMotion2]
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCurrentBal2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCurrentBal2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCurrentBal2]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCurrentBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCurrentBal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCurrentBal]
GO
/****** Object:  StoredProcedure [dbo].[GetItemComponants]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemComponants]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemComponants]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMotionRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCollectionMotionRpt]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCollectionMotionRpt]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCollectionMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCollectionMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMaintenanceAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCollectionMaintenanceAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCollectionMaintenanceAll]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMaintenance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCollectionMaintenance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCollectionMaintenance]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCardWindowSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCardWindowSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCardWindowSub]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCardWindow]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCardWindow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCardWindow]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCard3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCard3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCard3]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCard2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCard2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCard2]
GO
/****** Object:  StoredProcedure [dbo].[GetItemCard]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCard]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetItemCard]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesOne]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMainOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesMainOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesMainOLD]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMainExternalDoctors]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesMainExternalDoctors]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesMainExternalDoctors]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesMain3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesMain3]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesMain2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesMain2]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain1]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesMain1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesMain1]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesMain]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesMain]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesImages]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesImages]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoicesImages]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoices3All]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoices3All]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoices3All]
GO
/****** Object:  StoredProcedure [dbo].[getInvoices3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInvoices3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInvoices3]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoices2All]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoices2All]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoices2All]
GO
/****** Object:  StoredProcedure [dbo].[getInvoices2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInvoices2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInvoices2]
GO
/****** Object:  StoredProcedure [dbo].[GetInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInvoices]
GO
/****** Object:  StoredProcedure [dbo].[GetInventory2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInventory2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInventory2]
GO
/****** Object:  StoredProcedure [dbo].[GetInventory]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInventory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInventory]
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentTest]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInstallmentTest]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInstallmentTest]
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentInvoicesDateilsPayments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInstallmentInvoicesDateilsPayments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInstallmentInvoicesDateilsPayments]
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentInvoicesDateils2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInstallmentInvoicesDateils2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInstallmentInvoicesDateils2]
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentInvoicesDateils]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInstallmentInvoicesDateils]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInstallmentInvoicesDateils]
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentCustomerIsDelayed]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInstallmentCustomerIsDelayed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInstallmentCustomerIsDelayed]
GO
/****** Object:  StoredProcedure [dbo].[getInsMonthlyPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInsMonthlyPayment]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getInsMonthlyPayment]
GO
/****** Object:  StoredProcedure [dbo].[GetInfertirity]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInfertirity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetInfertirity]
GO
/****** Object:  StoredProcedure [dbo].[GetIncomeRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetIncomeRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetIncomeRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAllSub_StoreInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessagesAllSub_StoreInvoiceNo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessagesAllSub_StoreInvoiceNo]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAllSub_ImportMessageId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessagesAllSub_ImportMessageId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessagesAllSub_ImportMessageId]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAllSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessagesAllSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessagesAllSub]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessagesAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessagesAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessagesAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessagesAll]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages3OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages3OLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages3OLD]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages3]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages2Images]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages2Images]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages2Images]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages2]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages0Images]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages0Images]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages0Images]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages0]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessages]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessages]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessageCostHistoryVal4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessageCostHistoryVal4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessageCostHistoryVal4]
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessageCostHistoryVal3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportMessageCostHistoryVal3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImportMessageCostHistoryVal3]
GO
/****** Object:  StoredProcedure [dbo].[GetImageTemp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImageTemp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetImageTemp]
GO
/****** Object:  StoredProcedure [dbo].[GetHefzOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetHefzOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetHefzOne]
GO
/****** Object:  StoredProcedure [dbo].[GetHefz]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetHefz]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetHefz]
GO
/****** Object:  StoredProcedure [dbo].[GetGalleryMain]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGalleryMain]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetGalleryMain]
GO
/****** Object:  StoredProcedure [dbo].[GetGallery]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGallery]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetGallery]
GO
/****** Object:  StoredProcedure [dbo].[GetFnEntryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFnEntryAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetFnEntryAll]
GO
/****** Object:  StoredProcedure [dbo].[GetFloors]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFloors]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetFloors]
GO
/****** Object:  StoredProcedure [dbo].[getFifoImportMessage]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getFifoImportMessage]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getFifoImportMessage]
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUpOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetExpertsFollowUpOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetExpertsFollowUpOne]
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUp4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetExpertsFollowUp4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetExpertsFollowUp4]
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUp2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetExpertsFollowUp2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetExpertsFollowUp2]
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetExpertsFollowUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetExpertsFollowUp]
GO
/****** Object:  StoredProcedure [dbo].[GetERPStoresItemsBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetERPStoresItemsBal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetERPStoresItemsBal]
GO
/****** Object:  StoredProcedure [dbo].[GetEntryOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEntryOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEntryOne]
GO
/****** Object:  StoredProcedure [dbo].[GetEntryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEntryAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEntryAll]
GO
/****** Object:  StoredProcedure [dbo].[GetEntry2One]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEntry2One]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEntry2One]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShifts]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpShifts]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpShifts]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShiftNetDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpShiftNetDetailed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpShiftNetDetailed]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShiftNet]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpShiftNet]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpShiftNet]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShiftIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpShiftIncome]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpShiftIncome]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpschedule]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpschedule]
GO
/****** Object:  StoredProcedure [dbo].[GetEmps]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmps]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmps]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpOutcome]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpOutcome]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpOutcome]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees6Salary2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees6Salary2]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary0002OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees6Salary0002OLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees6Salary0002OLD]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary0002]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees6Salary0002]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees6Salary0002]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary0001]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees6Salary0001]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees6Salary0001]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees6Salary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees6Salary]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Daily]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees6Daily]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees6Daily]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees5Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees5Salary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees5Salary]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees5Daily]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees5Daily]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees5Daily]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4SalaryOld]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees4SalaryOld]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees4SalaryOld]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4SalaryDeductionItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees4SalaryDeductionItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees4SalaryDeductionItems]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4Salary0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees4Salary0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees4Salary0]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees4Salary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees4Salary]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4Daily]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees4Daily]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees4Daily]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees4]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees2Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees2Salary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees2Salary]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees2]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees1]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees1]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployees]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployees]
GO
/****** Object:  StoredProcedure [dbo].[GetEmployee1Absence]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmployee1Absence]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmployee1Absence]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpLoanDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLoanDetailed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpLoanDetailed]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpEntryTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpEntryTypes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpEntryTypes]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpEntry2Types]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpEntry2Types]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpEntry2Types]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpCloseShift]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpCloseShift]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpCloseShift]
GO
/****** Object:  StoredProcedure [dbo].[GetEmpBankCash_G2Types]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpBankCash_G2Types]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetEmpBankCash_G2Types]
GO
/****** Object:  StoredProcedure [dbo].[GetDoctorsCompaniesData]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDoctorsCompaniesData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDoctorsCompaniesData]
GO
/****** Object:  StoredProcedure [dbo].[GetDoctorsCompanies]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDoctorsCompanies]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDoctorsCompanies]
GO
/****** Object:  StoredProcedure [dbo].[GetDirectCut]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDirectCut]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDirectCut]
GO
/****** Object:  StoredProcedure [dbo].[GetDirectBonus]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDirectBonus]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDirectBonus]
GO
/****** Object:  StoredProcedure [dbo].[GetDiff]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDiff]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDiff]
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryOrderAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeliveryOrderAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeliveryOrderAll]
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeliveryOrder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeliveryOrder]
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers31]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeliveryCustomers31]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeliveryCustomers31]
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeliveryCustomers3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeliveryCustomers3]
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeliveryCustomers2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeliveryCustomers2]
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeliveryCustomers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeliveryCustomers]
GO
/****** Object:  StoredProcedure [dbo].[getDeletedStatics]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getDeletedStatics]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getDeletedStatics]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedSalesSpecific]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedSalesSpecific]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedSalesSpecific]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedSales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedSales]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedLeaveRequests20]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedLeaveRequests20]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedLeaveRequests20]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedItemCollectionMotionRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedItemCollectionMotionRpt]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedItemCollectionMotionRpt]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedInvoicesOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedInvoicesOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedInvoicesOne]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedInvoices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedInvoices]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedExpertsFollowUpOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedExpertsFollowUpOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedExpertsFollowUpOne]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedExpertsFollowUp2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedExpertsFollowUp2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedExpertsFollowUp2]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedExpertsFollowUp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedExpertsFollowUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedExpertsFollowUp]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedCases]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedCases]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedCases]
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedBankCash_G2RPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDeletedBankCash_G2RPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDeletedBankCash_G2RPT]
GO
/****** Object:  StoredProcedure [dbo].[GetDailyMotionRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDailyMotionRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetDailyMotionRPT]
GO
/****** Object:  StoredProcedure [dbo].[getCustomersTempBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getCustomersTempBal0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getCustomersTempBal0]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersPoints]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomersPoints]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomersPoints]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersDateOfBirth]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomersDateOfBirth]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomersDateOfBirth]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersAcceptanceAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomersAcceptanceAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomersAcceptanceAll]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersAcceptance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomersAcceptance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomersAcceptance]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomers]
GO
/****** Object:  StoredProcedure [dbo].[getCustomerMonthlyPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getCustomerMonthlyPayment]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getCustomerMonthlyPayment]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoiceOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerInvoiceOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomerInvoiceOLD]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoice3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerInvoice3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomerInvoice3]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoice2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerInvoice2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomerInvoice2]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerInvoice]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomerInvoice]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerData]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomerData]
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerCompanies]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerCompanies]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCustomerCompanies]
GO
/****** Object:  StoredProcedure [dbo].[GetCurrentForEveryStore]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrentForEveryStore]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCurrentForEveryStore]
GO
/****** Object:  StoredProcedure [dbo].[GetCurrent]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCurrent]
GO
/****** Object:  StoredProcedure [dbo].[GetCurrencyExchangeRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrencyExchangeRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCurrencyExchangeRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalOneAll2Detailes]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalOneAll2Detailes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalOneAll2Detailes]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalOneAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalOneAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalOneAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalOneAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalOneAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalOneAll]
GO
/****** Object:  StoredProcedure [dbo].[getCriminalOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getCriminalOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getCriminalOne]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalDetailedAllDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalDetailedAllDeleted]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalDetailedAllDeleted]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalCirclesDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalCirclesDeleted]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalCirclesDeleted]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAllDeletedMaster]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalAllDeletedMaster]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalAllDeletedMaster]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAllDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalAllDeleted]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalAllDeleted]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalAll3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalAll3]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll2Images]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalAll2Images]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalAll2Images]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminalAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminalAll]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminal40]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminal40]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminal40]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminal30]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminal30]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminal30]
GO
/****** Object:  StoredProcedure [dbo].[GetCriminal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCriminal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCriminal]
GO
/****** Object:  StoredProcedure [dbo].[getConferencesMaster]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getConferencesMaster]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[getConferencesMaster]
GO
/****** Object:  StoredProcedure [dbo].[GetCompanyPrices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCompanyPrices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCompanyPrices]
GO
/****** Object:  StoredProcedure [dbo].[GetCloseShift]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCloseShift]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCloseShift]
GO
/****** Object:  StoredProcedure [dbo].[GetClinicschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetClinicschedule]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetClinicschedule]
GO
/****** Object:  StoredProcedure [dbo].[GetCheckStates]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckStates]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCheckStates]
GO
/****** Object:  StoredProcedure [dbo].[GetCheckMotionSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckMotionSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCheckMotionSub]
GO
/****** Object:  StoredProcedure [dbo].[GetCheckMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCheckMotion]
GO
/****** Object:  StoredProcedure [dbo].[GetChatOne]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetChatOne]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetChatOne]
GO
/****** Object:  StoredProcedure [dbo].[GetChatList]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetChatList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetChatList]
GO
/****** Object:  StoredProcedure [dbo].[GetChart]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetChart]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetChart]
GO
/****** Object:  StoredProcedure [dbo].[GetCenterNetIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCenterNetIncome]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCenterNetIncome]
GO
/****** Object:  StoredProcedure [dbo].[GetCasesStatistics]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasesStatistics]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasesStatistics]
GO
/****** Object:  StoredProcedure [dbo].[GetCasesHistoryAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasesHistoryAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasesHistoryAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetCasesHistoryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasesHistoryAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasesHistoryAll]
GO
/****** Object:  StoredProcedure [dbo].[GetCasesAll3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasesAll3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasesAll3]
GO
/****** Object:  StoredProcedure [dbo].[GetCasesAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasesAll2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasesAll2]
GO
/****** Object:  StoredProcedure [dbo].[GetCasesAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasesAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasesAll]
GO
/****** Object:  StoredProcedure [dbo].[GetCases4Editing]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCases4Editing]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCases4Editing]
GO
/****** Object:  StoredProcedure [dbo].[GetCases4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCases4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCases4]
GO
/****** Object:  StoredProcedure [dbo].[GetCases3All]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCases3All]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCases3All]
GO
/****** Object:  StoredProcedure [dbo].[GetCases3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCases3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCases3]
GO
/****** Object:  StoredProcedure [dbo].[GetCases]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCases]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCases]
GO
/****** Object:  StoredProcedure [dbo].[GetCasePayments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCasePayments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCasePayments]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseInvoiceAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseInvoiceAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseInvoiceAll]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseInvoice2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseInvoice2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseInvoice2]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseInvoice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseInvoice]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseInvoice]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseDataAttachments]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseDataAttachments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseDataAttachments]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseData9]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseData9]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseData9]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseAllDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseAllDetails]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseAllDetails]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseActiveOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseActiveOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseActiveOLD]
GO
/****** Object:  StoredProcedure [dbo].[GetCaseActive]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseActive]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCaseActive]
GO
/****** Object:  StoredProcedure [dbo].[GetCase21]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCase21]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCase21]
GO
/****** Object:  StoredProcedure [dbo].[GetCase2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCase2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCase2]
GO
/****** Object:  StoredProcedure [dbo].[GetCarMovement]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCarMovement]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCarMovement]
GO
/****** Object:  StoredProcedure [dbo].[GetCancleSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCancleSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCancleSerialId]
GO
/****** Object:  StoredProcedure [dbo].[GetCalcImportMessageCostVal5RPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCalcImportMessageCostVal5RPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCalcImportMessageCostVal5RPT]
GO
/****** Object:  StoredProcedure [dbo].[GetBuildingIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBuildingIncome]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBuildingIncome]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCashRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCashRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCashRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash6]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash6]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash6]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash2]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_GRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_GRPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_GRPT]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2RPT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G2RPT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G2RPT]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G23]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G23]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G23]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G22]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G22]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G22]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2_Data2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G2_Data2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G2_Data2]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2_Data]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G2_Data]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G2_Data]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G2]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G12_AZ]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G12_AZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G12_AZ]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash_G]
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetBankCash]
GO
/****** Object:  StoredProcedure [dbo].[GetAttendanceLog]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAttendanceLog]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAttendanceLog]
GO
/****** Object:  StoredProcedure [dbo].[GetAttendance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAttendance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAttendance]
GO
/****** Object:  StoredProcedure [dbo].[GetAppartementStateAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAppartementStateAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAppartementStateAll]
GO
/****** Object:  StoredProcedure [dbo].[GetAppartementSalesState]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAppartementSalesState]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAppartementSalesState]
GO
/****** Object:  StoredProcedure [dbo].[GetAllSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAllSub]
GO
/****** Object:  StoredProcedure [dbo].[GetAllServicesTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllServicesTypes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAllServicesTypes]
GO
/****** Object:  StoredProcedure [dbo].[GetAllDaysInMonth]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllDaysInMonth]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAllDaysInMonth]
GO
/****** Object:  StoredProcedure [dbo].[GetAllBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllBal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAllBal]
GO
/****** Object:  StoredProcedure [dbo].[GenerateSalesInvoiceFromQuotation2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateSalesInvoiceFromQuotation2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateSalesInvoiceFromQuotation2]
GO
/****** Object:  StoredProcedure [dbo].[GenerateSalesInvoiceFromQuotation]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateSalesInvoiceFromQuotation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateSalesInvoiceFromQuotation]
GO
/****** Object:  StoredProcedure [dbo].[GenerateReservation]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateReservation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateReservation]
GO
/****** Object:  StoredProcedure [dbo].[GeneratePurchaseInvoiceFromQuotation]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GeneratePurchaseInvoiceFromQuotation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GeneratePurchaseInvoiceFromQuotation]
GO
/****** Object:  StoredProcedure [dbo].[GenerateProductionOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateProductionOrder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateProductionOrder]
GO
/****** Object:  StoredProcedure [dbo].[GenerateInvoice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateInvoice]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateInvoice]
GO
/****** Object:  StoredProcedure [dbo].[GenerateFIFO]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateFIFO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateFIFO]
GO
/****** Object:  StoredProcedure [dbo].[GenerateDeletedStatics]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateDeletedStatics]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateDeletedStatics]
GO
/****** Object:  StoredProcedure [dbo].[GenerateCurrencyExchangeByDateTemp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GenerateCurrencyExchangeByDateTemp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GenerateCurrencyExchangeByDateTemp]
GO
/****** Object:  StoredProcedure [dbo].[ExitCase]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ExitCase]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ExitCase]
GO
/****** Object:  StoredProcedure [dbo].[executeSql]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[executeSql]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[executeSql]
GO
/****** Object:  StoredProcedure [dbo].[Exec_Backup]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Exec_Backup]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Exec_Backup]
GO
/****** Object:  StoredProcedure [dbo].[Equalization]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equalization]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equalization]
GO
/****** Object:  StoredProcedure [dbo].[EncreaseMaxSize]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EncreaseMaxSize]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EncreaseMaxSize]
GO
/****** Object:  StoredProcedure [dbo].[CustomersSearch_AZ]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CustomersSearch_AZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CustomersSearch_AZ]
GO
/****** Object:  StoredProcedure [dbo].[CustomersSearch]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CustomersSearch]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CustomersSearch]
GO
/****** Object:  StoredProcedure [dbo].[CurrencyExchangeOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CurrencyExchangeOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CurrencyExchangeOLD]
GO
/****** Object:  StoredProcedure [dbo].[CurrencyExchange]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CurrencyExchange]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CurrencyExchange]
GO
/****** Object:  StoredProcedure [dbo].[CTSub2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CTSub2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CTSub2]
GO
/****** Object:  StoredProcedure [dbo].[CTSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CTSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CTSub]
GO
/****** Object:  StoredProcedure [dbo].[CTR]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CTR]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CTR]
GO
/****** Object:  StoredProcedure [dbo].[CT]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CT]
GO
/****** Object:  StoredProcedure [dbo].[CreateResetData]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CreateResetData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CreateResetData]
GO
/****** Object:  StoredProcedure [dbo].[CreateReservationOnline]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CreateReservationOnline]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CreateReservationOnline]
GO
/****** Object:  StoredProcedure [dbo].[CreateNewReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CreateNewReservations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CreateNewReservations]
GO
/****** Object:  StoredProcedure [dbo].[CreateCasesHistoryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CreateCasesHistoryAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CreateCasesHistoryAll]
GO
/****** Object:  StoredProcedure [dbo].[CreateCaseOnline]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CreateCaseOnline]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CreateCaseOnline]
GO
/****** Object:  StoredProcedure [dbo].[CostCenterMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CostCenterMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CostCenterMotion]
GO
/****** Object:  StoredProcedure [dbo].[Clr]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clr]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clr]
GO
/****** Object:  StoredProcedure [dbo].[CloseShiftForEveryStore]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CloseShiftForEveryStore]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CloseShiftForEveryStore]
GO
/****** Object:  StoredProcedure [dbo].[CloseShift]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CloseShift]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CloseShift]
GO
/****** Object:  StoredProcedure [dbo].[CloseCases]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CloseCases]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CloseCases]
GO
/****** Object:  StoredProcedure [dbo].[CloseAttendanceOld]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CloseAttendanceOld]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CloseAttendanceOld]
GO
/****** Object:  StoredProcedure [dbo].[CloseAttendance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CloseAttendance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CloseAttendance]
GO
/****** Object:  StoredProcedure [dbo].[ChangeItemId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ChangeItemId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ChangeItemId]
GO
/****** Object:  StoredProcedure [dbo].[ChangeCustomerId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ChangeCustomerId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ChangeCustomerId]
GO
/****** Object:  StoredProcedure [dbo].[cdb]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cdb]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cdb]
GO
/****** Object:  StoredProcedure [dbo].[CasesSearch2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CasesSearch2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CasesSearch2]
GO
/****** Object:  StoredProcedure [dbo].[CasesSearch]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CasesSearch]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CasesSearch]
GO
/****** Object:  StoredProcedure [dbo].[Cases2Search]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cases2Search]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cases2Search]
GO
/****** Object:  StoredProcedure [dbo].[CaseBarcode]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CaseBarcode]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CaseBarcode]
GO
/****** Object:  StoredProcedure [dbo].[CancleSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CancleSerialId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CancleSerialId]
GO
/****** Object:  StoredProcedure [dbo].[CalcWeightedAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcWeightedAvgCost]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcWeightedAvgCost]
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp6]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcSalaryEmp6]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcSalaryEmp6]
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp5]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcSalaryEmp5]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcSalaryEmp5]
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcSalaryEmp4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcSalaryEmp4]
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcSalaryEmp2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcSalaryEmp2]
GO
/****** Object:  StoredProcedure [dbo].[CalcSalary1]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcSalary1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcSalary1]
GO
/****** Object:  StoredProcedure [dbo].[CalcSalary]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcSalary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcSalary]
GO
/****** Object:  StoredProcedure [dbo].[CalcMovingAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcMovingAvgCost]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcMovingAvgCost]
GO
/****** Object:  StoredProcedure [dbo].[CalcItemsBalCostGroupOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcItemsBalCostGroupOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcItemsBalCostGroupOLD]
GO
/****** Object:  StoredProcedure [dbo].[CalcItemsBalCostGroup]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcItemsBalCostGroup]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcItemsBalCostGroup]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessagesOpennedOnly]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessagesOpennedOnly]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessagesOpennedOnly]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSubData]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCostSubData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCostSubData]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSubAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCostSubAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCostSubAll]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSub2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCostSub2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCostSub2]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCostSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCostSub]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostOLD_2015_12_07]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCostOLD_2015_12_07]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCostOLD_2015_12_07]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCost2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCost2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCost2]
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcImportMessageCost]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcImportMessageCost]
GO
/****** Object:  StoredProcedure [dbo].[CalcFIFOOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcFIFOOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcFIFOOLD]
GO
/****** Object:  StoredProcedure [dbo].[CalcFIFOByItemId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcFIFOByItemId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcFIFOByItemId]
GO
/****** Object:  StoredProcedure [dbo].[CalcFIFO]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcFIFO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcFIFO]
GO
/****** Object:  StoredProcedure [dbo].[CalcClinicsHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcClinicsHistory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcClinicsHistory]
GO
/****** Object:  StoredProcedure [dbo].[CalcAvgCostOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcAvgCostOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcAvgCostOLD]
GO
/****** Object:  StoredProcedure [dbo].[CalcAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcAvgCost]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcAvgCost]
GO
/****** Object:  StoredProcedure [dbo].[CalcAssetsDepreciation]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcAssetsDepreciation]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcAssetsDepreciation]
GO
/****** Object:  StoredProcedure [dbo].[CalcAllImportMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CalcAllImportMessages]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CalcAllImportMessages]
GO
/****** Object:  StoredProcedure [dbo].[bk]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[bk]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[bk]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteServices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteServices]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteServices]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteSales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteSales]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteReservations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteReservations]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteLeaveRequests2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteLeaveRequests2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteLeaveRequests2]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteItemCollectionMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteItemCollectionMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteItemCollectionMotion]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteItemCollectionMaintenance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteItemCollectionMaintenance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteItemCollectionMaintenance]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteInvoicesImages2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteInvoicesImages2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteInvoicesImages2]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteExpertsFollowUp4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteExpertsFollowUp4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteExpertsFollowUp4]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteExpertsFollowUp2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteExpertsFollowUp2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteExpertsFollowUp2]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteExpertsFollowUp]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteExpertsFollowUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteExpertsFollowUp]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteDeliveryOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteDeliveryOrder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteDeliveryOrder]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCriminalDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteCriminalDetails]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteCriminalDetails]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCriminalCircles]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteCriminalCircles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteCriminalCircles]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCriminal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteCriminal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteCriminal]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCases3Leavebal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteCases3Leavebal0]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteCases3Leavebal0]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCases3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteCases3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteCases3]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCases]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteCases]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteCases]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteBankCash6]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteBankCash6]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteBankCash6]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteBankCash_G22]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteBankCash_G22]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteBankCash_G22]
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteBankCash_G2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BeforeDeleteBankCash_G2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BeforeDeleteBankCash_G2]
GO
/****** Object:  StoredProcedure [dbo].[AttendanceLogDelete]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AttendanceLogDelete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AttendanceLogDelete]
GO
/****** Object:  StoredProcedure [dbo].[AssistantOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AssistantOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AssistantOLD]
GO
/****** Object:  StoredProcedure [dbo].[AssistantCases]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AssistantCases]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AssistantCases]
GO
/****** Object:  StoredProcedure [dbo].[Assistant]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Assistant]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Assistant]
GO
/****** Object:  StoredProcedure [dbo].[AddTab]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTab]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AddTab]
GO
/****** Object:  StoredProcedure [dbo].[AddMyGetDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMyGetDate]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AddMyGetDate]
GO
/****** Object:  StoredProcedure [dbo].[AddMenu]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMenu]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AddMenu]
GO
/****** Object:  StoredProcedure [dbo].[AddCustomer]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddCustomer]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AddCustomer]
GO
/****** Object:  StoredProcedure [dbo].[AccountEndZakatSub]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEndZakatSub]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEndZakatSub]
GO
/****** Object:  StoredProcedure [dbo].[AccountEndZakat]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEndZakat]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEndZakat]
GO
/****** Object:  StoredProcedure [dbo].[AccountEndOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEndOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEndOLD]
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd3]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEnd3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEnd3]
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd2OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEnd2OLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEnd2OLD]
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEnd2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEnd2]
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountEnd]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountEnd]
GO
/****** Object:  StoredProcedure [dbo].[AccountBalanceOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountBalanceOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountBalanceOLD]
GO
/****** Object:  StoredProcedure [dbo].[AccountBalanceDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountBalanceDetailed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountBalanceDetailed]
GO
/****** Object:  StoredProcedure [dbo].[AccountBalance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccountBalance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccountBalance]
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccontMotionOLD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccontMotionOLD]
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionDoctors]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccontMotionDoctors]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccontMotionDoctors]
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionCases]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccontMotionCases]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccontMotionCases]
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionBeforeFn_AllEntry]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccontMotionBeforeFn_AllEntry]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccontMotionBeforeFn_AllEntry]
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccontMotionAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccontMotionAll]
GO
/****** Object:  StoredProcedure [dbo].[AccontMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AccontMotion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AccontMotion]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_AllItemMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_AllItemMotion]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_AllItemMotion]
GO
/****** Object:  UserDefinedFunction [dbo].[x]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[x]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[x]
GO
/****** Object:  UserDefinedFunction [dbo].[ToStrTime]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ToStrTime]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ToStrTime]
GO
/****** Object:  UserDefinedFunction [dbo].[ToStrDateTime]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ToStrDateTime]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ToStrDateTime]
GO
/****** Object:  UserDefinedFunction [dbo].[ToStrDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ToStrDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ToStrDate]
GO
/****** Object:  UserDefinedFunction [dbo].[TestSalesFlagsItemIn]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TestSalesFlagsItemIn]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[TestSalesFlagsItemIn]
GO
/****** Object:  UserDefinedFunction [dbo].[Tafkeet]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Tafkeet]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Tafkeet]
GO
/****** Object:  UserDefinedFunction [dbo].[SplitString]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SplitString]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[SplitString]
GO
/****** Object:  UserDefinedFunction [dbo].[NumToCode]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NumToCode]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[NumToCode]
GO
/****** Object:  UserDefinedFunction [dbo].[MyRound]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MyRound]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[MyRound]
GO
/****** Object:  UserDefinedFunction [dbo].[MyGetDateTime]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MyGetDateTime]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[MyGetDateTime]
GO
/****** Object:  UserDefinedFunction [dbo].[MyGetDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MyGetDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[MyGetDate]
GO
/****** Object:  UserDefinedFunction [dbo].[MonthDays]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MonthDays]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[MonthDays]
GO
/****** Object:  UserDefinedFunction [dbo].[LoadOperationsRoomschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadOperationsRoomschedule]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[LoadOperationsRoomschedule]
GO
/****** Object:  UserDefinedFunction [dbo].[LoadEmpschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadEmpschedule]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[LoadEmpschedule]
GO
/****** Object:  UserDefinedFunction [dbo].[LoadClinicschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LoadClinicschedule]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[LoadClinicschedule]
GO
/****** Object:  UserDefinedFunction [dbo].[KidneysWashMonths]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[KidneysWashMonths]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[KidneysWashMonths]
GO
/****** Object:  UserDefinedFunction [dbo].[IsWeekHoliday]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[IsWeekHoliday]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[IsWeekHoliday]
GO
/****** Object:  UserDefinedFunction [dbo].[GetYearStartingDateByDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetYearStartingDateByDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetYearStartingDateByDate]
GO
/****** Object:  UserDefinedFunction [dbo].[GetYearStartingDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetYearStartingDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetYearStartingDate]
GO
/****** Object:  UserDefinedFunction [dbo].[GetVisitingTypesSerialName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVisitingTypesSerialName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetVisitingTypesSerialName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetVisitingTypesSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVisitingTypesSerialId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetVisitingTypesSerialId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetVisitingTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVisitingTypesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetVisitingTypesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetValue2Ded]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetValue2Ded]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetValue2Ded]
GO
/****** Object:  UserDefinedFunction [dbo].[GetTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetTownName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetTownName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetTownName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetTaxAcc]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetTaxAcc]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetTaxAcc]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSuppPersonName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSuppPersonName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSuppPersonName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSupplierName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSupplierName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSupplierName]
GO
/****** Object:  UserDefinedFunction [dbo].[getsumDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getsumDeleted]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getsumDeleted]
GO
/****** Object:  UserDefinedFunction [dbo].[getsum]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getsum]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getsum]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubJobName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubJobName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubJobName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccUsingCount]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubAccUsingCount]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubAccUsingCount]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccTelFieldName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubAccTelFieldName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubAccTelFieldName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccNoLink]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubAccNoLink]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubAccNoLink]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccNameLink]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubAccNameLink]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubAccNameLink]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubAccName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubAccName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSubAccCurrencyId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSubAccCurrencyId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemSalesCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemSalesCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemSalesCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemSales]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemSales]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemPrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemPrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemMaximum]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemMaximum]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemMaximum]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemLimit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemLimit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemLimit]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemBalExpDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemBalExpDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemBalExpDate]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemBalAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemBalAvgCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemBalAvgCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreItemBal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreItemBal]
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreFlag]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStoreFlag]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetStoreFlag]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSizesDetailsName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSizesDetailsName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSizesDetailsName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSizeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSizeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSizeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetShippingLineName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetShippingLineName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetShippingLineName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetShippingCompanyName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetShippingCompanyName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetShippingCompanyName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetShipperName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetShipperName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetShipperName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServiceTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceTypeDepartmentId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceTypeDepartmentId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServiceTypeDepartmentId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServicePerc]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServicePerc]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServicePerc]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceGroupSubAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServiceGroupSubAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceGroupSerialId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServiceGroupSerialId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceGroupName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServiceGroupName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupMainAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetServiceGroupMainAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetServiceGroupMainAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSellerName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSellerName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSellerName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSavesApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSavesApplyCurrencyCycle]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSavesApplyCurrencyCycle]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesSerialNawar]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSerialNawar]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesSerialNawar]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesSerialDetailsInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesSerialDetailsInvoiceNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesSerialDetailsInvoiceNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesPaymentTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesPaymentTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesPaymentTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesNewSerial2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesNewSerial2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesNewSerial2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesNewSerial]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesNewSerial]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesNewSerial]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesItems]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesItems]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesItems]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesFlagName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSalesFlagName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSalesFlagName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSafeCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSafeCurrencyId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSafeCurrencyId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSafeApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSafeApplyCurrencyCycle]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSafeApplyCurrencyCycle]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSafeAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSafeAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSafeAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetRoomName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRoomName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetRoomName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetReturnQty]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReturnQty]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetReturnQty]
GO
/****** Object:  UserDefinedFunction [dbo].[GetReligionName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReligionName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetReligionName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetReligion]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReligion]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetReligion]
GO
/****** Object:  UserDefinedFunction [dbo].[GetRelationName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRelationName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetRelationName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetPaymentTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPaymentTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetPaymentTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOutComeTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOutComeTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOutComeTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOrderTypesMainAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOrderTypesMainAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOrderTypesMainAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOrderTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOrderTypes]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOrderTypes]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationTypesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationTypesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationSubAccNo2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationSubAccNo2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationSubAccNo2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationSubAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationSubAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationRoomName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationRoomName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationRoomName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationMotionsOperationTypesNameAll]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationMotionsOperationTypesNameAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationMotionsOperationTypesNameAll]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationMotionsOperationTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationMotionsOperationTypesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationMotionsOperationTypesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOperationAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetOperationAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonSumValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonSumValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetNolonSumValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonSumTips2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonSumTips2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetNolonSumTips2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonPriceTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonPriceTypesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetNolonPriceTypesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonPricesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonPricesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetNolonPricesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonCount]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetNolonCount]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetNolonCount]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMoneyChangerName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMoneyChangerName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMoneyChangerName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMinValuePerPerson]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMinValuePerPerson]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMinValuePerPerson]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMaxSerialIdFnCo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMaxSerialIdFnCo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMaxSerialIdFnCo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMaxSerialIdFn]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMaxSerialIdFn]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMaxSerialIdFn]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainValue2Ded]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainValue2Ded]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainValue2Ded]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainJobName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainJobName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainJobName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccNoMotionType]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainAccNoMotionType]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainAccNoMotionType]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccNoLink]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainAccNoLink]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainAccNoLink]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainAccName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainAccName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccIdLevel]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainAccIdLevel]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainAccIdLevel]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMainAccId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMainAccId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetMachinesOutcomeTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMachinesOutcomeTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetMachinesOutcomeTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLoanDeduction]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLoanDeduction]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLoanDeduction]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLinkFileName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLinkFileName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLinkFileName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLinkAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLinkAccName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLinkAccName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLastDayInMonth]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLastDayInMonth]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLastDayInMonth]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLabTestItemsUnit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLabTestItemsUnit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLabTestItemsUnit]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLabTestItemsName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLabTestItemsName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLabTestItemsName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLaboratoryTestTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLaboratoryTestTypesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLaboratoryTestTypesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetLaboratoryTestsName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLaboratoryTestsName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetLaboratoryTestsName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetJobName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetJobName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetJobName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemWeightedCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemWeightedCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemWeightedCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemWeightedAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemWeightedAvgCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemWeightedAvgCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUsingCount]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemUsingCount]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemUsingCount]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUnitQty---not used]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemUnitQty---not used]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemUnitQty---not used]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUnitName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemUnitName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemUnitName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUnit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemUnit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemUnit]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemSizePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemSizePrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemSizePrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemPurchasePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemPurchasePrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemPurchasePrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemProfit_TotalPrifit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemProfit_TotalPrifit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemProfit_TotalPrifit]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemProfit_TeacherPrifit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemProfit_TeacherPrifit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemProfit_TeacherPrifit]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemProfit_CompanyPrifit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemProfit_CompanyPrifit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemProfit_CompanyPrifit]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemLastPurchasePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemLastPurchasePrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemLastPurchasePrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemLastInPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemLastInPrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemLastInPrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemLastCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemLastCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemLastCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemImage]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemImage]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemImage]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemGroupName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemGroupName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemBalGroup]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemBalGroup]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemBalGroup]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemAvgSalesPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemAvgSalesPrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemAvgSalesPrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemAvgCost2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemAvgCost2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemAvgCost2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemAvgCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetItemAvgCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetInvoicesTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetInvoicesTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetInvoicesSumValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInvoicesSumValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetInvoicesSumValue]
GO
/****** Object:  UserDefinedFunction [dbo].[getInstallNewDocNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getInstallNewDocNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getInstallNewDocNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetInPatientSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInPatientSubAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetInPatientSubAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetInPatientAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetInPatientAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetInPatientAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetImportmessageName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetImportmessageName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetImportmessageName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetIfDuplicatedSerial]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetIfDuplicatedSerial]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetIfDuplicatedSerial]
GO
/****** Object:  UserDefinedFunction [dbo].[GetIfCheckIsCollected]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetIfCheckIsCollected]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetIfCheckIsCollected]
GO
/****** Object:  UserDefinedFunction [dbo].[GetGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGroupName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetGroupName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetGenderName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGenderName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetGenderName]
GO
/****** Object:  UserDefinedFunction [dbo].[getEntryTblName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getEntryTblName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getEntryTblName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEnName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEnName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEnName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpTaxAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpTaxAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpTaxAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpSumLoanValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpSumLoanValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpSumLoanValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpRealWorkTime]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpRealWorkTime]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpRealWorkTime]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpOverTime]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpOverTime]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpOverTime]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLoans]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLoans]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpLoans]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLeaveRequests]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLeaveRequests]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpLeaveRequests]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLeaveBal2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLeaveBal2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpLeaveBal2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLeaveBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLeaveBal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpLeaveBal]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLateOverValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLateOverValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpLateOverValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpLate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpLate]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpIsHasAttendance]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpIsHasAttendance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpIsHasAttendance]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpIncome]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpIncome]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHourValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpHourValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpHourValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHours]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpHours]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpHours]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHolidays2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpHolidays2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpHolidays2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHolidays]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpHolidays]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpHolidays]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpExecuse]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpExecuse]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpExecuse]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpEnName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpEnName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpEnName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpEarly]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpEarly]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpEarly]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDirectCut]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpDirectCut]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpDirectCut]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDirectBonus]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpDirectBonus]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpDirectBonus]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDepartmentId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpDepartmentId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpDepartmentId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDegreeId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpDegreeId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpDegreeId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDayValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpDayValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpDayValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpArName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpArName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpArName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpAbsence]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetEmpAbsence]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetEmpAbsence]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDriverName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDriverName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDriverName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDepartmentName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDepartmentName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDepartmentName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDelivaryCost]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDelivaryCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDelivaryCost]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDegreeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDegreeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDegreeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDebitsApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDebitsApplyCurrencyCycle]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDebitsApplyCurrencyCycle]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDebitCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDebitCurrencyId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDebitCurrencyId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetDebitAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDebitAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetDebitAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustomerName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCustomerName]
GO
/****** Object:  UserDefinedFunction [dbo].[getCustomerMonthPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getCustomerMonthPayment]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getCustomerMonthPayment]
GO
/****** Object:  UserDefinedFunction [dbo].[getCustomerLastPaymentValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getCustomerLastPaymentValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getCustomerLastPaymentValue]
GO
/****** Object:  UserDefinedFunction [dbo].[getCustomerLastPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getCustomerLastPayment]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getCustomerLastPayment]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustomerInvoiceTotal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerInvoiceTotal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCustomerInvoiceTotal]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustomerInvoicesTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustomerInvoicesTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCustomerInvoicesTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustInvoicesDeliveryValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustInvoicesDeliveryValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCustInvoicesDeliveryValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustInvoicesDelivery]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCustInvoicesDelivery]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCustInvoicesDelivery]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencySIGN]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrencySIGN]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCurrencySIGN]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrencyName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCurrencyName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyExchangeTest]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrencyExchangeTest]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCurrencyExchangeTest]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyExchangeMain]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrencyExchangeMain]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCurrencyExchangeMain]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyExchange]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrencyExchange]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCurrencyExchange]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCreditsApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCreditsApplyCurrencyCycle]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCreditsApplyCurrencyCycle]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCountryName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCountryName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCountryName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCostTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCostTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCostPrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCostPrice]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostCenterSubName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCostCenterSubName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCostCenterSubName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostCenterName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCostCenterName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCostCenterName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetContainerSizeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetContainerSizeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetContainerSizeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetContactTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetContactTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetContactTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetContactGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetContactGroupName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetContactGroupName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompanyName2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCompanyName2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCompanyName2]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompanyName1]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCompanyName1]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCompanyName1]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompanyName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCompanyName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCompanyName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompaniesName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCompaniesName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCompaniesName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetColorsDetailsName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetColorsDetailsName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetColorsDetailsName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetClinicName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetClinicName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetClinicName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCityName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCityName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCityName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCheckTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckSum]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckSum]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCheckSum]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckReturnCount]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckReturnCount]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCheckReturnCount]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckPartialCollectedLocal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckPartialCollectedLocal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCheckPartialCollectedLocal]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckPartialCollected]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckPartialCollected]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCheckPartialCollected]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckBankName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCheckBankName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCheckBankName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseStatus]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseStatus]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseStatus]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseOutcomeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseOutcomeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseOutcomeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseInvoicesDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseInvoicesDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseInvoicesDate]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseIdFromReservationsRooms]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseIdFromReservationsRooms]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseIdFromReservationsRooms]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseIdFromReservationsOperations]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseIdFromReservationsOperations]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseIdFromReservationsOperations]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseIdFromReservationsClinics]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseIdFromReservationsClinics]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseIdFromReservationsClinics]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseExitGetDate]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseExitGetDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseExitGetDate]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseEnName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseEnName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseEnName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseCompanyId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseCompanyId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseCompanyId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseArName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseArName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseArName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCaseAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCaseAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCase2TotalValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCase2TotalValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCase2TotalValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal7]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCalcImportMessageCostVal7]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCalcImportMessageCostVal7]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal6]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCalcImportMessageCostVal6]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCalcImportMessageCostVal6]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal5]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCalcImportMessageCostVal5]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCalcImportMessageCostVal5]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal4]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCalcImportMessageCostVal4]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCalcImportMessageCostVal4]
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCalcImportMessageCostInvoices]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetCalcImportMessageCostInvoices]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBrokerCoName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBrokerCoName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBrokerCoName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBranchCity]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBranchCity]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBranchCity]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBanksApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBanksApplyCurrencyCycle]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBanksApplyCurrencyCycle]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBankCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCurrencyId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBankCurrencyId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBankCash_G2TypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankCash_G2TypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBankCash_G2TypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBankAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBankAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBankAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBal0]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetBal0]
GO
/****** Object:  UserDefinedFunction [dbo].[getAttendanceHours]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getAttendanceHours]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[getAttendanceHours]
GO
/****** Object:  UserDefinedFunction [dbo].[GetArMonthName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetArMonthName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetArMonthName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAreaName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAreaName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAreaName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAppartementState]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAppartementState]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAppartementState]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAnalysisName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAnalysisName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAnalysisName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllSubAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAllSubAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetALlNormalValue]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetALlNormalValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetALlNormalValue]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllCurrencyId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAllCurrencyId]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllApplyCurrencyCycleAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllApplyCurrencyCycleAccNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAllApplyCurrencyCycleAccNo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllApplyCurrencyCycle]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAllApplyCurrencyCycle]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAge]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAge]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAge]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAccTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAccTypeName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAccTypeName]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAccNoLink]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAccNoLink]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAccNoLink]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAccName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetAccName]
GO
/****** Object:  UserDefinedFunction [dbo].[Get_Checksum]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Get_Checksum]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Get_Checksum]
GO
/****** Object:  UserDefinedFunction [dbo].[fu_EAN13CheckDigit]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fu_EAN13CheckDigit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fu_EAN13CheckDigit]
GO
/****** Object:  UserDefinedFunction [dbo].[FnStoreIetmBal]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FnStoreIetmBal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[FnStoreIetmBal]
GO
/****** Object:  UserDefinedFunction [dbo].[fnSplitString]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnSplitString]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnSplitString]
GO
/****** Object:  UserDefinedFunction [dbo].[FnItemsSales]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FnItemsSales]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[FnItemsSales]
GO
/****** Object:  UserDefinedFunction [dbo].[FnImportMessagesAllSub_StoreInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FnImportMessagesAllSub_StoreInvoiceNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[FnImportMessagesAllSub_StoreInvoiceNo]
GO
/****** Object:  UserDefinedFunction [dbo].[fn_RemoveTashkeel]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fn_RemoveTashkeel]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fn_RemoveTashkeel]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_ProfitRatioDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_ProfitRatioDetails]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_ProfitRatioDetails]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_ImportMessagesAllSub_StoreInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_ImportMessagesAllSub_StoreInvoiceNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_ImportMessagesAllSub_StoreInvoiceNo]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpStores]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_EmpStores]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_EmpStores]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpPermissions]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_EmpPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_EmpPermissions]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpChart]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_EmpChart]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_EmpChart]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpBankCash_G2Types]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_EmpBankCash_G2Types]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_EmpBankCash_G2Types]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_AllWindows]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_AllWindows]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_AllWindows]
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_AllEntry]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fn_AllEntry]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fn_AllEntry]
GO
/****** Object:  UserDefinedFunction [dbo].[FillZero]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FillZero]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[FillZero]
GO
/****** Object:  UserDefinedFunction [dbo].[ean13]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ean13]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ean13]
GO
/****** Object:  UserDefinedFunction [dbo].[DaysInMonth]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DaysInMonth]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[DaysInMonth]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0OLD]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0OLD]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0MainAcc]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0MainAcc]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0MainAcc]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0Link]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0Link]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0Link]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0CustomerRivieraOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0CustomerRivieraOLD]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0CustomerRivieraOLD]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0CustomerRiviera]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0CustomerRiviera]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0CustomerRiviera]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0BeforeFn_AllEntry]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0BeforeFn_AllEntry]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0BeforeFn_AllEntry]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0All2]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0All2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0All2]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0All]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0All]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0All]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0]    Script Date: 2022-08-30 7:51:54 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Bal0]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Bal0]
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@ToDate datetime,
@Flag bigint,
@CostCenterId bigint,
@CostCenterSubId bigint
)
returns float
--with encryption
as
begin

declare @Detailed bigint=0

declare @LinkFile bigint,@MotionType bigint,@EndType bigint
select @LinkFile=LinkFile,@MotionType=MotionType,@EndType=EndType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @MotionValue float
if @MotionType=0 select @MotionValue=1. 
if @MotionType=1 select @MotionValue=-1.

declare @Bal0 float=dbo.GetBal0(@MainAccNo,@SubAccNo)

declare @MyDate datetime=cast('1900-1-1'as date)
if @EndType<3
begin
	select @Bal0=0
	if datepart(MONTH,@ToDate)=12 and datepart(day,@ToDate)=31
		select @MyDate =@ToDate+1
	else
		select @MyDate =cast(cast((datepart(year,@ToDate)) as nvarchar(4))+'-1-1'as date)
end

	
declare @tbl table(Db float,Cr float)
insert @tbl

select
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr
where @CostCenterId=0
and @CostCenterSubId=0

union all

select Db,Cr from dbo.Fn_AllEntry(@MainAccNo,@SubAccNo,@MyDate,@ToDate,0,0,1)
where (CostCenterId=@CostCenterId or @CostCenterId=0)
and (CostCenterSubId=@CostCenterSubId or @CostCenterSubId=0)

return 
round((
case when @Flag=0 then (select isnull(SUM(Db),0)-isnull(SUM(Cr),0) from @tbl)*@MotionValue
when @Flag=1 then (select isnull(SUM(Db),0) from @tbl)
when @Flag=2 then (select isnull(SUM(Cr),0) from @tbl)
else 0 end
),6)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0All]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0All]
(
@AccNo varchar(100),
@FromDate datetime,
@Flag bigint
)

returns float
--with encryption
as
begin
declare @Val float

select @Val=ISNULL(Sum(Bal0),0)
from
(
select dbo.Bal0MainAcc(Id,@FromDate,@Flag)Bal0 from chart where Id=@AccNo and SubType=1
)Tbl
return isnull(@Val,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0All2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0All2]
(
@AccNo varchar(100),
@FromDate datetime,
@Flag bigint
)

returns float
--with encryption
as
begin
declare @Val float

select @Val=ISNULL(Sum(Bal0),0)
from
(
select dbo.Bal0(@AccNo,Id,@FromDate,@Flag,0,0)*dbo.GetCurrencyExchange(Id,LinkFile,CurrencyId,3,@FromDate)Bal0 
from AllSub 
where AccNo=@AccNo
)Tbl

return isnull(@Val,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0BeforeFn_AllEntry]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0BeforeFn_AllEntry]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@ToDate datetime,
@Flag bigint
)
returns float
--with encryption
as
begin

declare @Detailed bigint=0

declare @LinkFile bigint,@MotionType bigint
select @LinkFile=LinkFile,@MotionType=MotionType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @MotionValue float
if @MotionType=0 select @MotionValue=1. 
if @MotionType=1 select @MotionValue=-1.

declare @Bal0 float=dbo.GetBal0(@MainAccNo,@SubAccNo)

declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
declare @InPatientSubAccNo int=isnull((select top 1 InPatientSubAccNo from Statics),0)

declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
declare @OutPatientSubAccNo int=isnull((select top 1 OutPatientSubAccNo from Statics),0)

declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
declare @OtherSubAccNo int=isnull((select top 1 OtherSubAccNo from Statics),0)

declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
declare @CaseInvoicesDiscountSubAccNo int=isnull((select top 1 CaseInvoicesDiscountSubAccNo from Statics),0)

declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()
declare @OperationSubAccNo int=dbo.GetOperationSubAccNo()
declare @OperationSubAccNo2 int=dbo.GetOperationSubAccNo2()

declare @tbl table(Db float,Cr float)
insert @tbl

select
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr


--===========================================الإهلاكات===============================================

union all

select 
0 Db,
Value Cr
from AssetsDepreciationHistory 
where DayDate<=@ToDate
and @LinkFile=12
and AssetId=@SubAccNo

union all

select 
Value Db,
0 Cr
from AssetsDepreciationHistory T
left join Assets A on(T.AssetId=A.Id)
where T.DayDate<=@ToDate
and A.DepreciationAccNo=@MainAccNo
and @SubAccNo=0


--==========================================================================================

union all

select 
Living Db,
0 Cr
from ClinicsHistory 
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 
Supervision Db,
0 Cr
from ClinicsHistory 
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 
Care Db,
0 Cr
from ClinicsHistory 
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 
Perc Db,
0 Cr
from CaseInvoices
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo

union all

select 
Total0 Db,
0 Cr
from CaseInvoices
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo

union all

select 
0 Db,
Total01 Cr
from CaseInvoices
where DayDate <=@ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo2=@SubAccNo

union all

select 
0 Db,
Discount Cr
from CaseInvoices
where DayDate <=@ToDate
and @LinkFile=13
and CaseId=@SubAccNo
and Discount<>0

union all

select 
0 Db,
T.Living Cr
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate<=@ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 
0 Db,
T.Supervision Cr
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate<=@ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 
0 Db,
T.Care Cr
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate<=@ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 
0 Db,
Perc Cr
from CaseInvoices
where DayDate<=@ToDate 
and @OtherAccNo=@MainAccNo
and @OtherSubAccNo=@SubAccNo

union all

select 
Discount Db,
0 Cr
from CaseInvoices
where DayDate<=@ToDate 
and @CaseInvoicesDiscountAccNo=@MainAccNo
and @CaseInvoicesDiscountSubAccNo=@SubAccNo
and Discount<>0

union all

select 
0 Db,
Remaining Cr
from CaseInvoices
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Remaining>0
and RemainingSubAccNo>0

union all

select 
Remaining Db,
0 Cr
from CaseInvoices
where DayDate <=@ToDate 
and RemainingMainAccNo=@MainAccNo
and RemainingSubAccNo=@SubAccNo
and Remaining>0
and RemainingSubAccNo>0

--==========================================================================================

union all

select 
Value Db,
0 Cr
from OperationMotions
where DayDate <=@ToDate
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and CaseInvoiceNo>0

union all

select 
0 Db,
Dr1Value Cr
from OperationMotions T
left join Employees E on(T.DrId1=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr1Value<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
Dr2Value Cr
from OperationMotions T
left join Employees E on(T.DrId2=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr2Value<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
Dr3Value Cr
from OperationMotions T
left join Employees E on(T.DrId3=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr3Value<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
AnesthetistValue Cr
from OperationMotions T
left join Employees E on(T.AnesthetistId=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and AnesthetistValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
RoomValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and RoomValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
RoomValue2 Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and RoomValue2<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
CsValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and CsValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
MedicalValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and MedicalValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
CoValue Cr
from OperationMotions
where DayDate <=@ToDate
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo=@SubAccNo
and Canceled=0
and CoValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
ConsumablesValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and ConsumablesValue<>0
and CaseInvoiceNo>0

--union all

--select 
--ConsumablesValue Db,
--0 Cr
--from OperationMotions
--where DayDate <=@ToDate 
--and @LinkFile=13
--and CaseId=@SubAccNo
--and Canceled=0
--and ConsumablesValue<>0
--and CaseInvoiceNo>0

--==========================================================================================

union all

select 
Value Db,
0 Cr
from Reservations
where cast(ReservationDate as date) <=@ToDate
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0

union all

select 
0 Db,
Value Cr
from Reservations R
where cast(ReservationDate as date) <=@ToDate
and @OutPatientAccNo=@MainAccNo
and @OutPatientSubAccNo=@SubAccNo
and Canceled=0

union all

select 
0 Db,
Payed Cr
from Reservations
where cast(ReservationDate as date) <=@ToDate
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0

union all

select 
Payed Db,
0 Cr
from Reservations R
left join Employees E on(R.EmpIdReservation=E.Id)
where cast(ReservationDate as date) <=@ToDate
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0

union all

select 
0 Db,
Remaining Cr
from Reservations
where cast(RemainingDate as date) <=@ToDate
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Done=1

union all

select 
Remaining Db,
0 Cr
from Reservations R
left join Employees E on(R.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) <=@ToDate
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Done=1

union all

select 
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr
from Reservations
where cast(ReturnedDate as date) <=@ToDate
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Returned=1

union all

select 
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr
from Reservations R
left join Employees E on(R.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) <=@ToDate
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Returned=1

--==========================================================================================

union all

select 
0 Db,
Value Cr
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
where DayDate <=@ToDate 
and SG.MainAccNo=@MainAccNo
and SG.SubAccNo=@SubAccNo
and Canceled=0
and Returned=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 
Value Db,
0 Cr
from Services S
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all


select 
0 Db,
Payed Cr
from Services S
where DayDate <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Payed<>0
and S.Flag=1

union all

select 
Payed Db,
0 Cr
from Services S
left join Employees E on(S.EmpIdReservation=E.Id)
where DayDate <=@ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Payed<>0
and S.Flag=1

union all

select 
0 Db,
Remaining Cr
from Services S
where cast(RemainingDate as date) <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 
Remaining Db,
0 Cr
from Services S
left join Employees E on(S.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) <=@ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr
from Services S
where cast(ReturnedDate as date) <=@ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Returned=1
and S.Flag=1

union all

select 
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr
from Services S
left join Employees E on(S.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) <=@ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Returned=1
and S.Flag=1


--==========================================================================================

union all

select 
ED.Debit Db,
ED.Credit Cr
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate <=@ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

--==========================================================================================

union all

select 
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then Value1 else 0 end) Db,
(case when (MainAccNo2=@MainAccNo and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0)) then Value2 else 0 end) Cr
from Entry2
where DayDate <=@ToDate 
and (
	(MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0))or
	(MainAccNo2=@MainAccNo and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0))
	)
and Canceled=0

--==========================================================================================
union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash
where DayDate <=@ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash_G
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash_G
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0


union all

select 
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue2 end) Db,
(Case when C.Flag=1 then MainValue2 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0


union all
--ارتداد الشيك اوتوماتيكيا
select 
(Case when C.Flag=1 then C.MainValue2 else 0 end) Db,
(Case when C.Flag=1 then 0 else C.MainValue2 end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate <=@ToDate 
and C.LinkFile=@LinkFile 
and (C.SubAccNo=@SubAccNo or @SubAccNo=0 or C.SubAccNo=0)
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)
--===========================================================================

union all

select 
I.Cost_InvoiceNo Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 
I.Cost_MessageId Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 
0 Db,
I.Cost_OrderTypeId Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1

union all

select 
I.Cost_OrderTypeId Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 
0 Db,
I.Cost_Administrative Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1

union all

select 
I.Cost_Administrative Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

--==========================================================================================
union all

select 
(Case when C.Flag=1 then 0 else MainValue2Ded end) Db,
(Case when C.Flag=1 then MainValue2Ded else 0 end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0
and MainValue2Ded<>0

union all

select 
(Case when C.Flag=1 then Value2Ded else 0 end) Db,
(Case when C.Flag=1 then 0 else Value2Ded end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Value2Ded<>0 

union all

select 
(Case when C.Flag=1 then 0 else Value2Ded end) Db,
(Case when C.Flag=1 then Value2Ded else 0 end) Cr
from ImportMessages D
left join ImportMessagesDetails Dt on(D.OrderTypeId=Dt.OrderTypeId and D.Id=Dt.Id)
left join BankCash_G2 C on(D.StoreId=C.StoreId and Dt.InvoiceNo=C.StoreInvoiceNo)
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where D.DeliveredDate <=@ToDate 
and C.DayDate<=@ToDate
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Value2Ded<>0
and D.IsDelivered=1

union all

select 
(Case when C.Flag=1 then MainValue else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Db,
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and MainLinkFile=@LinkFile
and BankId=@SubAccNo
and Canceled=0

union all
--ارتداد الشيك اوتوماتيكيا
select 
(Case when C.Flag=1 then 0 else C.MainValue end) Db,
(Case when C.Flag=1 then C.MainValue else 0 end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate <=@ToDate 
and C.MainLinkFile=@LinkFile
and C.BankId=@SubAccNo
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)

union all

select 
0 Db,
MainValue Cr
from BankCash_G3
where DayDate <=@ToDate
and FromLinkFile=@LinkFile 
and FromSubAccNo=@SubAccNo
and Canceled=0

union all

select 
MainValue Db,
0 Cr
from BankCash_G3
where DayDate <=@ToDate
and ToLinkFile=@LinkFile 
and ToSubAccNo=@SubAccNo
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash2
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0


union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash3
where DayDate <=@ToDate 
and MainAccNo=@MainAccNo 
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash3
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash4
where DayDate <=@ToDate 
and MoneyChangerId=@SubAccNo 
and @LinkFile=8
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash4
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

--===========================================================================
--===========================================================================




select 
0 Db,
Value Cr
from Invoices
where DayDate <=@ToDate 
and SellerId=@SubAccNo
and @LinkFile=7


union all

select 
0 Db,
Payed+Tips+Payments+OtherPayments Cr
from Nolon
where DayDate <=@ToDate 
and SellerId=@SubAccNo
and @LinkFile=7

--===========================================================================
--===========================================================================
union all

select 
dbo.GetCustomerInvoiceTotal(InvoiceNo) Db,
0 Cr
from CustomerInvoices
where DayDate <=@ToDate 
and CustomerId=@SubAccNo
and @LinkFile=1
and @Detailed=0
--===========================================================================
union all

select 
Value Db,
0 Cr
from CustomerInvoicesDt dt
left join CustomerInvoices d on(dt.InvoiceNo=d.InvoiceNo) 
where DayDate <=@ToDate 
and CustomerId=@SubAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 
Value Db,
0 Cr
from Invoices D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate <=@ToDate 
and D.CustomerId=@SubAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 
Value2+Tips2 Db,
0 Cr
from Nolon D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate <=@ToDate 
and D.CustomerId=@SubAccNo
and @LinkFile=1
and Value2+Tips2<>0
and @Detailed=1


--===========================================================================
--===========================================================================

--===========================================================================المبيعات والمشتريات

union all

select 
(case when Flag in(11,13,15,10,20,30,21,23,17,36,37,47) then TotalAfterDiscount else 0 end) Db,
(case when Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then TotalAfterDiscount else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and @Detailed=0
and Temp=0
--===========================================================================
union all

select 
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then D.DiscountValue else 0 end) Db,
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then D.DiscountValue else 0 end) Cr
from SalesMaster D
where D.DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and D.DiscountValue<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then Dt.Value else 0 end) Db,
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then Dt.Value else 0 end) Cr
from SalesMaster D
left join SalesDetails Dt on(D.StoreId=dt.StoreId and D.Flag=dt.Flag and D.InvoiceNo=Dt.InvoiceNo )
where D.DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Dt.Value<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=1) then Val1 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=2) then Val1 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val1<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=1) then Val2 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=2) then Val2 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val2<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=1) then Val3 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=2) then Val3 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val3<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=1) then Val4 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=2) then Val4 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val4<>0
and @Detailed=1
and Temp=0
--===========================================================================


--===========================================================================النقدى والفيزا

union all

select 
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)))or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(9,19,29)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0


--===========================================================================حساب المبيعات والمشتريات

union all

select 
(case when Flag in(9,19,29,12,14,16,18,36,38,48,22,24) then Total else 0 end) Db,
(case when Flag in(10,20,30,11,13,15,17,35,37,47,21,23) then Total else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(9,10,29,30,	11,13,15,17,35,37,47,21,23,		12,14,16,18,36,38,48,	22,24)
and not(Flag in(37,38,47,48) and CaseInvoiceNo=0) 
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0

--=====================================================================================
union all

select 
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(19)
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0

union all

select 
0 Db,
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate <=@ToDate 
and M.Flag in(20)
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
--=====================================================================================
--=====================================================================================
union all

select 
0 Db,
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and Flag in(19)
and M.AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
and I.DeliveredDate <=@ToDate
and I.IsDelivered=1

union all

select 
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=D.SalesInvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and M.Flag in(20)
and M.AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
and I.DeliveredDate <=@ToDate
and I.IsDelivered=1

--=====================================================================================

union all

select 
I.Bal0 Db,
0 Cr
from ImportMessages I
where I.DayDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.Bal0<>0

union all

select 
0 Db,
I.Bal0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1
and I.Bal0<>0

union all

select 
I.Bal0 Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1
and I.Bal0<>0


union all

select 
I.val5 Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

--===========================================================================حسابات الخصم والإضافة

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(11,13,15,21,23)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(12,14,16,22,24)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(9,19,29)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(10,20,30)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0
/*
union all

--مصاريف الطلبيات
select 
Val3 Db,
0 Cr
from ImportMessageCostHistoryVal3 T
where DeliveredDate <=@ToDate 
--and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag not in(4,5))
and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag in(0))
and @SubAccNo=OrderTypeId

union all

--مصاريف الطلبيات
select 
0 Db,
Val3 Cr
from ImportMessageCostHistoryVal3
where DeliveredDate <=@ToDate 
--and (MainAccNo=@MainAccNo and MyFlag not in(4,5))
and (MainAccNo=@MainAccNo and MyFlag in(0))
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
*/

union all

--المصاريف الإدارية
select 
SubVal4 Db,
0 Cr
from ImportMessageCostHistoryVal4
where DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo 
and @SubAccNo=OrderTypeId

union all

--المصاريف الإدارية
select 
0 Db,
SubVal4 Cr
from ImportMessageCostHistoryVal4
where DeliveredDate <=@ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)



--=============================================================================================
--=========================تحويل المصاريف عبر الحسابات في رسائل الاستيراد=======================
--=============================================================================================
union all

select Db,Cr from (

select
(case 
when Tbl.Line=1 and E.DayDate <=@ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then E.DayDate
when Tbl.Line=2 and E.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then E.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and E.DayDate <=@ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then ED.Credit
when Tbl.Line=2 and E.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Debit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Credit
else 0 end)Db,
(case 
when Tbl.Line=1 and E.DayDate <=@ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then ED.Debit
when Tbl.Line=2 and E.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Credit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Debit
else 0 end)Cr
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*E.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)



)Tbl
where (Db<>0 or Cr<>0)
and DayDate <=@ToDate

union all

select Db,Cr from (

select
(case 
when Tbl.Line=1 and ED.DayDate <=@ToDate and 
(
(IsCost2=1 and MainAccNo2=@MainAccNo and (ED.SubAccNo2=@SubAccNo or @SubAccNo=0 or ED.SubAccNo2=0))or
(IsCost1=1 and MainAccNo1=@MainAccNo and (ED.SubAccNo1=@SubAccNo or @SubAccNo=0 or ED.SubAccNo1=0))
)
then ED.DayDate
when Tbl.Line=2 and ED.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and ED.DayDate <=@ToDate and (IsCost2=1 and MainAccNo2=@MainAccNo and (ED.SubAccNo2=@SubAccNo or @SubAccNo=0 or ED.SubAccNo2=0)) 
then ED.Value2
when Tbl.Line=2 and ED.DayDate <=@ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value1
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value2
else 0 end)Db,
(case 
when Tbl.Line=1 and ED.DayDate <=@ToDate and (IsCost1=1 and MainAccNo1=@MainAccNo and (ED.SubAccNo1=@SubAccNo or @SubAccNo=0 or ED.SubAccNo1=0)) 
then ED.Value1
when Tbl.Line=2 and ED.DayDate <=@ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value2
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value1
else 0 end)Cr
from Entry2 ED
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*ED.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0


)Tbl
where (Db<>0 or Cr<>0)
and DayDate <=@ToDate

union all

select Db,Cr from (

select
(case 
when Tbl.Line=1 and C.DayDate <=@ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then C.DayDate
when Tbl.Line=2 and C.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then C.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and C.DayDate <=@ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then 0
when Tbl.Line=2 and C.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then 0
else 0 end)Db,
(case 
when Tbl.Line=1 and C.DayDate <=@ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=2 and C.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then 0
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
else 0 end)Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join SalesMaster M on(M.StoreId=C.StoreId and M.Flag=19 and M.InvoiceNo=C.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(C.CostTypeId=2 and I.OrderTypeId=C.PurchaseAccNo)or
(C.CostTypeId=3 and I.OrderTypeId=C.PurchaseAccNo and I.Id=C.ImportMessageId)or
(C.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*C.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0


)Tbl
where (Db<>0 or Cr<>0)
and DayDate <=@ToDate


return 
round((
case when @Flag=0 then (select isnull(SUM(Db),0)-isnull(SUM(Cr),0) from @tbl)*@MotionValue
when @Flag=1 then (select isnull(SUM(Db),0) from @tbl)
when @Flag=2 then (select isnull(SUM(Cr),0) from @tbl)
else 0 end
),6)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0CustomerRiviera]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0CustomerRiviera]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@ToDate datetime,
@Flag bigint
)
returns float
--with encryption
as
begin


return 
round((
select TempBal0 from Customers where id=@SubAccNo
),6)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0CustomerRivieraOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0CustomerRivieraOLD]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@ToDate datetime,
@Flag bigint
)
returns float
--with encryption
as
begin

declare @LinkFile bigint,@MotionType bigint
select @LinkFile=LinkFile,@MotionType=MotionType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @MotionValue float
if @MotionType=0 select @MotionValue=1. 
if @MotionType=1 select @MotionValue=-1.

declare @Bal0 float=isnull((select bal0 from Customers where Id=@SubAccNo),0)
declare @tbl table(Db float,Cr float)
insert @tbl

select
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr

--==========================================================================================

union all

select 
ED.Debit Db,
ED.Credit Cr
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate <=@ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

--==========================================================================================

union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash_G
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0



--===========================================================================المبيعات والمشتريات

union all

select 
(case when Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then TotalAfterDiscount else 0 end) Db,
(case when Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then TotalAfterDiscount else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) 
	)
and Temp=0
--===========================================================================



--===========================================================================النقدى والفيزا

union all

select 
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and ((ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and ((ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and ((ToId=@SubAccNo and ((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1))))
and Flag in(9,19,29)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and ((ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))))
and Flag in(10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0

return 
round((
case when @Flag=0 then (select isnull(SUM(Db),0)-isnull(SUM(Cr),0) from @tbl)*@MotionValue
when @Flag=1 then (select isnull(SUM(Db),0) from @tbl)
when @Flag=2 then (select isnull(SUM(Cr),0) from @tbl)
else 0 end
),6)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0Link]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0Link]
(
@LinkFile bigint,
@SubAccNo bigint,
@ToDate datetime,
@Flag bigint
)
returns float
--with encryption
as
begin
return dbo.Bal0(dbo.GetSubAccNoLink(@LinkFile,@SubAccNo),@SubAccNo,@ToDate,@Flag,0,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0MainAcc]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0MainAcc]
(
@MainAccNo varchar(100),
@ToDate datetime,
@Flag bigint
)
returns float
--with encryption
as
begin

declare @Detailed bigint=0

declare @LinkFile bigint,@MotionType bigint
select @LinkFile=LinkFile,@MotionType=MotionType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @MotionValue float
if @MotionType=0 select @MotionValue=1. 
if @MotionType=1 select @MotionValue=-1.

declare @Bal0 float=dbo.GetBal0(@MainAccNo,0)

declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()

declare @tbl table(Db float,Cr float)
insert @tbl

select
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr


--==========================================================================================

union all

select 
Living Db,
0 Cr
from ClinicsHistory 
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and CaseInvoiceNo>0

union all

select 
Supervision Db,
0 Cr
from ClinicsHistory 
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and CaseInvoiceNo>0

union all

select 
Care Db,
0 Cr
from ClinicsHistory 
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and CaseInvoiceNo>0

union all

select 
Perc Db,
0 Cr
from CaseInvoices
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo

union all

select 
Total0 Db,
0 Cr
from CaseInvoices
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo

union all

select 
0 Db,
Total01 Cr
from CaseInvoices
where DayDate <=@ToDate 
and @OperationAccNo=@MainAccNo

union all

select 
0 Db,
Discount Cr
from CaseInvoices
where DayDate <=@ToDate
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Discount<>0

union all

select 
0 Db,
T.Living Cr
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate<=@ToDate 
and RT.MainAccNo=@MainAccNo
and CaseInvoiceNo>0

union all

select 
0 Db,
T.Supervision Cr
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate<=@ToDate 
and RT.MainAccNo=@MainAccNo
and CaseInvoiceNo>0

union all

select 
0 Db,
T.Care Cr
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate<=@ToDate 
and RT.MainAccNo=@MainAccNo
and CaseInvoiceNo>0

union all

select 
0 Db,
Perc Cr
from CaseInvoices
where DayDate<=@ToDate 
and @OtherAccNo=@MainAccNo

union all

select 
Discount Db,
0 Cr
from CaseInvoices
where DayDate<=@ToDate 
and @CaseInvoicesDiscountAccNo=@MainAccNo
and Discount<>0

union all

select 
0 Db,
Remaining Cr
from CaseInvoices
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Remaining>0
and RemainingSubAccNo>0

union all

select 
Remaining Db,
0 Cr
from CaseInvoices
where DayDate <=@ToDate 
and RemainingMainAccNo=@MainAccNo
and Remaining>0
and RemainingSubAccNo>0

--==========================================================================================

union all

select 
Value Db,
0 Cr
from OperationMotions
where DayDate <=@ToDate
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and CaseInvoiceNo>0

union all

select 
0 Db,
Dr1Value Cr
from OperationMotions T
left join Employees E on(T.DrId1=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and Canceled=0
and Dr1Value<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
Dr2Value Cr
from OperationMotions T
left join Employees E on(T.DrId2=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and Canceled=0
and Dr2Value<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
Dr3Value Cr
from OperationMotions T
left join Employees E on(T.DrId3=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and Canceled=0
and Dr3Value<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
AnesthetistValue Cr
from OperationMotions T
left join Employees E on(T.AnesthetistId=E.Id)
where DayDate <=@ToDate
and E.AccNo=@MainAccNo
and Canceled=0
and AnesthetistValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
RoomValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and Canceled=0
and RoomValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
RoomValue2 Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and Canceled=0
and RoomValue2<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
CsValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and Canceled=0
and CsValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
MedicalValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and Canceled=0
and MedicalValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
CoValue Cr
from OperationMotions
where DayDate <=@ToDate
and @OperationAccNo=@MainAccNo
and Canceled=0
and CoValue<>0
and CaseInvoiceNo>0

union all

select 
0 Db,
ConsumablesValue Cr
from OperationMotions
where DayDate <=@ToDate
and @InPatientAccNo=@MainAccNo
and Canceled=0
and ConsumablesValue<>0
and CaseInvoiceNo>0

--union all

--select 
--ConsumablesValue Db,
--0 Cr
--from OperationMotions
--where DayDate <=@ToDate 
--and @LinkFile=13
--and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
--and Canceled=0
--and ConsumablesValue<>0
--and CaseInvoiceNo>0

--==========================================================================================

union all

select 
Value Db,
0 Cr
from Reservations
where cast(ReservationDate as date) <=@ToDate
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0

union all

select 
0 Db,
Value Cr
from Reservations R
where cast(ReservationDate as date) <=@ToDate
and @OutPatientAccNo=@MainAccNo
and Canceled=0

union all

select 
0 Db,
Payed Cr
from Reservations
where cast(ReservationDate as date) <=@ToDate
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0

union all

select 
Payed Db,
0 Cr
from Reservations R
left join Employees E on(R.EmpIdReservation=E.Id)
where cast(ReservationDate as date) <=@ToDate
and @LinkFile=5
and dbo.GetMainAccNoLink(@LinkFile,E.DefaultSave)=@MainAccNo
and Canceled=0

union all

select 
0 Db,
Remaining Cr
from Reservations
where cast(RemainingDate as date) <=@ToDate
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and Done=1

union all

select 
Remaining Db,
0 Cr
from Reservations R
left join Employees E on(R.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) <=@ToDate
and @LinkFile=5
and dbo.GetMainAccNoLink(@LinkFile,E.DefaultSave)=@MainAccNo
and Canceled=0
and Done=1

union all

select 
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr
from Reservations
where cast(ReturnedDate as date) <=@ToDate
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and Returned=1

union all

select 
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr
from Reservations R
left join Employees E on(R.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) <=@ToDate
and @LinkFile=5
and dbo.GetMainAccNoLink(@LinkFile,E.DefaultSave)=@MainAccNo
and Canceled=0
and Returned=1

--==========================================================================================

union all

select 
0 Db,
Value Cr
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
where DayDate <=@ToDate 
and SG.MainAccNo=@MainAccNo
and Canceled=0
and Returned=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 
Value Db,
0 Cr
from Services S
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all


select 
0 Db,
Payed Cr
from Services S
where DayDate <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and Payed<>0
and S.Flag=1

union all

select 
Payed Db,
0 Cr
from Services S
left join Employees E on(S.EmpIdReservation=E.Id)
where DayDate <=@ToDate 
and @LinkFile=5
and dbo.GetMainAccNoLink(@LinkFile,E.DefaultSave)=@MainAccNo
and Canceled=0
and Payed<>0
and S.Flag=1

union all

select 
0 Db,
Remaining Cr
from Services S
where cast(RemainingDate as date) <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 
Remaining Db,
0 Cr
from Services S
left join Employees E on(S.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) <=@ToDate 
and @LinkFile=5
and dbo.GetMainAccNoLink(@LinkFile,E.DefaultSave)=@MainAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr
from Services S
where cast(ReturnedDate as date) <=@ToDate 
and @LinkFile=13
and dbo.GetMainAccNoLink(@LinkFile,CaseId)=@MainAccNo
and Canceled=0
and Returned=1
and S.Flag=1

union all

select 
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr
from Services S
left join Employees E on(S.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) <=@ToDate 
and @LinkFile=5
and dbo.GetMainAccNoLink(@LinkFile,E.DefaultSave)=@MainAccNo
and Canceled=0
and Returned=1
and S.Flag=1


--==========================================================================================

union all

select 
ED.Debit Db,
ED.Credit Cr
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate <=@ToDate 
and MainAccNo=@MainAccNo 

--==========================================================================================

union all

select 
(case when (MainAccNo1=@MainAccNo ) then Value1 else 0 end) Db,
(case when (MainAccNo2=@MainAccNo ) then Value2 else 0 end) Cr
from Entry2
where DayDate <=@ToDate 
and (
	(MainAccNo1=@MainAccNo )or
	(MainAccNo2=@MainAccNo )
	)
and Canceled=0

--==========================================================================================
union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash
where DayDate <=@ToDate 
and MainAccNo=@MainAccNo 
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo

and Canceled=0

union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash_G
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash_G
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo
and Canceled=0


union all

select 
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue2 end) Db,
(Case when C.Flag=1 then MainValue2 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo
and Canceled=0


union all
--ارتداد الشيك اوتوماتيكيا
select 
(Case when C.Flag=1 then C.MainValue2 else 0 end) Db,
(Case when C.Flag=1 then 0 else C.MainValue2 end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate <=@ToDate 
and C.LinkFile=@LinkFile 
and dbo.GetMainAccNoLink(@LinkFile,C.SubAccNo)=@MainAccNo
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)
--===========================================================================

union all

select 
I.Cost_InvoiceNo Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and I.IsDelivered=1

union all

select 
I.Cost_MessageId Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and I.IsDelivered=1

union all

select 
0 Db,
I.Cost_OrderTypeId Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and I.IsDelivered=1

union all

select 
I.Cost_OrderTypeId Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and I.IsDelivered=1

union all

select 
0 Db,
I.Cost_Administrative Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and I.IsDelivered=1

union all

select 
I.Cost_Administrative Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and I.IsDelivered=1

--==========================================================================================
union all

select 
(Case when C.Flag=1 then 0 else MainValue2Ded end) Db,
(Case when C.Flag=1 then MainValue2Ded else 0 end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and LinkFile=@LinkFile 
and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo
and Canceled=0
and MainValue2Ded<>0

union all

select 
(Case when C.Flag=1 then Value2Ded else 0 end) Db,
(Case when C.Flag=1 then 0 else Value2Ded end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and Canceled=0
and Value2Ded<>0 

union all

select 
(Case when C.Flag=1 then 0 else Value2Ded end) Db,
(Case when C.Flag=1 then Value2Ded else 0 end) Cr
from ImportMessages D
left join ImportMessagesDetails Dt on(D.OrderTypeId=Dt.OrderTypeId and D.Id=Dt.Id)
left join BankCash_G2 C on(D.StoreId=C.StoreId and Dt.InvoiceNo=C.StoreInvoiceNo)
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where D.DeliveredDate <=@ToDate 
and C.DayDate<=@ToDate
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and Canceled=0
and Value2Ded<>0
and D.IsDelivered=1

union all

select 
(Case when C.Flag=1 then MainValue else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Db,
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate <=@ToDate 
and MainLinkFile=@LinkFile
and dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo
and Canceled=0

union all
--ارتداد الشيك اوتوماتيكيا
select 
(Case when C.Flag=1 then 0 else C.MainValue end) Db,
(Case when C.Flag=1 then C.MainValue else 0 end) Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate <=@ToDate 
and C.MainLinkFile=@LinkFile
and dbo.GetMainAccNoLink(@LinkFile,C.BankId)=@MainAccNo
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)

union all

select 
0 Db,
MainValue Cr
from BankCash_G3
where DayDate <=@ToDate
and FromLinkFile=@LinkFile
and dbo.GetMainAccNoLink(@LinkFile,FromSubAccNo)=@MainAccNo
and Canceled=0

union all

select 
MainValue Db,
0 Cr
from BankCash_G3
where DayDate <=@ToDate
and ToLinkFile=@LinkFile 
and dbo.GetMainAccNoLink(@LinkFile,ToSubAccNo)=@MainAccNo
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash2
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo
and Canceled=0


union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash3
where DayDate <=@ToDate 
and MainAccNo=@MainAccNo 
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash3
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr
from BankCash4
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,MoneyChangerId)=@MainAccNo
and @LinkFile=8
and Canceled=0

union all

select 
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr
from BankCash4
where DayDate <=@ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo
and Canceled=0

union all

--===========================================================================
--===========================================================================




select 
0 Db,
Value Cr
from Invoices
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,SellerId)=@MainAccNo
and @LinkFile=7


union all

select 
0 Db,
Payed+Tips+Payments+OtherPayments Cr
from Nolon
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,SellerId)=@MainAccNo
and @LinkFile=7

--===========================================================================
--===========================================================================
union all

select 
dbo.GetCustomerInvoiceTotal(InvoiceNo) Db,
0 Cr
from CustomerInvoices
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,CustomerId)=@MainAccNo
and @LinkFile=1
and @Detailed=0
--===========================================================================
union all

select 
Value Db,
0 Cr
from CustomerInvoicesDt dt
left join CustomerInvoices d on(dt.InvoiceNo=d.InvoiceNo) 
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,CustomerId)=@MainAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 
Value Db,
0 Cr
from Invoices D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,D.CustomerId)=@MainAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 
Value2+Tips2 Db,
0 Cr
from Nolon D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,D.CustomerId)=@MainAccNo
and @LinkFile=1
and Value2+Tips2<>0
and @Detailed=1


--===========================================================================
--===========================================================================

--===========================================================================المبيعات والمشتريات

union all

select 
(case when Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then TotalAfterDiscount else 0 end) Db,
(case when Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then TotalAfterDiscount else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and @Detailed=0
and Temp=0
--===========================================================================
union all

select 
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then D.DiscountValue else 0 end) Db,
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then D.DiscountValue else 0 end) Cr
from SalesMaster D
where D.DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and D.DiscountValue<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then Dt.Value else 0 end) Db,
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then Dt.Value else 0 end) Cr
from SalesMaster D
left join SalesDetails Dt on(D.StoreId=dt.StoreId and D.Flag=dt.Flag and D.InvoiceNo=Dt.InvoiceNo )
where D.DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Dt.Value<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=1) then Val1 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=2) then Val1 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val1<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=1) then Val2 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=2) then Val2 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val2<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=1) then Val3 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=2) then Val3 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val3<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=1) then Val4 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=2) then Val4 else 0 end) Cr
from SalesMaster
where DayDate <=@ToDate 
and dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val4<>0
and @Detailed=1
and Temp=0
--===========================================================================


--===========================================================================النقدى والفيزا

union all

select 
(Case 
	when dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)))or
	(dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5)or
	(dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case when dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5)or
	(dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case when dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and ((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1))) or
	(dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5)or
	(dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6))
and Flag in(9,19,29)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 
(Case 
	when dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and (
	(dbo.GetMainAccNoLink(@LinkFile,ToId)=@MainAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(dbo.GetMainAccNoLink(@LinkFile,SaveId)=@MainAccNo and @LinkFile=5)or
	(dbo.GetMainAccNoLink(@LinkFile,BankId)=@MainAccNo and @LinkFile=6))
and Flag in(10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0


--===========================================================================حساب المبيعات والمشتريات

union all

select 
(case when Flag in(9,19,29,12,14,16,18,36,38,48,22,24) then Total else 0 end) Db,
(case when Flag in(10,20,30,11,13,15,17,35,37,47,21,23) then Total else 0 end) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(9,10,29,30,	11,13,15,17,35,37,47,21,23,		12,14,16,18,36,38,48,	22,24)
and not(Flag in(37,38,47,48) and CaseInvoiceNo=0) 
and AccNo=@MainAccNo

and Temp=0

--=====================================================================================
union all

select 
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(19)
and AccNo=@MainAccNo

and Temp=0

union all

select 
0 Db,
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate <=@ToDate 
and M.Flag in(20)
and AccNo=@MainAccNo

and Temp=0
--=====================================================================================
--=====================================================================================
union all

select 
0 Db,
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and Flag in(19)
and M.AccNo=@MainAccNo

and Temp=0
and I.DeliveredDate <=@ToDate
and I.IsDelivered=1

union all

select 
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=D.SalesInvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and M.Flag in(20)
and M.AccNo=@MainAccNo

and Temp=0
and I.DeliveredDate <=@ToDate
and I.IsDelivered=1

--=====================================================================================

union all

select 
I.Bal0 Db,
0 Cr
from ImportMessages I
where I.DayDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and I.Bal0<>0

union all

select 
0 Db,
I.Bal0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and I.IsDelivered=1
and I.Bal0<>0

union all

select 
I.Bal0 Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and I.IsDelivered=1
and I.Bal0<>0


union all

select 
I.val5 Db,
0 Cr
from ImportMessages I
where I.DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and I.IsDelivered=1

--===========================================================================حسابات الخصم والإضافة

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(11,13,15,21,23)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(12,14,16,22,24)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)

and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(9,19,29)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)

and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate <=@ToDate 
and Flag in(10,20,30)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)

and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0
/*
union all

--مصاريف الطلبيات
select 
Val3 Db,
0 Cr
from ImportMessageCostHistoryVal3 T
where DeliveredDate <=@ToDate 
--and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag not in(4,5))
and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag in(0))
and @SubAccNo=OrderTypeId

union all

--مصاريف الطلبيات
select 
0 Db,
Val3 Cr
from ImportMessageCostHistoryVal3
where DeliveredDate <=@ToDate 
--and (MainAccNo=@MainAccNo and MyFlag not in(4,5))
and (MainAccNo=@MainAccNo and MyFlag in(0))
and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo
*/

union all

--المصاريف الإدارية
select 
SubVal4 Db,
0 Cr
from ImportMessageCostHistoryVal4
where DeliveredDate <=@ToDate 
and dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo 

union all

--المصاريف الإدارية
select 
0 Db,
SubVal4 Cr
from ImportMessageCostHistoryVal4
where DeliveredDate <=@ToDate 
and MainAccNo=@MainAccNo 
and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo



--=============================================================================================
--=========================تحويل المصاريف عبر الحسابات في رسائل الاستيراد=======================
--=============================================================================================
union all

select Db,Cr from (

select
(case 
when Tbl.Line=1 and E.DayDate <=@ToDate and MainAccNo=@MainAccNo and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo 
then E.DayDate
when Tbl.Line=2 and E.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then E.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and E.DayDate <=@ToDate and MainAccNo=@MainAccNo and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo 
then ED.Credit
when Tbl.Line=2 and E.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Debit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Credit
else 0 end)Db,
(case 
when Tbl.Line=1 and E.DayDate <=@ToDate and MainAccNo=@MainAccNo and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo 
then ED.Debit
when Tbl.Line=2 and E.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Credit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Debit
else 0 end)Cr
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*E.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)



)Tbl
where (Db<>0 or Cr<>0)
and DayDate <=@ToDate

union all

select Db,Cr from (

select
(case 
when Tbl.Line=1 and ED.DayDate <=@ToDate and 
(
(IsCost2=1 and MainAccNo2=@MainAccNo)or
(IsCost1=1 and MainAccNo1=@MainAccNo)
)
then ED.DayDate
when Tbl.Line=2 and ED.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and ED.DayDate <=@ToDate and (IsCost2=1 and MainAccNo2=@MainAccNo) 
then ED.Value2
when Tbl.Line=2 and ED.DayDate <=@ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Value1
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Value2
else 0 end)Db,
(case 
when Tbl.Line=1 and ED.DayDate <=@ToDate and (IsCost1=1 and MainAccNo1=@MainAccNo) 
then ED.Value1
when Tbl.Line=2 and ED.DayDate <=@ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Value2
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then ED.Value1
else 0 end)Cr
from Entry2 ED
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*ED.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0


)Tbl
where (Db<>0 or Cr<>0)
and DayDate <=@ToDate

union all

select Db,Cr from (

select
(case 
when Tbl.Line=1 and C.DayDate <=@ToDate and LinkFile=@LinkFile and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo 
then C.DayDate
when Tbl.Line=2 and C.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then C.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and C.DayDate <=@ToDate and LinkFile=@LinkFile and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo 
then 0
when Tbl.Line=2 and C.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then 0
else 0 end)Db,
(case 
when Tbl.Line=1 and C.DayDate <=@ToDate and LinkFile=@LinkFile and dbo.GetMainAccNoLink(@LinkFile,SubAccNo)=@MainAccNo 
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=2 and C.DayDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then 0
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate <=@ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
else 0 end)Cr
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join SalesMaster M on(M.StoreId=C.StoreId and M.Flag=19 and M.InvoiceNo=C.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(C.CostTypeId=2 and I.OrderTypeId=C.PurchaseAccNo)or
(C.CostTypeId=3 and I.OrderTypeId=C.PurchaseAccNo and I.Id=C.ImportMessageId)or
(C.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*C.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0


)Tbl
where (Db<>0 or Cr<>0)
and DayDate <=@ToDate


return 
round((
case when @Flag=0 then (select isnull(SUM(Db),0)-isnull(SUM(Cr),0) from @tbl)*@MotionValue
when @Flag=1 then (select isnull(SUM(Db),0) from @tbl)
when @Flag=2 then (select isnull(SUM(Cr),0) from @tbl)
else 0 end
),6)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Bal0OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Bal0OLD]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromDate datetime
)
returns float
--with encryption
as
begin
declare 
@val1 float,@val2 float,@val2_ float,@val3 float,@val4 float,@val5 float,
@val6 float,@val7 float,@val8 float,@val9 float,@val10 float,
@val11 float,@val12 float,@val13 float,@val14 float,@val15 float,
@val16 float,@val17 float,@val18 float,@val19 float,@val20 float,
@val21 float,@val22 float,@val23 float,@val24 float,@val25 float,
@val26 float,@val27 float,@val28 float,@val29 float,@val30 float

declare @S_AccNo bigint,@R_S_AccNo bigint,@P_AccNo bigint,@R_P_AccNo bigint
select top 1 @S_AccNo=S_AccNo,@R_S_AccNo=R_S_AccNo,@P_AccNo=P_AccNo,@R_P_AccNo=R_P_AccNo from Statics

declare @LinkFile bigint,@MotionType bigint
select @LinkFile=LinkFile,@MotionType=MotionType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @MotionValue float
if @MotionType=0 select @MotionValue=1. 
if @MotionType=1 select @MotionValue=-1.

declare @Bal0 float=dbo.GetBal0(@MainAccNo,@SubAccNo)

select @val1=sum((Case when Flag in(1,3) then -@MotionValue else @MotionValue end)*Value)
from BankCash
where DayDate<=@FromDate
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

select @val2=sum((Case when Flag in(1,3) then @MotionValue else -@MotionValue end)*Value)
from BankCash
where DayDate<=@FromDate
and (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0



select @val2_=sum((Case when Flag in(1,3) then @MotionValue else -@MotionValue end)*Value)
from BankCash2
where DayDate<=@FromDate
and (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0




select @val3=-@MotionValue*SUM(Value)
from Invoices
where DayDate<=@FromDate
and SellerId=@SubAccNo
and @LinkFile=7


select @val4=-@MotionValue*SUM(Payed+Tips+Payments+OtherPayments)
from Nolon
where DayDate<=@FromDate
and SellerId=@SubAccNo
and @LinkFile=7


select @val5=@MotionValue*sum(dbo.GetCustomerInvoiceTotal(InvoiceNo))
from CustomerInvoices
where DayDate<=@FromDate
and CustomerId=@SubAccNo
and @LinkFile=1


--===========================================================================المبيعات والمشتريات



select @val6=@MotionValue*sum(TotalAfterDiscount) from SalesMaster
where DayDate<=@FromDate
and ToId=@SubAccNo
and @LinkFile=1
and Flag in(11,13,15,21,23)



select @val7=-@MotionValue*sum(TotalAfterDiscount) from SalesMaster
where DayDate<=@FromDate
and ToId=@SubAccNo
and @LinkFile=1
and Flag in(12,14,16,22,24)



select @val8=-@MotionValue*sum(TotalAfterDiscount) from SalesMaster
where DayDate<=@FromDate
and ToId=@SubAccNo
and @LinkFile=2
and Flag =9



select @val9=@MotionValue*sum(TotalAfterDiscount) from SalesMaster
where DayDate<=@FromDate
and ToId=@SubAccNo
and @LinkFile=2
and Flag =10



--===========================================================================النقدى والفيزا


select @val10=sum((Case when ToId=@SubAccNo and @LinkFile=1 then -1. when SaveId=@SubAccNo and @LinkFile=5 then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end))
from SalesMaster
where DayDate<=@FromDate
and ((ToId=@SubAccNo and @LinkFile=1) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)



select @val11=sum((Case when ToId=@SubAccNo and @LinkFile=1 then 1. when SaveId=@SubAccNo and @LinkFile=5 then -1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end))
from SalesMaster
where DayDate<=@FromDate
and ((ToId=@SubAccNo and @LinkFile=1) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)



select @val12=sum((Case when ToId=@SubAccNo and @LinkFile=2 then -1. when SaveId=@SubAccNo and @LinkFile=5 then -1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end))
from SalesMaster
where DayDate<=@FromDate
and ((ToId=@SubAccNo and @LinkFile=2) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag =9
and PaymentType in(1,2,3,5)



select @val13=sum((Case when ToId=@SubAccNo and @LinkFile=2 then 1. when SaveId=@SubAccNo and @LinkFile=5 then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end))
from SalesMaster
where DayDate<=@FromDate
and ((ToId=@SubAccNo and @LinkFile=2) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag =10
and PaymentType in(1,2,3,5)


--===========================================================================حساب المبيعات والمشتريات



select @val14=-@MotionValue*sum(Total) from SalesMaster
where DayDate<=@FromDate
and Flag in(11,13,15,21,23)
and @S_AccNo=@MainAccNo
and @SubAccNo=0



select @val15=@MotionValue*sum(Total) from SalesMaster
where DayDate<=@FromDate
and Flag in(12,14,16,22,24)
and @R_S_AccNo=@MainAccNo
and @SubAccNo=0



select @val16=@MotionValue*sum(Total) from SalesMaster
where DayDate<=@FromDate
and Flag =9
and @P_AccNo=@MainAccNo
and @SubAccNo=0



select @val17=-@MotionValue*sum(Total) from SalesMaster
where DayDate<=@FromDate
and Flag =10
and @R_P_AccNo=@MainAccNo
and @SubAccNo=0



--===========================================================================حسابات الخصم والإضافة



select @val18=@MotionValue*sum(
((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) 
-((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) 
)
from SalesMaster
where DayDate<=@FromDate
and Flag in(11,13,15,21,23)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0



select @val19=@MotionValue*sum(
((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) 
-((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) 
)
from SalesMaster
where DayDate<=@FromDate
and Flag in(12,14,16,22,24)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0



select @val20=@MotionValue*sum(
((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) 
-((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) 
)
from SalesMaster
where DayDate<=@FromDate
and Flag =9
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0



select @val21=@MotionValue*sum(
((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) 
-((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) 
)
from SalesMaster
where DayDate<=@FromDate
and Flag =10
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0

select @val22=@MotionValue*sum(ED.Debit-ED.Credit)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate<=@FromDate
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)




return isnull(@Bal0,0)+
isnull(@val1,0)+isnull(@val2,0)+isnull(@val2_,0)+isnull(@val3,0)+isnull(@val4,0)+isnull(@val5,0)+
isnull(@val6,0)+isnull(@val7,0)+isnull(@val8,0)+isnull(@val9,0)+isnull(@val10,0)+
isnull(@val11,0)+isnull(@val12,0)+isnull(@val13,0)+isnull(@val14,0)+isnull(@val15,0)+
isnull(@val16,0)+isnull(@val17,0)+isnull(@val18,0)+isnull(@val19,0)+isnull(@val20,0)+
isnull(@val21,0)+isnull(@val22,0)+isnull(@val23,0)+isnull(@val24,0)+isnull(@val25,0)+
isnull(@val26,0)+isnull(@val27,0)+isnull(@val28,0)+isnull(@val29,0)+isnull(@val30,0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[DaysInMonth]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[DaysInMonth]
(
@MONTH bigint,@YEAR bigint
)
returns bigint
--with encryption
as
begin

declare @Days bigint
if @MONTH in(1,3,5,7,8,10,12)
select @Days=31
else if @MONTH in(4,6,9,11)
select @Days=30
else if @YEAR%4=0
select @Days=29
else 
select @Days=28

return @Days

end
GO
/****** Object:  UserDefinedFunction [dbo].[ean13]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[ean13](@chaine varchar(100)) returns varchar(100)
--with encryption
as
begin
 set @chaine = left(@chaine, 12)
 While len(@chaine) < 12
 begin
 set @chaine = (CASE WHEN len(@chaine)=11 THEN '1' ELSE '0' END) + @chaine
 End 
 
 declare @i int=13
 declare @checksum int=0
 declare @ean13 varchar(100)= ''
 If Len(@chaine) = 12 
 begin
			declare @x int=1
 while @x<=12
 begin
 If ascii(substring(@chaine, @x, 1)) < 48 Or ascii(substring(@chaine, @x, 1)) > 57 
 begin
 set @x = 0
 break
 End 
 set @x+=1
 end
 If @i = 13 
 begin
 
				set @x =2
				while @x<=12
				begin
 set @checksum = @checksum + cast(substring(@chaine, @x, 1) as int)
					set @x+=2 
 end
 select @checksum = @checksum * 3
				set @x =1
				while @x<=11
				begin
 set @checksum = @checksum + cast(substring(@chaine, @x, 1) as int)
 set @x+=2 
 end
 set @chaine = @chaine + cast((10 - @checksum % 10) % 10 as varchar(100))
 return @chaine
 End 
 End 
 
 return ''
End
GO
/****** Object:  UserDefinedFunction [dbo].[FillZero]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[FillZero](@str nvarchar(4000),@Length bigint)
returns nvarchar(1000)
--with encryption
as
begin

select @str=replace(@str,' ','')
select @str=replace(@str,'	','')
declare @x bigint=@Length-len(@str)
select @x=0 where @x<0
select @str=REPLICATE('0',@x)+@str

return @str
end
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_AllEntry]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE function [dbo].[Fn_AllEntry]
(
@MyMainAccNo nvarchar(100)='',
@MySubAccNo bigint=0,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1',
@Detailed bigint=0,
@DetailedInvoice bigint=0,
@HideItemBalCost int=0
)
returns @tbl table(WindowId int,MyFlag int,InvoiceNo bigint,DayDate datetime,
MyLinkFile int,
MyMainAccNo nvarchar(1000),
MySubAccNo bigint,
Db float,
Cr float,
DbLocal float,
CrLocal float,
CurrencyId int,AnalysisId bigint,CostCenterId bigint,CostCenterSubId bigint,
Cash float,SheekNo nvarchar(1000),SheekPerson nvarchar(1000),SheekDate datetime,Notes nvarchar(4000),Rem nvarchar(1000),
LinkFile int,MainAccNo nvarchar(1000),SubAccNo bigint,
SalesItems nvarchar(1000),
SalesMaster_StoreId int,SalesMaster_Flag int,SalesMaster_InvoiceNo bigint,
Qty float,Price float)
--with encryption
as
begin

--declare @MyFromDate datetime=@FromDate
--select @FromDate='1900-1-1'


declare @InSaveAccNo nvarchar(100)=isnull((select top 1 InSaveAccNo from Statics),'')
declare @InSaveSubAccNo int=isnull((select top 1 InSaveSubAccNo from Statics),0)

declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
declare @InPatientSubAccNo int=isnull((select top 1 InPatientSubAccNo from Statics),0)

declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
declare @OutPatientSubAccNo int=isnull((select top 1 OutPatientSubAccNo from Statics),0)

declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
declare @OtherSubAccNo int=isnull((select top 1 OtherSubAccNo from Statics),0)

declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
declare @CaseInvoicesDiscountSubAccNo int=isnull((select top 1 CaseInvoicesDiscountSubAccNo from Statics),0)

declare @SalesDiscountMainAccNo nvarchar(100)=isnull((select top 1 SalesDiscountMainAccNo from Statics),0)
declare @SalesDiscountSubAccNo int=isnull((select top 1 SalesDiscountSubAccNo from Statics),0)

declare @InstallProfitAccNo nvarchar(100)=isnull((select top 1 InstallProfitAccNo from Statics),0)
declare @InstallSalesAddAccNo int=isnull((select top 1 InstallSalesAddAccNo from Statics),0)
declare @InstallNotGainedAccNo int=isnull((select top 1 InstallNotGainedAccNo from Statics),0)

declare @BankCash_G2_Flag1_DedAcc nvarchar(100)=(select BankCash_G2_Flag1_DedAcc from Statics)
declare @BankCash_G2_Flag2_DedAcc nvarchar(100)=(select BankCash_G2_Flag2_DedAcc from Statics)

declare @SellersProfitsAccNo nvarchar(100)=(select SellersProfitsAccNo from Statics)

declare @SalaryAccNo bigint=isnull((select top 1 SalaryAccNo from Statics),0)

declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()
declare @OperationSubAccNo int=dbo.GetOperationSubAccNo()
declare @OperationSubAccNo2 int=dbo.GetOperationSubAccNo2()

declare @EntryTblName nvarchar(100)=dbo.getEntryTblName()

declare @PrevYearProfitAccNo nvarchar(100)=(select PrevYearProfitAccNo from Statics)
declare @YearProfitAccNo nvarchar(100)=(select YearProfitAccNo from Statics)

declare @CenterAccNo nvarchar(100)=(select CenterAccNo from Statics)


declare @MyCurrencyExchange table(CurrencyId int,Exchange float)
insert @MyCurrencyExchange
select Id,dbo.GetCurrencyExchange(0,0,Id,0,@ToDate)
from Currencies


insert @tbl
select * from 
(
select WindowId,MyFlag,InvoiceNo,DayDate,
MyLinkFile,
(case when MyMainAccNo='' then /*dbo.GetMainAccNoLink(MyLinkFile,MySubAccNo)*/AllSub.AccNo else MyMainAccNo end)MyMainAccNo,
MySubAccNo,
Db,
Cr,
(case when Tbl.CurrencyId=1 then Db else DbLocal end)DbLocal,
(case when Tbl.CurrencyId=1 then Cr else CrLocal end)CrLocal,
Tbl.CurrencyId,AnalysisId,CostCenterId,CostCenterSubId,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,
Tbl.LinkFile,
(case when MainAccNo='' then /*dbo.GetMainAccNoLink(LinkFile,SubAccNo)*/AllSub2.AccNo else MainAccNo end) MainAccNo,
SubAccNo,
SalesItems,
SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,
Qty,Price from 
(

select 0 WindowId,0 MyFlag,0 InvoiceNo,@FromDate-1 DayDate,
0 MyLinkFile,
'' MyMainAccNo,
0 MySubAccNo,
0. Db,
0. Cr,
0. DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'رصيد أول المدة' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
where 1=2

--===========================================حسابات المدرسين===============================================

union all

select 0 WindowId,0 MyFlag,InvoiceNo,DayDate,
14 MyLinkFile,
'' MyMainAccNo,
MySubAccNo,
0. Db,
Value Cr,
0. DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,Notes,Rem,
1 LinkFile,'' MainAccNo,SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
FROM (
		select T.InvoiceNo,T.DayDate,
		Tp.TeacherId MySubAccNo,
		(case when TT.Flag=13 then 1. else -1. end)*TT.Qty*
		(isnull((select top 1 P.TeacherPrifit from ProfitRatioDetails P where P.ItemId=TT.ItemId and P.DayDate<=T.DayDate order by P.DayDate desc),0))
		/*dbo.GetItemProfit_TeacherPrifit(TT.ItemId,T.DayDate)*/Value,
		T.ToId SubAccNo,
		cast(It.Id as nvarchar(100))+' - '+It.Name Notes,SF.Name 'Rem'
		FROM SalesDetails TT
		left join SalesMaster T on(TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.InvoiceNo=T.InvoiceNo)
		left join SalesFlags SF on(SF.Id=T.Flag)
		left join Items It on(TT.ItemId=It.Id)
		left join Types Tp on(It.GroupId=Tp.GroupId and It.TypeId=Tp.Id)
		where T.DayDate between @FromDate and @ToDate
		and TT.Flag in(13,14)
		and T.Temp=0
		--and T.Temp2=1
		and Tp.TeacherId>0
		)Tbl


--===========================================ايرادات الحوافظ===============================================

union all

select 0 WindowId,0 MyFlag,T.CurrentShift,T.SaveDate,
5 MyLinkFile,
'' MyMainAccNo,
T.SaveId MySubAccNo,
T.Value Db,
0 Cr,
T.Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'ايرادات الحوافظ - '+E.Name 'Rem',
0 LinkFile,@InSaveAccNo MainAccNo,@InSaveSubAccNo SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from EmpCloseShift T
left join Employees E on(T.EmpId=E.Id)
where T.SaveDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.CurrentShift,T.SaveDate,
0 MyLinkFile,
@InSaveAccNo MyMainAccNo,
@InSaveSubAccNo MySubAccNo,
0 Db,
T.Value Cr,
0 DbLocal,
T.Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'ايرادات الحوافظ - '+E.Name 'Rem',
5 LinkFile,'' MainAccNo,T.SaveId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from EmpCloseShift T
left join Employees E on(T.EmpId=E.Id)
where T.SaveDate between @FromDate and @ToDate 



--===========================================المرتبات===============================================

union all

select 0 WindowId,0 MyFlag,0,T.DayDate,
16 MyLinkFile,
'' MyMainAccNo,
T.EmpId MySubAccNo,
0 Db,
T.Total+T.LoanValue Cr,
0 DbLocal,
T.Total+T.LoanValue CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'المرتبات' 'Rem',
0 LinkFile,@SalaryAccNo MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from SalaryHistory T
left join Employees E on(T.EmpId=E.Id)
left join Stores St on(St.Id=E.DefaultStore)
where T.DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,0,T.DayDate,
0 MyLinkFile,
@SalaryAccNo MyMainAccNo,
0 MySubAccNo,
T.Total+T.LoanValue Db,
0 Cr,
T.Total+T.LoanValue DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'المرتبات' 'Rem',
16 LinkFile,'' MainAccNo,EmpId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from SalaryHistory T
left join Employees E on(T.EmpId=E.Id)
left join Stores St on(St.Id=E.DefaultStore)
where T.DayDate between @FromDate and @ToDate 


--===========================================عمولات البائعين===============================================

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,T.DayDate,
16 MyLinkFile,
'' MyMainAccNo,
T.CashierId MySubAccNo,
0 Db,
T.PercValue Cr,
0 DbLocal,
T.PercValue CrLocal,
1 CurrencyId,0 AnalysisId,0,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'عمولات البائعين' 'Rem',
0 LinkFile,@SellersProfitsAccNo MainAccNo,'' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from SellersProfits T
where T.DayDate between @FromDate and @ToDate 
and T.PercValue<>0

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,T.DayDate,
0 MyLinkFile,
@SellersProfitsAccNo MyMainAccNo,
0 MySubAccNo,
T.PercValue Db,
0 Cr,
T.PercValue DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,0,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'عمولات البائعين' 'Rem',
16 LinkFile,'' MainAccNo,T.CashierId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from SellersProfits T
where T.DayDate between @FromDate and @ToDate 
and T.PercValue<>0

--===========================================سداد استلام===============================================

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,T.DayDate,
1 MyLinkFile,
'' MyMainAccNo,
T.ToId MySubAccNo,
0 Db,
T.Value Cr,
0 DbLocal,
T.Value CrLocal,
1 CurrencyId,0 AnalysisId,0,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'سداد استلام' 'Rem',
5 LinkFile,'' MainAccNo,SaveId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from DeliveryOrderMaster T
where T.DayDate between @FromDate and @ToDate 
and T.Value<>0

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,T.DayDate,
5 MyLinkFile,
'' MyMainAccNo,
T.SaveId MySubAccNo,
T.Value Db,
0 Cr,
T.Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,0,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'سداد استلام' 'Rem',
1 LinkFile,'' MainAccNo,ToId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from DeliveryOrderMaster T
where T.DayDate between @FromDate and @ToDate 
and T.Value<>0


--===========================================السلفيات===============================================

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,T.DayDate,
16 MyLinkFile,
'' MyMainAccNo,
T.EmpId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'السلفيات' 'Rem',
5 LinkFile,'' MainAccNo,SaveId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from Loans T
left join Employees E on(T.EmpId=E.Id)
left join Stores St on(St.Id=E.DefaultStore)
where T.DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,T.DayDate,
5 MyLinkFile,
'' MyMainAccNo,
SaveId MySubAccNo,
0 Db,
Value Cr,
0 DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'السلفيات' 'Rem',
16 LinkFile,'' MainAccNo,EmpId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from Loans T
left join Employees E on(T.EmpId=E.Id)
left join Stores St on(St.Id=E.DefaultStore)
where T.DayDate between @FromDate and @ToDate 

--===========================================الأقساط===============================================

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,SM.DayDate,
(case T.Flag when 13 then 1 when 35 then 15 else 0 end) MyLinkFile,
'' MyMainAccNo,
T.ToId MySubAccNo,
MainValue Db,
0 Cr,
MainValue DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* ' Notes,T.TypeName+' - '+CAST(T.Id as nvarchar(100)) 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateils T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where SM.DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,cast(T.CanceledDate as DATE),
(case T.Flag when 13 then 1 when 35 then 15 else 0 end) MyLinkFile,
'' MyMainAccNo,
T.ToId MySubAccNo,
0 Db,
MainValue Cr,
0 DbLocal,
MainValue CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* ' Notes,'مسامحات '+T.TypeName+' - '+CAST(T.Id as nvarchar(100)) 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateils T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where T.IsCanceled=1
and cast(T.CanceledDate as DATE) between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,cast(T.CanceledDate as DATE),
0 MyLinkFile,
@YearProfitAccNo MyMainAccNo,
0 MySubAccNo,
MainValue Db,
0 Cr,
MainValue DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* ' Notes,'مسامحات '+T.TypeName+' - '+CAST(T.Id as nvarchar(100)) 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateils T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where T.IsCanceled=1
and cast(T.CanceledDate as DATE) between @FromDate and @ToDate 


union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,cast(T.DelayedDate as DATE),
(case T.Flag when 13 then 1 when 35 then 15 else 0 end) MyLinkFile,
'' MyMainAccNo,
T.ToId MySubAccNo,
0 Db,
MainValue-Value Cr,
0 DbLocal,
MainValue-Value CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* ' Notes,'مسامحات '+T.TypeName+' - '+CAST(T.Id as nvarchar(100)) 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateils T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where T.IsCanceled=0
and MainValue<>Value
and cast(T.DelayedDate as DATE) between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,cast(T.DelayedDate as DATE),
0 MyLinkFile,
@YearProfitAccNo MyMainAccNo,
0 MySubAccNo,
MainValue-Value Db,
0 Cr,
MainValue-Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* ' Notes,'مسامحات '+T.TypeName+' - '+CAST(T.Id as nvarchar(100)) 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateils T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where T.IsCanceled=0
and MainValue<>Value
and cast(T.DelayedDate as DATE) between @FromDate and @ToDate 

--===========================================أرباح الأقساط===============================================

union all

select 0 WindowId,0 MyFlag,SM.InvoiceNo,SM.DayDate,
0 MyLinkFile,
@InstallProfitAccNo MyMainAccNo,
0 MySubAccNo,
0 Db,
T.NetValue-T.TotalValue-T.AddedValue Cr,
0 DbLocal,
T.NetValue-T.TotalValue-T.AddedValue CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'فوائد الأقساط' 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesMaster T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where SM.DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,SM.DayDate,
0 MyLinkFile,
@InstallSalesAddAccNo MyMainAccNo,
0 MySubAccNo,
0 Db,
AddedValue Cr,
0 DbLocal,
AddedValue CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'فرق المبيعات' 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesMaster T
left join SalesMaster SM on(SM.Flag=T.Flag and SM.StoreId=T.StoreId and SM.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where T.AddedValue<>0
and SM.DayDate between @FromDate and @ToDate 

--======================================أرباح أقساط غير محصلة==========================================

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,SM.DayDate,
0 MyLinkFile,
@InstallNotGainedAccNo MyMainAccNo,
0 MySubAccNo,
0 Db,
(M.NetValue-M.AvgCost)/M.InstallCount Cr,
0 DbLocal,
(M.NetValue-M.AvgCost)/M.InstallCount CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'أرباح أقساط غير محصلة' 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesMaster M 
left join SalesMaster SM on(M.Flag=SM.Flag and M.StoreId=SM.StoreId and M.InvoiceNo=SM.InvoiceNo)
left join InstallmentInvoicesDateils T on(M.Flag=T.Flag and M.StoreId=T.StoreId and M.InvoiceNo=T.InvoiceNo)
left join InstallmentInvoicesDateilsPayments TT on(TT.Id=T.Id and TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.ToId=T.ToId and TT.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where TT.Id is null
and T.Id >0
and SM.DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,T.InvoiceNo,SM.DayDate,
0 MyLinkFile,
@YearProfitAccNo MyMainAccNo,
0 MySubAccNo,
(M.NetValue-M.AvgCost)/M.InstallCount Db,
0 Cr,
(M.NetValue-M.AvgCost)/M.InstallCount DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'أرباح أقساط غير محصلة' 'Rem',
0 LinkFile,'' MainAccNo,0 SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesMaster M 
left join SalesMaster SM on(M.Flag=SM.Flag and M.StoreId=SM.StoreId and M.InvoiceNo=SM.InvoiceNo)
left join InstallmentInvoicesDateils T on(M.Flag=T.Flag and M.StoreId=T.StoreId and M.InvoiceNo=T.InvoiceNo)
left join InstallmentInvoicesDateilsPayments TT on(TT.Id=T.Id and TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.ToId=T.ToId and TT.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=SM.StoreId)
where TT.Id is null
and T.Id >0
and SM.DayDate between @FromDate and @ToDate 

--===========================================سداد الأقساط===============================================

union all

select 0 WindowId,0 MyFlag,TT.InvoiceNo,TT.DayDate,
5 MyLinkFile,
'' MyMainAccNo,
SaveId MySubAccNo,
TT.Value Db,
0 Cr,
TT.Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* '+ TT.Notes Notes,'سداد '+TypeName+' - '+CAST(TT.Id as nvarchar(100)) 'Rem',
(case TT.Flag when 13 then 1 when 35 then 15 else 0 end) LinkFile,'' MainAccNo,TT.ToId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateilsPayments TT
left join InstallmentInvoicesDateils T on(TT.Id=T.Id and TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.ToId=T.ToId and TT.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=TT.StoreId)
where TT.DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,TT.InvoiceNo,TT.DayDate,
(case TT.Flag when 13 then 1 when 35 then 15 else 0 end) MyLinkFile,
'' MyMainAccNo,
TT.ToId MySubAccNo,
0 Db,
TT.Value Cr,
0 DbLocal,
TT.Value CrLocal,
1 CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
0 Cash,
cast(YEAR(T.DayDate) as nvarchar(10))+'-'+cast(month(T.DayDate) as nvarchar(10))+'-'+cast(day(T.DayDate) as nvarchar(10)) SheekNo,
'' SheekPerson,null SheekDate,'* '+ TT.Notes Notes,'سداد '+TypeName+' - '+CAST(TT.Id as nvarchar(100)) 'Rem',
5 LinkFile,'' MainAccNo,SaveId SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InstallmentInvoicesDateilsPayments TT
left join InstallmentInvoicesDateils T on(TT.Id=T.Id and TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.ToId=T.ToId and TT.InvoiceNo=T.InvoiceNo)
left join Stores St on(St.Id=TT.StoreId)
where TT.DayDate between @FromDate and @ToDate 

--===========================================أرباح المستثمرين===============================================

union all

select 0 WindowId,0 MyFlag,InvoiceNo,DayDate,
15 MyLinkFile,
'' MyMainAccNo,
Id MySubAccNo,
0 Db,
Value Cr,
0 DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'أرباح المستثمرين' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InvestorsProfits
where DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,0 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
@YearProfitAccNo MyMainAccNo,
0 MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'أرباح المستثمرين' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from InvestorsProfits
where DayDate between @FromDate and @ToDate 

--===========================================الأرباح والخسائر===============================================

union all

select 0 WindowId,-999 MyFlag,0 InvoiceNo,DayDate,
0 MyLinkFile,
@YearProfitAccNo MyMainAccNo,
0 MySubAccNo,
(case when Bal0>0 then Bal0 else 0 end) Db,
(case when Bal0<0 then -Bal0 else 0 end) Cr,
(case when Bal0>0 then Bal0 else 0 end) DbLocal,
(case when Bal0<0 then -Bal0 else 0 end) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'الأرباح والخسائر' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from YearProfit
where DayDate between @FromDate and @ToDate 


--===========================================ترحيل الأرباح والخسائر===============================================

union all

select 0 WindowId,0 MyFlag,0 InvoiceNo,DayDate+1,
0 MyLinkFile,
@PrevYearProfitAccNo MyMainAccNo,
0 MySubAccNo,
(case when Bal0>0 then Bal0 else 0 end) Db,
(case when Bal0<0 then -Bal0 else 0 end) Cr,
(case when Bal0>0 then Bal0 else 0 end) DbLocal,
(case when Bal0<0 then -Bal0 else 0 end) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'ترحيل الأرباح والخسائر' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from YearProfit
where DayDate between @FromDate-1 and @ToDate 
and year(DayDate)<YEAR(@ToDate)
and @PrevYearProfitAccNo<>''

union all

select 0 WindowId,0 MyFlag,0 InvoiceNo,DayDate+1,
0 MyLinkFile,
@YearProfitAccNo MyMainAccNo,
0 MySubAccNo,
(case when Bal0<0 then -Bal0 else 0 end) Db,
(case when Bal0>0 then Bal0 else 0 end) Cr,
(case when Bal0<0 then -Bal0 else 0 end) DbLocal,
(case when Bal0>0 then Bal0 else 0 end) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'ترحيل الأرباح والخسائر' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from YearProfit
where DayDate between @FromDate-1 and @ToDate 
and year(DayDate)<YEAR(@ToDate)
and @PrevYearProfitAccNo<>''

--===========================================بضاعة أول وآخر المدة===============================================

union all

select 0 WindowId,0 MyFlag,0 InvoiceNo,@FromDate-1 DayDate,
0 MyLinkFile,
TradingFirstAccNo MyMainAccNo,
0 MySubAccNo,
isnull(sum(AvgCost),0) Db,
0. Cr,
isnull(sum(AvgCost),0) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,T.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'بضاعة أول المدة - متاجرة' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from 
(
	select TradingFirstAccNo,
	fn.ItemId,St.CostCenterId,
	isnull(sum(AvgCost),0)AvgCost from Groups G
	left join dbo.Fn_AllItemMotion(0,0,@FromDate-1)Fn on(G.Id=Fn.GroupId)
	left join Stores St on(St.Id=fn.StoreId)
	where @HideItemBalCost=0
	group by TradingFirstAccNo,fn.ItemId,St.CostCenterId
	having isnull(sum(Qty),0)<>0
)T
group by TradingFirstAccNo,T.CostCenterId

union all

select 0 WindowId,0 MyFlag,0 InvoiceNo,@ToDate DayDate,
0 MyLinkFile,
TradingLastAccNo MyMainAccNo,
0 MySubAccNo,
0. Db,
isnull(sum(AvgCost),0) Cr,
0. DbLocal,
isnull(sum(AvgCost),0) CrLocal,
1 CurrencyId,0 AnalysisId,T.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'بضاعة آخر المدة - متاجرة' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from 
(
	select TradingLastAccNo,
	fn.ItemId,St.CostCenterId,
	isnull(sum(AvgCost),0)AvgCost from Groups G
	left join dbo.Fn_AllItemMotion(0,0,@ToDate)Fn on(G.Id=Fn.GroupId)
	left join Stores St on(St.Id=fn.StoreId)
	where @HideItemBalCost=0
	group by TradingLastAccNo,fn.ItemId,St.CostCenterId
	having isnull(sum(Qty),0)<>0
)T
group by TradingLastAccNo,T.CostCenterId

union all

select 0 WindowId,0 MyFlag,0 InvoiceNo,@ToDate DayDate,
0 MyLinkFile,
BudgetAccNo MyMainAccNo,
0 MySubAccNo,
isnull(sum(AvgCost),0) Db,
0. Cr,
isnull(sum(AvgCost),0) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,T.CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'بضاعة آخر المدة - ميزانية' 'Rem',
0 LinkFile,'-' MainAccNo,'-' SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0. Qty,0. Price
from 
(
	select BudgetAccNo,
	fn.ItemId,St.CostCenterId,
	isnull(sum(AvgCost),0)AvgCost from Groups G
	left join dbo.Fn_AllItemMotion(0,0,@ToDate)Fn on(G.Id=Fn.GroupId)
	left join Stores St on(St.Id=fn.StoreId)
	where @HideItemBalCost=0
	group by BudgetAccNo,fn.ItemId,St.CostCenterId
	having isnull(sum(Qty),0)<>0
)T
group by BudgetAccNo,T.CostCenterId

--===========================================الإهلاكات===============================================

union all

select 0 WindowId,1 MyFlag,0 InvoiceNo,DayDate,
12 MyLinkFile,
'' MyMainAccNo,
AssetId MySubAccNo,
0 Db,
Value Cr,
0. DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'الإهلاك' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from AssetsDepreciationHistory 
where DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,1 MyFlag,0,T.DayDate,
0 MyLinkFile,
A.DepreciationAccNo MyMainAccNo,
0 MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'الإهلاك' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from AssetsDepreciationHistory T
left join Assets A on(T.AssetId=A.Id)
where T.DayDate between @FromDate and @ToDate 


--==========================================================================================

union all


select 0 WindowId,1 MyFlag,0,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
13 MyLinkFile,
'' MyMainAccNo,
T.CaseId MySubAccNo,
Living Db,
0 Cr,
Living DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'إقامة' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from ClinicsHistory T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,0,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
13 MyLinkFile,
'' MyMainAccNo,
T.CaseId MySubAccNo,
Supervision Db,
0 Cr,
Supervision DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'إشراف' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from ClinicsHistory T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,0,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
13 MyLinkFile,
'' MyMainAccNo,
T.CaseId MySubAccNo,
Care Db,
0 Cr,
Care DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'رعاية' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from ClinicsHistory T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
Perc Db,
0 Cr,
Perc DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
cast(Perc0 as nvarchar(100))+'%' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
Total0 Db,
0 Cr,
Total0 DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'إضافي مستهلكات العمليات' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and Total0>0

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
@OperationAccNo MyMainAccNo,
@OperationSubAccNo2 MySubAccNo,
0 Db,
Total01 Cr,
0. DbLocal,
Total01 CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'-' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and Total01>0

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
0 Db,
Discount Cr,
0. DbLocal,
Discount CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'خصم فواتير المرضى' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and Discount<>0

union all

select 0 WindowId,1 MyFlag,0,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
RT.MainAccNo MyMainAccNo,
RT.SubAccNo MySubAccNo,
0 Db,
T.Living Cr,
0. DbLocal,
T.Living CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'إقامة' 'Rem',
13,'-',T.CaseId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,0,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
RT.MainAccNo MyMainAccNo,
RT.SubAccNo MySubAccNo,
0 Db,
T.Supervision Cr,
0. DbLocal,
T.Supervision CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'إشراف' 'Rem',
13,'-',T.CaseId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,0,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
RT.MainAccNo MyMainAccNo,
RT.SubAccNo MySubAccNo,
0 Db,
T.Care Cr,
0. DbLocal,
T.Care CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'رعاية' 'Rem',
13,'-',T.CaseId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
@OtherAccNo MyMainAccNo,
@OtherSubAccNo MySubAccNo,
0 Db,
Perc Cr,
0. DbLocal,
Perc CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
cast(Perc0 as nvarchar(100))+'%' 'Rem',
13,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
@CaseInvoicesDiscountAccNo MyMainAccNo,
@CaseInvoicesDiscountSubAccNo MySubAccNo,
Discount Db,
0 Cr,
Discount DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'خصم فواتير المرضى' 'Rem',
13,'-',CaseId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and Discount<>0

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
0 Db,
Remaining Cr,
0. DbLocal,
Remaining CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'سداد' 'Rem',
0,RemainingMainAccNo,RemainingSubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and Remaining>0
and RemainingSubAccNo>0

union all

select 0 WindowId,1 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
RemainingMainAccNo MyMainAccNo,
RemainingSubAccNo MySubAccNo,
Remaining Db,
0 Cr,
Remaining DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* ' Notes,
'سداد' 'Rem',
13,'-',CaseId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and Remaining>0
and RemainingSubAccNo>0

--==========================================================================================

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
13 MyLinkFile,
'' MyMainAccNo,
T.CaseId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'العمليات - '+(case when @MySubAccNo=0 then '' else (case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end)end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
16 MyLinkFile,
E.AccNo MyMainAccNo,
E.Id MySubAccNo,
0 Db,
Dr1Value Cr,
0. DbLocal,
Dr1Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 1 - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId1=E.Id)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and Dr1Value<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
16 MyLinkFile,
E.AccNo MyMainAccNo,
E.Id MySubAccNo,
0 Db,
Dr2Value Cr,
0. DbLocal,
Dr2Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 2 - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join Employees E on(T.DrId2=E.Id)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and Dr2Value<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
16 MyLinkFile,
E.AccNo MyMainAccNo,
E.Id MySubAccNo,
0 Db,
Dr3Value Cr,
0. DbLocal,
Dr3Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 3 - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join Employees E on(T.DrId3=E.Id)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and Dr3Value<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
16 MyLinkFile,
E.AccNo MyMainAccNo,
E.Id MySubAccNo,
0 Db,
AnesthetistValue Cr,
0. DbLocal,
AnesthetistValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب تخدير - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join Employees E on(T.AnesthetistId=E.Id)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and AnesthetistValue<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
@OperationAccNo MyMainAccNo,
@OperationSubAccNo MySubAccNo,
0 Db,
RoomValue Cr,
0. DbLocal,
RoomValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'فتح غرفة العمليات - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and RoomValue<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
@InPatientAccNo MyMainAccNo,
@InPatientSubAccNo MySubAccNo,
0 Db,
RoomValue2 Cr,
0. DbLocal,
RoomValue2 CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'إقامة - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and RoomValue2<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
@InPatientAccNo MyMainAccNo,
@InPatientSubAccNo MySubAccNo,
0 Db,
CsValue Cr,
0. DbLocal,
CsValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب تمريض - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and CsValue<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
@InPatientAccNo MyMainAccNo,
@InPatientSubAccNo MySubAccNo,
0 Db,
MedicalValue Cr,
0. DbLocal,
MedicalValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'رعاية طبية - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and MedicalValue<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
@OperationAccNo MyMainAccNo,
@OperationSubAccNo MySubAccNo,
0 Db,
CoValue Cr,
0. DbLocal,
CoValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب مستشفى - '+(case when @MySubAccNo=0 then '' else 
--dbo.GetOperationMotionsOperationTypesName(T.InvoiceNo)
isnull((select top 1 CAST(OperationTypeId as nvarchar(100)) from OperationMotionsOperationTypes where InvoiceNo=T.InvoiceNo order by Line),'-')
end) 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from OperationMotions T
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and CoValue<>0
and CaseInvoiceNo>0

union all

select 0 WindowId,1 MyFlag,ReservId,cast(ReservationDate as date),
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId,1 MyFlag,ReservId,cast(ReservationDate as date),
0 MyLinkFile,
@OutPatientAccNo MyMainAccNo,
@OutPatientSubAccNo MySubAccNo,
0 Db,
Value Cr,
0. DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from Reservations R
where cast(ReservationDate as date) between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId,2 MyFlag,ReservId,cast(ReservationDate as date),
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
0 Db,
Payed Cr,
0. DbLocal,
Payed CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - المدفوع' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId,2 MyFlag,ReservId,cast(ReservationDate as date),
5 MyLinkFile,
'' MyMainAccNo,
E.DefaultSave MySubAccNo,
Payed Db,
0 Cr,
Payed DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - المدفوع' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdReservation=E.Id)
where cast(ReservationDate as date) between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId,3 MyFlag,ReservId,cast(RemainingDate as date),
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
0 Db,
Remaining Cr,
0. DbLocal,
Remaining CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - سداد المتبقي' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from Reservations
where cast(RemainingDate as date) between @FromDate and @ToDate 
and Canceled=0
and Done=1

union all

select 0 WindowId,3 MyFlag,ReservId,cast(RemainingDate as date),
5 MyLinkFile,
'' MyMainAccNo,
E.DefaultSave MySubAccNo,
Remaining Db,
0 Cr,
Remaining DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - سداد المتبقي' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and Canceled=0
and Done=1

union all

select 0 WindowId,4 MyFlag,ReservId,cast(ReturnedDate as date),
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr,
Payed+(case when Done=1 then Remaining else 0 end) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - استرجاع' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Reservations
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and Canceled=0
and Returned=1

union all

select 0 WindowId,4 MyFlag,ReservId,cast(ReturnedDate as date),
5 MyLinkFile,
'' MyMainAccNo,
E.DefaultSave MySubAccNo,
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr,
0. DbLocal,
Payed+(case when Done=1 then Remaining else 0 end) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - استرجاع' 'Rem',
99,'-',EmpId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and Canceled=0
and Returned=1

--==========================================================================================

union all

select 0 WindowId,1 MyFlag,S.InvoiceNo,(Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
SG.MainAccNo MyMainAccNo,
SG.SubAccNo MySubAccNo,
0 Db,
Value Cr,
0. DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','',
'* '+ST.Name+' - '+S.Notes Notes,
'الخدمات' 'Rem',
13,'',S.CaseId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from Services S 
left join CaseInvoices CI on(CI.InvoiceNo=S.CaseInvoiceNo)
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where (Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and Returned=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 0 WindowId,1 MyFlag,0 InvoiceNo,(Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end)DayDate,
13 MyLinkFile,
'' MyMainAccNo,
S.CaseId MySubAccNo,
sum(Value) Db,
0 Cr,
sum(Value) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+S.Notes Notes,
'الخدمات - '+SG.Name 'Rem',
0,'-',S.ServiceGroupId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S 
left join CaseInvoices CI on(CI.InvoiceNo=S.CaseInvoiceNo)
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
where (Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and @Detailed=0
and not (S.Flag=2 and CaseInvoiceNo=0)
group by S.CaseId,(Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end),S.Notes,S.ServiceGroupId,SG.Name

union all

select 0 WindowId, 1 MyFlag,S.InvoiceNo,(Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end)DayDate,
13 MyLinkFile,
'' MyMainAccNo,
S.CaseId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+S.Notes Notes,
'الخدمات - '+SG.Name+' - '+ST.Name 'Rem',
0,'-',S.ServiceTypeId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S 
left join CaseInvoices CI on(CI.InvoiceNo=S.CaseInvoiceNo)
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where (Case when CaseInvoiceNo=0 then S.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Canceled=0
and @Detailed=1
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 0 WindowId, 2 MyFlag,0 InvoiceNo,DayDate,
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
0 Db,
sum(Payed) Cr,
0. DbLocal,
sum(Payed) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '/*+Notes*/ Notes,
'الخدمات - المدفوع' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0
and Payed<>0
and S.Flag=1
group by CaseId,DayDate

union all

select 0 WindowId, 2 MyFlag,0 InvoiceNo,DayDate,
5 MyLinkFile,
'' MyMainAccNo,
E.DefaultSave MySubAccNo,
sum(Payed) Db,
0 Cr,
sum(Payed) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '/*+S.Notes*/ Notes,
'الخدمات - المدفوع' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdReservation=E.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0
and Payed<>0
and S.Flag=1
group by E.DefaultSave,DayDate

union all

select 0 WindowId, 3 MyFlag,0 InvoiceNo,cast(RemainingDate as date),
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
0 Db,
sum(Remaining) Cr,
0. DbLocal,
sum(Remaining) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '/*+Notes*/ Notes,
'الخدمات - سداد المتبقي' 'Rem',
0,'-',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1
group by CaseId,cast(RemainingDate as date)

union all

select 0 WindowId, 3 MyFlag,InvoiceNo,cast(RemainingDate as date),
5 MyLinkFile,
'' MyMainAccNo,
E.DefaultSave MySubAccNo,
Remaining Db,
0 Cr,
Remaining DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+S.Notes Notes,
'الخدمات - سداد المتبقي - '+ST.Name 'Rem',
0,'-',S.ServiceTypeId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 0 WindowId, 4 MyFlag,InvoiceNo,cast(ReturnedDate as date),
13 MyLinkFile,
'' MyMainAccNo,
CaseId MySubAccNo,
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr,
Payed+(case when Done=1 then Remaining else 0 end) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+Notes Notes,
'الخدمات - استرجاع - '+ST.Name 'Rem',
0,'-',S.ServiceTypeId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and Canceled=0
and Returned=1
and S.Flag=1

union all

select 0 WindowId, 4 MyFlag,InvoiceNo,cast(ReturnedDate as date),
5 MyLinkFile,
'' MyMainAccNo,
E.DefaultSave MySubAccNo,
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr,
0. DbLocal,
Payed+(case when Done=1 then Remaining else 0 end) CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+S.Notes Notes,
'الخدمات - استرجاع - '+ST.Name 'Rem',
0,'-',S.ServiceTypeId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and Canceled=0
and Returned=1
and S.Flag=1

--==========================================================================================

union all

select 101 WindowId, 1 MyFlag,ED.InvoiceNo,E.DayDate,
0 MyLinkFile,
MainAccNo MyMainAccNo,
SubAccNo MySubAccNo,
ED.MainDebit Db,
ED.MainCredit Cr,
ED.Debit DbLocal,
ED.Credit CrLocal,
(case when ED.CurrencyId<1 then 1 else ED.CurrencyId end),AnalysisId,CostCenterId,CostCenterSubId,
'','-','','','* '+ED.Notes+(case when DocNo='' then '' else ' ,مستند: '+DocNo end) Notes,
@EntryTblName+' - '+T.Name 'Rem',
0,MainAccNo,SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join EntryTypes T on(E.EntryTypeId=T.Id)
where E.DayDate between @FromDate and @ToDate 

--==========================================================================================

union all

select 0 WindowId, 1 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
MainAccNo1 MyMainAccNo,
SubAccNo1 MySubAccNo,
Value1 Db,
0 Cr,
Value DbLocal,
0. CrLocal,
CurrencyId1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+Notes Notes,
'تسويات نقدية' 'Rem',
0,MainAccNo2,SubAccNo2,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Entry2
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, 1 MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
MainAccNo2 MyMainAccNo,
SubAccNo2 MySubAccNo,
0 Db,
Value2 Cr,
0. DbLocal,
Value CrLocal,
CurrencyId2 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','','','* '+Notes Notes,
'تسويات نقدية' 'Rem',
0,MainAccNo1,SubAccNo1,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from Entry2
where DayDate between @FromDate and @ToDate 
and Canceled=0

--==========================================================================================
union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
MainAccNo MyMainAccNo,
SubAccNo MySubAccNo,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
(Case when Flag in(1,3) then 0 else 1. end)*Value DbLocal,
(Case when Flag in(1,3) then 1. else 0 end)*Value CrLocal,
1 CurrencyId,AnalysisId,CostCenterId,CostCenterSubId,
Cash,SheekNo,SheekPerson,SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
0,MainAccNo,SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from BankCash
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end) MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
(Case when Flag in(1,3) then 1. else 0 end)*Value DbLocal,
(Case when Flag in(1,3) then 0 else 1. end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
Cash,SheekNo,SheekPerson,SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
0,MainAccNo,SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from BankCash
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
LinkFile MyLinkFile,
MainAccNo MyMainAccNo,
SubAccNo MySubAccNo,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
(Case when Flag in(1,3) then 0 else 1. end)*Value DbLocal,
(Case when Flag in(1,3) then 1. else 0 end)*Value CrLocal,
1 CurrencyId,AnalysisId,CostCenterId,CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,
'* '+Notes 
+(case when DayDate2='1900-01-01' then '' else ' - تاريخ القسط '
+cast(YEAR(DayDate2) as nvarchar(10))+'-'+cast(month(DayDate2) as nvarchar(10))+'-'+cast(day(DayDate2) as nvarchar(10))
end) Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
(Case when Flag in(1,2) then 5 else 6 end),'',BankId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end) MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
(Case when Flag in(1,3) then 1. else 0 end)*Value DbLocal,
(Case when Flag in(1,3) then 0 else 1. end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,CostCenterId,0 CostCenterSubId,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes 
+(case when DayDate2='1900-01-01' then '' else ' - تاريخ القسط '
+cast(YEAR(DayDate2) as nvarchar(10))+'-'+cast(month(DayDate2) as nvarchar(10))+'-'+cast(day(DayDate2) as nvarchar(10))
end) Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
LinkFile,'',SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G
where DayDate between @FromDate and @ToDate 
and Canceled=0


union all

select (case when C.Flag=1 then 102 else 103 end)WindowId,C.Flag MyFlag,InvoiceNo,DayDate,
LinkFile MyLinkFile,
MainAccNo MyMainAccNo,
SubAccNo MySubAccNo,
(Case when C.Flag=1 then (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) else MainValue2 end) Db,
(Case when C.Flag=1 then MainValue2 else (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) end) Cr,
(Case when C.Flag=1 then (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollectedLocal(CheckNo,CheckTypeId,DayDate) end) else Value end) DbLocal,
(Case when C.Flag=1 then Value else (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollectedLocal(CheckNo,CheckTypeId,DayDate) end) end) CrLocal,
C.CurrencyId2 CurrencyId,AnalysisId,C.CostCenterId,CostCenterSubId,
0 Cash,
(case when CheckTypeId=1 then ' - ' else CT.Name +' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+Notes Notes,

T.Name
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
MainLinkFile,'',BankId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join Stores St on(St.Id=StoreId)
left join CheckTypes CT on(CT.Id=CheckTypeId)
left join OrderTypes OT on(OT.Id=PurchaseAccNo)
where DayDate between @FromDate and @ToDate 
and Canceled=0


union all
--ارتداد الشيك اوتوماتيكيا
select (case when C.Flag=1 then 102 else 103 end)WindowId, C.Flag MyFlag,C.InvoiceNo,C2.DayDate,
C.LinkFile MyLinkFile,
C.MainAccNo MyMainAccNo,
C.SubAccNo MySubAccNo,
(Case when C.Flag=1 then C.MainValue2 else 0 end) Db,
(Case when C.Flag=1 then 0 else C.MainValue2 end) Cr,
(Case when C.Flag=1 then C.Value else 0 end) DbLocal,
(Case when C.Flag=1 then 0 else C.Value end) CrLocal,
C.CurrencyId2 CurrencyId,C.AnalysisId,C.CostCenterId,C.CostCenterSubId,
0 Cash,
(case when C2.CheckTypeId=1 then ' - ' else CT.Name+' - '+C.CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(C.CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+C.Notes Notes,

T.Name
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
C.MainLinkFile,'',C.BankId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
left join Stores St on(St.Id=C.StoreId)
left join CheckTypes CT on(CT.Id=C2.CheckTypeId)
left join OrderTypes OT on(OT.Id=C.PurchaseAccNo)
where C2.DayDate between @FromDate and @ToDate 
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)
--===========================================================================

--==========================================================================================
union all

select (case when C.Flag=1 then 102 else 103 end)WindowId, C.Flag MyFlag,InvoiceNo,DayDate,
LinkFile MyLinkFile,
MainAccNo MyMainAccNo,
SubAccNo MySubAccNo,
(Case when C.Flag=1 then 0 else MainValue2Ded end) Db,
(Case when C.Flag=1 then MainValue2Ded else 0 end) Cr,
(Case when C.Flag=1 then 0 else Value2Ded end) DbLocal,
(Case when C.Flag=1 then Value2Ded else 0 end) CrLocal,
C.CurrencyId2 CurrencyId,AnalysisId,C.CostCenterId,CostCenterSubId,
0 Cash,
(case when CheckTypeId=1 then ' - ' else CT.Name +' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+Notes Notes,

T.Name
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
0,(Case when C.Flag=1 then @BankCash_G2_Flag1_DedAcc else @BankCash_G2_Flag2_DedAcc end),0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join Stores St on(St.Id=StoreId)
left join CheckTypes CT on(CT.Id=CheckTypeId)
left join OrderTypes OT on(OT.Id=PurchaseAccNo)
where DayDate between @FromDate and @ToDate 
and Canceled=0
and MainValue2Ded<>0

union all

select (case when C.Flag=1 then 102 else 103 end)WindowId, C.Flag MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
(Case when C.Flag=1 then @BankCash_G2_Flag1_DedAcc else @BankCash_G2_Flag2_DedAcc end) MyMainAccNo,
0 MySubAccNo,
(Case when C.Flag=1 then Value2Ded else 0 end) Db,
(Case when C.Flag=1 then 0 else Value2Ded end) Cr,
(Case when C.Flag=1 then Value2Ded else 0 end) DbLocal,
(Case when C.Flag=1 then 0 else Value2Ded end) CrLocal,
1 CurrencyId,AnalysisId,C.CostCenterId,CostCenterSubId,
0 Cash,
(case when CheckTypeId=1 then ' - ' else CT.Name +' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+Notes Notes,
T.Name
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
LinkFile,'',SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join Stores St on(St.Id=StoreId)
left join CheckTypes CT on(CT.Id=CheckTypeId)
left join OrderTypes OT on(OT.Id=PurchaseAccNo)
where DayDate between @FromDate and @ToDate 
and Canceled=0
and Value2Ded<>0 


union all

select (case when C.Flag=1 then 102 else 103 end)WindowId, C.Flag MyFlag,InvoiceNo,DayDate,
MainLinkFile MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when C.Flag=1 then MainValue else (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) end) Db,
(Case when C.Flag=1 then (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) else MainValue end) Cr,
(Case when C.Flag=1 then Value else (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollectedLocal(CheckNo,CheckTypeId,DayDate) end) end) DbLocal,
(Case when C.Flag=1 then (case when CheckNo='' then 0 when CheckTypeId=1 then 0 else dbo.GetCheckPartialCollectedLocal(CheckNo,CheckTypeId,DayDate) end) else Value end) CrLocal,
C.CurrencyId CurrencyId,0 AnalysisId,C.CostCenterId,0 CostCenterSubId,
0 Cash,
(case when CheckTypeId=1 then ' - ' else CT.Name +' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end),
'' SheekPerson,null SheekDate,
'* '
+Notes Notes,
T.Name
	+' - '+/*dbo.GetLinkAccName(MainLinkFile,BankId)*/AllSub.Name
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
C.LinkFile,'',SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join Stores St on(St.Id=StoreId)
left join CheckTypes CT on(CT.Id=CheckTypeId)
left join AllSub on(AllSub.Id=C.BankId and AllSub.LinkFile=C.MainLinkFile)
left join OrderTypes OT on(OT.Id=PurchaseAccNo)
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all
--ارتداد الشيك اوتوماتيكيا
select (case when C.Flag=1 then 102 else 103 end)WindowId, C.Flag MyFlag,C.InvoiceNo,C2.DayDate,
C.MainLinkFile MyLinkFile,
'' MyMainAccNo,
C.BankId MySubAccNo,
(Case when C.Flag=1 then 0 else C.MainValue end) Db,
(Case when C.Flag=1 then C.MainValue else 0 end) Cr,
(Case when C.Flag=1 then 0 else C.Value end) DbLocal,
(Case when C.Flag=1 then C.Value else 0 end) CrLocal,
C.CurrencyId CurrencyId,C.AnalysisId,C.CostCenterId,C.CostCenterSubId,
0 Cash,
(case when C2.CheckTypeId=1 then ' - ' else CT.Name +' - '+C.CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(C.CheckNo,@ToDate) else '' end)
 end),
'' SheekPerson,null SheekDate,
'* '
+C.Notes Notes,
T.Name
	+' - '+/*dbo.GetLinkAccName(C.MainLinkFile,C.BankId)*/AllSub.Name
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
C.LinkFile,'',C.SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
left join Stores St on(St.Id=C.StoreId)
left join CheckTypes CT on(CT.Id=C2.CheckTypeId)
left join AllSub on(AllSub.Id=C.BankId and AllSub.LinkFile=C.MainLinkFile)
left join OrderTypes OT on(OT.Id=C.PurchaseAccNo)
where C2.DayDate between @FromDate and @ToDate 
and C.Canceled=0
and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
FromLinkFile MyLinkFile,
'' MyMainAccNo,
FromSubAccNo MySubAccNo,
0 Db,
MainValue Cr,
0. DbLocal,
Value CrLocal,
CurrencyId CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,' - ' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'تحويلات نقدية' 'Rem',
ToLinkFile,'',ToSubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G3
where DayDate between @FromDate and @ToDate
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
ToLinkFile MyLinkFile,
'' MyMainAccNo,
ToSubAccNo MySubAccNo,
MainValue Db,
0 Cr,
MainValue DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0 Cash,' - ' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'تحويلات نقدية' 'Rem',
FromLinkFile,'',FromSubAccNo SubAccNo,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash_G3
where DayDate between @FromDate and @ToDate
and Canceled=0

--===========================================================================================

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end) MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
(Case when Flag in(1,3) then 1. else 0 end)*Value DbLocal,
(Case when Flag in(1,3) then 0 else 1. end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,CostCenterId,0 CostCenterSubId,
'','-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'المقبوضات' when 2 then 'المدفوعات' when 3 then 'المقبوضات' when 4 then 'المدفوعات' end) 'Rem',
9,'',OutComeTypeId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash2
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
9 MyLinkFile,
'' MyMainAccNo,
OutComeTypeId MySubAccNo,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
(Case when Flag in(1,3) then 0 else 1. end)*Value DbLocal,
(Case when Flag in(1,3) then 1. else 0 end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,CostCenterId,0 CostCenterSubId,
'','-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'المقبوضات' when 2 then 'المدفوعات' when 3 then 'المقبوضات' when 4 then 'المدفوعات' end) 'Rem',
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end),'',BankId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash2
where DayDate between @FromDate and @ToDate 
and Canceled=0


--===========================================================================================

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end) MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
(Case when Flag in(1,3) then 1. else 0 end)*Value DbLocal,
(Case when Flag in(1,3) then 0 else 1. end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'إيراد من رأس مال مستثمر' when 2 then 'منصرف لرأس مال مستثمر' when 3 then 'إيراد من رأس مال مستثمر' when 4 then 'منصرف لرأس مال مستثمر' end) 'Rem',
15,'',InvestorId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash5
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
15 MyLinkFile,
'' MyMainAccNo,
InvestorId MySubAccNo,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
(Case when Flag in(1,3) then 0 else 1. end)*Value DbLocal,
(Case when Flag in(1,3) then 1. else 0 end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
'','-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'إيراد من رأس مال مستثمر' when 2 then 'منصرف لرأس مال مستثمر' when 3 then 'إيراد من رأس مال مستثمر' when 4 then 'منصرف لرأس مال مستثمر' end) 'Rem',
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end),'',BankId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash5
where DayDate between @FromDate and @ToDate 
and Canceled=0

--===========================================================================================

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
MainAccNo MyMainAccNo,
0 MySubAccNo,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
(Case when Flag in(1,3) then 0 else 1. end)*Value DbLocal,
(Case when Flag in(1,3) then 1. else 0 end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
Cash,'','-',null,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خ خزنة' when 2 then 'مدفوعات خ خزنة' when 3 then 'مقبوضات خ بنك' when 4 then 'مدفوعات خ بنك' end) 'Rem',
0,MainAccNo,0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash3
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end) MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
(Case when Flag in(1,3) then 1. else 0 end)*Value DbLocal,
(Case when Flag in(1,3) then 0 else 1. end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
Cash,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خ خزنة' when 2 then 'مدفوعات خ خزنة' when 3 then 'مقبوضات خ بنك' when 4 then 'مدفوعات خ بنك' end) 'Rem',
0,MainAccNo,0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash3
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

--===========================================================================
--===========================================================================

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
8 MyLinkFile,
'' MyMainAccNo,
MoneyChangerId MySubAccNo,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
(Case when Flag in(1,3) then 0 else 1. end)*Value DbLocal,
(Case when Flag in(1,3) then 1. else 0 end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'شراء عملة' else 'مبيعات عملة' end) 'Rem',
0,'',MoneyChangerId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash4
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
(case when Flag in(1,2) then 5 when Flag in(3,4) then 6 else 0 end) MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
(Case when Flag in(1,3) then 1. else 0 end)*Value DbLocal,
(Case when Flag in(1,3) then 0 else 1. end)*Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'شراء عملة' else 'مبيعات عملة' end) 'Rem',
8,'',MoneyChangerId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash4
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

--===========================================================================
--===========================================================================


--===========================================================================
--===========================================================================

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
14 MyLinkFile,
'' MyMainAccNo,
TeacherId MySubAccNo,
0 Db,
TeacherValue Cr,
0 DbLocal,
TeacherValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,'-','',null,'* '+C.Name+' '+T.Notes Notes,
'مدفوعات طلاب' 'Rem',
0,'',TeacherId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash6 T
left join Customers C on(T.CustomerId=C.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
0 MyLinkFile,
@CenterAccNo MyMainAccNo,
0 MySubAccNo,
0 Db,
CenterValue Cr,
0 DbLocal,
CenterValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,Te.Name,'',null,'* '+C.Name+' '+T.Notes Notes,
'مدفوعات طلاب' 'Rem',
0,'',TeacherId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash6 T
left join Customers C on(T.CustomerId=C.Id)
left join Teachers Te on(T.TeacherId=Te.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
5 MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
PaidValue Db,
0 Cr,
PaidValue DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,Te.Name,'',null,'* '+C.Name+' '+T.Notes Notes,
'مدفوعات طلاب' 'Rem',
0,'',TeacherId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash6 T
left join Customers C on(T.CustomerId=C.Id)
left join Teachers Te on(T.TeacherId=Te.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all





select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
1 MyLinkFile,
'' MyMainAccNo,
CustomerId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0 CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,Te.Name,'',null,'* '+C.Name+' '+T.Notes Notes,
'مدفوعات طلاب' 'Rem',
0,'',TeacherId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash6 T
left join Customers C on(T.CustomerId=C.Id)
left join Teachers Te on(T.TeacherId=Te.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

select 0 WindowId, Flag MyFlag,InvoiceNo,DayDate,
1 MyLinkFile,
'' MyMainAccNo,
CustomerId MySubAccNo,
0 Db,
PaidValue Cr,
0 DbLocal,
PaidValue CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
0,Te.Name,'',null,'* '+C.Name+' '+T.Notes Notes,
'مدفوعات طلاب' 'Rem',
0,'',TeacherId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from BankCash6 T
left join Customers C on(T.CustomerId=C.Id)
left join Teachers Te on(T.TeacherId=Te.Id)
where DayDate between @FromDate and @ToDate 
and Canceled=0

union all

--===========================================================================
--===========================================================================

select 0 WindowId, 1 MyFlag,InvoiceNo,DayDate,
7 MyLinkFile,
'' MyMainAccNo,
SellerId MySubAccNo,
0 Db,
Value Cr,
0. DbLocal,
Value CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
IT.Name 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Invoices T
left join InvoicesTypes IT on(T.InvoicesTypeId=IT.Id)
where DayDate between @FromDate and @ToDate 

union all

select 0 WindowId, 1 MyFlag,InvoiceNo,DayDate,
7 MyLinkFile,
'' MyMainAccNo,
SellerId MySubAccNo,
0 Db,
Payed+Tips+Payments+OtherPayments Cr,
0. DbLocal,
Payed+Tips+Payments+OtherPayments CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'نوالين وإكراميات ومدفوعات' 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Nolon
where DayDate between @FromDate and @ToDate 

--===========================================================================
--===========================================================================
union all

select 0 WindowId, 1 MyFlag,InvoiceNo,DayDate,
1 MyLinkFile,
'' MyMainAccNo,
CustomerId MySubAccNo,
dbo.GetCustomerInvoiceTotal(InvoiceNo) Db,
0 Cr,
dbo.GetCustomerInvoiceTotal(InvoiceNo) DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'فاتورة' 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from CustomerInvoices
where DayDate between @FromDate and @ToDate 
and @Detailed=0
--===========================================================================
union all

select 0 WindowId, 1 MyFlag,d.InvoiceNo,DayDate,
1 MyLinkFile,
'' MyMainAccNo,
CustomerId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+dt.Notes Notes,
dt.ItemName 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from CustomerInvoicesDt dt
left join CustomerInvoices d on(dt.InvoiceNo=d.InvoiceNo) 
where DayDate between @FromDate and @ToDate 
and Value<>0
and @Detailed=1

union all

select 0 WindowId, 1 MyFlag,CustomerInvoiceNo,Dt.DayDate,
1 MyLinkFile,
'' MyMainAccNo,
D.CustomerId MySubAccNo,
Value Db,
0 Cr,
Value DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+D.Notes Notes,
'إيصالات' 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Invoices D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate between @FromDate and @ToDate 
and Value<>0
and @Detailed=1

union all

select 0 WindowId, 1 MyFlag,CustomerInvoiceNo,Dt.DayDate,
1 MyLinkFile,
'' MyMainAccNo,
D.CustomerId MySubAccNo,
Value2+Tips2 Db,
0 Cr,
Value2+Tips2 DbLocal,
0. CrLocal,
1 CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+D.Notes Notes,
'نوالين وإكراميات' 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from Nolon D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate between @FromDate and @ToDate 
and Value2+Tips2<>0
and @Detailed=1


--===========================================================================
--===========================================================================

--===========================================================================المبيعات والمشتريات

union all


select M.Flag WindowId, 0 MyFlag,M.InvoiceNo,(Case when CaseInvoiceNo=0 then M.DayDate else CI.DayDate end)DayDate,
(case 
when M.Flag in(11,13,15,12,14,16,21,22,23,24,33,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when M.Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when M.Flag in(17,18) then 13
when M.Flag in(35,36) then 15
when M.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
else 0
end) MyLinkFile,
'' MyMainAccNo,
M.ToId MySubAccNo,
(case when M.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then TotalAfterDiscount else 0 end) Db,
(case when M.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then TotalAfterDiscount else 0 end) Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when M.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then TotalAfterDiscount else 0 end) DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when M.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then TotalAfterDiscount else 0 end) CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+(case when M.DocNo='' then '' else ' رقم المستند '+M.DocNo+' - ' end)+M.Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,'',0,
'' SalesItems,
M.StoreId SalesMaster_StoreId,M.Flag SalesMaster_Flag,M.InvoiceNo SalesMaster_InvoiceNo,

0 Qty,0 Price
from SalesMaster M 
left join CaseInvoices CI on(CI.InvoiceNo=M.CaseInvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join InstallmentInvoicesMaster Ins on(M.Flag=Ins.Flag and M.StoreId=Ins.StoreId and M.InvoiceNo=Ins.InvoiceNo)
left join Stores St on(St.Id=M.StoreId)
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
where (Case when CaseInvoiceNo=0 then M.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and @Detailed=0
and Temp=0
--and Temp2=1
and Ins.InvoiceNo is null

--===========================================================================
union all

select D.Flag WindowId, 0 MyFlag,D.InvoiceNo,(Case when CaseInvoiceNo=0 then D.DayDate else CI.DayDate end)DayDate,
(case 
when D.Flag in(11,13,15,12,14,16,21,22,23,24,33,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when D.Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when D.Flag in(17,18) then 13
when D.Flag in(35,36) then 15
when D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
else 0
end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case when D.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then D.DiscountValue else 0 end) Db,
(case when D.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then D.DiscountValue else 0 end) Cr,
(case when D.CurrencyId=1 then 1. when D.Exchange is null then CE.Exchange else D.Exchange end)*(case when D.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then D.DiscountValue else 0 end) DbLocal,
(case when D.CurrencyId=1 then 1. when D.Exchange is null then CE.Exchange else D.Exchange end)*(case when D.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then D.DiscountValue else 0 end) CrLocal,
D.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/D.Notes Notes,
'خصم' 'Rem',
0,'',0,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,

1,D.DiscountValue
from SalesMaster D 
left join CaseInvoices CI on(CI.InvoiceNo=D.CaseInvoiceNo)
left join @MyCurrencyExchange CE on(CE.CurrencyId=D.CurrencyId)
left join Stores St on(St.Id=D.StoreId)
where (Case when CaseInvoiceNo=0 then D.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and D.DiscountValue<>0
and @Detailed=1
and Temp=0
--and Temp2=1

union all

select D.Flag WindowId, 0 MyFlag,D.InvoiceNo,(Case when CaseInvoiceNo=0 then D.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
@SalesDiscountMainAccNo MyMainAccNo,
@SalesDiscountSubAccNo MySubAccNo,
(case when D.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then D.DiscountValue else 0 end) Db,
(case when D.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then D.DiscountValue else 0 end) Cr,
(case when D.CurrencyId=1 then 1. when D.Exchange is null then CE.Exchange else D.Exchange end)*(case when D.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then D.DiscountValue else 0 end) DbLocal,
(case when D.CurrencyId=1 then 1. when D.Exchange is null then CE.Exchange else D.Exchange end)*(case when D.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then D.DiscountValue else 0 end) CrLocal,
D.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/D.Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,'',0,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,

1,D.DiscountValue
from SalesMaster D 
left join CaseInvoices CI on(CI.InvoiceNo=D.CaseInvoiceNo)
left join SalesFlags SF on(D.Flag=SF.Id)
left join Stores St on(St.Id=D.StoreId)
left join @MyCurrencyExchange CE on(CE.CurrencyId=D.CurrencyId)
where (Case when CaseInvoiceNo=0 then D.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and D.DiscountValue<>0
--and @Detailed=1
and Temp=0
--and Temp2=1
and 1=2
--===========================================================================
union all

select D.Flag WindowId, 0 MyFlag,D.InvoiceNo,(Case when CaseInvoiceNo=0 then D.DayDate else CI.DayDate end)DayDate,
(case 
when D.Flag in(11,13,15,12,14,16,21,22,23,24,33,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when D.Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when D.Flag in(17,18) then 13
when D.Flag in(35,36) then 15
when D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case when D.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then Dt.Value else 0 end) Db,
(case when D.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then Dt.Value else 0 end) Cr,
(case when D.CurrencyId=1 then 1. when D.Exchange is null then CE.Exchange else D.Exchange end)*(case when D.Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) then Dt.Value else 0 end) DbLocal,
(case when D.CurrencyId=1 then 1. when D.Exchange is null then CE.Exchange else D.Exchange end)*(case when D.Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) then Dt.Value else 0 end) CrLocal,
D.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/d.Notes Notes,
dt.ItemName+' [الكمية: '+CAST(dt.Qty AS nvarchar(10))+']' 'Rem',
0,'',0,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,

Dt.Qty,Dt.Price
from SalesMaster D 
left join @MyCurrencyExchange CE on(CE.CurrencyId=D.CurrencyId)
left join CaseInvoices CI on(CI.InvoiceNo=D.CaseInvoiceNo)
left join SalesDetails Dt on(D.StoreId=dt.StoreId and D.Flag=dt.Flag and D.InvoiceNo=Dt.InvoiceNo )
left join Stores St on(St.Id=D.StoreId)
where (Case when CaseInvoiceNo=0 then D.DayDate else CI.DayDate end) between @FromDate and @ToDate 
--and Dt.Value<>0
and @Detailed=1
and Temp=0
--and Temp2=1
--===========================================================================
union all

select Flag WindowId, 0 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
(case 
when Flag in(11,13,15,12,14,16,21,22,23,24,33,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when Flag in(17,18) then 13
when Flag in(35,36) then 15
when Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
else 0
end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType1=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,35,38,48) and AccType1=1) then Val1 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType1=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType1=2) then Val1 else 0 end) Cr,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType1=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType1=1) then Val1 else 0 end) DbLocal,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType1=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType1=2) then Val1 else 0 end) CrLocal,
T.CurrencyId CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/T.Notes Notes,
CH.Name 'Rem',
0,'',0,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,T.InvoiceNo SalesMaster_InvoiceNo,

0 Qty,0 Price
from SalesMaster T
left join @MyCurrencyExchange CE on(CE.CurrencyId=T.CurrencyId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join chart Ch on(Ch.Id=AccNo1)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Val1<>0
and @Detailed=1
and Temp=0
--and Temp2=1
--===========================================================================
union all

select Flag WindowId, 0 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
(case 
when Flag in(11,13,15,12,14,16,21,22,23,33,24,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when Flag in(17,18) then 13
when Flag in(35,36) then 15
when Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
else 0
end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType2=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType2=1) then Val2 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType2=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType2=2) then Val2 else 0 end) Cr,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType2=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType2=1) then Val2 else 0 end) DbLocal,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType2=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType2=2) then Val2 else 0 end) CrLocal,
T.CurrencyId CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/T.Notes Notes,
CH.Name 'Rem',
0,'',0,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,T.InvoiceNo SalesMaster_InvoiceNo,

0 Qty,0 Price
from SalesMaster T
left join @MyCurrencyExchange CE on(CE.CurrencyId=T.CurrencyId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join chart Ch on(Ch.Id=AccNo2)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Val2<>0
and @Detailed=1
and Temp=0
--and Temp2=1
--===========================================================================
union all

select Flag WindowId, 0 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
(case 
when Flag in(11,13,15,12,14,16,21,22,23,24,33,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when Flag in(17,18) then 13
when Flag in(35,36) then 15
when Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
else 0
end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType3=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType3=1) then Val3 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType3=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType3=2) then Val3 else 0 end) Cr,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType3=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType3=1) then Val3 else 0 end) DbLocal,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType3=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType3=2) then Val3 else 0 end) CrLocal,
T.CurrencyId CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/T.Notes Notes,
CH.Name 'Rem',
0,'',0,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,T.InvoiceNo SalesMaster_InvoiceNo,

0 Qty,0 Price
from SalesMaster T
left join @MyCurrencyExchange CE on(CE.CurrencyId=T.CurrencyId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join chart Ch on(Ch.Id=AccNo3)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Val3<>0
and @Detailed=1
and Temp=0
--and Temp2=1
--===========================================================================
union all

select Flag WindowId, 0 MyFlag,T.InvoiceNo,(Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end)DayDate,
(case 
when Flag in(11,13,15,12,14,16,21,22,23,24,33,34) then (case when ReservToId=0 then 1 when ReservToId=1 then 2 end)
when Flag in(9,10,19,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end)
when Flag in(17,18) then 13
when Flag in(35,36) then 15
when Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0 then 13
else 0
end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType4=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType4=1) then Val4 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType4=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType4=2) then Val4 else 0 end) Cr,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType4=2) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType4=1) then Val4 else 0 end) DbLocal,
(case when T.CurrencyId=1 then 1. when T.Exchange is null then CE.Exchange else T.Exchange end)*(case when (Flag in(11,13,15,10,20,30,21,23,33,17,35,37,47) and AccType4=1) or (Flag in(12,14,16,9,19,29,22,24,34,18,36,38,48) and AccType4=2) then Val4 else 0 end) CrLocal,
T.CurrencyId CurrencyId,0 AnalysisId,0 CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/T.Notes Notes,
CH.Name 'Rem',
0,'',0,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,T.InvoiceNo SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster T
left join @MyCurrencyExchange CE on(CE.CurrencyId=T.CurrencyId)
left join CaseInvoices CI on(CI.InvoiceNo=T.CaseInvoiceNo)
left join chart Ch on(Ch.Id=AccNo4)
where (Case when CaseInvoiceNo=0 then T.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and Val4<>0
and @Detailed=1
and Temp=0
--and Temp2=1
--===========================================================================


--===========================================================================النقدى والفيزا

union all

select M.Flag WindowId, 0 MyFlag,InvoiceNo,DayDate,
(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) MyLinkFile,
'' MyMainAccNo,
ToId MySubAccNo,
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then 0 
when M.Flag in(12,14,16,22,24,34, 9,19,29) then (case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end)
else 0 end) Db,
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then (case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) 
when M.Flag in(12,14,16,22,24,34, 9,19,29) then 0
else 0 end) Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then 0 
when M.Flag in(12,14,16,22,24,34, 9,19,29) then (case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end)
else 0 end) DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then (case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) 
when M.Flag in(12,14,16,22,24,34, 9,19,29) then 0
else 0 end) CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
PT.Name+' - '+SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

SaveId ToId,
/*dbo.GetSalesItems(Flag,StoreId,InvoiceNo)*/'',
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join SalesPaymentTypes PT on(PT.Id=PaymentType)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=5 and AllSub.Id=SaveId)
where DayDate between @FromDate and @ToDate 
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0
--and Temp2=1
--****************
union all

select M.Flag WindowId, 0 MyFlag,InvoiceNo,DayDate,
5 MyLinkFile,
'' MyMainAccNo,
SaveId MySubAccNo,
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then (case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end) 
when M.Flag in(12,14,16,22,24,34, 9,19,29) then 0
else 0 end) Db,
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then 0
when M.Flag in(12,14,16,22,24,34, 9,19,29) then (case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
else 0 end) Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then (case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end) 
when M.Flag in(12,14,16,22,24,34, 9,19,29) then 0
else 0 end) DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then 0
when M.Flag in(12,14,16,22,24,34, 9,19,29) then (case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
else 0 end) CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
PT.Name+' - '+SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId,
/*dbo.GetSalesItems(Flag,StoreId,InvoiceNo)*/'',
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join SalesPaymentTypes PT on(PT.Id=PaymentType)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where DayDate between @FromDate and @ToDate 
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0
--and Temp2=1
--****************

union all

select M.Flag WindowId, 0 MyFlag,InvoiceNo,DayDate,
6 MyLinkFile,
'' MyMainAccNo,
BankId MySubAccNo,
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then (case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
when M.Flag in(12,14,16,22,24,34, 9,19,29) then 0
else 0 end) Db,
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then 0
when M.Flag in(12,14,16,22,24,34, 9,19,29) then (case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
else 0 end) Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then (case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
when M.Flag in(12,14,16,22,24,34, 9,19,29) then 0
else 0 end) DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*
(case 
when M.Flag in(11,13,15,21,23,33, 10,20,30) then 0
when M.Flag in(12,14,16,22,24,34, 9,19,29) then (case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
else 0 end) CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
PT.Name+' - '+SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId ,
/*dbo.GetSalesItems(Flag,StoreId,InvoiceNo)*/'',
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join SalesPaymentTypes PT on(PT.Id=PaymentType)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where DayDate between @FromDate and @ToDate 
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0
--and Temp2=1
--****************
--****************

--===========================================================================حساب المبيعات والمشتريات

union all

select M.Flag WindowId, 0 MyFlag,M.InvoiceNo,(Case when CaseInvoiceNo=0 then M.DayDate else CI.DayDate end)DayDate,
0 MyLinkFile,
AccNo MyMainAccNo,
0 MySubAccNo,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when M.Flag in(9,19,29,12,14,16,18,36,38,48,22,24,34) then M.Total-M.DiscountValue else 0 end) Db,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when M.Flag in(10,20,30,11,13,15,17,35,37,47,21,23,33) then M.Total-M.DiscountValue else 0 end) Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when M.Flag in(9,19,29,12,14,16,18,36,38,48,22,24,34) then M.Total-M.DiscountValue else 0 end) DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when M.Flag in(10,20,30,11,13,15,17,35,37,47,21,23,33) then M.Total-M.DiscountValue else 0 end) CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/M.Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,'',0,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,

0 Qty,0 Price
from SalesMaster M 
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join CaseInvoices CI on(CI.InvoiceNo=M.CaseInvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(St.Id=M.StoreId)
where (Case when CaseInvoiceNo=0 then M.DayDate else CI.DayDate end) between @FromDate and @ToDate 
and M.Flag in(9,10,29,30,	11,13,15,17,35,37,47,21,23,33,		12,14,16,18,36,38,48,	22,24,34)
and not(M.Flag in(37,38,47,48) and CaseInvoiceNo=0) 
and Temp=0
--and Temp2=1
--====================================================================================

--===========================================================================حسابات الخصم والإضافة
union all

select M.Flag WindowId, 1 MyFlag,M.InvoiceNo,M.DayDate,
0 MyLinkFile,
D.AccNo MyMainAccNo,
0 MySubAccNo,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType1=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*D.amount Db,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType1=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*D.amount Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType1=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*D.amount DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType1=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*D.amount CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join SalesDetailsTaxableItems D on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where M.DayDate between @FromDate and @ToDate 
and Temp=0
--and Temp2=1
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
--===========================================================================حسابات الخصم والإضافة
union all

select M.Flag WindowId, 1 MyFlag,M.InvoiceNo,M.DayDate,
0 MyLinkFile,
AccNo1 MyMainAccNo,
SubAccNo1 MySubAccNo,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType1=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val1 Db,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType1=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val1 Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType1=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val1 DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType1=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType1=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val1 CrLocal,
M.CurrencyId CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where M.DayDate between @FromDate and @ToDate 
and Temp=0
--and Temp2=1
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and Val1<>0
--****************
union all

select M.Flag WindowId, 1 MyFlag,M.InvoiceNo,M.DayDate,
0 MyLinkFile,
AccNo2 MyMainAccNo,
SubAccNo2 MySubAccNo,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType2=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType2=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val2 Db,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType2=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType2=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val2 Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType2=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType2=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val2 DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType2=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType2=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val2 CrLocal,
M.CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where M.DayDate between @FromDate and @ToDate 
and Temp=0
--and Temp2=1
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and Val2<>0
--****************
union all

select M.Flag WindowId, 1 MyFlag,M.InvoiceNo,M.DayDate,
0 MyLinkFile,
AccNo3 MyMainAccNo,
SubAccNo3 MySubAccNo,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType3=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType3=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val3 Db,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType3=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType3=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val3 Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType3=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType3=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val3 DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType3=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType3=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val3 CrLocal,
M.CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(St.Id=M.StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where M.DayDate between @FromDate and @ToDate 
and Temp=0
--and Temp2=1
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and Val3<>0
--****************
union all

select M.Flag WindowId, 1 MyFlag,M.InvoiceNo,M.DayDate,
0 MyLinkFile,
AccNo4 MyMainAccNo,
SubAccNo4 MySubAccNo,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType4=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType4=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val4 Db,
(case when M.CurrencyId=1 then 1. else CE.Exchange end)*(case when (AccType4=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType4=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val4 Cr,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType4=1 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType4=2 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val4 DbLocal,
(case when M.CurrencyId=1 then 1. when M.Exchange is null then CE.Exchange else M.Exchange end)*(case when (AccType4=2 and M.Flag in(11,13,15,21,23,33, 10,20,30)) or (AccType4=1 and M.Flag in(12,14,16,22,24,34, 9,19,29)) then 1. else 0 end)*Val4 CrLocal,
M.CurrencyId,0 AnalysisId,St.CostCenterId,0 CostCenterSubId,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+St.Name 'Rem',
0,

--dbo.GetMainAccNoLink((case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end),ToId),
AllSub.AccNo,

ToId,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,
0 Qty,0 Price
from SalesMaster M
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(St.Id=StoreId)
left join AllSub on(AllSub.LinkFile=(case when M.Flag in(9,19,10,20,29,30) then (case when ReservToId=0 then 2 when ReservToId=1 then 1 end) else (case when ReservToId=0 then 1 when ReservToId=1 then 2 end) end) and AllSub.Id=ToId)
where M.DayDate between @FromDate and @ToDate 
and Temp=0
--and Temp2=1
and M.Flag in(11,13,15,21,23,33, 12,14,16,22,24,34, 9,19,29, 10,20,30)
and Val4<>0
--****************
--****************

)Tbl
left join AllSub on(AllSub.LinkFile<>0 and AllSub.LinkFile=Tbl.MyLinkFile and AllSub.Id=Tbl.MySubAccNo)
left join AllSub AllSub2 on(AllSub2.LinkFile<>0 and AllSub2.LinkFile=Tbl.LinkFile and AllSub2.Id=Tbl.SubAccNo)
where MyFlag=0 or not(Cr=0 and Db=0)
)MainTbl
where (isnull(MyLinkFile,0)<>0 or MyMainAccNo<>'')
and (MyMainAccNo=@MyMainAccNo or @MyMainAccNo='' 
--or(MyMainAccNo=@YearProfitAccNo and @MyMainAccNo=@PrevYearProfitAccNo)
)
and (MySubAccNo=@MySubAccNo or @MySubAccNo=0)


 
	RETURN 
end
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_AllWindows]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_AllWindows]()
RETURNS @tbl table(Id int, Name nvarchar(1000))
--with encryption
AS
BEGIN
	
	insert @tbl 
	select id,Name from SalesFlags
	where id in(9,10,13,14,33,34)

	union all

	select 101,dbo.getEntryTblName()

	union all

	select 102,'المقبوضات'

	union all

	select 103,'المدفوعات'
	
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpBankCash_G2Types]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_EmpBankCash_G2Types]
(
@EmpId bigint
)
RETURNS @tbl table(Id int, Name nvarchar(1000),Permission bit,Flag int)
--with encryption
AS
BEGIN
	
	insert @tbl 
	select distinct EE.Id,EE.Name,cast((case when E.EmpId is null then 0 else 1 end) as bit) Permission,Flag
	from EmpBankCash_G2Types E right join Employees EE on(E.TypeId=EE.Id)
	where EmpId=@EmpId or exists(select Id from Employees where Id=@EmpId and Manager=1)
	
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpChart]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  function [dbo].[Fn_EmpChart]
(
@EmpId bigint
)
RETURNS @tbl table(Id bigint, Name nvarchar(1000),Permission bit,AccNo nvarchar(100),SubType int,LinkFile int)
--with encryption
AS
BEGIN
	declare @AllowEmpPermissionsCustomersForAllUsers int=(select top 1 AllowEmpPermissionsCustomersForAllUsers from Statics)
	
	insert @tbl 
	select distinct 
	T.Id,
	T.Name,
	cast((case when E.EmpId is null then 0 else 1 end) as bit) Permission ,
	T.MainAccId AccNo,
	T.SubType,
	T.LinkFile
	from EmpPermissions E
	right join Chart T on(E.Id=T.Id and E.LinkFile=0)
	where (
		--@LinkFile=0 or
		EmpId=@EmpId or 
		SubType=0 or
		exists(select Id from Employees where Id=@EmpId and Manager=1)
		)
	
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpPermissions]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_EmpPermissions]
(
@LinkFile bigint,
@EmpId bigint
)
RETURNS @tbl table(Id int, Name nvarchar(1000),Permission bit,AccNo nvarchar(100),SubType int,LinkFile int)
--with encryption
AS
BEGIN
	declare @AllowEmpPermissionsCustomersForAllUsers int=(select top 1 AllowEmpPermissionsCustomersForAllUsers from Statics)
	
	insert @tbl 
	select distinct 
	T.Id,
	T.Name,
	cast((case when E.EmpId is null then 0 else 1 end) as bit) Permission ,
	T.AccNo,
	1 SubType,
	T.LinkFile
	from EmpPermissions E
	right join AllSub T on(E.Id=T.Id and E.LinkFile=T.LinkFile)
	where T.LinkFile=@LinkFile
	and(
		@LinkFile=0 or
		EmpId=@EmpId or 
		(@LinkFile in(1,13,14,16) and @AllowEmpPermissionsCustomersForAllUsers=1)or 
		exists(select Id from Employees where Id=@EmpId and Manager=1)or 
		(@LinkFile=5 and exists(select DefaultSave from Employees where Id=@EmpId and DefaultSave=T.Id))or
		(@LinkFile=6 and exists(select DefaultBank from Employees where Id=@EmpId and DefaultBank=T.Id))
		)
	
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_EmpStores]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_EmpStores]
(
@EmpId bigint
)
RETURNS @tbl table(Id int, Name nvarchar(1000),Permission bit,Flag int)
--with encryption
AS
BEGIN
	
	insert @tbl 
	select distinct S.Id,S.Name,cast((case when E.EmpId is null then 0 else 1 end) as bit) Permission,Flag
	from EmpStores E right join Stores S on(E.StoreId=S.Id)
	where (EmpId=@EmpId or 
			exists(select Id from Employees where Id=@EmpId and Manager=1) or 
			exists(select DefaultStore from Employees where Id=@EmpId and DefaultStore=S.Id)
			)
	
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_ImportMessagesAllSub_StoreInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_ImportMessagesAllSub_StoreInvoiceNo]
(
@OrderTypeId int,
@ImportMessageId int,
@StoreId int,
@InvoiceNo int,
@IsMain int
)
returns float
--with encryption
as
begin

declare @DeliveredDate datetime
select @DeliveredDate=(case when IsDelivered=1 then DeliveredDate else GETDATE() end)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

return isnull((
select (case when @IsMain=1 then SUM(val5Main) else SUM(val5) end)
from
(

select 
val5Main=(Case when Flag=2 then -1. else 1. end)*MainValue2Ded,
val5=(Case when Flag=2 then -1. else 1. end)*Value2Ded
from BankCash_G2 T
where Canceled=0
and MainValue2Ded<>0
and T.DayDate<=@DeliveredDate
and StoreId=@StoreId
and StoreInvoiceNo=@InvoiceNo

union all

select 
val5Main=(-ED.Debit+ED.Credit),
val5=(-ED.Debit+ED.Credit)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and (ED.Debit-ED.Credit)<>0
and DayDate<=@DeliveredDate
and StoreId=@StoreId
and StoreInvoiceNo=@InvoiceNo

union all

select 
val5Main=Value1*(case when IsCost1=1 then 1. else -1. end),
val5=Value*(case when IsCost1=1 then 1. else -1. end)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and Value<>0
and DayDate<=@DeliveredDate
and StoreId=@StoreId
and StoreInvoiceNo=@InvoiceNo

)Tbl
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_ProfitRatioDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_ProfitRatioDetails]
(
@ToDate datetime
)
returns @tbl table(ItemId bigint,ItemName nvarchar(1000),TeacherPrifit float,CompanyPrifit float,TotalPrifit float,Barcode nvarchar(100))
--with encryption
as
begin

insert @tbl
select T.ItemId,T.ItemName,T.TeacherPrifit,T.CompanyPrifit,T.TotalPrifit,T.Barcode
from ProfitRatioDetails T
where exists
(
	select * from(
		select TT.ItemId,MAX(TT.DayDate)DayDate
		from ProfitRatioDetails TT
		where TT.DayDate<=@ToDate
		group by TT.ItemId
		)Tbl
		where Tbl.ItemId=T.ItemId
		and Tbl.DayDate=T.DayDate
)

return

end
GO
/****** Object:  UserDefinedFunction [dbo].[fn_RemoveTashkeel]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[fn_RemoveTashkeel] (@InputString nvarchar(2300) )

RETURNS nvarchar(2300) 

--with encryption
AS

BEGIN

 DECLARE @OutputString nvarchar(2300)

 SET @OutputString=@InputString

 SET @OutputString=REPLACE(@OutputString,'ْ','')
 SET @OutputString=REPLACE(@OutputString,'ْ','')
 SET @OutputString=REPLACE(@OutputString,'ْ','')
 SET @OutputString=REPLACE(@OutputString,'ْ','')
 SET @OutputString=REPLACE(@OutputString,'ْ','')
 SET @OutputString=REPLACE(@OutputString,'ٍ','')
 SET @OutputString=REPLACE(@OutputString,'ِ','')
 SET @OutputString=REPLACE(@OutputString,'ٌ','')
 SET @OutputString=REPLACE(@OutputString,'ُ','')
 SET @OutputString=REPLACE(@OutputString,'ً','')
 SET @OutputString=REPLACE(@OutputString,'','')
 SET @OutputString=REPLACE(@OutputString,'ّ','')


 RETURN(@OutputString)

END
GO
/****** Object:  UserDefinedFunction [dbo].[FnImportMessagesAllSub_StoreInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[FnImportMessagesAllSub_StoreInvoiceNo]
(
@StoreId int,
@InvoiceNo int,
@DeliveredDate datetime,
@Flag int
)
returns float
--with encryption
as
begin

return (
select (Case when @Flag=1 then val5Main else val5 end)
from(

	select 
	val5Main=(Case when Flag=2 then -1. else 1. end)*MainValue2Ded,
	val5=(Case when Flag=2 then -1. else 1. end)*Value2Ded
	from BankCash_G2 T
	where Canceled=0
	and MainValue2Ded<>0
	and T.DayDate<=@DeliveredDate
	and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
	and @StoreId=T.StoreId and @InvoiceNo=T.StoreInvoiceNo

	union all

	select 
	val5Main=(-ED.Debit+ED.Credit),
	val5=(-ED.Debit+ED.Credit)
	from EntryDt ED
	left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
	where ED.CostTypeId=0
	and (ED.Debit-ED.Credit)<>0
	and DayDate<=@DeliveredDate
	and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
	and @StoreId=ED.StoreId and @InvoiceNo=ED.StoreInvoiceNo

	union all

	select 
	val5Main=Value1,
	val5=Value*(case when IsCost1=1 then 1. else -1. end)
	from Entry2 T
	where Canceled=0
	and T.CostTypeId=0
	and Value<>0
	and DayDate<=@DeliveredDate
	and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
	and @StoreId=T.StoreId and @InvoiceNo=T.StoreInvoiceNo
)Tbl

)
end
GO
/****** Object:  UserDefinedFunction [dbo].[FnItemsSales]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[FnItemsSales]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@ItemId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0
)
returns float
--with encryption
as
begin

return
(
select sum(D.Value)
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (
		((M.Flag between 11 and 18 or M.Flag between 21 and 24 or M.Flag between 37 and 38 or M.Flag between 47 and 48) and @Flag=0)
	or 
		M.Flag=@Flag
	)
and (D.ItemId=@ItemId or @ItemId=0)
and M.Temp=1
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[fnSplitString]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[fnSplitString] 
( 
 @string NVARCHAR(MAX), 
 @delimiter CHAR(1) ,
 @Index bigint
) 
RETURNS nvarchar(max)
--with encryption
as
BEGIN 
declare @output TABLE(string NVARCHAR(MAX),Line bigint identity ) 
 DECLARE @start bigint, @end bigint 
 SELECT @start = 1, @end = CHARINDEX(@delimiter, @string) 
 WHILE @start < LEN(@string) + 1 BEGIN 
 IF @end = 0 
 SET @end = LEN(@string) + 1
 
 INSERT INTO @output (string) 
 VALUES(SUBSTRING(@string, @start, @end - @start)) 
 SET @start = @end + 1 
 SET @end = CHARINDEX(@delimiter, @string, @start)
 
 END 
 RETURN (select string from @output where Line=@Index)
END
GO
/****** Object:  UserDefinedFunction [dbo].[FnStoreIetmBal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[FnStoreIetmBal]
(
@StoreId int,
@ItemId int,
@ItemSerialNo nvarchar(100),
@ColorId int,
@SizeId int,
@UnitId int,
@ToDate datetime
)
returns float
--with encryption
as
begin

return isnull((
select (case when (case when @UnitId=1 then It.UnitCount when @UnitId=2 then It.UnitCount2 else 1. end)=0 then 0 else
	dbo.GetStoreItemBal(@StoreId,it.Id,@ItemSerialNo,@ColorId,@SizeId,@ToDate)/
	(case when @UnitId=1 then It.UnitCount when @UnitId=2 then It.UnitCount2 else 1. end)
end) CurrentBal
from Items It
where It.Id=@ItemId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[fu_EAN13CheckDigit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[fu_EAN13CheckDigit] (@Barcode varchar(12))																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																								-->>>><<><<<<<>>>>>>>>>>>>>>>>< <><><>												
RETURNS varchar(13)
--with encryption
as
BEGIN
DECLARE @SUM bigint ,
	@COUNTER bigint,
	@RETURN varchar(13),
	@Val1 bigint,
	@Val2 bigint	
SET @COUNTER = 1
SET @SUM = 0
WHILE @Counter < 13
BEGIN
	SET @VAL1 = SUBSTRING(@Barcode,@counter,1) * 1
	SET @VAL2 = SUBSTRING(@Barcode,@counter + 1,1) * 3
	SET @SUM = @VAL1 + @SUM	
	SET @SUM = @VAL2 + @SUM
	SET @Counter = @Counter + 2
END
SET @Counter = ROUND(@SUM + 5,-1)
SET @Return = @BARCODE + CONVERT(varchar,((@Counter - @SUM)))
RETURN @Return
END
GO
/****** Object:  UserDefinedFunction [dbo].[Get_Checksum]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Get_Checksum]
(
 @DatabaseName varchar(100),
 @TableName varchar(100)
)
RETURNS FLOAT
--with encryption
AS
BEGIN

 Declare @SQL nvarchar(4000)
 Declare @ColumnName varchar(100)
 Declare @i bigint
 Declare @Checksum float
 Declare @intColumns table (idRecord bigint identity(1,1), ColumnName varchar(255))
 Declare @CS table (MyCheckSum bigint)

 Set @SQL = 
 'Insert Into @IntColumns(ColumnName)' + Char(13) + 
 'Select Column_Name' + Char(13) +
 'From ' + @DatabaseName + '.Information_Schema.Columns (NOLOCK)' + Char(13) +
 'Where Table_Name = ''' + @TableName + '''' + Char(13) +
 ' and Data_Type = ''bigint''' 

 -- print @SQL

 exec sp_executeSql @SQL

 Set @SQL = 
 'Insert Into @CS(MyChecksum)' + Char(13) + 
 'Select '

 Set @i = 1

 While Exists(
 Select 1
 From @IntColumns
 Where IdRecord = @i)
 begin
 Select @ColumnName = ColumnName
 From @IntColumns
 Where IdRecord = @i

 Set @SQL = @SQL + Char(13) + 
 CASE WHEN @i = 1 THEN 
 ' Sum(Cast(IsNull(' + @ColumnName + ',0) as bigint))'
 ELSE
 ' + Sum(Cast(IsNull(' + @ColumnName + ',0) as bigint))'
 END

 Set @i = @i + 1
 end

 Set @SQL = @SQL + Char(13) + 
 'From ' + @DatabaseName + '..' + @TableName + ' (NOLOCK)'

 -- print @SQL

 exec sp_executeSql @SQL

 Set @Checksum = (Select Top 1 MyChecksum From @CS)

 Return isnull(@Checksum,0)

END
GO
/****** Object:  UserDefinedFunction [dbo].[GetAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAccName](@Id varchar(100))
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from chart where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAccNoLink]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[GetAccNoLink](@AccNo varchar(100))
returns bigint
--with encryption
AS
BEGIN
declare @Link bigint
select @Link=LinkFile from chart where Id=@AccNo
return isnull(@Link,0)
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetAccTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAccTypeName] (@Id bigint)returns nvarchar(100)
as
begin
return isnull((select Name from AccTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAge]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAge]
( 
 @DateOfBirth datetime, 
 @CompareDate datetime
) 
RETURNS nvarchar(100)
--with encryption
as
BEGIN 

 RETURN 
	cast(cast((DATEdiff(DD,@DateOfBirth,@CompareDate)-DATEdiff(DD,@DateOfBirth,@CompareDate)%365.25)/365.25 as int) as nvarchar(100))+' year(s), '+
	cast(cast((DATEdiff(MM,@DateOfBirth,@CompareDate)%12) as int)-(Case when DATEpart(DD,@DateOfBirth)>DATEpart(DD,@CompareDate) then 1 else 0 end) as nvarchar(100))+' month(s), '+
	cast(DATEpart(DD,@CompareDate)-DATEpart(DD,@DateOfBirth)+(Case when DATEpart(DD,@DateOfBirth)>DATEpart(DD,@CompareDate) then 30 else 0 end) as nvarchar(100))+' day(s)'
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAllApplyCurrencyCycle](@Id bigint,@LinkFile int)
returns int
--with encryption
as begin

declare @Val float

select @Val=
ISNULL((select sum(ApplyCurrencyCycle) from AllSub where Id=@Id and LinkFile=@LinkFile),0)

return isnull(@Val,0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllApplyCurrencyCycleAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAllApplyCurrencyCycleAccNo](@Id bigint,@AccNo nvarchar(100))
returns int
--with encryption
as begin

declare @Val float

select @Val=
ISNULL((select sum(ApplyCurrencyCycle) from AllSub where Id=@Id and AccNo=@AccNo),0)

return isnull(@Val,0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAllCurrencyId](@Id bigint,@LinkFile int)
returns int
--with encryption
as begin

declare @Val float

select @Val=(select max(CurrencyId) from AllSub where Id=@Id and LinkFile=@LinkFile)
return isnull(@Val,0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetALlNormalValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetALlNormalValue]( @TestId bigint,@SubTestId bigint,@Id bigint)
returns nvarchar(max)
--with encryption
as
begin

declare @str nvarchar(max)=''
declare @tbl table(Normalvalue varchar(1000),Line bigint identity(1,1))
insert @tbl 
select Normalvalue from LabTestItemsNormalValues
where TestId=@TestId and SubTestId=@SubTestId and Id=@Id

declare @x bigint=1,@max bigint=(select COUNT(*) from @tbl)
while @x<=@max
begin
select @str+=Normalvalue from @tbl where Line=@x
if @x<@max
set @str+='
'
set @x+=1
end


return @str

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAllSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAllSubAccNo]() 
returns @tbl table(Id bigint,Name nvarchar(1000),Bal0 float,MainBal0 float,LinkFile int,AccNo bigint) 
--with encryption 
AS 
BEGIN 
 
insert @tbl 
select Id,Name,Bal0,MainBal0,LinkFile,AccNo from AllSub
 
RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetAnalysisName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAnalysisName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Analysis where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAppartementState]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAppartementState]
(@AppartementId varchar(100))
returns bigint
--with encryption
as
begin

declare @State bigint=1

if exists(Select *From AppartementsSales where Id=@AppartementId)
select @State=2

if exists(Select *From AppartementInstallmentsDt where AppartementId=@AppartementId)
select @State=3

if exists(
	Select *From AppartementInstallments 
	where AppartementId=@AppartementId 
	and DueDate<cast(GETDATE()as date)
	and not 
	exists(
		Select *From AppartementInstallmentsDt 
		where AppartementId=@AppartementId 
		and Id=AppartementInstallments.Id
			)
		)
select @State=4


declare @val float=0,@val1 float=0,@val2 float=0
Select @val=isnull(sum(Value),0)From AppartementInstallmentsDt where AppartementId=@AppartementId


Select @val1=isnull(Payed+Payed2,0) From AppartementsSales where Id=@AppartementId
Select @val2=isnull(sum(Value),0) From AppartementInstallments where AppartementId=@AppartementId

if @val>=@val1+@val2 and @State>1
select @State=5

return isnull(@State,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAreaName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetAreaName](@CountryId bigint,@CityId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Areas where CountryId=@CountryId and CityId=@CityId and Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetArMonthName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetArMonthName](@i int)
returns nvarchar(1000)
--with encryption
as
begin
return(
select case @i
when 1 then 'يناير'
when 2 then 'فبراير'
when 3 then 'مارس'
when 4 then 'إبريل'
when 5 then 'مايو'
when 6 then 'يونيه'
when 7 then 'يوليو'
when 8 then 'أغسطس'
when 9 then 'سبتمبر'
when 10 then 'أكتوبر'
when 11 then 'نوفمبر'
when 12 then 'ديسمبر'
else '-' end
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[getAttendanceHours]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[getAttendanceHours](
@ConferenceId bigint,
@CustomerId bigint
)
returns float
as
begin
if (select IsCalc from Conferences where Id=@ConferenceId)=0
	return (select AttendanceHours from Conferences where Id=@ConferenceId)

return isnull((
select sum(Period)/60. PeriodInHours
from(
select T.ConferenceId,CustomerId,
datediff(minute,DayDate,
(
select isnull(min(TT.DayDate),20) 
from PL_CheckInOut TT
where TT.ConferenceId=T.ConferenceId  
and TT.CustomerId=T.CustomerId
and TT.Flag=2  
and TT.DayDate>T.DayDate  
and cast(TT.DayDate as DATE)=cast(T.DayDate as date)
))Period
from PL_CheckInOut T
where T.ConferenceId=@ConferenceId
and T.CustomerId=@CustomerId
and (T.Flag=1 or T.Flag is null)
)Tbl
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBal0]
(
@MainAccNo varchar(100),@SubAccNo bigint
)
returns float
--with encryption
as
begin
declare @Val float

select @Val=ISNULL(sum(MainBal0),0)
from
(
select MainBal0 from AllSub where AccNo=@MainAccNo and (Id=@SubAccNo or @SubAccNo=0) 
)Tbl

return isnull(@Val,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBankAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBankAccNo](@Id bigint)
returns varchar(100)
--with encryption
as begin

return isnull((select AccNo from Banks where Id=@Id),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBankCash_G2TypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBankCash_G2TypeName](@Flag bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from BankCash_G2Types where Flag=@Flag and Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBankCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBankCurrencyId](@Id bigint)
returns int
--with encryption
as begin

return isnull((select CurrencyId from Banks where Id=@Id),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBanksApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBanksApplyCurrencyCycle](@Id bigint)
returns int
--with encryption
as begin

return isnull((select ApplyCurrencyCycle from Banks where Id=@Id),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBranchCity]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBranchCity](@Branch bigint)
returns bigint
--with encryption
as
begin
return(select CityID from Branches where Id=@Branch)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetBrokerCoName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetBrokerCoName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from BrokerCos where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCalcImportMessageCostInvoices]
(
@OrderTypeId int,
@ImportMessageId int
)
returns float
--with encryption
as
begin


declare @DeliveredDate datetime
select @DeliveredDate=DeliveredDate
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId



declare
@val float

--إجمالى العقود المفتوحة ع الطلبية
select @val=isnull(sum(TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesMaster T
where Flag in(19)
and Temp=0
and OrderTypeId=@OrderTypeId
and T.DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
)

select @val-=isnull(sum(TT.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesDetails TT
left join SalesMaster T on(T.StoreId=TT.StoreId and T.Flag=TT.Flag and T.InvoiceNo=TT.InvoiceNo)
where T.Flag in(20)
and Temp=0
and OrderTypeId=@OrderTypeId
and T.DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=TT.SalesInvoiceNo
)
select @val+=isnull(sum((Case when Flag=2 then -1. else 1. end)*Value2Ded),0)
from BankCash_G2 T
where Canceled=0
and T.DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
			)

select @val+=isnull(sum(-ED.Debit+ED.Credit),0)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=ED.StoreId and DD.InvoiceNo=ED.StoreInvoiceNo
			)


select @val+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
			)


return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCalcImportMessageCostVal4]
(
@StoreId int,
@InvoiceNo int,
@DeliveredDate datetime
)
returns float
--with encryption
as
begin


declare
@val4 float

--قيمة عقد
select @val4=isnull(sum(TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesMaster T
where Flag in(19)
and Temp=0
and DayDate<=@DeliveredDate
and T.StoreId=@StoreId and T.InvoiceNo=@InvoiceNo
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
)

select @val4-=isnull(sum(TT.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesDetails TT
left join SalesMaster T on(T.StoreId=TT.StoreId and T.Flag=TT.Flag and T.InvoiceNo=TT.InvoiceNo)
where T.Flag in(20)
and Temp=0
and T.DayDate<=@DeliveredDate
and T.StoreId=@StoreId and TT.SalesInvoiceNo=@InvoiceNo
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.DayDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=TT.SalesInvoiceNo
)
select @val4+=isnull(sum((Case when Flag=2 then -1. else 1. end)*Value2Ded),0)
from BankCash_G2 T
where Canceled=0
and T.DayDate<=@DeliveredDate
and StoreId=@StoreId and StoreInvoiceNo=@InvoiceNo

select @val4+=isnull(sum(-ED.Debit+ED.Credit),0)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and DayDate<=@DeliveredDate
and StoreId=@StoreId and StoreInvoiceNo=@InvoiceNo

select @val4+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and DayDate<=@DeliveredDate
and StoreId=@StoreId and StoreInvoiceNo=@InvoiceNo


return @val4
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal5]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCalcImportMessageCostVal5]
(
@OrderTypeId int,
@ImportMessageId int,
@DeliveredDate datetime
)
returns float
--with encryption
as
begin

declare
@val5 float

--إجمالى عقود الرسالة
select @val5=isnull(sum(TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesMaster T
where Flag in(19)
and Temp=0
and DayDate<=@DeliveredDate
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
and DD.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
)
select @val5-=isnull(sum(TT.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesDetails TT
left join SalesMaster T on(T.StoreId=TT.StoreId and T.Flag=TT.Flag and T.InvoiceNo=TT.InvoiceNo)
where T.Flag in(20)
and Temp=0
and T.DayDate<=@DeliveredDate
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
and DD.StoreId=T.StoreId and DD.InvoiceNo=TT.SalesInvoiceNo
)
select @val5+=isnull(sum((Case when Flag=2 then -1. else 1. end)*Value2Ded),0)
from BankCash_G2 T
where Canceled=0
and T.DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)

select @val5+=isnull(sum(-ED.Debit+ED.Credit),0)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(ED.PurchaseAccNo=@OrderTypeId and ED.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=ED.StoreId and DD.InvoiceNo=ED.StoreInvoiceNo
	)
	)


select @val5+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)


return @val5
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal6]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCalcImportMessageCostVal6]
(
@OrderTypeId int,
@ImportMessageId int,
@DeliveredDate datetime
)
returns float
--with encryption
as
begin




--الرسائل والعقود المفتوحة على نفس الطلبية
declare @TblImportMessages table(OrderTypeId int,ImportMessageId int,StoreId int,StoreInvoiceNo int,val5 float,Cost_OrderTypeId_Perc float,Line int identity(1,1))
insert @TblImportMessages
select OrderTypeId,Id,StoreId,StoreInvoiceNo,val5,0
from
(
	select OrderTypeId,Id,0 StoreId,0 StoreInvoiceNo,dbo.GetCalcImportMessageCostVal5(OrderTypeId,Id,@DeliveredDate)val5
	from ImportMessages
	where OrderTypeId=@OrderTypeId
	and (
		Id=@ImportMessageId or 
		((IsDelivered=0 or (IsDelivered=1 and DeliveredDate>@DeliveredDate)) and DayDate<=@DeliveredDate)
		)
	union all
	select @OrderTypeId,0,StoreId,InvoiceNo,dbo.GetCalcImportMessageCostVal4(T.StoreId,T.InvoiceNo,@DeliveredDate)val5
	from SalesMaster T
	where Flag in(19)
	and Temp=0
	and DayDate<=@DeliveredDate
	--and @DeliveredDate<='2015-12-31'
	and OrderTypeId=@OrderTypeId
	--and @ImportMessageId=0--آخر العام:)
	and not exists(
				select D.StoreId from ImportMessages D
				left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
				where D.DayDate<=@DeliveredDate
				and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
				)
)Tbl

return (select SUM(val5)from @TblImportMessages)



--======================================================

--declare
--@val6 float

----إجمالى عقود الطلبية
--select @val6=isnull(sum(TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
--from SalesMaster T
--where Flag in(19)
--and Temp=0
--and OrderTypeId=@OrderTypeId
--and DayDate<=@DeliveredDate
--and not exists(
--			select D.StoreId from ImportMessages D
--			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--			where D.OrderTypeId=@OrderTypeId and D.Id<>@ImportMessageId 
--			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
--			and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
--)

--select @val6-=isnull(sum(TT.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
--from SalesDetails TT
--left join SalesMaster T on(T.StoreId=TT.StoreId and T.Flag=TT.Flag and T.InvoiceNo=TT.InvoiceNo)
--where T.Flag in(20)
--and Temp=0
--and OrderTypeId=@OrderTypeId
--and T.DayDate<=@DeliveredDate
--and not exists(
--			select D.StoreId from ImportMessages D
--			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--			where D.OrderTypeId=@OrderTypeId and D.Id<>@ImportMessageId 
--			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
--			and D.StoreId=T.StoreId and DD.InvoiceNo=TT.SalesInvoiceNo
--)
--select @val6+=isnull(sum((Case when Flag=2 then -1. else 1. end)*Value2Ded),0)
--from BankCash_G2 T
--where Canceled=0
--and T.DayDate<=@DeliveredDate
--and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
--and (
--			(
--				PurchaseAccNo=@OrderTypeId
--				and exists(
--							select D.StoreId from ImportMessages D
--							left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--							where D.OrderTypeId=T.PurchaseAccNo and D.Id=T.ImportMessageId 
--							and (D.Id=@ImportMessageId or D.IsDelivered=0 or D.DeliveredDate>@DeliveredDate)
--							)
--			)
--	or exists(
--			select D.StoreId from ImportMessages D
--			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--			where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
--			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
--			and D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
--			)
--	)
--select @val6+=isnull(sum(-ED.Debit+ED.Credit),0)
--from EntryDt ED
--left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
--where ED.CostTypeId=0
--and DayDate<=@DeliveredDate
--and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
--and (
--			(
--				PurchaseAccNo=@OrderTypeId
--				and exists(
--							select D.StoreId from ImportMessages D
--							left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--							where D.OrderTypeId=ED.PurchaseAccNo and D.Id=ED.ImportMessageId 
--							and (D.Id=@ImportMessageId or D.IsDelivered=0 or D.DeliveredDate>@DeliveredDate)
--							)
--			)
--	or exists(
--			select D.StoreId from ImportMessages D
--			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--			where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
--			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
--			and D.StoreId=ED.StoreId and DD.InvoiceNo=ED.StoreInvoiceNo
--			)
--	)



--select @val6+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0)
--from Entry2 T
--where Canceled=0
--and T.CostTypeId=0
--and DayDate<=@DeliveredDate
--and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
--and (
--			(
--				PurchaseAccNo=@OrderTypeId
--				and exists(
--							select D.StoreId from ImportMessages D
--							left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--							where D.OrderTypeId=T.PurchaseAccNo and D.Id=T.ImportMessageId 
--							and (D.Id=@ImportMessageId or D.IsDelivered=0 or D.DeliveredDate>@DeliveredDate)
--							)
--			)
--	or exists(
--			select D.StoreId from ImportMessages D
--			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
--			where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
--			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
--			and D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
--			)
--	)


--return @val6
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalcImportMessageCostVal7]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCalcImportMessageCostVal7]
(
@OrderTypeId int,
@ImportMessageId int,
@DeliveredDate datetime
)
returns float
--with encryption
as
begin

declare
@val7 float

--إجمالى جميع العقود
select @val7=isnull(sum(TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesMaster T
where Flag in(19)
and Temp=0
and DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where not(D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId)
			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
)
select @val7-=isnull(sum(TT.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)),0)
from SalesDetails TT
left join SalesMaster T on(T.StoreId=TT.StoreId and T.Flag=TT.Flag and T.InvoiceNo=TT.InvoiceNo)
where T.Flag in(20)
and Temp=0
and T.DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where not(D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId)
			and D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=TT.SalesInvoiceNo
)
select @val7+=isnull(sum((Case when Flag=2 then -1. else 1. end)*Value2Ded),0)
from BankCash_G2 T
where Canceled=0
and T.DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)

select @val7+=isnull(sum(-ED.Debit+ED.Credit),0)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)

select @val7+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)

return @val7
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCase2TotalValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCase2TotalValue]
(@CaseId int,
@Month int,
@Year int
)
returns float
--with encryption
as
begin

return
isnull((
select COUNT(distinct YEAR(K.DayDate)*12+month(K.DayDate))*(C.DoseValue)
from Cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where isnull(C.Stopped,0)=0
--and K.CasePaymentTypeId=1
and K.CaseId=@CaseId
and K.MM=@Month 
and K.YY=@Year
group by C.DoseValue
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseAccNo](@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return(select AccNo from Cases where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseArName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseArName](@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return(select Name from Cases where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseCompanyId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseCompanyId](@CaseId bigint) returns bigint
--with encryption
as
begin
return isnull((
select CompanyId from Cases where Id=@CaseId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseEnName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseEnName](@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return(select EnName from Cases where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseExitGetDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseExitGetDate](@CaseId int,@EntryDate datetime)
returns datetime
as
begin

return
(
select min(MyGetDate) from CaseStatus
where InOut=2
and CaseId=@CaseId
and MyGetDate>=@EntryDate
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseIdFromReservationsClinics]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseIdFromReservationsClinics](
@ClinicId int,
@DayDate datetime,
@ReservId int
)
Returns int
--with encryption
as
begin
return isnull((
select CaseId from ReservationsClinics
where ClinicId=@ClinicId and DayDate=@DayDate and ReservId=@ReservId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseIdFromReservationsOperations]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseIdFromReservationsOperations](
@OperationsRoomId int,
@DayDate datetime,
@ReservId int
)
Returns int
--with encryption
as
begin
return isnull((
select CaseId from ReservationsOperations
where OperationsRoomId=@OperationsRoomId and DayDate=@DayDate and ReservId=@ReservId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseIdFromReservationsRooms]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseIdFromReservationsRooms](
@RoomId int,
@DayDate datetime,
@ReservId int
)
Returns int
--with encryption
as
begin
return isnull((
select CaseId from RoomsData
where RoomId=@RoomId and IsCurrent=1 and Id=@ReservId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseInvoicesDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseInvoicesDate](@CaseInvoiceNo bigint)
returns datetime
--with encryption
as
begin
return(select DayDate from CaseInvoices where InvoiceNo=@CaseInvoiceNo)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseOutcomeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseOutcomeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from CaseOutcome where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseStatus]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseStatus](@CaseId int) returns int
--with encryption
as
begin
return isnull((
select top 1 InOut 
from CaseStatus 
where CaseId=@CaseId 
order by MyGetDate desc
),1)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCaseTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCaseTypeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from CaseTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckBankName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCheckBankName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from CheckBanks where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckPartialCollected]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCheckPartialCollected](@CheckNo nvarchar(100),@CheckTypeId int,@DayDate datetime)
returns float
--with encryption
as
begin
return isnull((
select top 1 MainValue
from BankCash_G2
where CheckNo=@CheckNo
and @CheckTypeId in(4,9,10)
and CheckTypeId in(2,3)

and not exists(
				select T.CheckNo from BankCash_G2 T
				where T.CheckNo=@CheckNo
				and (
					(T.DayDate<=@DayDate and T.CheckTypeId=7) or
					(T.DayDate<@DayDate and T.CheckTypeId in(4,9,10))
					)
				)
order by DayDate,CheckTypeId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckPartialCollectedLocal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCheckPartialCollectedLocal](@CheckNo nvarchar(100),@CheckTypeId int,@DayDate datetime)
returns float
--with encryption
as
begin
return isnull((
select top 1 Value
from BankCash_G2
where CheckNo=@CheckNo
and @CheckTypeId in(4,9,10)
and CheckTypeId in(2,3)

and not exists(
				select T.CheckNo from BankCash_G2 T
				where T.CheckNo=@CheckNo
				and (
					(T.DayDate<=@DayDate and T.CheckTypeId=7) or
					(T.DayDate<@DayDate and T.CheckTypeId in(4,9,10))
					)
				)
order by DayDate,CheckTypeId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckReturnCount]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCheckReturnCount]
(
@LinkFile int=0,
@AccNo bigint=0,
@FromDate datetime,
@ToDate datetime
)
returns float
--with encryption
as
begin
return isnull((

select count(CheckNo)
from BankCash_G2
where DayDate between @FromDate and @ToDate
and CheckTypeId<>1
and CheckTypeId=7
and 
	(
	(MainLinkFile=@LinkFile and BankId=@AccNo)or
	(LinkFile=@LinkFile and SubAccNo=@AccNo)
	)
	

),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckSum]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE function [dbo].[GetCheckSum]
(
@LinkFile int=0,
@AccNo bigint=0,
@Type int,
@ToDate datetime
)
returns float
--with encryption
as
begin
return isnull((

select sum(isnull(Tbl.المبلغ,0)-isnull(Tbl3.المدفوع,0))
from 
(
select CheckNo,dbo.ToStrDate(DayDate) 'تاريخ التسجيل',dbo.ToStrDate(CheckDate) 'تاريخ الاستحقاق',
(Case when Flag=2 then dbo.GetSubAccNameLink(MainLinkFile,BankId) else dbo.GetSubAccNameLink(LinkFile,SubAccNo) end)'الجهة',
ROW_NUMBER()over(partition by CheckNo Order by Daydate) ROWNUMBER,
MainValue 'المبلغ',
dbo.GetCurrencyName(CurrencyId)CurrencyName,
MainLinkFile,BankId,
LinkFile,SubAccNo
from BankCash_G2
where CheckTypeId<>1
and DayDate<=@ToDate
AND Canceled=0
and(
	(CheckTypeId in(2,3) and @Type=1 and CheckNo not in(select T.CheckNo from BankCash_G2 T where T.CheckTypeId=4 and T.DayDate<=@ToDate))or
	(CheckTypeId in(2,3) and @Type=2 and CheckNo	 in(select T.CheckNo from BankCash_G2 T where T.CheckTypeId=4 and T.DayDate<=@ToDate))or
	(CheckTypeId in(11) and @Type=3)
	)
)Tbl
left join
(
select CheckNo CheckNo2,ROW_NUMBER()over(partition by CheckNo Order by Daydate desc) ROWNUMBER2,
cast((Case when Flag=1 then MainLinkFile else LinkFile end)as nvarchar(100))LinkFile2,
(Case when Flag=1 then dbo.GetLinkFileName(MainLinkFile) else dbo.GetLinkFileName(LinkFile) end)LinkFileName2,
cast((Case when Flag=1 then BankId else SubAccNo end)as nvarchar(100))AccNo2,
(Case when Flag=1 then dbo.GetSubAccNameLink(MainLinkFile,BankId) else dbo.GetSubAccNameLink(LinkFile,SubAccNo) end)AccName2,
dbo.GetCheckTypeName(CheckTypeId) 'حالة الشيك'
from BankCash_G2
where CheckTypeId<>1
and DayDate<=@ToDate
AND Canceled=0
and(
	(@Type=1 and CheckNo not in(select T.CheckNo from BankCash_G2 T where T.CheckTypeId=4 and T.DayDate<=@ToDate))or
	(@Type=2 and CheckNo	 in(select T.CheckNo from BankCash_G2 T where T.CheckTypeId=4 and T.DayDate<=@ToDate))or
	(@Type=3)
	)
)Tbl2 on(Tbl.CheckNo=Tbl2.CheckNo2)
left join
(
select CheckNo CheckNo3,
sum(Case when Flag=1 then MainValue else /*-*/MainValue end)'المدفوع'
from BankCash_G2
where CheckTypeId<>1 
and DayDate<=@ToDate
AND Canceled=0
and CheckTypeId in(4,5,6,7,8,9,10)
and(
	(@Type=1 and CheckNo not in(select T.CheckNo from BankCash_G2 T where T.CheckTypeId=4 and T.DayDate<=@ToDate))or
	(@Type=2 and CheckNo	 in(select T.CheckNo from BankCash_G2 T where T.CheckTypeId=4 and T.DayDate<=@ToDate))or
	(@Type=3)
	)
group by CheckNo
)Tbl3 on(Tbl.CheckNo=Tbl3.CheckNo3)
where Tbl.ROWNUMBER=1 and Tbl2.ROWNUMBER2=1
and @LinkFile in(1,2,3,4)
and 
	(
	(Tbl2.LinkFile2=@LinkFile and Tbl2.AccNo2=@AccNo)or
	(Tbl.MainLinkFile=@LinkFile and Tbl.BankId=@AccNo)or
	(Tbl.LinkFile=@LinkFile and Tbl.SubAccNo=@AccNo)
	)
	

),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCheckTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCheckTypeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from CheckTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCityName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCityName](@CountryId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Cities where CountryId=@CountryId and Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetClinicName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetClinicName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from Clinics where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetColorsDetailsName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetColorsDetailsName]
(
@ColorId bigint,
@Id bigint
)
returns varchar(1000)
--with encryption
as
begin
return isnull((select Name from ColorsDetails where ColorId=@ColorId and Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompaniesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCompaniesName](@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return isnull((select Name from Companies where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompanyName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCompanyName]() returns nvarchar(1000)
--with encryption
as
begin
return isnull((select CompanyName from Statics),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompanyName1]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCompanyName1](@Id int) returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Companies where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCompanyName2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCompanyName2](@Id int) returns nvarchar(1000)
--with encryption
as
begin
return(select Name2 from Companies where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetContactGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetContactGroupName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from ContactGroups where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetContactTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetContactTypeName](@ContactGroupId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from ContactTypes where ContactGroupId=@ContactGroupId and Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetContainerSizeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetContainerSizeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from ContainerSizes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostCenterName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCostCenterName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from CostCenters where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostCenterSubName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCostCenterSubName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from CostCenterSubs where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCostPrice](@MainItemId bigint)
returns float
--with encryption
as
begin
return(
isnull(
(select sum(dbo.GetItemPurchasePrice(ItemId)*Qty) from ItemComponants where MainItemId=@MainItemId)
,
(select dbo.GetItemPurchasePrice(@MainItemId))
)
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCostTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCostTypeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from CostTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCountryName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCountryName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from Countries where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCreditsApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCreditsApplyCurrencyCycle](@Id bigint)
returns int
--with encryption
as begin

return isnull((select ApplyCurrencyCycle from Credits where Id=@Id),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyExchange]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCurrencyExchange](@Id bigint,@LinkFile int,@CurrencyId bigint,@ApplyCurrencyCycle int,@DayDate datetime)
returns float
--with encryption
as
begin

if isnull(@CurrencyId,1)=1
return 1.

set @DayDate=cast(@DayDate as date)

if @ApplyCurrencyCycle in(0,3) select @ApplyCurrencyCycle=dbo.GetAllApplyCurrencyCycle(@Id,@LinkFile)
if @ApplyCurrencyCycle in(0,3) select @ApplyCurrencyCycle=1

declare @MainAccNo nvarchar(100)=dbo.GetMainAccNoLink(@LinkFile,@Id)


if exists(select * from CurrencyExchangeByDate where CurrencyId=@CurrencyId and DayDate=@DayDate)
return (select top 1 Exchange from CurrencyExchangeByDate where CurrencyId=@CurrencyId and DayDate=@DayDate)

if exists(select * from CurrencyExchangeByDateTemp where CurrencyId=@CurrencyId and DayDate=@DayDate)
return (select top 1 Exchange from CurrencyExchangeByDateTemp where CurrencyId=@CurrencyId and DayDate=@DayDate)



return isnull((
select Case when round(SUM(MainVal),3)=0 then 0 else SUM(Val)/SUM(MainVal) end
from
(
select sum( Bal0) Val,sum( MainBal0) MainVal from AllSub	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and LinkFile=@LinkFile)) union all

select 
(Case when Flag=1 then Value else -Value end) Value,
(Case when Flag=1 then MainValue else -MainValue end) MainValue
from BankCash_G2 T
left join AllSub on(AllSub.Id=T.BankId and AllSub.LinkFile=T.MainLinkFile)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and BankId=@Id and MainLinkFile=@LinkFile)
	)

union all

select 
(Case when Flag=1 then -Value else Value end) Value,
(Case when Flag=1 then -MainValue2 else MainValue2 end) MainValue2
from BankCash_G2 T
left join AllSub on(AllSub.Id=T.SubAccNo and AllSub.LinkFile=T.LinkFile)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo=@Id and T.LinkFile=@LinkFile)
	)

union all

select 
-Value,
-MainValue
from BankCash_G3 T
left join AllSub on(AllSub.Id=T.FromSubAccNo and AllSub.LinkFile=T.FromLinkFile)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and FromSubAccNo=@Id and FromLinkFile=@LinkFile)
	)

union all

select 
Value,
MainValue
from BankCash_G3 T
left join AllSub on(AllSub.Id=T.ToSubAccNo and AllSub.LinkFile=T.ToLinkFile)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and ToSubAccNo=@Id and ToLinkFile=@LinkFile)
	)


union all

select 
(Case when Flag=1 then Value else -Value end),
(Case when Flag=1 then Qty else -Qty end)
from BankCash4 T
left join AllSub on(AllSub.Id=T.BankId and AllSub.LinkFile=5)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and T.CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and BankId=@Id and 5=@LinkFile)
	)

union all

select 
Value,
Value1
from Entry2 T
left join AllSub on(AllSub.Id=T.SubAccNo1 and AllSub.AccNo=MainAccNo1)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and CurrencyId1=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and CurrencyId1=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo1=@Id and MainAccNo1=@MainAccNo and SubAccNo1<>0)
	)

union all

select 
-Value,
-Value2
from Entry2 T
left join AllSub on(AllSub.Id=T.SubAccNo2 and AllSub.AccNo=MainAccNo2)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and AllSub.ApplyCurrencyCycle<>0 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and AllSub.ApplyCurrencyCycle=1 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo2=@Id and MainAccNo2=@MainAccNo and SubAccNo2<>0)
	)

)tbl
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyExchangeMain]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCurrencyExchangeMain](@CurrencyId bigint,@DayDate datetime)
returns float
--with encryption
as
begin

if isnull(@CurrencyId,1)=1
return 1.

set @DayDate=cast(@DayDate as date)

return (select top 1 Exchange from CurrencyExchangeByDate where CurrencyId=@CurrencyId and DayDate<=@DayDate order by DayDate desc)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyExchangeTest]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCurrencyExchangeTest](@Id bigint,@LinkFile int,@CurrencyId bigint,@ApplyCurrencyCycle int,@DayDate datetime)
returns float
--with encryption
as
begin

if isnull(@CurrencyId,1)=1
return 1.

set @DayDate=cast(@DayDate as date)

if @ApplyCurrencyCycle in(0,3) select @ApplyCurrencyCycle=dbo.GetAllApplyCurrencyCycle(@Id,@LinkFile)
if @ApplyCurrencyCycle in(0,3) select @ApplyCurrencyCycle=1

declare @MainAccNo nvarchar(100)=dbo.GetMainAccNoLink(@LinkFile,@Id)


if exists(select * from CurrencyExchangeByDate where CurrencyId=@CurrencyId and DayDate=@DayDate)
return (select Exchange from CurrencyExchangeByDate where CurrencyId=@CurrencyId and DayDate=@DayDate)



return isnull((
select Case when round(SUM(MainVal),3)=0 then 0 else SUM(Val)/SUM(MainVal) end
from
(
select sum( Bal0) Val,sum( MainBal0) MainVal from Customers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 1=@LinkFile)) union all
select sum(-Bal0) Val,sum(-MainBal0) MainVal from Suppliers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 2=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Debits			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 3=@LinkFile)) union all
select sum(-Bal0) Val,sum(-MainBal0) MainVal from Credits			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 4=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Saves			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 5=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Banks			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 6=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Sellers			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 7=@LinkFile)) union all
select sum(-Bal0) Val,sum(-MainBal0) MainVal from MoneyChangers	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 8=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from OutComeTypes	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 9=@LinkFile)) union all
select sum(-Bal0) Val,sum(-MainBal0) MainVal from InComeTypes		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 10=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from OrderTypes		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 11=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Assets			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 12=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Cases			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 13=@LinkFile)) union all
select sum( Bal0) Val,sum( MainBal0) MainVal from Teachers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 14=@LinkFile)) union all

select 
(Case when Flag=1 then Value else -Value end) Value,
(Case when Flag=1 then MainValue else -MainValue end) MainValue
from BankCash_G2
where (DayDate<@DayDate or(Flag=1 and DayDate<=@DayDate))
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(BankId,MainLinkFile)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 and dbo.GetAllApplyCurrencyCycle(BankId,MainLinkFile)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and BankId=@Id and MainLinkFile=@LinkFile)
	)

union all

select 
(Case when Flag=1 then -Value else Value end) Value,
(Case when Flag=1 then -MainValue2 else MainValue2 end) MainValue2
from BankCash_G2
where (DayDate<@DayDate or(Flag=2 and DayDate<=@DayDate))
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(SubAccNo,LinkFile)<>0 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(SubAccNo,LinkFile)=1 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo=@Id and LinkFile=@LinkFile)
	)

union all

select 
-Value,
-MainValue
from BankCash_G3
where DayDate<@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(FromSubAccNo,FromLinkFile)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(FromSubAccNo,FromLinkFile)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and FromSubAccNo=@Id and FromLinkFile=@LinkFile)
	)

union all

select 
Value,
MainValue
from BankCash_G3
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(ToSubAccNo,ToLinkFile)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(ToSubAccNo,ToLinkFile)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and ToSubAccNo=@Id and ToLinkFile=@LinkFile)
	)


union all

select 
(Case when Flag=1 then Value else -Value end),
(Case when Flag=1 then Qty else -Qty end)
from BankCash4 
where (DayDate<@DayDate or(Flag=1 and DayDate<=@DayDate))
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(BankId,5)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(BankId,5)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and BankId=@Id and 5=@LinkFile)
	)

union all

select 
Value,
Value1
from Entry2 
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo1,MainAccNo1)<>0 and CurrencyId1=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo1,MainAccNo1)=1 and CurrencyId1=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo1=@Id and MainAccNo1=@MainAccNo and SubAccNo1<>0)
	)

union all

select 
-Value,
-Value2
from Entry2 
where DayDate<@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo2,MainAccNo2)<>0 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo2,MainAccNo2)=1 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo2=@Id and MainAccNo2=@MainAccNo and SubAccNo2<>0)
	)

)tbl
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencyName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCurrencyName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from Currencies where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCurrencySIGN]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCurrencySIGN](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select SIGN from Currencies where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustInvoicesDelivery]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCustInvoicesDelivery](
@StoreId int=0,
@SalesDeliveryHistoryInvoiceNo int=0,
@ToId bigint
)
returns nvarchar(1000)
--with encryption
as
begin

set @StoreId=0

declare @tbl table(InvoiceNo nvarchar(100),Line int identity(1,1))
insert @tbl
select distinct CAST(D.storeId as nvarchar(100))+' \ '+cast(M.InvoiceNo as nvarchar(100))
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesTypes ST on(M.SalesTypeId=ST.Id)
left join SalesDeliveryHistory H on(D.StoreId=H.StoreId and D.Line=H.SalesDetailsLine)
where (M.StoreId=@StoreId or @StoreId=0)
and (H.InvoiceNo=@SalesDeliveryHistoryInvoiceNo or @SalesDeliveryHistoryInvoiceNo=0)
and M.Flag=13
and M.SalesTypeId>1
and (D.IsDelivered=0 or @SalesDeliveryHistoryInvoiceNo>0)
and M.Temp=0
and M.ToId=@ToId


declare @x int=1,@max int=(select COUNT(Line) from @tbl),@str nvarchar(1000)=''
while @x<=@max
begin
	set @str+=(select InvoiceNo from @tbl where Line=@x)+(case when @x<@max then ' - ' else '' end)
	set @x+=1
end



return @str
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustInvoicesDeliveryValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCustInvoicesDeliveryValue](
@StoreId int=0,
@SalesDeliveryHistoryInvoiceNo int=0,
@ToId bigint
)
returns float
--with encryption
as
begin


return isnull((
select SUM(D.Value)
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesTypes ST on(M.SalesTypeId=ST.Id)
left join SalesDeliveryHistory H on(D.StoreId=H.StoreId and D.Line=H.SalesDetailsLine)
where (M.StoreId=@StoreId or @StoreId=0)
and M.Flag=13
and M.SalesTypeId>1
and (D.IsDelivered=0 or @SalesDeliveryHistoryInvoiceNo>0)
and M.Temp=0
and M.ToId=@ToId

and (
	H.InvoiceNo=@SalesDeliveryHistoryInvoiceNo or 
	(@SalesDeliveryHistoryInvoiceNo=0 and
	(H.InvoiceNo is null or exists(
	select * from (
	select SalesDetailsLine,MAX(InvoiceNo)MAX_InvoiceNo from SalesDeliveryHistory
	group by SalesDetailsLine
	)Tbl
	where Tbl.MAX_InvoiceNo=H.InvoiceNo and Tbl.SalesDetailsLine=D.Line
	))
	)
	)
	
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustomerInvoicesTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCustomerInvoicesTypeName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from CustomerInvoicesTypes where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustomerInvoiceTotal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCustomerInvoiceTotal]
(
@InvoiceNo bigint
)
returns float
--with encryption
as
begin
declare @val1 float,@val2 float,@val3 float

select @val1=sum(Value) from CustomerInvoicesDt where InvoiceNo=@InvoiceNo 
select @val2=sum(Value) from Invoices where CustomerInvoiceNo=@InvoiceNo
select @val3=sum(Value2+Tips2) from Nolon where CustomerInvoiceNo=@InvoiceNo

return isnull(@val1,0)+isnull(@val2,0)+isnull(@val3,0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[getCustomerLastPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE function [dbo].[getCustomerLastPayment](@Id int)
returns nvarchar(100)
as
begin
return
(
select dbo.ToStrdate(max(DayDate))
from (
		select max(case when DayDate2='1900-01-01' then DayDate else DayDate2 end) DayDate
		from BankCash_G 
		where Flag='1' 
		and LinkFile='1' 
		and SubAccNo=@Id
		and Value>0
		
		--union All
		
		--select max(DayDate) DayDate
		--from SalesMaster 
		--where Flag=13
		--and PaymentType<>4
		--and ToId=@Id
		
	)Tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[getCustomerLastPaymentValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE function [dbo].[getCustomerLastPaymentValue](@Id int)
returns nvarchar(100)
as
begin
return
(
		select top 1 Value  
		from BankCash_G 
		where Flag='1' 
		and LinkFile='1' 
		and SubAccNo=@Id
		and Value>0
		order by DayDate desc,InvoiceNo desc
)
end

GO
/****** Object:  UserDefinedFunction [dbo].[getCustomerMonthPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE function [dbo].[getCustomerMonthPayment](@Year int,@Month int,@Id int)
returns float
as
begin
return
(	
	select isnull(sum(Value),0)
	from(
		select Value 
		from BankCash_G T 
		where T.SubAccNo=@Id
		and T.Flag=1 
		and T.LinkFile=1 
		and T.Canceled=0 
		and YEAR(T.DayDate)=@Year 
		and Month(T.DayDate)=@Month

		--union all
		
		--select (case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end)
		--from SalesMaster T
		--where T.ToId=@Id
		--and T.Flag=13  
		--and T.Temp=0 
		--and YEAR(T.DayDate)=@Year 
		--and Month(T.DayDate)=@Month
	)Tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetCustomerName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetCustomerName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from Customers where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDebitAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDebitAccNo](@Id bigint)
returns varchar(100)
--with encryption
as begin

return isnull((select AccNo from Debits where Id=@Id),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDebitCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDebitCurrencyId](@Id bigint)
returns int
--with encryption
as begin

return isnull((select CurrencyId from Debits where Id=@Id),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDebitsApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDebitsApplyCurrencyCycle](@Id bigint)
returns int
--with encryption
as begin

return isnull((select ApplyCurrencyCycle from Debits where Id=@Id),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDegreeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDegreeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Degrees where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDelivaryCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDelivaryCost](@Store bigint,@CustId bigint)
returns float
--with encryption
as
begin

declare @val float

select @val=A.DelivaryCost
from Customers C
left join Areas A on(C.CountryId=A.CountryId and C.CityId=A.CityId and C.AreaId=A.Id)
where C.Id=@CustId


return isnull(@val,(select DelivaryCost from Stores where Id=@Store))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDepartmentName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDepartmentName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from Departments where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetDriverName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetDriverName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from Drivers where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpAbsence]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpAbsence]
(
@EmpId bigint,@MONTH bigint,@YEAR bigint
)
returns float
--with encryption
as begin

return isnull(
(select sum(DayValue) from Attendance where EmpId=@EmpId and Month=@MONTH and YEAR=@YEAR 
and DayPerc=0)
,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpAccNo](@Emp bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select AccNo from Employees where Id=@Emp)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpArName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpArName](@Emp bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Employees where Id=@Emp),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDayValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpDayValue](@EmpId bigint)
returns float
--with encryption
as
begin
declare @val float

select @val=Salary/30.
from Employees
where Id=@EmpId

select @val=0 where @val is null
return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDegreeId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpDegreeId](@Id bigint)
returns bigint
--with encryption
as
begin
return(select DegreeId from Employees where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDepartmentId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpDepartmentId](@Id bigint)
returns bigint
--with encryption
as
begin
return(select DepartmentId from Employees where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDirectBonus]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpDirectBonus]
(@Month bigint ,@Year bigint,@EmpId bigint) returns float
--with encryption
as
begin
declare @val float

select @val=sum(case IsVal 
			when 0 then dbo.GetEmpHourValue(EmpId)*(hh+mm/60.)
			when 1 then dbo.GetEmpDayValue(EmpId)*value
			when 2 then value 
			else 0 end)
from DirectBonus 
where EmpId=@EmpId
and Month(DayDate)=@Month
and Year(DayDate)=@Year

select @val=0 where @val is null

return @val

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpDirectCut]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpDirectCut]
(@Month bigint ,@Year bigint,@EmpId bigint) returns float
--with encryption
as
begin
declare @val float

select @val=sum(case IsVal 
			when 0 then dbo.GetEmpHourValue(EmpId)*(hh+mm/60.)
			when 1 then dbo.GetEmpDayValue(EmpId)*value
			when 2 then value 
			else 0 end)
from DirectCut
where EmpId=@EmpId
and Month(DayDate)=@Month
and Year(DayDate)=@Year

select @val=0 where @val is null

return @val

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpEarly]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpEarly](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
declare @val float

select @val= SUM(
case 

when dbo.IsInstractor(@EmpId)='1' and dbo.GetEmpDepartment(@EmpId)=1 and
(datepart(HOUR,DefaultLoginDateTime)*60+datepart(MINUTE,DefaultLoginDateTime)
-datepart(HOUR,CurrentLoginDateTime)*60-datepart(MINUTE,CurrentLoginDateTime)
> 15) then 15

when
datepart(HOUR,DefaultLoginDateTime)*60+datepart(MINUTE,DefaultLoginDateTime)
-datepart(HOUR,CurrentLoginDateTime)*60-datepart(MINUTE,CurrentLoginDateTime)
> 0 then 
datepart(HOUR,DefaultLoginDateTime)*60+datepart(MINUTE,DefaultLoginDateTime)
-datepart(HOUR,CurrentLoginDateTime)*60-datepart(MINUTE,CurrentLoginDateTime)

else 0 end
)/60.

 from Attendance
where EmpId=@EmpId and Month(DayDate)=@Month and Year(DayDate)=@Year
and dbo.IsHoliDays(DayDate)=0

select @val=0 where @val is null
return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpEnName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpEnName](@Emp bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select EnName from Employees where Id=@Emp),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpExecuse]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpExecuse](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
declare @val float

select @val= SUM(
case when
datepart(HOUR,DefaultLogOutDateTime)*60+datepart(MINUTE,DefaultLogOutDateTime)
-datepart(HOUR,CurrentLogOutDateTime)*60-datepart(MINUTE,CurrentLogOutDateTime)
>0 then
datepart(HOUR,DefaultLogOutDateTime)*60+datepart(MINUTE,DefaultLogOutDateTime)
-datepart(HOUR,CurrentLogOutDateTime)*60-datepart(MINUTE,CurrentLogOutDateTime)
else 0 end
)/60.
from Attendance
where EmpId=@EmpId and Month(DayDate)=@Month and Year(DayDate)=@Year
and dbo.IsHoliDays(DayDate)=0

select @val=0 where @val is null

return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHolidays]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpHolidays](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
declare @val float

select @val= SUM(
datepart(HOUR,CurrentLogOutDateTime)*60+datepart(MINUTE,CurrentLogOutDateTime)
-datepart(HOUR,CurrentLoginDateTime)*60-datepart(MINUTE,CurrentLoginDateTime)
)/60.*2.
 from Attendance
where EmpId=@EmpId and Month(DayDate)=@Month and Year(DayDate)=@Year
and dbo.IsHoliDays(DayDate)=1

select @val=0 where @val is null
return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHolidays2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpHolidays2](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns bigint
--with encryption
as
begin
declare @val bigint

select @val= count(*)
 from Attendance
where EmpId=@EmpId and Month(DayDate)=@Month and Year(DayDate)=@Year
and dbo.IsHoliDays2(DayDate)=1

select @val=0 where @val is null
return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHours]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpHours](@InstractorId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
declare @val float

select @val=sum(Hrs) from
(
select distinct Att.DayDate,Att.GroupId,
	
	case 
		when ChekPrivate=1 then Att.PrivateHours+(Att.PrivateMinits/60.)
		when G.Intensive=1 then G.NoOfHours*dbo.GetLectureHours()
		else dbo.GetLectureHours()
	end
	Hrs
	
 from GroupsStudentsAttendance Att
left join Groups G on (Att.GroupId=G.Id and Att.BranchId=G.BranchId)
where Att.InstractorId=@InstractorId 
and MONTH(Att.DayDate)=@MONTH 
and YEAR(Att.DayDate)=@YEAR
)tbl

select @val=0 where @val is null
return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpHourValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpHourValue](@EmpId bigint)
returns float
--with encryption
as
begin
declare @val float

select @val=
case SalaryType 
	when 0 then (case when (TotalHours+TotalMinutes/60.)=0 then 0 else Salary/30./(TotalHours+TotalMinutes/60.) end)
	when 1 then Salary
end 
from Employees
where Id=@EmpId

select @val=0 where @val is null
return @val
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpIncome]
(
@EmpId bigint,
@Month bigint,
@Year bigint,
@State bigint
)
returns float
--with encryption
as
begin
return isnull(

(
select SUM(val)
from
(

select Payed val
from Reservations
where EmpId=@EmpId
and year(ReservationDate)=@Year and month(ReservationDate)=@Month
and @State in(0,2)
and Canceled=0

union all

select Remaining val
from Reservations
where EmpId=@EmpId
and Done=1
and year(RemainingDate)=@Year and month(RemainingDate)=@Month
and @State in(0,2)
and Canceled=0

union all

select -Payed val
from Reservations
where EmpId=@EmpId
and year(ReturnedDate)=@Year and month(ReturnedDate)=@Month
and Canceled=0
and Returned=1
and @State in(1,2)

union all

select -Remaining val
from Reservations
where EmpId=@EmpId
and Done=1
and year(ReturnedDate)=@Year and month(ReturnedDate)=@Month
and Canceled=0
and Returned=1
and @State in(1,2)

--==================================================================================

union all 

--==================================================================================


select Payed val
from Services
where @EmpId in(DrId,CsId)
and year(DayDate)=@Year and month(DayDate)=@Month
and @State in(0,2)
and Canceled=0

union all

select Remaining val
from Services
where @EmpId in(DrId,CsId)
and Done=1
and year(RemainingDate)=@Year and month(RemainingDate)=@Month
and @State in(0,2)
and Canceled=0

union all

select -Payed val
from Services
where @EmpId in(DrId,CsId)
and year(ReturnedDate)=@Year and month(ReturnedDate)=@Month
and Canceled=0
and Returned=1
and @State in(1,2)

union all

select -Remaining val
from Services
where @EmpId in(DrId,CsId)
and Done=1
and year(ReturnedDate)=@Year and month(ReturnedDate)=@Month
and Canceled=0
and Returned=1
and @State in(1,2)



)tbl
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpIsHasAttendance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpIsHasAttendance](@Emp bigint)
returns bigint
--with encryption
as
begin
return isnull((select HasAttendance from Employees where Id=@Emp),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpLate](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
declare @LateAllowance float=isnull((select LateAllowance from Employees where Id=@EmpId),0)

return isnull(
	(
		select sum(
			case when
			(((DelayMinutes-cast(DelayMinutes as numeric)%60)+(Case when cast(DelayMinutes as numeric)%60>@LateAllowance then 60 else 0 end))/60.*HourValue)
			<0 then 0 else
			(((DelayMinutes-cast(DelayMinutes as numeric)%60)+(Case when cast(DelayMinutes as numeric)%60>@LateAllowance then 60 else 0 end))/60.*HourValue)
			end
		) 
		from Attendance where EmpId=@EmpId and Month=@MONTH and YEAR=@YEAR 
	)
,0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLateOverValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpLateOverValue](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
declare @val float

select @val= SUM(
case when
datepart(HOUR,CurrentLogInDateTime)*60+datepart(MINUTE,CurrentLogInDateTime)
-datepart(HOUR,DefaultLogInDateTime)*60-datepart(MINUTE,DefaultLogInDateTime)
>0 then
datepart(HOUR,CurrentLogInDateTime)*60+datepart(MINUTE,CurrentLogInDateTime)
-datepart(HOUR,DefaultLogInDateTime)*60-datepart(MINUTE,DefaultLogInDateTime)
else 0 end
)/60.
from Attendance
where EmpId=@EmpId and Month(DayDate)=@Month and Year(DayDate)=@Year
and dbo.IsHoliDays(DayDate)=0

select @val=0 where @val is null

return (case when @val<=10. then 0 else @val*1.5 end)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLeaveBal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpLeaveBal]
(
@EmpId bigint,
@DayDate datetime
)
returns float
--with encryption
as
begin
return (
select Count(*) from LeaveRequests
where EmpId=@EmpId
and MONTH(DayDate)=MONTH(@DayDate)
and Year(DayDate)=Year(@DayDate)
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLeaveBal2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpLeaveBal2]
(
@EmpId bigint,
@LeaveType bigint
)
returns float
--with encryption
as
begin
return isnull((
select sum(Days)Days
from
(
select DATEDIFF(day,L.FromDate,L.ToDate)+(case when L.HalfDay=1 then .5 else 1 end) Days
from Employees E
left join LeaveRequests2 L on(E.Id=L.EmpId)
where E.Id=@EmpId
and L.FromDate between DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate) and DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate)
and L.ToDate between DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate) and DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate)
and l.LeaveType=@LeaveType

union all

select DATEDIFF(day,DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate),L.ToDate)
from Employees E
left join LeaveRequests2 L on(E.Id=L.EmpId)
where E.Id=@EmpId
and not L.FromDate between DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate) and DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate)
and L.ToDate between DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate) and DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate)
and l.LeaveType=@LeaveType

union all

select DATEDIFF(day,L.FromDate,DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate))
from Employees E
left join LeaveRequests2 L on(E.Id=L.EmpId)
where E.Id=@EmpId
and L.FromDate between DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate) and DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate)
and not L.ToDate between DATEADD(year,DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate) and DATEADD(year,1+DATEDIFF(MONTH,E.HiringDate,GETDATE())/12,E.HiringDate)
and l.LeaveType=@LeaveType
)Tbl
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLeaveRequests]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpLeaveRequests]
(
@EmpId bigint,
@DayDate datetime
)
returns float
--with encryption
as
begin
return isnull((
select sum(hh*60+mm) from LeaveRequests
where EmpId=@EmpId and DayDate=@DayDate
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpLoans]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpLoans]
(@Month bigint ,@Year bigint,@EmpId bigint) returns float
--with encryption
as
begin
declare @val float


select @val=Sum(Value/DedCount) from Loans 
where EmpId=@EmpId
and (@YEAR*12+@Month) between (DedStartYEAR*12+DedStartmonth) and (DedStartYEAR*12+DedStartmonth)+DedCount-1

select @val=0 where @val is null

return @val

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from Employees where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpOverTime]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpOverTime](@EmpId bigint,@MONTH bigint,@YEAR bigint)
returns float
--with encryption
as
begin
return isnull(
(select sum((DayPerc-1.)*DayValue) from Attendance where EmpId=@EmpId and Month=@MONTH and YEAR=@YEAR 
and DayPerc>1),0)
+
isnull((select 
sum(
--((OverMinutes-cast(OverMinutes as numeric)%60)+(Case when cast(OverMinutes as numeric)%60>39 then 60 else 0 end))
OverMinutes
/60.*HourValue) 
from Attendance where EmpId=@EmpId and Month=@MONTH and YEAR=@YEAR and OverMinutes>29)
,0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpRealWorkTime]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpRealWorkTime]
(
@EmpId bigint,@DayDate datetime
)
returns int
--with encryption
as
begin
return
(
select isnull(sum(isnull(datepart(HOUR,OutTime-DayDate),0)*60+isnull(datepart(MINUTE,OutTime-DayDate),0)),0)
from 
(
select *,
	(
	select min(DayDate) 
	from AttendanceLog L 
	where T.EmpId=L.EmpId 
	--and CAST(T.DayDate AS date)=CAST(L.DayDate AS date)
	and L.State=1
	and T.DayDate<L.DayDate
	)OutTime
from AttendanceLog T
where EmpId=@EmpId and CAST(DayDate AS date)=@DayDate
and State=0
and (select top 1 State from AttendanceLog Lg where Lg.DayDate>T.DayDate and Lg.EmpId=T.EmpId order by DayDate)=1
)tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpSumLoanValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpSumLoanValue]
(@EmpId bigint) returns float
--with encryption
as
begin
declare @val float

select @val=SUM(LoanValue)
from SalaryHistory
where EmpId=@EmpId

select @val=0 where @val is null

return @val

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEmpTaxAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEmpTaxAccNo](@Emp bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select TaxAccNo from Employees where Id=@Emp)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetEnName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetEnName](@Arabic_Name nvarchar(100))
returns nvarchar(100)
--with encryption
as begin
declare @val nvarchar(100)

select top 1 @val=English_Name from Names where Arabic_Name=@Arabic_Name

select @val='' where @val is null
return @val

end
GO
/****** Object:  UserDefinedFunction [dbo].[getEntryTblName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getEntryTblName] ()
returns nvarchar(100)
as
begin
return (select top 1 EntryTblName from statics)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetGenderName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetGenderName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Gender where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetGroupName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from Groups where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetIfCheckIsCollected]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetIfCheckIsCollected](@CheckNo nvarchar(100),@DayDate datetime)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((
select '
تم التحصيل جهة ['
+(case when Flag=1 then T1.Name else T2.Name end)
+'] بتاريخ ['
+isnull(replace(CAST(CAST(DayDate as Date)as nvarchar(10)),'-','/'),'')
+']' 
from BankCash_G2 T
left join AllSub T1 on(T.MainLinkFile=T1.LinkFile and T.BankId=T1.Id)
left join AllSub T2 on(T.LinkFile=T2.LinkFile and T.SubAccNo=T2.Id)
where CheckNo=@CheckNo
and DayDate<=@DayDate
and CheckTypeId=5
),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetIfDuplicatedSerial]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[GetIfDuplicatedSerial]
(
@SerialIdType int,
@SerialId int
)
returns int
--with encryption
as

begin
return 
(
select COUNT(c)count from 
(
select 1 c from Reservations where dbo.GetVisitingTypesSerialId(VisitingType)=@SerialIdType and SerialId=@SerialId
union all
select 1 c from Reservations where dbo.GetVisitingTypesSerialId(VisitingType)=@SerialIdType and SerialId2=@SerialId
union all
select 1 c from Services where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialIdType and SerialId=@SerialId
union all
select 1 c from Services where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialIdType and SerialId2=@SerialId
)
t
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetImportmessageName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetImportmessageName]
(
@OrderTypeId int,
@Id int
)
returns nvarchar(100)
--with encryption
as
begin
return isnull((
select dbo.GetShipperName(ShipperId) from ImportMessages 
where OrderTypeId=@OrderTypeId and Id=@Id
),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetInPatientAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetInPatientAccNo]()
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select top 1 InPatientAccNo from Statics),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetInPatientSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetInPatientSubAccNo]()
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select top 1 InPatientSubAccNo from Statics),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[getInstallNewDocNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getInstallNewDocNo]()
returns nvarchar(100)
as
begin

declare @Count int

select @Count=Count(*)+1 
from SalesMaster
where Flag in(13,35)
and YEAR(DayDate)=YEAR(GETDATE())
and Month(DayDate)=Month(GETDATE())
and DocNo<>''

return(
select char(64+((YEAR(GETDATE())*12+Month(GETDATE()))-(InstallStartYear*12+InstallStartMonth)+1)%26)
+CAST(@Count as nvarchar(10))+' / '+CAST(Month(GETDATE()) as nvarchar(10))+'-'+CAST(YEAR(GETDATE()) as nvarchar(10))
from Statics 
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetInvoicesSumValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetInvoicesSumValue](@CustomerInvoiceNo bigint)
RETURNS 
@tbl TABLE 
(
InvoicesTypeName nvarchar(100),Value float
)
--with encryption
AS
BEGIN
	insert @tbl(InvoicesTypeName,Value )
	SELECT dbo.GetInvoicesTypeName(InvoicesTypeId),sum(Value) from Invoices
	where CustomerInvoiceNo=@CustomerInvoiceNo	
	group by InvoicesTypeId
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetInvoicesTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetInvoicesTypeName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from InvoicesTypes where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemAvgCost]
(@ItemId bigint,@DayDate datetime)
returns float
--with encryption
as
begin

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

declare @tbl table(AvgCost float,Qty float)
insert @tbl
Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*D.UnitQty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
and(M.DayDate<@DayDate or (M.DayDate=@DayDate and F.ItemIn=1))
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))

union all

Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
and(M.DayDate<@DayDate or (M.DayDate=@DayDate and F.ItemIn=1))
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))

union all

--الكلى
Select 
-D.AvgCost AvgCost,
-D.Qty Qty
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
where D.ItemId=@ItemId
and M.DayDate<@DayDate
and M.Canceled=0

union all

--استلام الرسائل
Select 
ttt.AvgCost AvgCost,
ttt.Qty Qty
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.ItemId=@ItemId
and t.DeliveredDate<=@DayDate
and t.IsDelivered=1

union all

-- صادر فك وتركيب
Select 
-T.AvgCost,
-T.Qty
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate<@DayDate
and TT.Temp=0

union all

--وارد فك وتركيب
Select 
T.AvgCost,
T.Qty
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate2<=@DayDate
and TT.Temp=0
and TT.Done=1

union all

-- صادر فك وتركيب
Select 
TT.AvgCost,
TT.Qty
from ProductionItemCollectionMotionMaster TT 
where TT.ItemId=@ItemId
and TT.DayDate<@DayDate
and TT.Temp=0
and TT.Flag>40

union all

--وارد فك وتركيب
Select 
-T.AvgCost,
-T.TotalQty
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate<=@DayDate
and TT.Temp=0
and TT.Flag>40

return
isnull((
Select 
(
case 
when sum(Qty)=0 then 0 
--when sum(Qty)<0 then 0--(select SalesPrice from items where Id=@ItemId) 
else sum(AvgCost)/sum(Qty) 
end
)
from @tbl
--where AvgCost>=0
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemAvgCost2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemAvgCost2]
(@ItemId bigint,@DayDate datetime)
returns float
--with encryption
as
begin

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

declare @tbl table(AvgCost float,Qty float)
insert @tbl
Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*D.UnitQty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
--and(M.DayDate<@DayDate or (M.DayDate=@DayDate and F.ItemIn=1))
and M.DayDate<=@DayDate
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))

union all

Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
--and(M.DayDate<@DayDate or (M.DayDate=@DayDate and F.ItemIn=1))
and M.DayDate<=@DayDate
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))

union all

--الكلى
Select 
-D.AvgCost AvgCost,
-D.Qty Qty
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
where D.ItemId=@ItemId
and M.DayDate<=@DayDate
and M.Canceled=0

union all

--استلام الرسائل
Select 
ttt.AvgCost AvgCost,
ttt.Qty Qty
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.ItemId=@ItemId
and t.DeliveredDate<=@DayDate
and t.IsDelivered=1

union all

-- صادر فك وتركيب
Select 
-T.AvgCost,
-T.Qty
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate<=@DayDate
and TT.Temp=0

union all

--وارد فك وتركيب
Select 
T.AvgCost,
T.Qty
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate2<=@DayDate
and TT.Temp=0
and TT.Done=1

union all

-- صادر فك وتركيب
Select 
TT.AvgCost,
TT.Qty
from ProductionItemCollectionMotionMaster TT 
where TT.ItemId=@ItemId
and TT.DayDate<=@DayDate
and TT.Temp=0
and TT.Flag>40

union all

--وارد فك وتركيب
Select 
-T.AvgCost,
-T.TotalQty
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate<=@DayDate
and TT.Temp=0
and TT.Flag>40

return
isnull((
Select 
(
case 
when sum(Qty)=0 then 0 
--when sum(Qty)<0 then 0--(select SalesPrice from items where Id=@ItemId) 
else sum(AvgCost)/sum(Qty) 
end
)
from @tbl
--where AvgCost>=0
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemAvgSalesPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemAvgSalesPrice]
(@ItemId bigint)
returns float
--with encryption
as
begin

return
isnull((

	Select 	sum(D.Value)/sum(D.Qty*D.UnitQty) Price
	from SalesDetails D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	left join SalesFlags F on(M.Flag=F.Id)
	where D.ItemId=@ItemId
	and D.Flag =13
	and M.Temp=0
	and (D.Qty*D.UnitQty)<>0
	and D.Line in(
	select TblLine from FIFO 
	where ItemId=@ItemId 
	and Flag=13
	and TableIndex=1 
	and MainTableIndex=4 
	and MainLine=(select top 1 TblLine from FIFO where ItemId=@ItemId and TableIndex=4 order by DayDate desc)
	)

),
isnull((select SalesPrice from Items where Id=@ItemId),0)
)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemBalGroup]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemBalGroup](@GroupId bigint,@ToDate datetime)
returns float
--with encryption
as
begin
return
isnull((
select SUM(Cost) 
from
(
select St.Id StoreId,it.Id ItemId,dbo.GetStoreItemBal(St.Id,it.Id,'',0,0,@ToDate)*dbo.GetItemAvgCost(it.Id,@ToDate) Cost
from Items_View It
cross join Stores St
where (It.GroupId=@GroupId or @GroupId=0)
and It.ItemType<>3
and It.IsService=0
)tbl
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemGroupName](@Id bigint)
returns varchar(100)
--with encryption
as
begin
return(isnull((

select Name from Groups where Id=(select GroupId From Items where Items.Id=@Id)
 
),'-'))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemImage]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemImage](@Id bigint)
returns varbinary(max)
--with encryption
as
begin
return (select Image from Items where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemLastCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemLastCost]
(
@ItemId bigint,
@DayDate datetime,
@ProductionOrderStore int,
@ProductionOrderFlag int,
@ProductionOrderNo int
)
returns float
--with encryption
as
begin

declare @val float

if exists (select * from ProductionItemCollectionMotionMaster where StoreId=@ProductionOrderStore and Flag=@ProductionOrderFlag and InvoiceNo=@ProductionOrderNo and ItemId=@ItemId and Temp=0)
	select @val=sum(Qty*dbo.GetItemLastPurchasePrice(ItemId,@DayDate)) from ProductionItemCollectionMotionDetailsTo
	where StoreId=@ProductionOrderStore and Flag=@ProductionOrderFlag and InvoiceNo=@ProductionOrderNo
else if exists (select MainItemId from ItemComponants where MainItemId=@ItemId)
	select @val=sum(Qty*dbo.GetItemLastPurchasePrice(ItemId,@DayDate)) from ItemComponants where MainItemId=@ItemId
else
	select @val=dbo.GetItemLastPurchasePrice(Id,@DayDate) from Items where Id=@ItemId


declare @TeacherPrifit float=isnull((
select top 1 TeacherPrifit 
from ProfitRatioDetails 
where ItemId=@ItemId
and DayDate<=@DayDate
order by DayDate desc
),0)

return isnull(@val,0)+@TeacherPrifit
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemLastInPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemLastInPrice]
(
@ItemId bigint,
@ToDate datetime
)
returns float
--with encryption
as
begin
return isnull((

select top 1 CostPrice from
(
	select M.DayDate,(Case when M.Flag in(19,20) then AvgCost/Qty else D.Price end)CostPrice
	from SalesDetails D
	left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
	left join SalesFlags SF on(M.Flag=SF.Id)
	where SF.ItemIn=1
	and SF.Id<>14
	and D.ItemId=@ItemId
	and M.DayDate<=@ToDate
	and M.Temp=0
	and Qty<>0

	union all

	select TT.DayDate2,T.Price
	from ItemCollectionMotionDetailsTo T
	left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
	where T.ItemId=@ItemId
	and TT.DayDate2<=@ToDate
	and TT.Temp=0
	and TT.Done=1
)Tbl
where CostPrice>0
order by DayDate desc

),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemLastPurchasePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemLastPurchasePrice]
(@ItemId bigint,@DayDate datetime)
returns float
--with encryption
as
begin

return
isnull((

select top 1 Price from
(
	Select M.DayDate,
	(Case when (D.Qty*D.UnitQty)=0 then 0 else D.Value/(D.Qty*D.UnitQty) end) Price
	from SalesDetails D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	left join SalesFlags F on(M.Flag=F.Id)
	where D.ItemId=@ItemId
	and D.Flag =9
	and M.Temp=0
	and M.DayDate<=@DayDate

	union all

	--استلام الرسائل
	Select t.DeliveredDate,
	(case when TTT.Qty=0 then 0 else TTT.AvgCost/TTT.Qty end)
	from ImportMessages T
	left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
	left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
	where ttt.ItemId=@ItemId
	and t.DeliveredDate<=@DayDate
	and t.IsDelivered=1
)Tbl
order by DayDate desc,Price desc

),
isnull((select PurchasePrice from Items where Id=@ItemId),0)
)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemName](@Id bigint)
returns varchar(100)
--with encryption
as
begin
return(isnull((

select Name From Items where Id=@Id
 
),''))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemProfit_CompanyPrifit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemProfit_CompanyPrifit]
(
@ItemId bigint,
@ToDate datetime
)
returns float
--with encryption
as
begin

return isnull((
select top 1 T.CompanyPrifit
from ProfitRatioDetails T
where T.ItemId=@ItemId
and T.DayDate<=@ToDate
order by T.DayDate desc
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemProfit_TeacherPrifit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemProfit_TeacherPrifit]
(
@ItemId bigint,
@ToDate datetime
)
returns float
--with encryption
as
begin

return isnull((
select top 1 T.TeacherPrifit
from ProfitRatioDetails T
where T.ItemId=@ItemId
and T.DayDate<=@ToDate
order by T.DayDate desc
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemProfit_TotalPrifit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemProfit_TotalPrifit]
(
@ItemId bigint,
@ToDate datetime
)
returns float
--with encryption
as
begin

return isnull((
select top 1 T.TotalPrifit
from ProfitRatioDetails T
where T.ItemId=@ItemId
and T.DayDate<=@ToDate
order by T.DayDate desc
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemPurchasePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemPurchasePrice](@Id bigint)
returns float
--with encryption
as
begin
return(isnull((select PurchasePrice from Items where Id=@Id),0))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemSizePrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemSizePrice]
(
@ItemId bigint,
@SubSizeId bigint
)
returns float
--with encryption
as
begin

return isnull((
select SalesPrice Price from ItemSizes where ItemId=@ItemId and Id=@SubSizeId
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemTypeName](@Id bigint)
returns varchar(100)
--with encryption
as
begin
return(isnull((

select Name from Types where exists
(select Id From Items where Items.Id=@Id and Items.GroupId=Types.GroupId and Items.TypeId=Types.Id)
 
),''))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUnit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemUnit](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Unit from Items where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUnitName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemUnitName](@Id bigint,@UnitId bigint)
returns varchar(100)
--with encryption
as
begin
return(isnull((

select (case @UnitId when 0 then Unit when 1 then UnitSub when 2 then UnitSub2 else '' end) 
From Items where Id=@Id
 
),''))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUnitQty---not used]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemUnitQty---not used](@Id bigint,@UnitId bigint)
returns float
--with encryption
as
begin
return(isnull((

select (case @UnitId when 0 then 1 when 1 then UnitCount when 2 then UnitCount2 else '' end) 
From Items where Id=@Id
 
),''))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemUsingCount]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemUsingCount]
(
@ItemId bigint
)
returns float
--with encryption
as
begin
return 
--عادي
isnull((
select count(ItemId)
from SalesDetails
where ItemId=@ItemId
),0)
+
--مفكوك الكومبو
isnull((
select count(ItemId)
from SalesDetailsComponants 
where ItemId=@ItemId or MainItemId=@ItemId

),0)
+
--الكلى
isnull((
select count(ItemId)
from KidneysWashMotionDetails D
where ItemId=@ItemId
),0)
+
-- صادر فك وتركيب
isnull((
SELeCT count(ItemId)
from ItemCollectionMotionDetailsFrom T
where ItemId=@ItemId
),0)
+
--وارد فك وتركيب
isnull((
SELeCT count(ItemId)
from ItemCollectionMotionDetailsTo T
where ItemId=@ItemId
),0)
+
-- صادر فك وتركيب
isnull((
SELeCT count(ItemId)
from ProductionItemCollectionMotionMaster T
where ItemId=@ItemId
),0)
+
--وارد فك وتركيب
isnull((
SELeCT count(ItemId)
from ProductionItemCollectionMotionDetailsTo T
where ItemId=@ItemId
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemWeightedAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemWeightedAvgCost]
(@ItemId bigint,@FromDate datetime,@ToDate datetime)
returns float
--with encryption
as
begin

declare @tbl table(AvgCost float,Qty float)
insert @tbl
Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*D.UnitQty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
and (
	(M.DayDate <@FromDate )or
	(F.ItemIn=1 and M.DayDate between @FromDate and @ToDate)
	)

union all

Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
and (
	(M.DayDate <@FromDate )or
	(F.ItemIn=1 and M.DayDate between @FromDate and @ToDate)
	)

union all

--استلام الرسائل
Select 
ttt.AvgCost AvgCost,
ttt.Qty Qty
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.ItemId=@ItemId
and t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1

union all

--وارد فك وتركيب
Select 
T.AvgCost,
T.Qty
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1

union all

-- صادر فك وتركيب
Select 
TT.AvgCost,
TT.Qty
from ProductionItemCollectionMotionMaster TT 
where TT.ItemId=@ItemId
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40


return
isnull((
Select 
(
case 
when sum(Qty)=0 then 0 
--when sum(Qty)<0 then 0--(select SalesPrice from items where Id=@ItemId) 
else sum(AvgCost)/sum(Qty) 
end
)
from @tbl
where AvgCost>=0
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetItemWeightedCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetItemWeightedCost]
(@ItemId bigint,@DayDate datetime)
returns float
--with encryption
as
begin

declare @tbl table(AvgCost float,Qty float)
insert @tbl
Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*D.UnitQty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
and(M.DayDate<@DayDate or (M.DayDate=@DayDate and F.ItemIn=1))

union all

Select 
(case when F.ItemIn=1 then D.Value else -D.AvgCost end) AvgCost,
(D.Qty*(case when F.ItemIn=1 then 1. else -1. end)) Qty
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where D.ItemId=@ItemId
and D.Flag not in(8,19,20,26,27,31)
and M.Temp=0
and(M.DayDate<@DayDate or (M.DayDate=@DayDate and F.ItemIn=1))

union all

--الكلى
Select 
-D.AvgCost AvgCost,
-D.Qty Qty
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
where D.ItemId=@ItemId
and M.DayDate<@DayDate
and M.Canceled=0

union all

--استلام الرسائل
Select 
ttt.AvgCost AvgCost,
ttt.Qty Qty
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.ItemId=@ItemId
and t.DeliveredDate<=@DayDate
and t.IsDelivered=1

union all

-- صادر فك وتركيب
Select 
-T.AvgCost,
-T.Qty
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate<@DayDate
and TT.Temp=0

union all

--وارد فك وتركيب
Select 
T.AvgCost,
T.Qty
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate2<=@DayDate
and TT.Temp=0
and TT.Done=1

union all

-- صادر فك وتركيب
Select 
TT.AvgCost,
TT.Qty
from ProductionItemCollectionMotionMaster TT 
where TT.ItemId=@ItemId
and TT.DayDate<@DayDate
and TT.Temp=0
and TT.Flag>40

union all

--وارد فك وتركيب
Select 
-T.AvgCost,
-T.TotalQty
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.ItemId=@ItemId
and TT.DayDate<=@DayDate
and TT.Temp=0
and TT.Flag>40

return
isnull((
Select 
(
case 
when sum(Qty)=0 then 0 
--when sum(Qty)<0 then 0--(select SalesPrice from items where Id=@ItemId) 
else sum(AvgCost)/sum(Qty) 
end
)
from @tbl
where AvgCost>=0
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetJobName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetJobName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Jobs where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLaboratoryTestsName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLaboratoryTestsName](@TestId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from LaboratoryTests where TestId=@TestId and Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLaboratoryTestTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLaboratoryTestTypesName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from LaboratoryTestTypes where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLabTestItemsName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLabTestItemsName](@TestId bigint,@SubTestId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from LabTestItems where TestId=@TestId and SubTestId=@SubTestId and Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLabTestItemsUnit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLabTestItemsUnit](@TestId bigint,@SubTestId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Unit from LabTestItems where TestId=@TestId and SubTestId=@SubTestId and Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLastDayInMonth]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLastDayInMonth]
(
@Month int,
@Year int
)
returns datetime
--with encryption
as
begin
return(select DATEADD(DAY,-1,DATEADD(month,1,CAST(CAST(@Year as nvarchar(100))+'-'+CAST(@Month as nvarchar(100))+'-1' as datetime))))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLinkAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLinkAccName](@LinkFile bigint,@Sub bigint)
returns varchar(1000)
--with encryption
AS
BEGIN
	 
declare @name varchar(1000) 
select @name=Name from AllSub where Id=@Sub and LinkFile=@LinkFile

return isnull(@name,'')
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetLinkFileName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLinkFileName](@Id varchar(100))
returns varchar(1000)
--with encryption
as
begin
return isnull(
(select Name from LinkFile where Id=@Id)
,'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetLoanDeduction]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetLoanDeduction]()
returns bigint
--with encryption
as
begin
return(select loanDeduction from Statics)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMachinesOutcomeTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMachinesOutcomeTypeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from MachinesOutcomeTypes where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainAccId](@ID nvarchar(100))returns nvarchar(1000)
--with encryption
as
begin return (select MainAccId from chart where ID=@ID) end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccIdLevel]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainAccIdLevel](@ID nvarchar(100),@Level int)returns nvarchar(1000)
--with encryption
as
begin 


declare @ID0 nvarchar(100)=@ID,@Level0 int=0
select @Level0=Level+1 from chart where ID=@ID0
while @Level0>@Level+1
	select @Level0=Level,@ID0=MainAccId from chart where ID=@ID0

return @ID0

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainAccName](@Id varchar(100))
returns varchar(1000)
--with encryption
as
begin
return isnull(
(select Name from Chart where Id=@Id)
,'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccNoLink]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainAccNoLink](@Link bigint,@Sub bigint)
returns varchar(100)
--with encryption
AS
BEGIN
	
	
declare @AccNo varchar(100)
select top 1 @AccNo=AccNo 
from dbo.GetAllSubAccNo()
where LinkFile=@Link 
and Id=@Sub

return isnull(@AccNo,'')
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainAccNoMotionType]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainAccNoMotionType](@AccNo nvarchar(100),@Sub bigint)
returns varchar(100)
--with encryption
AS
BEGIN
	return isnull((select MotionType from chart where Id=@AccNo),0)
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainJobName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainJobName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from MainJobs where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMainValue2Ded]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMainValue2Ded]
(
@StoreId bigint,
@InvoiceNo bigint,
@DeliveredDate datetime
)
returns float
--with encryption
as
begin
return
isnull((
select sum((Case when Flag=2 then 1. else -1. end)*MainValue2Ded)
from BankCash_G2 T
where Canceled=0 
and StoreId=@StoreId 
and StoreInvoiceNo=@InvoiceNo
and DayDate<=@DeliveredDate
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
and DD.StoreId=@StoreId and DD.InvoiceNo=@InvoiceNo
and T.DayDate<=D.DeliveredDate
)
),0)
+
isnull((
select sum(-T.Debit+T.Credit)
from EntryDt T
left join Entry E on(E.EntryTypeId=T.EntryTypeId and E.InvoiceNo=T.InvoiceNo)
where T.CostTypeId=0
and MainAccNo=(select BankCash_G2_Flag2_DedAcc from Statics)
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
and DD.StoreId=@StoreId and DD.InvoiceNo=@InvoiceNo
and E.DayDate<=D.DeliveredDate
)
),0)
+
isnull((
select sum(Value1)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and MainAccNo2=(select BankCash_G2_Flag2_DedAcc from Statics)
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
and DD.StoreId=@StoreId and DD.InvoiceNo=@InvoiceNo
and T.DayDate<=D.DeliveredDate
)
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMaxSerialIdFn]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMaxSerialIdFn]
(
@SerialType bigint
)
returns bigint
--with encryption
as
begin
declare @NewSerialId bigint

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

select @NewSerialId=max(SerialId) from 
(

select max(SerialId) SerialId from Reservations where dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType and (ReservationDate)>=@GetYearStartingDate
union all
select max(SerialId) SerialId from Services where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType and (DayDate)>=@GetYearStartingDate

union all

select max(SerialId2) SerialId from Reservations where dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType and (RemainingDate)>=@GetYearStartingDate
union all
select max(SerialId2) SerialId from Services where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType and (RemainingDate)>=@GetYearStartingDate

)tbl

select @NewSerialId=ISNULL(@NewSerialId,0)+1

return @NewSerialId
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMaxSerialIdFnCo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMaxSerialIdFnCo]
(
@CompanyId bigint
)
returns bigint
--with encryption
as
begin
declare @NewSerialId bigint

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

select @NewSerialId=max(SerialId) from 
(

select max(SerialId) SerialId from Reservations where ((CompanyId=0 and @CompanyId=0)or(CompanyId<>0 and @CompanyId<>0)) and (ReservationDate)>=@GetYearStartingDate
union all
select max(SerialId) SerialId from Services where ((CompanyId=0 and @CompanyId=0)or(CompanyId<>0 and @CompanyId<>0)) and (DayDate)>=@GetYearStartingDate

union all

select max(SerialId2) SerialId from Reservations where ((CompanyId=0 and @CompanyId=0)or(CompanyId<>0 and @CompanyId<>0)) and (RemainingDate)>=@GetYearStartingDate
union all
select max(SerialId2) SerialId from Services where ((CompanyId=0 and @CompanyId=0)or(CompanyId<>0 and @CompanyId<>0)) and (RemainingDate)>=@GetYearStartingDate

)tbl

select @NewSerialId=ISNULL(@NewSerialId,0)+1

return @NewSerialId
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMinValuePerPerson]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMinValuePerPerson](@Id bigint)
returns float
--with encryption
as
begin
return(
isnull((select MinValuePerPerson from Stores where Id=@Id),0)
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetMoneyChangerName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetMoneyChangerName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from MoneyChangers where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonCount]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetNolonCount](@CustomerInvoiceNo bigint,@NolonPriceTypeId bigint)
returns float
--with encryption
as
begin
return isnull((
select count(Value2) from Nolon
where CustomerInvoiceNo=@CustomerInvoiceNo and NolonPriceTypeId=@NolonPriceTypeId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonPricesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetNolonPricesName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select 
dbo.GetAreaName(CountryId,CityId,AreaId)+' - '+dbo.GetAreaName(CountryId1,CityId1,AreaId1)
from NolonPrices where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonPriceTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetNolonPriceTypesName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from NolonPriceTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonSumTips2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetNolonSumTips2](@CustomerInvoiceNo bigint)
returns float
--with encryption
as
begin
return isnull((
select sum(Tips2) from Nolon
where CustomerInvoiceNo=@CustomerInvoiceNo
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetNolonSumValue]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetNolonSumValue](@CustomerInvoiceNo bigint,@NolonPriceTypeId bigint)
returns float
--with encryption
as
begin
return isnull((
select sum(Value2) from Nolon
where CustomerInvoiceNo=@CustomerInvoiceNo and NolonPriceTypeId=@NolonPriceTypeId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationAccNo]()
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select top 1 OperationAccNo from Statics),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationMotionsOperationTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationMotionsOperationTypesName](@InvoiceNo bigint)
returns nvarchar(1000)
--with encryption
as
begin

/*
declare @tbl table(Id int,Line int identity(1,1))
insert @tbl
select OperationTypeId from OperationMotionsOperationTypes where InvoiceNo=@InvoiceNo

declare @str nvarchar(1000)
declare @x int=0,@max int=(select MAX(Line) from @tbl)
while @x<@max
	select @x=@x+1,@str=isnull(@str,'')+isnull(Name,'')+' - ' from OperationTypes where Id=(select T.Id from @tbl T where Line=@x+1)
return isnull(@str,'-')
*/

return isnull((select top 1 OperationTypeId from OperationMotionsOperationTypes where InvoiceNo=@InvoiceNo order by Line),'-')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationMotionsOperationTypesNameAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationMotionsOperationTypesNameAll](@InvoiceNo bigint)
returns nvarchar(1000)
--with encryption
as
begin


declare @tbl table(Id int,Line int identity(1,1))
insert @tbl
select OperationTypeId from OperationMotionsOperationTypes where InvoiceNo=@InvoiceNo

declare @str nvarchar(1000)
declare @x int=0,@max int=(select MAX(Line) from @tbl)
while @x<@max
begin
	select @x=@x+1
	select @str=isnull(@str,'')+isnull(Name,'')+' - ' from OperationTypes where Id=(select T.Id from @tbl T where Line=@x)
end
return isnull(@str,'-')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationRoomName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationRoomName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from OperationsRooms where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationSubAccNo]()
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select top 1 OperationSubAccNo from Statics),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationSubAccNo2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationSubAccNo2]()
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select top 1 OperationSubAccNo2 from Statics),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOperationTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOperationTypesName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from OperationTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOrderTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOrderTypes](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from OrderTypes where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetOrderTypesMainAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOrderTypesMainAccNo](@Sub bigint,@Index bigint)
returns varchar(100)
--with encryption
AS
BEGIN
	return isnull((select 
	(case @Index when 0 then AccNo when 1 then AccNo1 when 2 then AccNo2 when 3 then AccNo3 else '' end)
	from OrderTypes where Id=@Sub),'')
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetOutComeTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetOutComeTypeName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from OutComeTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetPaymentTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetPaymentTypeName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from PaymentTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetRelationName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetRelationName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Relations where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetReligion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetReligion](@StudentId bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from Religions where Id=(select St.ReligionId from students St where St.Id=@StudentId))
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetReligionName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetReligionName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from Religions where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetReturnQty]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetReturnQty]
(
@StoreId int,
@Flag int,
@InvoiceNo int,
@ItemId int
)
returns float
--with encryption
as
begin
return
isnull((
select sum(Qty) from SalesDetails 
where StoreId=@StoreId
and Flag=@Flag+1
and SalesInvoiceNo=@InvoiceNo
and ItemId=@ItemId
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetRoomName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetRoomName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from Rooms where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSafeAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSafeAccNo](@Id bigint)
returns varchar(100)
--with encryption
as begin

return isnull((select AccNo from Saves where Id=@Id),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSafeApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSafeApplyCurrencyCycle](@Id bigint)
returns int
--with encryption
as begin

return isnull((select ApplyCurrencyCycle from Saves where Id=@Id),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSafeCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSafeCurrencyId](@Id bigint)
returns int
--with encryption
as begin

return isnull((select CurrencyId from Saves where Id=@Id),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesFlagName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesFlagName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from SalesFlags where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesItems]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesItems](@Flag bigint,@StoreId bigint,@InvoiceNo bigint)
returns varchar(1000)
--with encryption
as
begin
declare @tbl table(Name varchar(100),Line bigint identity(1,1))
insert @tbl
select ItemName from SalesDetails where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo

declare @str varchar(1000)=''
declare @x bigint=1,@max bigint=(select MAX(Line) from @tbl)
while @x<=@max
begin
select @str+=Name+' - ' from @tbl where Line=@x
set @x+=1
end

if @str='' return ''
return SUBSTRING(@str,1,LEN(@str)-2)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesNewSerial]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesNewSerial](@StoreId int,@Id int)
returns int
--with encryption
as
begin
return 
(select isnull(max(SerialNo),0)+1 from 
(

select max(SerialNo)SerialNo from SalesDetails 
where StoreId=@StoreId
and (
	(@Id=1 and Flag in(/*2,*/9,29)) or
	(@Id=2 and Flag in(8)) or
	--(@Id=3 and Flag in(/*13,*/ /*4,*/10,30)) or
	(@Id in(5) and Flag in(14))
	)

union all

select max(CAST(DocNo as bigint)) from SalesMaster
where StoreId=@StoreId
and (
	(@Id=3 and Flag in(13,10,20,30))
	)
and ISNUMERIC(DocNo)=1

union all

select max(SerialNo)SerialNo from ImportMessagesDetailsSub2 
where StoreId=@StoreId 
and @Id=1

union all

select max(SerialNo)SerialNo from ItemCollectionMotionDetails 
where StoreId=@StoreId 
and @Id=6

)tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesNewSerial2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesNewSerial2](@StoreId int,@InvoiceNo bigint,@Id int,@SerialNo int)
returns int
--with encryption
as
begin
return 
(select COUNT(*) from 
(

select SerialNo from SalesDetails 
where StoreId=@StoreId
and InvoiceNo<>@InvoiceNo
and SerialNo=@SerialNo
and (
	(@Id=1 and Flag in(/*2,*/9,29)) or
	(@Id=2 and Flag in(8)) or
	--(@Id=3 and Flag in(/*13,*/ /*4,*/10,30)) or
	(@Id in(5) and Flag in(14))
	)

union all

select max(CAST(DocNo as bigint)) from SalesMaster
where StoreId=@StoreId
and InvoiceNo<>@InvoiceNo
and DocNo=@SerialNo
and (
	(@Id=3 and Flag in(13,10,20,30))
	)
and ISNUMERIC(DocNo)=1

union all

select SerialNo from ImportMessagesDetailsSub2 
where StoreId=@StoreId 
and SerialNo=@SerialNo
and @Id=1

union all

select SerialNo from ItemCollectionMotionDetails 
where StoreId=@StoreId 
and SerialNo=@SerialNo
and @Id=6

)tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesPaymentTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesPaymentTypeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from SalesPaymentTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesSerialDetailsInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesSerialDetailsInvoiceNo]
(
@StoreId int,
@SerialNo bigint
)
returns int
--with encryption
as
begin
return isnull((
select top 1 InvoiceNo
from
(
select InvoiceNo from SalesDetails 
where (StoreId=@StoreId or @StoreId=0)
and (SerialNo=@SerialNo or @SerialNo=0)
and Flag in(13,10,30)

union all

select InvoiceNo from SalesDetails TT
where (StoreId=@StoreId or @StoreId=0)
and Flag in(14)
and exists(
select ItemId from SalesDetails T
where TT.StoreId=T.StoreId
and TT.SalesInvoiceNo=T.InvoiceNo
and TT.ItemId=T.ItemId
and (T.SerialNo=@SerialNo or @SerialNo=0)
and T.Flag in(13)
)

union all

select D.InvoiceNo
from DeliveryOrderDetails D
left join DeliveryOrderMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where (D.StoreId=@StoreId or @StoreId=0)
and (M.DocNo=@SerialNo or @SerialNo=0)
)Tbl
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSalesSerialNawar]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSalesSerialNawar](@StoreId int,@Flag int)
returns int
--with encryption
as
begin
return 
(select isnull(max(SerialNo),0)+1 from 
(

select max(SerialNo)SerialNo from SalesDetails 
where StoreId=@StoreId
and (
	Flag=@Flag or
	(Flag in(9,-19,29) and @Flag in(9,-19,29)) or
	(Flag in(10,20,30) and @Flag in(10,20,30))
	)

union all

select max(CAST(DocNo as bigint)) from SalesMaster
where StoreId=@StoreId
and (
	Flag=@Flag or
	(Flag in(9,-19,29) and @Flag in(9,-19,29)) or
	(Flag in(10,20,30) and @Flag in(10,20,30))
	)
and ISNUMERIC(DocNo)=1

union all

select max(SerialNo)SerialNo from ImportMessagesDetailsSub2 
where StoreId=@StoreId 
and @Flag in(9,-19,29)
	
)tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSavesApplyCurrencyCycle]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSavesApplyCurrencyCycle](@Id bigint)
returns int
--with encryption
as begin

return isnull((select ApplyCurrencyCycle from Saves where Id=@Id),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSellerName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSellerName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from Sellers where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupMainAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServiceGroupMainAccNo](@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return(select MainAccNo from ServiceGroups where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServiceGroupName](@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return(select Name from ServiceGroups where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServiceGroupSerialId](@Id bigint)
returns bigint
--with encryption
as
begin
return(select SerialId from ServiceGroups where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceGroupSubAccNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServiceGroupSubAccNo](@Id bigint)
returns int
--with encryption
as
begin
return(select SubAccNo from ServiceGroups where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServicePerc]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServicePerc](@Id bigint)
returns float
--with encryption
as
begin
return(
isnull((select ServicePerc from Stores where Id=@Id),0)
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceTypeDepartmentId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServiceTypeDepartmentId](@GroupId bigint,@Id bigint)
returns bigint
--with encryption
as
begin
return(select DepartmentId from ServiceTypes where ServiceGroupId=@GroupId and Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetServiceTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetServiceTypeName](@GroupId bigint,@Id bigint)
returns nvarchar(4000)
--with encryption
as
begin
return(select Name from ServiceTypes where ServiceGroupId=@GroupId and Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetShipperName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetShipperName]
(@Id int)
returns Nvarchar(100)
--with encryption
as
begin

return isnull((select Name from Shippers where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetShippingCompanyName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetShippingCompanyName]
(@Id int)
returns Nvarchar(100)
--with encryption
as
begin

return isnull((select Name from ShippingCompanies where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetShippingLineName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetShippingLineName]
(@Id int)
returns Nvarchar(100)
--with encryption
as
begin

return isnull((select Name from ShippingLines where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSizeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSizeName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Sizes where Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSizesDetailsName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSizesDetailsName]
(
@SizeId bigint,
@Id bigint
)
returns varchar(1000)
--with encryption
as
begin
return isnull((select Name from SizesDetails where SizeId=@SizeId and Id=@Id),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreFlag]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreFlag](@Id bigint)
returns int
--with encryption
as
begin
return(select Flag from Stores where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemBal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemBal]
(
@StoreId bigint,
@ItemId bigint,
@ItemSerialNo nvarchar(100),
@ColorId bigint,
@SizeId bigint,
@ToDate datetime
)
returns float
--with encryption
as
begin

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

return round((
--عادي
isnull((
select sum(D.Qty*D.UnitQty*
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)
)
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and It.ItemType<>3
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
and (D.ItemSerialNo=@ItemSerialNo or @ItemSerialNo='')
),0)
+
--مفكوك الكومبو
isnull((
select sum(D.Qty*
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)
)
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
and @ItemSerialNo=''
),0)
+
--الرصيد المتاح للكومبو من مكوناته
isnull((
select min(dbo.GetStoreItemBal(@StoreId,IC.ItemId,@ItemSerialNo,@ColorId,@SizeId,@ToDate)/IC.Qty)
from ItemComponants IC
left join Items It on(It.Id=IC.MainItemId)
where IC.MainItemId=@ItemId
and It.ItemType=3
and @ItemSerialNo=''
),0)
-
--الكلى
isnull((
select SUM(D.Qty) 
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Canceled=0
and @ItemSerialNo=''
),0)
+
--استلام الرسائل
isnull((
SELeCT sum(ttt.Qty)
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1
and @ItemSerialNo=''
),0)
-
-- صادر فك وتركيب
isnull((
SELeCT sum(T.Qty)
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and @ItemSerialNo=''
),0)
+
--وارد فك وتركيب
isnull((
SELeCT sum(T.Qty)
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1
and @ItemSerialNo=''
),0)
+
isnull((
SELeCT sum(TT.Qty)
from ProductionItemCollectionMotionMaster TT 
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
and @ItemSerialNo=''
),0)
-
isnull((
SELeCT sum(T.TotalQty)
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
and @ItemSerialNo=''
),0)

),3)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemBalAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemBalAvgCost]
(
@StoreId bigint,
@ItemId bigint,
@ColorId bigint,
@SizeId bigint,
@ToDate datetime
)
returns float
--with encryption
as
begin

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

return 
--عادي
isnull((
select sum(D.AvgCost*
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)
)
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and It.ItemType<>3
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
),0)
+
--مفكوك الكومبو
isnull((
select sum(D.AvgCost*
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)
)
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
),0)
-
--الكلى
isnull((
select SUM(D.AvgCost) 
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Canceled=0
),0)
+
--استلام الرسائل
isnull((
SELeCT sum(ttt.AvgCost)
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1
),0)
-
-- صادر فك وتركيب
isnull((
SELeCT sum(T.AvgCost)
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
),0)
+
--وارد فك وتركيب
isnull((
SELeCT sum(T.AvgCost)
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1
),0)
+
isnull((
SELeCT sum(TT.AvgCost)
from ProductionItemCollectionMotionMaster TT 
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
),0)
-
isnull((
SELeCT sum(T.AvgCost)
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
),0)


end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemBalExpDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemBalExpDate]
(
@StoreId bigint,
@ItemId bigint,
@ItemSerialNo nvarchar(100),
@ColorId bigint,
@SizeId bigint,
@ToDate datetime,
@ExpDate nvarchar(100)
)
returns float
--with encryption
as
begin

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

return 
--عادي
isnull((
select sum(D.Qty*D.UnitQty*
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)
)
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and It.ItemType<>3
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (D.ExpDate=@ExpDate or @ExpDate='')
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
),0)
+
--مفكوك الكومبو
isnull((
select sum(D.Qty*
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)
)
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
),0)
+
--الرصيد المتاح للكومبو من مكوناته
isnull((
select min(dbo.GetStoreItemBal(@StoreId,IC.ItemId,@ItemSerialNo,@ColorId,@SizeId,@ToDate)/IC.Qty)
from ItemComponants IC
left join Items It on(It.Id=IC.MainItemId)
where IC.MainItemId=@ItemId
and It.ItemType=3
),0)
-
--الكلى
isnull((
select SUM(D.Qty) 
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Canceled=0
),0)
+
--استلام الرسائل
isnull((
SELeCT sum(ttt.Qty)
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1
),0)
-
-- صادر فك وتركيب
isnull((
SELeCT sum(T.Qty)
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
),0)
+
--وارد فك وتركيب
isnull((
SELeCT sum(T.Qty)
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1
),0)
+
isnull((
SELeCT sum(TT.Qty)
from ProductionItemCollectionMotionMaster TT 
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
),0)
-
isnull((
SELeCT sum(T.TotalQty)
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
),0)


end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemLimit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemLimit](@ItemId int,@StoreId int)
returns float
as
begin
return(
--isnull(
(select Limit from ItemsPrices where ItemId=@ItemId AND StoreId=@StoreId)
--,(select LimitSub from Items where Id=@ItemId))
)end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemMaximum]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemMaximum](@ItemId int,@StoreId int)
returns float
as
begin
return(
--isnull(
(select Maximum from ItemsPrices where ItemId=@ItemId AND StoreId=@StoreId)
--,(select MaximumSub from Items where Id=@ItemId))
)end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemPrice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemPrice](@ItemId int,@StoreId int)

returns float
as
begin
return(
isnull(
(select Price from ItemsPrices where ItemId=@ItemId AND StoreId=@StoreId)
,
(select SalesPrice from Items where Id=@ItemId)
)
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemSales]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemSales]
(
@StoreId bigint,
@ItemId bigint,
@ToDate datetime,
@Flag int=0
)
returns float
--with encryption
as
begin
return 
--عادي
isnull((
select SUM(Bal*FlagValue) from (

select D.Flag,
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)FlagValue,
(D.Qty*D.UnitQty)Bal
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and It.ItemType<>3
and M.DayDate=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union All

select 0,
1. FlagValue,
(M.Qty)Bal
from ProductionItemCollectionMotionMaster M 
left join Items It on(It.Id=M.ItemId)
where (M.StoreId=@StoreId)
and M.ItemId=@ItemId
and It.ItemType<>3
and M.DayDate=@ToDate
and M.Temp=0
and M.Flag>40

union All

select 0,
-1. FlagValue,
(D.TotalQty)Bal
from ProductionItemCollectionMotionDetailsTo D
left join ProductionItemCollectionMotionMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
where (M.OreStoreId=@StoreId)
and D.ItemId=@ItemId
and It.ItemType<>3
and M.DayDate=@ToDate
and M.Temp=0
and M.Flag>40

)Tbl
where (
	(@Flag=1 and FlagValue>0)or
	(@Flag=2 and FlagValue<0 and Flag=13)or
	(@Flag=3 and FlagValue<0 and Flag<>13)or
	(@Flag=0)
)
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreItemSalesCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreItemSalesCost]
(
@StoreId bigint,
@ItemId bigint,
@ToDate datetime,
@Flag int=0
)
returns float
--with encryption
as
begin
return 
--عادي
isnull((
select SUM(Bal*FlagValue) from (

select D.Flag,
(case when F.ItemIn=1 or (D.Flag=8 and M.ToId=@StoreId) then 1. else -1. end)FlagValue,
(D.Value)Bal
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and It.ItemType<>3
and M.DayDate=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union All

select 0,
1. FlagValue,
(M.Qty*It.SalesPrice)Bal
from ProductionItemCollectionMotionMaster M 
left join Items It on(It.Id=M.ItemId)
where (M.StoreId=@StoreId)
and M.ItemId=@ItemId
and It.ItemType<>3
and M.DayDate=@ToDate
and M.Temp=0
and M.Flag>40

union All

select 0,
-1. FlagValue,
(D.TotalQty*It.SalesPrice)Bal
from ProductionItemCollectionMotionDetailsTo D
left join ProductionItemCollectionMotionMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=D.ItemId)
where (M.OreStoreId=@StoreId)
and D.ItemId=@ItemId
and It.ItemType<>3
and M.DayDate=@ToDate
and M.Temp=0
and M.Flag>40

)Tbl
where (
	(@Flag=1 and FlagValue>0)or
	(@Flag=2 and FlagValue<0 and Flag=13)or
	(@Flag=3 and FlagValue<0 and Flag<>13)or
	(@Flag=0)
)
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetStoreName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetStoreName](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from Stores where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccCurrencyId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubAccCurrencyId](@Main varchar(100),@Sub bigint)
returns int
--with encryption
AS
BEGIN

declare @CurrencyId int
select @CurrencyId=CurrencyId from AllSub where AccNo=@Main and Id=@Sub

return isnull(@CurrencyId,0)
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubAccName](@Main varchar(100),@Sub bigint)
returns varchar(1000)
--with encryption
AS
BEGIN
	
declare @name varchar(1000)
select @name=Name from AllSub where AccNo=@Main and Id=@Sub

return isnull(@name,'-')
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccNameLink]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubAccNameLink](@Link bigint,@Sub bigint)
returns varchar(1000)
--with encryption
AS
BEGIN
	
declare @name varchar(1000)

select @name=Name from AllSub where Id=@Sub and LinkFile=@Link

return isnull(@name,'')
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccNoLink]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubAccNoLink](@Link bigint,@Sub bigint)
returns varchar(1000)
--with encryption
AS
BEGIN


declare @AccNo varchar(1000)
	
if @Link=0
select @AccNo=''
else if @Link=99
select @AccNo=dbo.GetEmpArName(@Sub)
else 
select @AccNo=AccNo from AllSub where Id=@Sub and LinkFile=@Link

return isnull(@AccNo,'')
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccTelFieldName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubAccTelFieldName](@LinkFile int)
returns nvarchar(100)
--with encryption
as
begin

return (
		case @LinkFile
		when 1 then 'Tel+''-''+Mobile'
		when 2 then 'Tel1+''-''+Tel2+''-''+Tel3'
		when 3 then 'Tel+''-''+Mobile'
		when 4 then 'Tel+''-''+Mobile'
		when 5 then 'Tel+''-''+Mobile'
		when 6 then 'Tel+''-''+Mobile'
		when 7 then 'Tel+''-''+Mobile'
		when 8 then 'Tel+''-''+Mobile'
		when 9 then '''-'''
		when 10 then '''-'''
		when 11 then '''-'''
		when 12 then '''-'''
		else '''-''' end
		)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubAccUsingCount]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubAccUsingCount]
(
@LinkFile bigint,
@SubAccNo bigint
)
returns float
--with encryption
as
begin

declare @MainAccNo varchar(100)=[dbo].[GetMainAccNoLink](@LinkFile,@SubAccNo)
return
(
select SUM(a)
from
(

select COUNT(1) a
from EntryDt ED
where MainAccNo=@MainAccNo 
and SubAccNo=@SubAccNo

union all

select COUNT(1)
from Entry2
where MainAccNo1=@MainAccNo 
and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)

union all

select COUNT(1)
from Entry2
where MainAccNo2=@MainAccNo 
and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0)

union all

select COUNT(1)
from BankCash
where MainAccNo=@MainAccNo 
and SubAccNo=@SubAccNo

union all

select COUNT(1)
from BankCash
where (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo

union all

select COUNT(1)
from BankCash_G
where LinkFile=@LinkFile 
and SubAccNo=@SubAccNo


union all

select COUNT(1)
from BankCash_G
where (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo



union all

select COUNT(1)
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where LinkFile=@LinkFile 
and SubAccNo=@SubAccNo


union all

select COUNT(1)
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where MainLinkFile=@LinkFile
and BankId=@SubAccNo


union all

select COUNT(1)
from BankCash_G3
where FromLinkFile=@LinkFile 
and FromSubAccNo=@SubAccNo

union all

select COUNT(1)
from BankCash_G3
where ToLinkFile=@LinkFile 
and ToSubAccNo=@SubAccNo

union all

select COUNT(1)
from BankCash2
where (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo



union all

select COUNT(1)
from BankCash3
where MainAccNo=@MainAccNo 


union all

select COUNT(1)
from BankCash3
where (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo


union all

select COUNT(1)
from BankCash4
where MoneyChangerId=@SubAccNo 
and @LinkFile=8


union all

select COUNT(1)
from BankCash4
where (
	(dbo.GetSafeAccNo(BankId)=@MainAccNo and Flag in(1,2) and @LinkFile=5) or
	(dbo.GetBankAccNo(BankId)=@MainAccNo and Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo


union all

--===========================================================================
--===========================================================================




select COUNT(1)
from Invoices
where SellerId=@SubAccNo
and @LinkFile=7


union all

select COUNT(1)
from Nolon
where SellerId=@SubAccNo
and @LinkFile=7

--===========================================================================
--===========================================================================
union all

select COUNT(1)
from CustomerInvoices
where CustomerId=@SubAccNo
and @LinkFile=1

--===========================================================================
union all

select COUNT(1)
from CustomerInvoicesDt dt
left join CustomerInvoices d on(dt.InvoiceNo=d.InvoiceNo) 
where CustomerId=@SubAccNo
and @LinkFile=1

union all

select COUNT(1)
from Invoices D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where D.CustomerId=@SubAccNo
and @LinkFile=1

union all

select COUNT(1)
from Nolon D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where D.CustomerId=@SubAccNo
and @LinkFile=1


--===========================================================================
--===========================================================================

--===========================================================================المبيعات والمشتريات

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where ToId=@SubAccNo
and (
	(@LinkFile=1 and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(@LinkFile=2 and Flag in(9,10,19,20,29,30)) 
	)
	
--===========================================================================
union all

select COUNT(1)
from SalesMaster D
left join SalesDetails Dt on(D.StoreId=dt.StoreId and D.Flag=dt.Flag and D.InvoiceNo=Dt.InvoiceNo )
where ToId=@SubAccNo
and (
	(@LinkFile=1 and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(@LinkFile=2 and D.Flag in(9,10,19,20,29,30)) 
	)

--===========================================================================
union all

select COUNT(1)
from SalesMaster
where ToId=@SubAccNo
and (
	(@LinkFile=1 and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(@LinkFile=2 and Flag in(9,10,19,20,29,30)) 
	)

--===========================================================================
union all

select COUNT(1)
from SalesMaster
where ToId=@SubAccNo
and (
	(@LinkFile=1 and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(@LinkFile=2 and Flag in(9,10,19,20,29,30)) 
	)
--===========================================================================
union all

select COUNT(1)
from SalesMaster
where ToId=@SubAccNo
and (
	(@LinkFile=1 and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(@LinkFile=2 and Flag in(9,10,19,20,29,30)) 
	)
--===========================================================================
union all

select COUNT(1)
from SalesMaster
where ToId=@SubAccNo
and (
	(@LinkFile=1 and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(@LinkFile=2 and Flag in(9,10,19,20,29,30)) 
	)
--===========================================================================


--===========================================================================النقدى والفيزا

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where ((ToId=@SubAccNo and @LinkFile=1) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where ((ToId=@SubAccNo and @LinkFile=1) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where ((ToId=@SubAccNo and @LinkFile=2) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag in(9,19,29)
and PaymentType in(1,2,3,5)

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where ((ToId=@SubAccNo and @LinkFile=2) or (SaveId=@SubAccNo and @LinkFile=5))
and Flag in(10,20,30)
and PaymentType in(1,2,3,5)


--===========================================================================حساب المبيعات والمشتريات

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(11,13,15,21,23)
and AccNo=@MainAccNo
and @SubAccNo=0

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(12,14,16,22,24)
and AccNo=@MainAccNo
and @SubAccNo=0

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(9,19,29)
and AccNo=@MainAccNo
and @SubAccNo=0

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(10,20,30)
and AccNo=@MainAccNo
and @SubAccNo=0



--===========================================================================حسابات الخصم والإضافة

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(11,13,15,21,23)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(12,14,16,22,24)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(9,19,29)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0

union all

select COUNT(1)
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where Flag in(10,20,30)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0

)tbl
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSubJobName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSubJobName](@MainJobId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from SubJobs where MainJobId=@MainJobId and Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[getsum]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getsum]
(@Flag bigint,@StoreId bigint,@InvoiceNo bigint)
returns float
--with encryption
as
begin
return
(
select 
(case when Sum (D.Value) < M.MinPerPerson * M.NoOfPersons 
then M.MinPerPerson * M.NoOfPersons
else Sum (D.Value) end)
--+M.ServiceValue+M.Taxvalue-M.DiscountValue
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
where M.Flag=@Flag and M.StoreId=@StoreId and M.InvoiceNo=@InvoiceNo
group by M.Flag,M.StoreId,M.InvoiceNo,M.ServiceValue,M.Taxvalue,M.DiscountValue,M.MinPerPerson,M.NoOfPersons 
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[getsumDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getsumDeleted]
(@Flag bigint,@StoreId bigint,@InvoiceNo bigint,@LastLine bigint)
returns float
--with encryption
as
begin
return
(
select 
(case when Sum (D.Value) < M.MinPerPerson * M.NoOfPersons 
then M.MinPerPerson * M.NoOfPersons
else Sum (D.Value) end)
--+M.ServiceValue+M.Taxvalue-M.DiscountValue
from DeletedSalesMaster M
left join DeletedSalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo and M.LastLine=D.LastLine)
where M.Flag=@Flag and M.StoreId=@StoreId and M.InvoiceNo=@InvoiceNo and M.LastLine=@LastLine
group by M.Flag,M.StoreId,M.InvoiceNo,M.ServiceValue,M.Taxvalue,M.DiscountValue,M.MinPerPerson,M.NoOfPersons 
)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSupplierName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSupplierName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from Suppliers where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetSuppPersonName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetSuppPersonName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return(select Name from SuppPersons where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetTaxAcc]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetTaxAcc]() returns varchar(100)
--with encryption
as
begin
return isnull((select TaxAcc from Statics),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetTownName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetTownName](@CityId bigint,@AreaId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return(select Name from Towns where CityId=@CityId and AreaId=@AreaId and Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetTypeName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetTypeName](@GroupId bigint,@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return isnull((select Name from Types where GroupId=@GroupId and Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetValue2Ded]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetValue2Ded]
(
@StoreId bigint,
@InvoiceNo bigint,
@DeliveredDate datetime
)
returns float
--with encryption
as
begin
return
isnull((
select sum((Case when Flag=2 then 1. else -1. end)*Value2Ded)
from BankCash_G2 T
where Canceled=0 
and StoreId=@StoreId 
and StoreInvoiceNo=@InvoiceNo
and DayDate<=@DeliveredDate
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
and DD.StoreId=@StoreId and DD.InvoiceNo=@InvoiceNo
and T.DayDate<=D.DeliveredDate
)
),0)
+
isnull((
select sum(-T.Debit+T.Credit)
from EntryDt T
left join Entry E on(E.EntryTypeId=T.EntryTypeId and E.InvoiceNo=T.InvoiceNo)
where T.CostTypeId=0
and MainAccNo=(select BankCash_G2_Flag2_DedAcc from Statics)
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
and DD.StoreId=@StoreId and DD.InvoiceNo=@InvoiceNo
and E.DayDate<=D.DeliveredDate
)
),0)
+
isnull((
select sum(Value)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and MainAccNo2=(select BankCash_G2_Flag2_DedAcc from Statics)
and exists(
select D.StoreId from ImportMessages D
left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
where DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
and DD.StoreId=@StoreId and DD.InvoiceNo=@InvoiceNo
and T.DayDate<=D.DeliveredDate
)
),0)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetVisitingTypesName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetVisitingTypesName](@Id bigint)
returns nvarchar(max)
--with encryption
as
begin
return(select Name from VisitingTypes where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetVisitingTypesSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetVisitingTypesSerialId](@Id bigint)
returns bigint
--with encryption
as
begin
return(select SerialId from VisitingTypes where Id=@Id)
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetVisitingTypesSerialName]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetVisitingTypesSerialName](@Id bigint)
returns nvarchar(100)
--with encryption
as
begin
return isnull((select Name from SerialTypes where Id=@Id),'-')
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetYearStartingDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[GetYearStartingDate]()returns datetime
as

begin

if month(GETDATE())>=7
	return cast(cast(year(GETDATE()) as nvarchar(10))+'-07-01' as date)

return cast(cast(year(GETDATE())-1 as nvarchar(10))+'-07-01' as date)

end
GO
/****** Object:  UserDefinedFunction [dbo].[GetYearStartingDateByDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[GetYearStartingDateByDate](@DayDate datetime)returns datetime  
as  
  
begin  
  
if month(@DayDate)>=7  
 return cast(cast(year(@DayDate) as nvarchar(10))+'-07-01' as date)  
  
return cast(cast(year(@DayDate)-1 as nvarchar(10))+'-07-01' as date)  
  
end  
GO
/****** Object:  UserDefinedFunction [dbo].[IsWeekHoliday]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[IsWeekHoliday](@date datetime,@EmpId bigint)returns bigint
--with encryption
as
begin
return 
isnull((
select case
when DATENAME(WEEKDAY,@date)='Saturday' and Saturday=0 then 1 
when DATENAME(WEEKDAY,@date)='Sunday' and Sunday=0 then 1 
when DATENAME(WEEKDAY,@date)='Monday' and Monday=0 then 1 
when DATENAME(WEEKDAY,@date)='Tuesday' and Tuesday=0 then 1 
when DATENAME(WEEKDAY,@date)='Wednesday' and Wednesday=0 then 1 
when DATENAME(WEEKDAY,@date)='Thursday' and Thursday=0 then 1 
when DATENAME(WEEKDAY,@date)='Friday' and Friday=0 then 1 
else 0 end
from Employees where Id=@EmpId
),0)

end
GO
/****** Object:  UserDefinedFunction [dbo].[KidneysWashMonths]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[KidneysWashMonths](
@CaseId bigint,
@Month int,
@Year int
)
returns varchar(1000)
as
begin
declare @tbl table(Name varchar(100),YY int,MM int,Line bigint identity(1,1))
insert @tbl

select distinct dbo.GetArMonthName(month(daydate)),year(daydate),month(daydate)
from KidneysWashMotion
where CaseId=@CaseId
and MM=@Month 
and YY=@Year
order by year(daydate),month(daydate)

declare @str varchar(1000)=''
declare @x bigint=1,@max bigint=(select MAX(Line) from @tbl)
while @x<=@max
begin
select @str+=Name+' - ' from @tbl where Line=@x
set @x+=1
end

if @str='' return ''
return SUBSTRING(@str,1,LEN(@str)-2)
end
GO
/****** Object:  UserDefinedFunction [dbo].[LoadClinicschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[LoadClinicschedule](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return

 isnull((select 'السبت ' + cast((case when hh>12 then hh-12 else hh end)as varchar(10))+':'+dbo.FillZero(mm,2)+(case when hh>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Saturday=1),'')+'
'+isnull((select 'الأحد ' + cast((case when hh2>12 then hh2-12 else hh2 end)as varchar(10))+':'+dbo.FillZero(mm2,2)+ (case when hh2>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Sunday=1),'')+'
'+isnull((select 'الإثنين ' + cast((case when hh3>12 then hh3-12 else hh3 end)as varchar(10))+':'+dbo.FillZero(mm3,2)+ (case when hh3>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Monday=1),'')+'
'+isnull((select 'الثلاثاء ' + cast((case when hh4>12 then hh4-12 else hh4 end)as varchar(10))+':'+dbo.FillZero(mm4,2)+ (case when hh4>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Tuesday=1),'')+'
'+isnull((select 'الأربعاء ' + cast((case when hh5>12 then hh5-12 else hh5 end)as varchar(10))+':'+dbo.FillZero(mm5,2)+ (case when hh5>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Wednesday=1),'')+'
'+isnull((select 'الخميس ' + cast((case when hh6>12 then hh6-12 else hh6 end)as varchar(10))+':'+dbo.FillZero(mm6,2)+ (case when hh6>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Thursday=1),'')+'
'+isnull((select 'الجمعة ' + cast((case when hh7>12 then hh7-12 else hh7 end)as varchar(10))+':'+dbo.FillZero(mm7,2)+ (case when hh7>=12 then ' مساء' else ' صباحا' end) from Clinics where Id=@Id and Friday=1),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[LoadEmpschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[LoadEmpschedule](@EmpId bigint)
returns nvarchar(1000)
--with encryption
as
begin
return

 isnull((select 'Tel: '+HomePhone+' - '+Mobile from Employees where Id=@EmpId),'')+'
'+isnull((select 'السبت ' + cast((case when hh>12 then hh-12 else hh end)as varchar(10))+':'+dbo.FillZero(mm,2)+(case when hh>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Saturday=1),'')+'
'+isnull((select 'الأحد ' + cast((case when hh2>12 then hh2-12 else hh2 end)as varchar(10))+':'+dbo.FillZero(mm2,2)+ (case when hh2>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Sunday=1),'')+'
'+isnull((select 'الإثنين ' + cast((case when hh3>12 then hh3-12 else hh3 end)as varchar(10))+':'+dbo.FillZero(mm3,2)+ (case when hh3>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Monday=1),'')+'
'+isnull((select 'الثلاثاء ' + cast((case when hh4>12 then hh4-12 else hh4 end)as varchar(10))+':'+dbo.FillZero(mm4,2)+ (case when hh4>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Tuesday=1),'')+'
'+isnull((select 'الأربعاء ' + cast((case when hh5>12 then hh5-12 else hh5 end)as varchar(10))+':'+dbo.FillZero(mm5,2)+ (case when hh5>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Wednesday=1),'')+'
'+isnull((select 'الخميس ' + cast((case when hh6>12 then hh6-12 else hh6 end)as varchar(10))+':'+dbo.FillZero(mm6,2)+ (case when hh6>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Thursday=1),'')+'
'+isnull((select 'الجمعة ' + cast((case when hh7>12 then hh7-12 else hh7 end)as varchar(10))+':'+dbo.FillZero(mm7,2)+ (case when hh7>=12 then ' مساء' else ' صباحا' end) from Employees where Id=@EmpId and Friday=1),'')

end
GO
/****** Object:  UserDefinedFunction [dbo].[LoadOperationsRoomschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[LoadOperationsRoomschedule](@Id bigint)
returns nvarchar(1000)
--with encryption
as
begin
return

 isnull((select 'السبت ' + cast((case when hh>12 then hh-12 else hh end)as varchar(10))+':'+dbo.FillZero(mm,2)+(case when hh>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Saturday=1),'-')+'
'+isnull((select 'الأحد ' + cast((case when hh2>12 then hh2-12 else hh2 end)as varchar(10))+':'+dbo.FillZero(mm2,2)+ (case when hh2>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Sunday=1),'-')+'
'+isnull((select 'الإثنين ' + cast((case when hh3>12 then hh3-12 else hh3 end)as varchar(10))+':'+dbo.FillZero(mm3,2)+ (case when hh3>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Monday=1),'-')+'
'+isnull((select 'الثلاثاء ' + cast((case when hh4>12 then hh4-12 else hh4 end)as varchar(10))+':'+dbo.FillZero(mm4,2)+ (case when hh4>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Tuesday=1),'-')+'
'+isnull((select 'الأربعاء ' + cast((case when hh5>12 then hh5-12 else hh5 end)as varchar(10))+':'+dbo.FillZero(mm5,2)+ (case when hh5>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Wednesday=1),'-')+'
'+isnull((select 'الخميس ' + cast((case when hh6>12 then hh6-12 else hh6 end)as varchar(10))+':'+dbo.FillZero(mm6,2)+ (case when hh6>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Thursday=1),'-')+'
'+isnull((select 'الجمعة ' + cast((case when hh7>12 then hh7-12 else hh7 end)as varchar(10))+':'+dbo.FillZero(mm7,2)+ (case when hh7>=12 then ' مساء' else ' صباحا' end) from OperationsRooms where Id=@Id and Friday=1),'-')

end
GO
/****** Object:  UserDefinedFunction [dbo].[MonthDays]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[MonthDays]
(
@Month bigint,
@Year bigint
)
RETURNS @tbl table(Line Datetime)
--with encryption
AS
BEGIN
	
	declare @x bigint=1,@max bigint=dbo.DaysInMonth(@month,@year)

	while @x<=@max
	begin
	insert @tbl select CAST(@Year as varchar(4))+'-'+CAST(@Month as varchar(2))+'-'+CAST(@x as varchar(2))
	select @x+=1
	end
	RETURN 
END
GO
/****** Object:  UserDefinedFunction [dbo].[MyGetDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[MyGetDate]()
returns datetime
--with encryption
as
begin
declare @date datetime =getdate()
return cast(
		 cast(DATEPART(yy,getdate()) as nvarchar)+'-'+
		 cast(DATEPART(MM,getdate()) as nvarchar)+'-'+
		 cast(DATEPART(dd,getdate()) as nvarchar)
		 as datetime)
end
GO
/****** Object:  UserDefinedFunction [dbo].[MyGetDateTime]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[MyGetDateTime]()
returns nvarchar(100)
--with encryption
as
begin
declare @date datetime =getdate()
return cast(
dbo.FillZero(cast(DATEPART(YEAR,@date) as nvarchar(10)),4)+'-'+
dbo.FillZero(cast(DATEPART(MONTH,@date) as nvarchar(10)),2)+'-'+
dbo.FillZero(cast(DATEPART(DAY,@date) as nvarchar(10)),2)+' '+
dbo.FillZero(cast(DATEPART(HOUR,@date) as nvarchar(10)),2)+':'+
dbo.FillZero(cast(DATEPART(MINUTE,@date) as nvarchar(10)),2)+':'+
dbo.FillZero(cast(DATEPART(SECOND,@date) as nvarchar(10)),2)
as nvarchar(100))
end
GO
/****** Object:  UserDefinedFunction [dbo].[MyRound]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[MyRound](@Val1 float,@Val2 float)
returns bigint
--with encryption
as
begin
return (case when (cast(@Val1/@Val2 as bigint)<@Val1/@Val2) then cast(@Val1/@Val2 as bigint)+1 else cast(@Val1/@Val2 as bigint) end)
end
GO
/****** Object:  UserDefinedFunction [dbo].[NumToCode]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[NumToCode](
@n bigint
)
returns nvarchar(100)
as
begin

declare @i int=1
declare @str nvarchar(100)=''
while @n>0
begin
	--select @str+=cast(@n%36 as nvarchar(100))
	select @str+=(case @n%36 
	when 0 then '0'
	when 1 then '1'
	when 2 then '2'
	when 3 then '3'
	when 4 then '4'
	when 5 then '5'
	when 6 then '6'
	when 7 then '7'
	when 8 then '8'
	when 9 then '9'
	when 10 then 'A'
	when 11 then 'B'
	when 12 then 'C'
	when 13 then 'D'
	when 14 then 'E'
	when 15 then 'F'
	when 16 then 'G'
	when 17 then 'H'
	when 18 then 'I'
	when 19 then 'J'
	when 20 then 'K'
	when 21 then 'L'
	when 22 then 'M'
	when 23 then 'N'
	when 24 then 'O'
	when 25 then 'P'
	when 26 then 'Q'
	when 27 then 'R'
	when 28 then 'S'
	when 29 then 'T'
	when 30 then 'U'
	when 31 then 'V'
	when 32 then 'W'
	when 33 then 'X'
	when 34 then 'Y'
	when 35 then 'Z'
	else '#' end)
	select @n=(@n-@n%36)/36
	select @i+=1
end

return @str


end
GO
/****** Object:  UserDefinedFunction [dbo].[SplitString]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create  FUNCTION [dbo].[SplitString]( @Char nvarchar(10),@stringToSplit nVARCHAR(4000),@Index int)
RETURNS nvarchar(1000)
AS

BEGIN

declare @returnList TABLE ([Name] [nvarchar] (4000),Line int identity(0,1))DECLARE @name NVARCHAR(255)

DECLARE @pos INT

WHILE CHARINDEX(@Char, @stringToSplit) > 0
BEGIN
	SELECT @pos  = CHARINDEX(@Char, @stringToSplit)  
	SELECT @name = SUBSTRING(@stringToSplit, 1, @pos-1)
	INSERT INTO @returnList SELECT @name
	SELECT @stringToSplit = SUBSTRING(@stringToSplit, @pos+1, LEN(@stringToSplit)-@pos)
END

INSERT INTO @returnList SELECT @stringToSplit

RETURN(select Name from @returnList where Line=@Index)

END
GO
/****** Object:  UserDefinedFunction [dbo].[Tafkeet]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Tafkeet]
(@val decimal(30,2))
returns nvarchar(4000)
--with encryption
as
begin
declare @str nvarchar(100)=cast(@val as nvarchar(100))
select @str=REPLICATE('0',15-LEN(@str))+@str

declare @s1 nvarchar(1000),@s2 nvarchar(1000),@s3 nvarchar(1000),@s4 nvarchar(1000),@s5 nvarchar(1000),@s6 nvarchar(1000),@s7 nvarchar(1000),@s8 nvarchar(1000),@s9 nvarchar(1000),@s10 nvarchar(1000),@s11 nvarchar(1000),@s12 nvarchar(1000),@s13 nvarchar(1000),@s14 nvarchar(1000),@s15 nvarchar(1000),@s16 nvarchar(1000),@s17 nvarchar(1000),@s18 nvarchar(1000),@s19 nvarchar(1000)

select @s1=case SUBSTRING(@str,1,1) when '1' then 'مائة' when '2' then 'مائتان' when '3' then 'ثلاثمائة' when '4' then 'أربعمائة' when '5' then 'خمسمائة' when '6' then 'ستمائة' when '7' then 'سبعمائة' when '8' then 'ثمانمائة' when '9' then 'تسعمائة' else '' end
select @s2=case SUBSTRING(@str,2,1) when '1' then 'عشرة' when '2' then 'عشرون' when '3' then 'ثلاثون' when '4' then 'أربعون' when '5' then 'خمسون' when '6' then 'ستون' when '7' then 'سبعون' when '8' then 'ثمانون' when '9' then 'تسعون' else '' end
select @s3=case SUBSTRING(@str,3,1) when '1' then 'واحد' when '2' then 'اثنان' when '3' then 'ثلاثة' when '4' then 'أربعة' when '5' then 'خمسة' when '6' then 'ستة' when '7' then 'سبعة' when '8' then 'ثمانية' when '9' then 'تسعة' else '' end

select @s4=case SUBSTRING(@str,4,1) when '1' then 'مائة' when '2' then 'مائتان' when '3' then 'ثلاثمائة' when '4' then 'أربعمائة' when '5' then 'خمسمائة' when '6' then 'ستمائة' when '7' then 'سبعمائة' when '8' then 'ثمانمائة' when '9' then 'تسعمائة' else '' end
select @s5=case SUBSTRING(@str,5,1) when '1' then 'عشرة' when '2' then 'عشرون' when '3' then 'ثلاثون' when '4' then 'أربعون' when '5' then 'خمسون' when '6' then 'ستون' when '7' then 'سبعون' when '8' then 'ثمانون' when '9' then 'تسعون' else '' end
select @s6=case SUBSTRING(@str,6,1) when '1' then 'واحد' when '2' then 'اثنان' when '3' then 'ثلاثة' when '4' then 'أربعة' when '5' then 'خمسة' when '6' then 'ستة' when '7' then 'سبعة' when '8' then 'ثمانية' when '9' then 'تسعة' else '' end

select @s7=case SUBSTRING(@str,7,1) when '1' then 'مائة' when '2' then 'مائتان' when '3' then 'ثلاثمائة' when '4' then 'أربعمائة' when '5' then 'خمسمائة' when '6' then 'ستمائة' when '7' then 'سبعمائة' when '8' then 'ثمانمائة' when '9' then 'تسعمائة' else '' end
select @s8=case SUBSTRING(@str,8,1) when '1' then 'عشرة' when '2' then 'عشرون' when '3' then 'ثلاثون' when '4' then 'أربعون' when '5' then 'خمسون' when '6' then 'ستون' when '7' then 'سبعون' when '8' then 'ثمانون' when '9' then 'تسعون' else '' end
select @s9=case SUBSTRING(@str,9,1) when '1' then 'واحد' when '2' then 'اثنان' when '3' then 'ثلاثة' when '4' then 'أربعة' when '5' then 'خمسة' when '6' then 'ستة' when '7' then 'سبعة' when '8' then 'ثمانية' when '9' then 'تسعة' else '' end

select @s10=case SUBSTRING(@str,10,1) when '1' then 'مائة' when '2' then 'مائتان' when '3' then 'ثلاثمائة' when '4' then 'أربعمائة' when '5' then 'خمسمائة' when '6' then 'ستمائة' when '7' then 'سبعمائة' when '8' then 'ثمانمائة' when '9' then 'تسعمائة' else '' end
select @s11=case SUBSTRING(@str,11,1) when '1' then 'عشرة' when '2' then 'عشرون' when '3' then 'ثلاثون' when '4' then 'أربعون' when '5' then 'خمسون' when '6' then 'ستون' when '7' then 'سبعون' when '8' then 'ثمانون' when '9' then 'تسعون' else '' end
select @s12=case SUBSTRING(@str,12,1) when '1' then 'واحد' when '2' then 'اثنان' when '3' then 'ثلاثة' when '4' then 'أربعة' when '5' then 'خمسة' when '6' then 'ستة' when '7' then 'سبعة' when '8' then 'ثمانية' when '9' then 'تسعة' else '' end

select @s14=case SUBSTRING(@str,14,1) when '1' then 'عشرة' when '2' then 'عشرون' when '3' then 'ثلاثون' when '4' then 'أربعون' when '5' then 'خمسون' when '6' then 'ستون' when '7' then 'سبعون' when '8' then 'ثمانون' when '9' then 'تسعون' else '' end
select @s15=case SUBSTRING(@str,15,1) when '1' then 'واحد' when '2' then 'اثنان' when '3' then 'ثلاثة' when '4' then 'أربعة' when '5' then 'خمسة' when '6' then 'ستة' when '7' then 'سبعة' when '8' then 'ثمانية' when '9' then 'تسعة' else '' end


select @str=@s1
select @str=@str+(case when @str<>'' and @s3<>'' then ' و ' else '' end)+@s3
select @str=@str+(case when @str<>'' and @s2<>'' then ' و ' else '' end)+@s2
select @str=@str+(case when @s1+@s2+@s3<>'' then ' مليار ' else '' end)

select @str=@str+(case when @str<>'' and @s4<>'' then ' و ' else '' end)+@s4
select @str=@str+(case when @str<>'' and @s6<>'' then ' و ' else '' end)+@s6
select @str=@str+(case when @str<>'' and @s5<>'' then ' و ' else '' end)+@s5
select @str=@str+(case when @s4+@s5+@s6<>'' then ' مليون ' else '' end)

select @str=@str+(case when @str<>'' and @s7<>'' then ' و ' else '' end)+@s7
select @str=@str+(case when @str<>'' and @s9<>'' then ' و ' else '' end)+@s9
select @str=@str+(case when @str<>'' and @s8<>'' then ' و ' else '' end)+@s8
select @str=@str+(case when @s7+@s8+@s9<>'' then ' ألف ' else '' end)

select @str=@str+(case when @str<>'' and @s10<>'' then ' و ' else '' end)+@s10
select @str=@str+(case when @str<>'' and @s12<>'' then ' و ' else '' end)+@s12
select @str=@str+(case when @str<>'' and @s11<>'' then ' و ' else '' end)+@s11

select @str=@str+(case when @str<>'' then (case when cast(@val as bigint) between 3 and 10 then ' جنيهات ' else ' جنيها ' end) else '' end)

select @str=@str+(case when @str<>'' and @s15<>'' then ' و ' else '' end)+@s15
select @str=@str+(case when @str<>'' and @s14<>'' then ' و ' else '' end)+@s14

select @str=@str+(case when @s15+@s14<>'' then (case when @val-cast(@val as bigint) between .03 and .1 then ' قروش ' else ' قرشا ' end) else '' end)

select @str=REPLACE(@str,'واحد و عشرة','أحد عشر')
select @str=REPLACE(@str,'اثنان و عشرة','اثنا عشر')
select @str=REPLACE(@str,'ثلاثة و عشرة','ثلاثة عشر')
select @str=REPLACE(@str,'أربعة و عشرة','أربعة عشر')
select @str=REPLACE(@str,'خمسة و عشرة','خمسة عشر')
select @str=REPLACE(@str,'ستة و عشرة','ستة عشر')
select @str=REPLACE(@str,'سبعة و عشرة','سبعة عشر')
select @str=REPLACE(@str,'ثمانية و عشرة','ثمانية عشر')
select @str=REPLACE(@str,'تسعة و عشرة','تسعة عشر')

select @str=@str+(case when @str<>'' then ' فقط لا غير ' else '' end)

return @str
end
GO
/****** Object:  UserDefinedFunction [dbo].[TestSalesFlagsItemIn]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[TestSalesFlagsItemIn](@FlagId int)
returns float
--with encryption
as
begin

if exists(
select Id from SalesFlags 
where Id=@FlagId
and (ItemIn=1 or Id=8)
)
return 1.
return 0

end
GO
/****** Object:  UserDefinedFunction [dbo].[ToStrDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[ToStrDate]
(
@Date datetime
)
returns nvarchar(10)
--with encryption
as
begin
return isnull(replace(CAST(CAST(@Date as Date)as nvarchar(10)),'-','/'),'')
end
GO
/****** Object:  UserDefinedFunction [dbo].[ToStrDateTime]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[ToStrDateTime]  
(  
@Date datetime  
)  
returns nvarchar(20)  
--with encryption  
as  
begin  
return CAST(CAST(@Date as Date)as nvarchar(10))+' '+CAST(CAST(@Date as time)as nvarchar(8))  
end
GO
/****** Object:  UserDefinedFunction [dbo].[ToStrTime]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[ToStrTime]
(
@Date datetime
)
returns nvarchar(8)
--with encryption
as
begin
return CAST(CAST(@Date as time)as nvarchar(8))
end
GO
/****** Object:  UserDefinedFunction [dbo].[x]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[x] ()returns varbinary(max)
--with encryption
as
begin
return (select TEXTPTR(logo) from Statics)
end
GO
/****** Object:  UserDefinedFunction [dbo].[Fn_AllItemMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[Fn_AllItemMotion]
(
@StoreId bigint,
@ItemId bigint,
@ToDate datetime
)
returns table
--with encryption
as

return(

Select M.DayDate,M.StoreId,It.GroupId,It.TypeId,It.Id ItemId,D.ExpDate,D.ExpireDate,
(case when F.ItemIn=1 then /*D.Value*/D.AvgCost else -D.AvgCost end) AvgCost,
(D.Qty*D.UnitQty*(case when F.ItemIn=1 then 1. else -1. end))Qty,D.ItemSerialNo
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
left join Items_View It on(It.Id=D.ItemId)
where (M.StoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
--and (isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)=0 or M.Flag not in(9,10,13,14,29,30))

union all

Select M.DayDate,M.ToId,It.GroupId,It.TypeId,It.Id,D.ExpDate,D.ExpireDate,
(D.AvgCost),
(D.Qty*D.UnitQty),D.ItemSerialNo
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
left join Items_View It on(It.Id=D.ItemId)
where (M.ToId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag=8
--and (isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)=0 or M.Flag not in(9,10,13,14,29,30))

union all

--مفكوك الكومبو
Select M.DayDate,M.StoreId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
(case when F.ItemIn=1 then /*D.Value*/D.AvgCost else -D.AvgCost end) AvgCost,
(D.Qty*(case when F.ItemIn=1 then 1. else -1. end))Qty,''
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
left join Items_View It on(It.Id=D.ItemId)
where (M.StoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
--and (isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)=0 or M.Flag not in(9,10,13,14,29,30))

union all

--مفكوك الكومبو222222
Select M.DayDate,M.ToId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
(D.Value),
(D.Qty),''
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
left join Items_View It on(It.Id=D.ItemId)
where (M.ToId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag=8
--and (isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)=0 or M.Flag not in(9,10,13,14,29,30))

union all

--الكلى
Select M.DayDate,isnull((Select KidneysWashStoreId from Statics),0),It.GroupId,It.TypeId,It.Id,'','1900-01-01',
-(D.AvgCost) AvgCost,
-(D.Qty) ,''
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join Items_View It on(It.Id=D.ItemId)
where (isnull((Select KidneysWashStoreId from Statics),0)=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and M.DayDate<=@ToDate
and M.Canceled=0

union all

--استلام الرسائل
Select t.DeliveredDate,ttt.StoreId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
(ttt.AvgCost) AvgCost,
(ttt.Qty),''
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Items_View It on(It.Id=TTT.ItemId)
where (ttt.StoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1

union all

-- صادر فك وتركيب
Select TT.DayDate,T.StoreId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
-(T.AvgCost),
-(T.Qty),''
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Items_View It on(It.Id=T.ItemId)
where (T.StoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and TT.DayDate<=@ToDate
and TT.Temp=0

union all

--وارد فك وتركيب
Select TT.DayDate2,T.StoreId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
(T.AvgCost),
(T.Qty),''
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Items_View It on(It.Id=T.ItemId)
where (T.StoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1

union all

Select TT.DayDate,TT.StoreId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
(TT.AvgCost),
(TT.Qty),''
from ProductionItemCollectionMotionMaster TT 
left join Items_View It on(It.Id=TT.ItemId)
where (TT.StoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40

union all

Select TT.DayDate,TT.OreStoreId,It.GroupId,It.TypeId,It.Id,'','1900-01-01',
-(T.AvgCost),
-(T.TotalQty),''
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Items_View It on(It.Id=T.ItemId)
where (TT.OreStoreId=@StoreId or @StoreId=0)
and (It.Id=@ItemId or @ItemId=0)
and It.ItemType<>3
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40

)
GO
/****** Object:  StoredProcedure [dbo].[AccontMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccontMotion]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromDate datetime,
@ToDate datetime,
@Detailed bigint,
@DetailedInvoice bigint,
@WindowId bigint,
@CostCenterId bigint,
@CostCenterSubId bigint
)
--with encryption
as


exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


declare @LinkFile bigint,@MotionType bigint,@EndType bigint
select @LinkFile=LinkFile,@MotionType=MotionType,@EndType=EndType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @CurrencyId int= dbo.GetAllCurrencyId(@SubAccNo,@LinkFile)
select @CurrencyId=1 where @CurrencyId=0
declare @CurrencyName nvarchar(100)=dbo.GetCurrencyName(@CurrencyId)

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @Bal0 float=dbo.Bal0(@MainAccNo,@SubAccNo,@FromDate-1,0,@CostCenterId,@CostCenterSubId)

declare @CheckSum1 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,1,@ToDate)
declare @CheckSum2 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,2,@ToDate)
declare @CheckSum3 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,3,@ToDate)
declare @GetCheckReturnCount float=dbo.GetCheckReturnCount(@LinkFile,@SubAccNo,@FromDate,@ToDate)
declare @CurrentBal float=dbo.Bal0(@MainAccNo,@SubAccNo,@ToDate,0,@CostCenterId,@CostCenterSubId)

declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
declare @InPatientSubAccNo int=isnull((select top 1 InPatientSubAccNo from Statics),0)

declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
declare @OutPatientSubAccNo int=isnull((select top 1 OutPatientSubAccNo from Statics),0)

declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
declare @OtherSubAccNo int=isnull((select top 1 OtherSubAccNo from Statics),0)

declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
declare @CaseInvoicesDiscountSubAccNo int=isnull((select top 1 CaseInvoicesDiscountSubAccNo from Statics),0)

declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()
declare @OperationSubAccNo int=dbo.GetOperationSubAccNo()
declare @OperationSubAccNo2 int=dbo.GetOperationSubAccNo2()


select * from 
(

select @MainAccNo MyMainAccNo,@SubAccNo MySubAccNo,dbo.GetSubAccName(@MainAccNo,@SubAccNo) MyAllSub_Name,
0 MyFlag,@MotionType MotionType,0 InvoiceNo,@FromDate-1 DayDate,
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr,
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) DbLocal,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) CrLocal,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'رصيد أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyId CurrencyId,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price,
'-' CostCenterName,'-' CostCenterSubName
where @WindowId=0

union all


select MyMainAccNo,MySubAccNo,MyAllSub.Name MyAllSub_Name,
MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Db,Cr,
DbLocal,CrLocal,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,
MainAccNo,Ch.Name,
SubAccNo,AllSub.Name,
SalesItems,
SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,T.CurrencyId,Cu.Name,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
Qty,Price,
CC.Name,
CCs.Name
from dbo.Fn_AllEntry(@MainAccNo,@SubAccNo,@FromDate,@ToDate,@Detailed,@DetailedInvoice,0)T
left join Chart Ch on(Ch.Id=MainAccNo)
left join AllSub MyAllSub on(MyAllSub .AccNo=MyMainAccNo and MyAllSub.Id=MySubAccNo)
left join AllSub on(AllSub.AccNo=MainAccNo and AllSub.Id=SubAccNo)
left join Currencies Cu on(Cu.Id=T.CurrencyId)
left join CostCenters CC on(CC.Id=CostCenterId)
left join CostCenterSubs CCS on(CCS.Id=CostCenterSubId)
where MyMainAccNo=@MainAccNo 
and (WindowId=@WindowId or @WindowId=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (CostCenterSubId=@CostCenterSubId or @CostCenterSubId=0)

)Tbl
where MyFlag=0 or not(Cr=0 and Db=0)

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccontMotionAll]
(
@FromMainAccNo varchar(100),
@ToMainAccNo varchar(100),
@FromDate datetime,
@ToDate datetime,
@WindowId bigint,
@CostCenterId bigint,
@CostCenterSubId bigint
)
--with encryption
as


exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate

declare @Main table(
MyMainAccNo nvarchar(100),
MyMainAccName nvarchar(100),
MyFlag int,MotionType int,InvoiceNo int,DayDate datetime,
Db float,
Cr float,
DbLocal float,
CrLocal float,
Cash float,SheekNo nvarchar(1000),SheekPerson nvarchar(1000),SheekDate datetime,Notes nvarchar(1000),Rem nvarchar(1000),
MainAccNo nvarchar(1000),MainAccName nvarchar(1000),SubAccNo nvarchar(1000),SubAccName nvarchar(1000),
SalesItems nvarchar(1000),
SalesMaster_StoreId int,SalesMaster_Flag int,SalesMaster_InvoiceNo int,CurrencyId int,CurrencyName nvarchar(1000),
CheckSum1 float,CheckSum2 float,CheckSum3 float,GetCheckReturnCount float,CurrentBal float,
Qty float,Price float,
CostCenterName nvarchar(1000),CostCenterSubName nvarchar(1000)
)

declare @Tbl table(Id nvarchar(100),Line int identity)
insert @Tbl
select Id from Chart 
where (Id>=@FromMainAccNo or @FromMainAccNo='')
and (Id<=@ToMainAccNo or @ToMainAccNo='')
and SubType=1

declare @x int=1,@Max int=(select max(Line) from @Tbl)
while @x<=@Max
begin
	declare @MainAccNo nvarchar(100)
	declare @MainAccName nvarchar(100)
	declare @SubAccNo bigint=0
	select @MainAccNo=Id from @Tbl where Line=@x

	declare @LinkFile bigint,@MotionType bigint,@EndType bigint
	select @MainAccName=Name,@LinkFile=LinkFile,@MotionType=MotionType,@EndType=EndType from Chart where Id=@MainAccNo
	select @LinkFile=ISNULL(@LinkFile,0)

	declare @TableName varchar(100)
	select @TableName=TableName from LinkFile where Id=@LinkFile
	select @TableName=ISNULL(@TableName,'')

	declare @CurrencyId int= dbo.GetAllCurrencyId(@SubAccNo,@LinkFile)
	select @CurrencyId=1 where @CurrencyId=0
	declare @CurrencyName nvarchar(100)=dbo.GetCurrencyName(@CurrencyId)

	declare @Db float=0,@Cr float=0
	if @MotionType=0 select @Db=1. 
	if @MotionType=1 select @Cr=1.

	declare @Bal0 float=dbo.Bal0(@MainAccNo,@SubAccNo,@FromDate-1,0,@CostCenterId,@CostCenterSubId)

	declare @CheckSum1 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,1,@ToDate)
	declare @CheckSum2 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,2,@ToDate)
	declare @CheckSum3 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,3,@ToDate)
	declare @GetCheckReturnCount float=dbo.GetCheckReturnCount(@LinkFile,@SubAccNo,@FromDate,@ToDate)
	declare @CurrentBal float=dbo.Bal0(@MainAccNo,@SubAccNo,@ToDate,0,@CostCenterId,@CostCenterSubId)

	declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
	declare @InPatientSubAccNo int=isnull((select top 1 InPatientSubAccNo from Statics),0)

	declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
	declare @OutPatientSubAccNo int=isnull((select top 1 OutPatientSubAccNo from Statics),0)

	declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
	declare @OtherSubAccNo int=isnull((select top 1 OtherSubAccNo from Statics),0)

	declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
	declare @CaseInvoicesDiscountSubAccNo int=isnull((select top 1 CaseInvoicesDiscountSubAccNo from Statics),0)

	declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()
	declare @OperationSubAccNo int=dbo.GetOperationSubAccNo()
	declare @OperationSubAccNo2 int=dbo.GetOperationSubAccNo2()


	insert @Main
	select * from 
	(

	select @MainAccNo MyMainAccNo,@MainAccName MyMainAccName,0 MyFlag,@MotionType MotionType,0 InvoiceNo,@FromDate-1 DayDate,
	(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
	(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr,
	(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) DbLocal,
	(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) CrLocal,
	0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'رصيد أول المدة' 'Rem',
	'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
	'' SalesItems,
	0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyId CurrencyId,@CurrencyName CurrencyName,
	@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
	0 Qty,0 Price,
	'-' CostCenterName,'-' CostCenterSubName
	where @WindowId=0

	union all


	select 
	@MainAccNo,@MainAccName,MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
	Db,Cr,
	DbLocal,CrLocal,
	Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,
	MainAccNo,dbo.GetMainAccName(MainAccNo),SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo),
	SalesItems,
	SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyId,dbo.GetCurrencyName(CurrencyId),
	@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
	Qty,Price,
	dbo.GetCostCenterName(CostCenterId),dbo.GetCostCenterSubName(CostCenterSubId)
	from dbo.Fn_AllEntry(@MainAccNo,@SubAccNo,@FromDate,@ToDate,0,0,0)
	where MyMainAccNo=@MainAccNo 
	and (WindowId=@WindowId or @WindowId=0)
	and (CostCenterId=@CostCenterId or @CostCenterId=0)
	and (CostCenterSubId=@CostCenterSubId or @CostCenterSubId=0)

	)Tbl
	where MyFlag=0 or not(Cr=0 and Db=0)

	--delete CurrencyExchangeByDateTemp

	select @x+=1
end


select * from @Main
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionBeforeFn_AllEntry]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccontMotionBeforeFn_AllEntry]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromDate datetime,
@ToDate datetime,
@Detailed bigint,
@DetailedInvoice bigint
)
--with encryption
as


exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


declare @LinkFile bigint,@MotionType bigint
select @LinkFile=LinkFile,@MotionType=MotionType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @CurrencyName nvarchar(100)=dbo.GetCurrencyName(dbo.GetAllCurrencyId(@SubAccNo,@LinkFile))

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @Bal0 float=dbo.Bal0(@MainAccNo,@SubAccNo,@FromDate-1,0,0,0)
declare @CheckSum1 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,1,@ToDate)
declare @CheckSum2 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,2,@ToDate)
declare @CheckSum3 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,3,@ToDate)
declare @GetCheckReturnCount float=dbo.GetCheckReturnCount(@LinkFile,@SubAccNo,@FromDate,@ToDate)
declare @CurrentBal float=dbo.Bal0(@MainAccNo,@SubAccNo,@ToDate,0,0,0)

declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
declare @InPatientSubAccNo int=isnull((select top 1 InPatientSubAccNo from Statics),0)

declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
declare @OutPatientSubAccNo int=isnull((select top 1 OutPatientSubAccNo from Statics),0)

declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
declare @OtherSubAccNo int=isnull((select top 1 OtherSubAccNo from Statics),0)

declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
declare @CaseInvoicesDiscountSubAccNo int=isnull((select top 1 CaseInvoicesDiscountSubAccNo from Statics),0)

declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()
declare @OperationSubAccNo int=dbo.GetOperationSubAccNo()
declare @OperationSubAccNo2 int=dbo.GetOperationSubAccNo2()

declare @EntryTblName nvarchar(100)=dbo.getEntryTblName()

select * from 
(

select 0 MyFlag,@MotionType MotionType,0 InvoiceNo,@FromDate-1 DayDate,
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'رصيد أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price


--===========================================الإهلاكات===============================================

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
Value Cr,
'','-','','','* ' Notes,
'الإهلاك' 'Rem',
'-','-',0,'الإهلاك' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from AssetsDepreciationHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=12
and AssetId=@SubAccNo

union all

select 1 MyFlag,@MotionType MotionType,0,T.DayDate,
Value Db,
0 Cr,
'','-','','','* ' Notes,
'الإهلاك' 'Rem',
'-','-',0,A.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from AssetsDepreciationHistory T
left join Assets A on(T.AssetId=A.Id)
where T.DayDate between @FromDate and @ToDate 
and A.DepreciationAccNo=@MainAccNo
and @SubAccNo=0



--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
Living Db,
0 Cr,
'','-','','','* ' Notes,
'إقامة' 'Rem',
'-','-',0,'إقامة' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
Supervision Db,
0 Cr,
'','-','','','* ' Notes,
'إشراف' 'Rem',
'-','-',0,'إشراف' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
Care Db,
0 Cr,
'','-','','','* ' Notes,
'رعاية' 'Rem',
'-','-',0,'رعاية' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Perc Db,
0 Cr,
'','-','','','* ' Notes,
cast(Perc0 as nvarchar(100))+'%' 'Rem',
'-','-',0,cast(Perc0 as nvarchar(100))+'%' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Total0 Db,
0 Cr,
'','-','','','* ' Notes,
'إضافي مستهلكات العمليات' 'Rem',
'-','-',0,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Total0>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Total01 Cr,
'','-','','','* ' Notes,
'-' 'Rem',
'-','-',0,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo2=@SubAccNo
and Total01>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Discount Cr,
'','-','','','* ' Notes,
'خصم فواتير المرضى' 'Rem',
'-','-',0,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Discount<>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
T.Living Cr,
'','-','','','* ' Notes,
'إقامة' 'Rem',
'-','-',CaseId,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate between @FromDate and @ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
T.Supervision Cr,
'','-','','','* ' Notes,
'إشراف' 'Rem',
'-','-',CaseId,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate between @FromDate and @ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
T.Care Cr,
'','-','','','* ' Notes,
'رعاية' 'Rem',
'-','-',CaseId,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate between @FromDate and @ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Perc Cr,
'','-','','','* ' Notes,
cast(Perc0 as nvarchar(100))+'%' 'Rem',
'-','-',0,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @OtherAccNo=@MainAccNo
and @OtherSubAccNo=@SubAccNo

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Discount Db,
0 Cr,
'','-','','','* ' Notes,
'خصم فواتير المرضى' 'Rem',
'-','-',0,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @CaseInvoicesDiscountAccNo=@MainAccNo
and @CaseInvoicesDiscountSubAccNo=@SubAccNo
and Discount<>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Remaining Cr,
'','-','','','* ' Notes,
'سداد' 'Rem',
'-','-',0,dbo.GetSubAccName(RemainingMainAccNo,RemainingSubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Remaining>0
and RemainingSubAccNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Remaining Db,
0 Cr,
'','-','','','* ' Notes,
'سداد' 'Rem',
'-','-',0,dbo.GetSubAccNameLink(13,CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and RemainingMainAccNo=@MainAccNo
and RemainingSubAccNo=@SubAccNo
and Remaining>0
and RemainingSubAccNo>0

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
Value Db,
0 Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'العمليات' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Dr1Value Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 1' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId1=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr1Value<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Dr2Value Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 2' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId2=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr2Value<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Dr3Value Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 3' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId3=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr3Value<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
AnesthetistValue Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب تخدير' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.AnesthetistId=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and AnesthetistValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
RoomValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'فتح غرفة العمليات' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo=@SubAccNo
and Canceled=0
and RoomValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
RoomValue2 Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'إقامة' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and RoomValue2<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
CsValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'أتعاب تمريض' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and CsValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
MedicalValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'رعاية طبية' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and MedicalValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
CoValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'أتعاب مستشفى' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo=@SubAccNo
and Canceled=0
and CoValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
ConsumablesValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'مستهلكات عملية' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and ConsumablesValue<>0
and CaseInvoiceNo>0

--union all

--select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
--ConsumablesValue Db,
--0 Cr,
--'','-','','','* '+isnull(Notes,'-') Notes,
--'مستهلكات عملية' 'Rem',
--'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
--'' SalesItems,
--0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
--@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
--0 Qty,0 Price
--from OperationMotions
--where DayDate between @FromDate and @ToDate 
--and @LinkFile=13
--and CaseId=@SubAccNo
--and Canceled=0
--and ConsumablesValue<>0
--and CaseInvoiceNo>0

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
Value Db,
0 Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0

union all

select 1 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
0 Db,
Value Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @OutPatientAccNo=@MainAccNo
and @OutPatientSubAccNo=@SubAccNo
and Canceled=0

union all

select 2 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
0 Db,
Payed Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - المدفوع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0

union all

select 2 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
Payed Db,
0 Cr,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - المدفوع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdReservation=E.Id)
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0

union all

select 3 MyFlag,@MotionType MotionType,ReservId,cast(RemainingDate as date),
0 Db,
Remaining Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - سداد المتبقي' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Done=1

union all

select 3 MyFlag,@MotionType MotionType,ReservId,cast(RemainingDate as date),
Remaining Db,
0 Cr,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - سداد المتبقي' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Done=1

union all

select 4 MyFlag,@MotionType MotionType,ReservId,cast(ReturnedDate as date),
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - استرجاع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Returned=1

union all

select 4 MyFlag,@MotionType MotionType,ReservId,cast(ReturnedDate as date),
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - استرجاع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Returned=1

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Value Cr,
'','-','','',
'* '+ST.Name+' - '+Notes Notes,
'الخدمات' 'Rem',
dbo.GetCaseAccNo(CaseId),dbo.GetAccName(dbo.GetCaseAccNo(CaseId)),cast(CaseId as nvarchar(100)),dbo.GetCaseArName(CaseId),
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and SG.MainAccNo=@MainAccNo
and SG.SubAccNo=@SubAccNo
and Canceled=0
and Returned=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 1 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(DayDate as date),
sum(Value) Db,
0 Cr,
'','-','','','* '+Notes Notes,
'الخدمات' 'Rem',
'-','-',S.ServiceGroupId,SG.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and @Detailed=0
and not (S.Flag=2 and CaseInvoiceNo=0)
group by /*InvoiceNo,*/cast(DayDate as date),Notes,S.ServiceGroupId,SG.Name

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
Value Db,
0 Cr,
'','-','','','* '+Notes Notes,
'الخدمات' 'Rem',
'-','-',S.ServiceTypeId,SG.Name+' - '+ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and @Detailed=1
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 2 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(DayDate as date),
0 Db,
sum(Payed) Cr,
'','-','','','* '/*+Notes*/ Notes,
'الخدمات - المدفوع' 'Rem',
'-','-',0/*S.ServiceTypeId*/,''/*ST.Name*/ SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Payed<>0
and S.Flag=1
group by cast(DayDate as date)

union all

select 2 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(DayDate as date),
sum(Payed) Db,
0 Cr,
'','-','','','* '/*+S.Notes*/ Notes,
'الخدمات - المدفوع' 'Rem',
'-','-',0/*S.ServiceTypeId*/,''/*ST.Name*/ SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdReservation=E.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Payed<>0
and S.Flag=1
group by cast(DayDate as date)

union all

select 3 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(RemainingDate as date),
0 Db,
sum(Remaining) Cr,
'','-','','','* '/*+Notes*/ Notes,
'الخدمات - سداد المتبقي' 'Rem',
'-','-',0/*S.ServiceTypeId*/,''/*ST.Name*/ SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1
group by cast(RemainingDate as date)

union all

select 3 MyFlag,@MotionType MotionType,InvoiceNo,cast(RemainingDate as date),
Remaining Db,
0 Cr,
'','-','','','* '+S.Notes Notes,
'الخدمات - سداد المتبقي' 'Rem',
'-','-',S.ServiceTypeId,ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 4 MyFlag,@MotionType MotionType,InvoiceNo,cast(ReturnedDate as date),
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr,
'','-','','','* '+Notes Notes,
'الخدمات - استرجاع' 'Rem',
'-','-',S.ServiceTypeId,ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Returned=1
and S.Flag=1

union all

select 4 MyFlag,@MotionType MotionType,InvoiceNo,cast(ReturnedDate as date),
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr,
'','-','','','* '+S.Notes Notes,
'الخدمات - استرجاع' 'Rem',
'-','-',S.ServiceTypeId,ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Returned=1
and S.Flag=1

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,ED.InvoiceNo,E.DayDate,
ED.Debit Db,
ED.Credit Cr,
'','-','','','* '+ED.Notes+(case when DocNo='' then '' else ' ,مستند: '+DocNo end) Notes,
@EntryTblName 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then Value1 else 0 end) Db,
(case when (MainAccNo2=@MainAccNo and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0)) then Value2 else 0 end) Cr,
'','-','','','* '+Notes Notes,
'تسويات نقدية' 'Rem',
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then MainAccNo2 else MainAccNo1 end),
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetMainAccName(MainAccNo2) else dbo.GetMainAccName(MainAccNo1) end),
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then SubAccNo2 else SubAccNo1 end),
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetSubAccName(MainAccNo2,SubAccNo2) else dbo.GetSubAccName(MainAccNo1,SubAccNo1) end),
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Entry2
where DayDate between @FromDate and @ToDate 
and (
	(MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0))or
	(MainAccNo2=@MainAccNo and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0))
	)
and Canceled=0

--==========================================================================================
union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
Cash,SheekNo,SheekPerson,SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash
where DayDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
Cash,SheekNo,SheekPerson,SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
cast((Case when Flag in(1,2) then 5 else 6 end) as nvarchar(100)),dbo.GetLinkFileName((Case when Flag in(1,2) then 5 else 6 end))MainAccName,BankId,dbo.GetLinkAccName((Case when Flag in(1,2) then 5 else 6 end),BankId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G
where DayDate between @FromDate and @ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0


union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue2 end) Db,
(Case when C.Flag=1 then MainValue2 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(MainLinkFile as nvarchar(100)),dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0


union all
--ارتداد الشيك اوتوماتيكيا
select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,C2.DayDate,
(Case when C.Flag=1 then C.MainValue2 else 0 end) Db,
(Case when C.Flag=1 then 0 else C.MainValue2 end) Cr,
0 Cash,
(case when C2.CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(C2.CheckTypeId)+' - '+C.CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(C.CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ C.CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ C.PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(C.PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ C.ImportMessageId=0 then '' else ' - رسالة: '+cast(C.ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(C.StoreInvoiceNo as nvarchar(100)) end)
+C.Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(C.MainLinkFile as nvarchar(100)),dbo.GetLinkFileName(C.MainLinkFile)MainAccName,C.BankId,dbo.GetLinkAccName(C.MainLinkFile,C.BankId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate between @FromDate and @ToDate 
and C.LinkFile=@LinkFile 
and (C.SubAccNo=@SubAccNo or @SubAccNo=0 or C.SubAccNo=0)
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_InvoiceNo Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.عقود' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 2 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_MessageId Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.رسالة' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 3 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
0 Db,
I.Cost_OrderTypeId Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.طلبية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1

union all

select 4 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_OrderTypeId Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.طلبية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 5 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
0 Db,
I.Cost_Administrative Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.إدارية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1

union all

select 5 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_Administrative Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.إدارية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

--==========================================================================================
union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then 0 else MainValue2Ded end) Db,
(Case when C.Flag=1 then MainValue2Ded else 0 end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
'','',(select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics),dbo.GetAccName((select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)),
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0
and MainValue2Ded<>0

union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then Value2Ded else 0 end) Db,
(Case when C.Flag=1 then 0 else Value2Ded end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Value2Ded<>0 

union all

select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,D.DeliveredDate,
(Case when C.Flag=1 then 0 else Value2Ded end) Db,
(Case when C.Flag=1 then Value2Ded else 0 end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages D
left join ImportMessagesDetails Dt on(D.OrderTypeId=Dt.OrderTypeId and D.Id=Dt.Id)
left join BankCash_G2 C on(D.StoreId=C.StoreId and Dt.InvoiceNo=C.StoreInvoiceNo)
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where D.DeliveredDate between @FromDate and @ToDate 
and C.DayDate<=@ToDate
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Value2Ded<>0
and D.IsDelivered=1

union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then MainValue else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Db,
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end),
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+' - '+dbo.GetLinkAccName(MainLinkFile,BankId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and MainLinkFile=@LinkFile
and BankId=@SubAccNo
and Canceled=0

union all
--ارتداد الشيك اوتوماتيكيا
select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,C2.DayDate,
(Case when C.Flag=1 then 0 else C.MainValue end) Db,
(Case when C.Flag=1 then C.MainValue else 0 end) Cr,
0 Cash,
(case when C2.CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(C2.CheckTypeId)+' - '+C.CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(C.CheckNo,@ToDate) else '' end)
 end),
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ C.CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ C.PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(C.PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ C.ImportMessageId=0 then '' else ' - رسالة: '+cast(C.ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(C.StoreInvoiceNo as nvarchar(100)) end)
+C.Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+' - '+dbo.GetLinkAccName(C.MainLinkFile,C.BankId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(C.LinkFile as nvarchar(100)),dbo.GetLinkFileName(C.LinkFile)MainAccName,C.SubAccNo,dbo.GetLinkAccName(C.LinkFile,C.SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate between @FromDate and @ToDate 
and C.MainLinkFile=@LinkFile
and C.BankId=@SubAccNo
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
MainValue Cr,
0 Cash,' - ' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'تحويلات نقدية' 'Rem',
cast(FromSubAccNo as nvarchar(100)),dbo.GetLinkFileName(FromSubAccNo)MainAccName,
(Case when FromSubAccNo=@SubAccNo then ToSubAccNo else FromSubAccNo end)SubAccNo,
dbo.GetLinkAccName((Case when FromSubAccNo=@SubAccNo then ToLinkFile else FromLinkFile end),(Case when FromSubAccNo=@SubAccNo then ToSubAccNo else FromSubAccNo end)) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G3
where DayDate between @FromDate and @ToDate
and FromLinkFile=@LinkFile 
and FromSubAccNo=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
MainValue Db,
0 Cr,
0 Cash,' - ' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'تحويلات نقدية' 'Rem',
cast(ToSubAccNo as nvarchar(100)),dbo.GetLinkFileName(ToSubAccNo)MainAccName,
(Case when ToSubAccNo=@SubAccNo then FromSubAccNo else ToSubAccNo end)SubAccNo,
dbo.GetLinkAccName((Case when ToSubAccNo=@SubAccNo then FromLinkFile else ToLinkFile end),(Case when ToSubAccNo=@SubAccNo then FromSubAccNo else ToSubAccNo end)) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G3
where DayDate between @FromDate and @ToDate
and ToLinkFile=@LinkFile 
and ToSubAccNo=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
'','-','',null,'* '+Notes Notes,

--(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
(Case Flag when 1 then 'المقبوضات' when 2 then 'المدفوعات' when 3 then 'المقبوضات' when 4 then 'المدفوعات' end) 'Rem',

'','-',OutComeTypeId,dbo.GetOutComeTypeName(OutComeTypeId)MainAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash2
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0


union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
Cash,'','-',null,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خ خزنة' when 2 then 'مدفوعات خ خزنة' when 3 then 'مقبوضات خ بنك' when 4 then 'مدفوعات خ بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,'-','-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash3
where DayDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
Cash,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خ خزنة' when 2 then 'مدفوعات خ خزنة' when 3 then 'مقبوضات خ بنك' when 4 then 'مدفوعات خ بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,'-','-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash3
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
0,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'شراء عملة' else 'مبيعات عملة' end) 'Rem',
'-','الصرافين',MoneyChangerId MainAccNo,dbo.GetMoneyChangerName(MoneyChangerId)MainAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash4
where DayDate between @FromDate and @ToDate 
and MoneyChangerId=@SubAccNo 
and @LinkFile=8
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
0,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'شراء عملة' else 'مبيعات عملة' end) 'Rem',
'-','الصرافين',MoneyChangerId MainAccNo,dbo.GetMoneyChangerName(MoneyChangerId)MainAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash4
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

--===========================================================================
--===========================================================================




select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Value Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
dbo.GetInvoicesTypeName(InvoicesTypeId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Invoices
where DayDate between @FromDate and @ToDate 
and SellerId=@SubAccNo
and @LinkFile=7


union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Payed+Tips+Payments+OtherPayments Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'نوالين وإكراميات ومدفوعات' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Nolon
where DayDate between @FromDate and @ToDate 
and SellerId=@SubAccNo
and @LinkFile=7

--===========================================================================
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCustomerInvoiceTotal(InvoiceNo) Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'فاتورة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CustomerInvoices
where DayDate between @FromDate and @ToDate 
and CustomerId=@SubAccNo
and @LinkFile=1
and @Detailed=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,d.InvoiceNo,DayDate,
Value Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+dt.Notes Notes,
dt.ItemName 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CustomerInvoicesDt dt
left join CustomerInvoices d on(dt.InvoiceNo=d.InvoiceNo) 
where DayDate between @FromDate and @ToDate 
and CustomerId=@SubAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 1 MyFlag,@MotionType MotionType,CustomerInvoiceNo,Dt.DayDate,
Value Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+D.Notes Notes,
'إيصالات' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Invoices D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate between @FromDate and @ToDate 
and D.CustomerId=@SubAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 1 MyFlag,@MotionType MotionType,CustomerInvoiceNo,Dt.DayDate,
Value2+Tips2 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+D.Notes Notes,
'نوالين وإكراميات' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Nolon D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate between @FromDate and @ToDate 
and D.CustomerId=@SubAccNo
and @LinkFile=1
and Value2+Tips2<>0
and @Detailed=1


--===========================================================================
--===========================================================================

--===========================================================================المبيعات والمشتريات

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then TotalAfterDiscount else 0 end) Db,
(case when Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then TotalAfterDiscount else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and @Detailed=0
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,D.InvoiceNo,D.DayDate,
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then D.DiscountValue else 0 end) Db,
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then D.DiscountValue else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
'خصم' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
1,D.DiscountValue
from SalesMaster D
where D.DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and D.DiscountValue<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,D.InvoiceNo,D.DayDate,
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then Dt.Value else 0 end) Db,
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then Dt.Value else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dt.ItemName 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
Dt.Qty,Dt.Price
from SalesMaster D
left join SalesDetails Dt on(D.StoreId=dt.StoreId and D.Flag=dt.Flag and D.InvoiceNo=Dt.InvoiceNo )
where D.DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Dt.Value<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=1) then Val1 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=2) then Val1 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo1) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val1<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=1) then Val2 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=2) then Val2 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo2) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val2<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=1) then Val3 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=2) then Val3 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo3) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val3<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=1) then Val4 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=2) then Val4 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo4) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,29,20,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val4<>0
and @Detailed=1
and Temp=0
--===========================================================================


--===========================================================================النقدى والفيزا

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*
(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId),
dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId))MainAccName,
(Case when SaveId=@SubAccNo and @LinkFile=5 then ToId else SaveId end)ToId,
(Case when SaveId=@SubAccNo and @LinkFile=5 then dbo.GetSubAccNameLink((case when ReservToId=1 then 2 else 1 end),ToId) else dbo.GetSubAccNameLink(5,SaveId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)))or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr,

1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId),dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId))MainAccName,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then SaveId else ToId end)ToId,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then dbo.GetSubAccNameLink(5,SaveId) else dbo.GetSubAccNameLink((case when ReservToId=1 then 2 else 1 end),ToId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId),dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId))MainAccName,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then SaveId else ToId end)ToId,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then dbo.GetSubAccNameLink(5,SaveId) else dbo.GetSubAccNameLink((case when ReservToId=1 then 1 else 2 end),ToId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(9,19,29)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId),dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId))MainAccName,
(Case when SaveId=@SubAccNo and @LinkFile=5 then SaveId else ToId end)ToId,
(Case when SaveId=@SubAccNo and @LinkFile=5 then dbo.GetSubAccNameLink(5,SaveId) else dbo.GetSubAccNameLink((case when ReservToId=1 then 1 else 2 end),ToId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0


--===========================================================================حساب المبيعات والمشتريات

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when Flag in(9,19,29,12,14,16,18,36,38,48,22,24) then Total else 0 end) Db,
(case when Flag in(10,20,30,11,13,15,17,35,37,47,21,23) then Total else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(9,10,29,30,	11,13,15,17,35,37,47,21,23,		12,14,16,18,36,38,48,	22,24)
and not(Flag in(37,38,47,48) and CaseInvoiceNo=0) 
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
--====================================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' * '+CAST(TotalAfterDiscount as nvarchar(100))+' '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(19)
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,M.InvoiceNo,M.DayDate,
0 Db,
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' ('+CAST(D.Value as nvarchar(100))+') '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(20)
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
--====================================================================================
--====================================================================================
union all

select 1 MyFlag,@MotionType MotionType,M.InvoiceNo,I.DeliveredDate,
0 Db,
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' * '+CAST(TotalAfterDiscount as nvarchar(100))+' '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and Flag in(19)
and M.AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
and I.DeliveredDate between @FromDate and @ToDate
and I.IsDelivered=1

union all

select 1 MyFlag,@MotionType MotionType,M.InvoiceNo,I.DeliveredDate,
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' ('+CAST(D.Value as nvarchar(100))+') '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=D.SalesInvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and M.Flag in(20)
and M.AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
and I.DeliveredDate between @FromDate and @ToDate
and I.IsDelivered=1

--====================================================================================

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DayDate,
I.Bal0 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'تسجيل رسالة - أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DayDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.Bal0<>0

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
0 Db,
I.Bal0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'استلام رسالة - أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1
and I.Bal0<>0

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Bal0 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'استلام رسالة - أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1
and I.Bal0<>0

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.val5 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'استلام رسالة - قيمة العقود' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

--===========================================================================حسابات الخصم والإضافة

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(11,13,15,21,23)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(12,14,16,22,24)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(9,19,29)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(10,20,30)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0
/*
union all

--مصاريف الطلبيات
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
sum(Val3) Db,
0 Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+(case when ImportMessageId=0 then ' على عقد رقم '+cast(StoreInvoiceNo as nvarchar(100)) else ' على رسالة رقم '+cast(ImportMessageId as nvarchar(100)) end) Notes,
'توزيع مصاريف طلبية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal3 T
where DeliveredDate between @FromDate and @ToDate 
--and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag not in(4,5))
and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag in(0))
and @SubAccNo=OrderTypeId

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,ImportMessageId,StoreInvoiceNo

union all

--مصاريف الطلبيات
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
0 Db,
sum(Val3) Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+(case when ImportMessageId=0 then ' على عقد رقم '+cast(StoreInvoiceNo as nvarchar(100)) else ' على رسالة رقم '+cast(ImportMessageId as nvarchar(100)) end) Notes,
'توزيع مصاريف طلبية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal3
where DeliveredDate between @FromDate and @ToDate 
--and (MainAccNo=@MainAccNo and MyFlag not in(4,5))
and (MainAccNo=@MainAccNo and MyFlag in(0))
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,ImportMessageId,StoreInvoiceNo
*/
union all

--المصاريف الإدارية
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
sum(SubVal4) Db,
0 Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+' على '+dbo.GetSubAccNameLink(11,OrderTypeId) Notes,
'توزيع المصاريف الإدارية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal4
where DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo 
and @SubAccNo=OrderTypeId

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,OrderTypeId


union all

--المصاريف الإدارية
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
0 Db,
sum(SubVal4) Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+' على '+dbo.GetSubAccNameLink(11,OrderTypeId) Notes,
'توزيع المصاريف الإدارية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal4
where DeliveredDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,OrderTypeId

--=============================================================================================
--=========================تحويل المصاريف عبر الحسابات في رسائل الاستيراد=======================
--=============================================================================================
union all

select MyFlag,MotionType,InvoiceNo,DayDate,sum(Db),sum(Cr),
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price from (

select 1 MyFlag,@MotionType MotionType,E.InvoiceNo,
(case 
when Tbl.Line=1 and E.DayDate between @FromDate and @ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then E.DayDate
when Tbl.Line=2 and E.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then E.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and E.DayDate between @FromDate and @ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then ED.Credit
when Tbl.Line=2 and E.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Debit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Credit
else 0 end)Db,
(case 
when Tbl.Line=1 and E.DayDate between @FromDate and @ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then ED.Debit
when Tbl.Line=2 and E.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Credit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Debit
else 0 end)Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+ED.Notes Notes,
(case when CostTypeId=4 then 'م.عقد' when CostTypeId=3 then 'م.رسالة' when CostTypeId=2 then 'م.طلبية' else '-' end)'Rem',
--MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' MainAccNo,'-' MainAccName,'' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*E.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)

)Tbl
where (Db<>0 or Cr<>0)
and DayDate between @FromDate and @ToDate

group by MyFlag,MotionType,InvoiceNo,DayDate,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price

union all

select MyFlag,MotionType,InvoiceNo,DayDate,sum(Db),sum(Cr),
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price from (

select 1 MyFlag,@MotionType MotionType,ED.InvoiceNo,
(case 
when Tbl.Line=1 and ED.DayDate between @FromDate and @ToDate and 
(
(IsCost2=1 and MainAccNo2=@MainAccNo and (ED.SubAccNo2=@SubAccNo or @SubAccNo=0 or ED.SubAccNo2=0))or
(IsCost1=1 and MainAccNo1=@MainAccNo and (ED.SubAccNo1=@SubAccNo or @SubAccNo=0 or ED.SubAccNo1=0))
)
then ED.DayDate
when Tbl.Line=2 and ED.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and ED.DayDate between @FromDate and @ToDate and (IsCost2=1 and MainAccNo2=@MainAccNo and (ED.SubAccNo2=@SubAccNo or @SubAccNo=0 or ED.SubAccNo2=0)) 
then ED.Value2
when Tbl.Line=2 and ED.DayDate between @FromDate and @ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value1
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value2
else 0 end)Db,
(case 
when Tbl.Line=1 and ED.DayDate between @FromDate and @ToDate and (IsCost1=1 and MainAccNo1=@MainAccNo and (ED.SubAccNo1=@SubAccNo or @SubAccNo=0 or ED.SubAccNo1=0)) 
then ED.Value1
when Tbl.Line=2 and ED.DayDate between @FromDate and @ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value2
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value1
else 0 end)Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+ED.Notes Notes,
(case when CostTypeId=4 then 'م.عقد' when CostTypeId=3 then 'م.رسالة' when CostTypeId=2 then 'م.طلبية' else '-' end)'Rem',
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then MainAccNo2 else MainAccNo1 end)MainAccNo,
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetMainAccName(MainAccNo2) else dbo.GetMainAccName(MainAccNo1) end)MainAccName,
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then SubAccNo2 else SubAccNo1 end)SubAccNo,
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetSubAccName(MainAccNo2,SubAccNo2) else dbo.GetSubAccName(MainAccNo1,SubAccNo1) end)SubAccName,
'' MainAccNo,'-' MainAccName,'' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Entry2 ED
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*ED.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0


)Tbl
where (Db<>0 or Cr<>0)
and DayDate between @FromDate and @ToDate

group by MyFlag,MotionType,InvoiceNo,DayDate,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price

union all

select MyFlag,MotionType,InvoiceNo,DayDate,sum(Db),sum(Cr),
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price from (

select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,
(case 
when Tbl.Line=1 and C.DayDate between @FromDate and @ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then C.DayDate
when Tbl.Line=2 and C.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then C.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and C.DayDate between @FromDate and @ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then 0
when Tbl.Line=2 and C.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then 0
else 0 end)Db,
(case 
when Tbl.Line=1 and C.DayDate between @FromDate and @ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=2 and C.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then 0
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
else 0 end)Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+C.Notes Notes,
(case when CostTypeId=4 then 'م.عقد' when CostTypeId=3 then 'م.رسالة' when CostTypeId=2 then 'م.طلبية' else '-' end)'Rem',
--cast(LinkFile as nvarchar(100))MainAccNo,dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' MainAccNo,'-' MainAccName,'' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join SalesMaster M on(M.StoreId=C.StoreId and M.Flag=19 and M.InvoiceNo=C.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(C.CostTypeId=2 and I.OrderTypeId=C.PurchaseAccNo)or
(C.CostTypeId=3 and I.OrderTypeId=C.PurchaseAccNo and I.Id=C.ImportMessageId)or
(C.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*C.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0

)Tbl
where (Db<>0 or Cr<>0)
and DayDate between @FromDate and @ToDate

group by MyFlag,MotionType,InvoiceNo,DayDate,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price


)Tbl
where MyFlag=0 or not(Cr=0 and Db=0)

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionCases]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccontMotionCases]
@CaseTypeId int=0,
@DoctorId int=0,
@CompanyId int=0,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1'

--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate

select Id,Name,0 MotionType,
T.*
from Cases C
inner join dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,1)T on(C.AccNo=T.MyMainAccNo and T.MySubAccNo=C.Id)
where (C.CaseTypeId=@CaseTypeId or @CaseTypeId=0)
and (C.DoctorId=@DoctorId or @DoctorId=0)
and (C.CompanyId=@CompanyId or @CompanyId=0)
Order by Id
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionDoctors]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccontMotionDoctors]
@CaseTypeId int=0,
@DoctorId int=0,
@CompanyId int=0,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1'

--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate

select Id,Name,0 MotionType,
T.*
from Cases C
inner join dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,1)T on(C.AccNo=T.MyMainAccNo and T.MySubAccNo=C.Id)
where (C.CaseTypeId=@CaseTypeId or @CaseTypeId=0)
and (C.DoctorId=@DoctorId or @DoctorId=0)
and (C.CompanyId=@CompanyId or @CompanyId=0)
Order by Id
GO
/****** Object:  StoredProcedure [dbo].[AccontMotionOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccontMotionOLD]
(
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromDate datetime,
@ToDate datetime,
@Detailed bigint,
@DetailedInvoice bigint
)
--with encryption
as


exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


declare @LinkFile bigint,@MotionType bigint
select @LinkFile=LinkFile,@MotionType=MotionType from Chart where Id=@MainAccNo
select @LinkFile=ISNULL(@LinkFile,0)

declare @TableName varchar(100)
select @TableName=TableName from LinkFile where Id=@LinkFile
select @TableName=ISNULL(@TableName,'')

declare @CurrencyName nvarchar(100)=dbo.GetCurrencyName(dbo.GetAllCurrencyId(@SubAccNo,@LinkFile))

declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @Bal0 float=dbo.Bal0(@MainAccNo,@SubAccNo,@FromDate-1,0,0,0)
declare @CheckSum1 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,1,@ToDate)
declare @CheckSum2 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,2,@ToDate)
declare @CheckSum3 float=dbo.GetCheckSum(@LinkFile,@SubAccNo,3,@ToDate)
declare @GetCheckReturnCount float=dbo.GetCheckReturnCount(@LinkFile,@SubAccNo,@FromDate,@ToDate)
declare @CurrentBal float=dbo.Bal0(@MainAccNo,@SubAccNo,@ToDate,0,0,0)

declare @InPatientAccNo nvarchar(100)=isnull((select top 1 InPatientAccNo from Statics),'')
declare @InPatientSubAccNo int=isnull((select top 1 InPatientSubAccNo from Statics),0)

declare @OutPatientAccNo nvarchar(100)=isnull((select top 1 OutPatientAccNo from Statics),'')
declare @OutPatientSubAccNo int=isnull((select top 1 OutPatientSubAccNo from Statics),0)

declare @OtherAccNo nvarchar(100)=isnull((select top 1 OtherAccNo from Statics),'')
declare @OtherSubAccNo int=isnull((select top 1 OtherSubAccNo from Statics),0)

declare @CaseInvoicesDiscountAccNo nvarchar(100)=isnull((select top 1 CaseInvoicesDiscountAccNo from Statics),'')
declare @CaseInvoicesDiscountSubAccNo int=isnull((select top 1 CaseInvoicesDiscountSubAccNo from Statics),0)

declare @OperationAccNo nvarchar(100)=dbo.GetOperationAccNo()
declare @OperationSubAccNo int=dbo.GetOperationSubAccNo()
declare @OperationSubAccNo2 int=dbo.GetOperationSubAccNo2()

declare @EntryTblName nvarchar(100)=dbo.getEntryTblName()

select * from 
(

select 0 MyFlag,@MotionType MotionType,0 InvoiceNo,@FromDate-1 DayDate,
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'رصيد أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price


--===========================================الإهلاكات===============================================

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
Value Cr,
'','-','','','* ' Notes,
'الإهلاك' 'Rem',
'-','-',0,'الإهلاك' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from AssetsDepreciationHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=12
and AssetId=@SubAccNo

union all

select 1 MyFlag,@MotionType MotionType,0,T.DayDate,
Value Db,
0 Cr,
'','-','','','* ' Notes,
'الإهلاك' 'Rem',
'-','-',0,A.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from AssetsDepreciationHistory T
left join Assets A on(T.AssetId=A.Id)
where T.DayDate between @FromDate and @ToDate 
and A.DepreciationAccNo=@MainAccNo
and @SubAccNo=0



--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
Living Db,
0 Cr,
'','-','','','* ' Notes,
'إقامة' 'Rem',
'-','-',0,'إقامة' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
Supervision Db,
0 Cr,
'','-','','','* ' Notes,
'إشراف' 'Rem',
'-','-',0,'إشراف' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
Care Db,
0 Cr,
'','-','','','* ' Notes,
'رعاية' 'Rem',
'-','-',0,'رعاية' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory 
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Perc Db,
0 Cr,
'','-','','','* ' Notes,
cast(Perc0 as nvarchar(100))+'%' 'Rem',
'-','-',0,cast(Perc0 as nvarchar(100))+'%' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Total0 Db,
0 Cr,
'','-','','','* ' Notes,
'إضافي مستهلكات العمليات' 'Rem',
'-','-',0,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Total0>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Total01 Cr,
'','-','','','* ' Notes,
'-' 'Rem',
'-','-',0,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo2=@SubAccNo
and Total01>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Discount Cr,
'','-','','','* ' Notes,
'خصم فواتير المرضى' 'Rem',
'-','-',0,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Discount<>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
T.Living Cr,
'','-','','','* ' Notes,
'إقامة' 'Rem',
'-','-',CaseId,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate between @FromDate and @ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
T.Supervision Cr,
'','-','','','* ' Notes,
'إشراف' 'Rem',
'-','-',CaseId,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate between @FromDate and @ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,0,DayDate,
0 Db,
T.Care Cr,
'','-','','','* ' Notes,
'رعاية' 'Rem',
'-','-',CaseId,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ClinicsHistory T
left join Rooms R on(T.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where DayDate between @FromDate and @ToDate 
and RT.MainAccNo=@MainAccNo
and RT.SubAccNo=@SubAccNo
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Perc Cr,
'','-','','','* ' Notes,
cast(Perc0 as nvarchar(100))+'%' 'Rem',
'-','-',0,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @OtherAccNo=@MainAccNo
and @OtherSubAccNo=@SubAccNo

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Discount Db,
0 Cr,
'','-','','','* ' Notes,
'خصم فواتير المرضى' 'Rem',
'-','-',0,dbo.GetCaseArName(CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @CaseInvoicesDiscountAccNo=@MainAccNo
and @CaseInvoicesDiscountSubAccNo=@SubAccNo
and Discount<>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Remaining Cr,
'','-','','','* ' Notes,
'سداد' 'Rem',
'-','-',0,dbo.GetSubAccName(RemainingMainAccNo,RemainingSubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Remaining>0
and RemainingSubAccNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
Remaining Db,
0 Cr,
'','-','','','* ' Notes,
'سداد' 'Rem',
'-','-',0,dbo.GetSubAccNameLink(13,CaseId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CaseInvoices
where DayDate between @FromDate and @ToDate 
and RemainingMainAccNo=@MainAccNo
and RemainingSubAccNo=@SubAccNo
and Remaining>0
and RemainingSubAccNo>0

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
Value Db,
0 Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'العمليات' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Dr1Value Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 1' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId1=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr1Value<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Dr2Value Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 2' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId2=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr2Value<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Dr3Value Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب طبيب 3' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.DrId3=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Dr3Value<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
AnesthetistValue Cr,
'','-','','','* '+isnull(T.Notes,'-') Notes,
'أتعاب تخدير' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions T
left join Employees E on(T.AnesthetistId=E.Id)
where DayDate between @FromDate and @ToDate 
and E.AccNo=@MainAccNo
and @SubAccNo=0
and Canceled=0
and AnesthetistValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
RoomValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'فتح غرفة العمليات' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo=@SubAccNo
and Canceled=0
and RoomValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
RoomValue2 Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'إقامة' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and RoomValue2<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
CsValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'أتعاب تمريض' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and CsValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
MedicalValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'رعاية طبية' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and MedicalValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
CoValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'أتعاب مستشفى' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @OperationAccNo=@MainAccNo
and @OperationSubAccNo=@SubAccNo
and Canceled=0
and CoValue<>0
and CaseInvoiceNo>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
ConsumablesValue Cr,
'','-','','','* '+isnull(Notes,'-') Notes,
'مستهلكات عملية' 'Rem',
'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from OperationMotions
where DayDate between @FromDate and @ToDate 
and @InPatientAccNo=@MainAccNo
and @InPatientSubAccNo=@SubAccNo
and Canceled=0
and ConsumablesValue<>0
and CaseInvoiceNo>0

--union all

--select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
--ConsumablesValue Db,
--0 Cr,
--'','-','','','* '+isnull(Notes,'-') Notes,
--'مستهلكات عملية' 'Rem',
--'-','-',0,dbo.GetOperationMotionsOperationTypesName(InvoiceNo) SubAccName,
--'' SalesItems,
--0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
--@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
--0 Qty,0 Price
--from OperationMotions
--where DayDate between @FromDate and @ToDate 
--and @LinkFile=13
--and CaseId=@SubAccNo
--and Canceled=0
--and ConsumablesValue<>0
--and CaseInvoiceNo>0

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
Value Db,
0 Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0

union all

select 1 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
0 Db,
Value Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @OutPatientAccNo=@MainAccNo
and @OutPatientSubAccNo=@SubAccNo
and Canceled=0

union all

select 2 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
0 Db,
Payed Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - المدفوع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0

union all

select 2 MyFlag,@MotionType MotionType,ReservId,cast(ReservationDate as date),
Payed Db,
0 Cr,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - المدفوع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdReservation=E.Id)
where cast(ReservationDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0

union all

select 3 MyFlag,@MotionType MotionType,ReservId,cast(RemainingDate as date),
0 Db,
Remaining Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - سداد المتبقي' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Done=1

union all

select 3 MyFlag,@MotionType MotionType,ReservId,cast(RemainingDate as date),
Remaining Db,
0 Cr,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - سداد المتبقي' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Done=1

union all

select 4 MyFlag,@MotionType MotionType,ReservId,cast(ReturnedDate as date),
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr,
'','-','','','* '+isnull(Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - استرجاع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Returned=1

union all

select 4 MyFlag,@MotionType MotionType,ReservId,cast(ReturnedDate as date),
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr,
'','-','','','* '+isnull(R.Notes,'-')+' '+isnull(MyNotes,'-') Notes,
'العيادات الخارجية - استرجاع' 'Rem',
'-','-',EmpId,dbo.GetEmpArName(EmpId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Reservations R
left join Employees E on(R.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Returned=1

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
0 Db,
Value Cr,
'','-','','',
'* '+ST.Name+' - '+Notes Notes,
'الخدمات' 'Rem',
dbo.GetCaseAccNo(CaseId),dbo.GetAccName(dbo.GetCaseAccNo(CaseId)),cast(CaseId as nvarchar(100)),dbo.GetCaseArName(CaseId),
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and SG.MainAccNo=@MainAccNo
and SG.SubAccNo=@SubAccNo
and Canceled=0
and Returned=0
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 1 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(DayDate as date),
sum(Value) Db,
0 Cr,
'','-','','','* '+Notes Notes,
'الخدمات' 'Rem',
'-','-',S.ServiceGroupId,SG.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and @Detailed=0
and not (S.Flag=2 and CaseInvoiceNo=0)
group by /*InvoiceNo,*/cast(DayDate as date),Notes,S.ServiceGroupId,SG.Name

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,cast(DayDate as date),
Value Db,
0 Cr,
'','-','','','* '+Notes Notes,
'الخدمات' 'Rem',
'-','-',S.ServiceTypeId,SG.Name+' - '+ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceGroups SG on(S.ServiceGroupId=SG.Id)
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and @Detailed=1
and not (S.Flag=2 and CaseInvoiceNo=0)

union all

select 2 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(DayDate as date),
0 Db,
sum(Payed) Cr,
'','-','','','* '/*+Notes*/ Notes,
'الخدمات - المدفوع' 'Rem',
'-','-',0/*S.ServiceTypeId*/,''/*ST.Name*/ SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Payed<>0
and S.Flag=1
group by cast(DayDate as date)

union all

select 2 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(DayDate as date),
sum(Payed) Db,
0 Cr,
'','-','','','* '/*+S.Notes*/ Notes,
'الخدمات - المدفوع' 'Rem',
'-','-',0/*S.ServiceTypeId*/,''/*ST.Name*/ SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdReservation=E.Id)
where DayDate between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Payed<>0
and S.Flag=1
group by cast(DayDate as date)

union all

select 3 MyFlag,@MotionType MotionType,0 InvoiceNo,cast(RemainingDate as date),
0 Db,
sum(Remaining) Cr,
'','-','','','* '/*+Notes*/ Notes,
'الخدمات - سداد المتبقي' 'Rem',
'-','-',0/*S.ServiceTypeId*/,''/*ST.Name*/ SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1
group by cast(RemainingDate as date)

union all

select 3 MyFlag,@MotionType MotionType,InvoiceNo,cast(RemainingDate as date),
Remaining Db,
0 Cr,
'','-','','','* '+S.Notes Notes,
'الخدمات - سداد المتبقي' 'Rem',
'-','-',S.ServiceTypeId,ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdRemaining=E.Id)
where cast(RemainingDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Remaining<>0
and Done=1
and S.Flag=1

union all

select 4 MyFlag,@MotionType MotionType,InvoiceNo,cast(ReturnedDate as date),
Payed+(case when Done=1 then Remaining else 0 end) Db,
0 Cr,
'','-','','','* '+Notes Notes,
'الخدمات - استرجاع' 'Rem',
'-','-',S.ServiceTypeId,ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=13
and CaseId=@SubAccNo
and Canceled=0
and Returned=1
and S.Flag=1

union all

select 4 MyFlag,@MotionType MotionType,InvoiceNo,cast(ReturnedDate as date),
0 Db,
Payed+(case when Done=1 then Remaining else 0 end) Cr,
'','-','','','* '+S.Notes Notes,
'الخدمات - استرجاع' 'Rem',
'-','-',S.ServiceTypeId,ST.Name SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Services S
left join ServiceTypes ST on(S.ServiceGroupId=ST.ServiceGroupId and S.ServiceTypeId=ST.Id)
left join Employees E on(S.EmpIdReturned=E.Id)
where cast(ReturnedDate as date) between @FromDate and @ToDate 
and @LinkFile=5
and E.DefaultSave=@SubAccNo
and Canceled=0
and Returned=1
and S.Flag=1

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,ED.InvoiceNo,E.DayDate,
ED.Debit Db,
ED.Credit Cr,
'','-','','','* '+ED.Notes+(case when DocNo='' then '' else ' ,مستند: '+DocNo end) Notes,
@EntryTblName 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

--==========================================================================================

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then Value1 else 0 end) Db,
(case when (MainAccNo2=@MainAccNo and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0)) then Value2 else 0 end) Cr,
'','-','','','* '+Notes Notes,
'تسويات نقدية' 'Rem',
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then MainAccNo2 else MainAccNo1 end),
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetMainAccName(MainAccNo2) else dbo.GetMainAccName(MainAccNo1) end),
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then SubAccNo2 else SubAccNo1 end),
(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetSubAccName(MainAccNo2,SubAccNo2) else dbo.GetSubAccName(MainAccNo1,SubAccNo1) end),
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Entry2
where DayDate between @FromDate and @ToDate 
and (
	(MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0))or
	(MainAccNo2=@MainAccNo and (SubAccNo2=@SubAccNo or @SubAccNo=0 or SubAccNo2=0))
	)
and Canceled=0

--==========================================================================================
union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
Cash,SheekNo,SheekPerson,SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash
where DayDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
Cash,SheekNo,SheekPerson,SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
cast((Case when Flag in(1,2) then 5 else 6 end) as nvarchar(100)),dbo.GetLinkFileName((Case when Flag in(1,2) then 5 else 6 end))MainAccName,BankId,dbo.GetLinkAccName((Case when Flag in(1,2) then 5 else 6 end),BankId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G
where DayDate between @FromDate and @ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0


union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue2 end) Db,
(Case when C.Flag=1 then MainValue2 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(MainLinkFile as nvarchar(100)),dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0


union all
--ارتداد الشيك اوتوماتيكيا
select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,C2.DayDate,
(Case when C.Flag=1 then C.MainValue2 else 0 end) Db,
(Case when C.Flag=1 then 0 else C.MainValue2 end) Cr,
0 Cash,
(case when C2.CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(C2.CheckTypeId)+' - '+C.CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(C.CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ C.CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ C.PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(C.PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ C.ImportMessageId=0 then '' else ' - رسالة: '+cast(C.ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(C.StoreInvoiceNo as nvarchar(100)) end)
+C.Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(C.MainLinkFile as nvarchar(100)),dbo.GetLinkFileName(C.MainLinkFile)MainAccName,C.BankId,dbo.GetLinkAccName(C.MainLinkFile,C.BankId) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate between @FromDate and @ToDate 
and C.LinkFile=@LinkFile 
and (C.SubAccNo=@SubAccNo or @SubAccNo=0 or C.SubAccNo=0)
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_InvoiceNo Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.عقود' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 2 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_MessageId Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.رسالة' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 3 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
0 Db,
I.Cost_OrderTypeId Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.طلبية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1

union all

select 4 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_OrderTypeId Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.طلبية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

union all

select 5 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
0 Db,
I.Cost_Administrative Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.إدارية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1

union all

select 5 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Cost_Administrative Db,
0 Cr,
0 Cash,' - ' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
'استلام رسالة - م.إدارية' 'Rem',
' - ',' - ',' - ',' - ',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

--==========================================================================================
union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then 0 else MainValue2Ded end) Db,
(Case when C.Flag=1 then MainValue2Ded else 0 end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
'','',(select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics),dbo.GetAccName((select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)),
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and LinkFile=@LinkFile 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)
and Canceled=0
and MainValue2Ded<>0

union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then Value2Ded else 0 end) Db,
(Case when C.Flag=1 then 0 else Value2Ded end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Value2Ded<>0 

union all

select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,D.DeliveredDate,
(Case when C.Flag=1 then 0 else Value2Ded end) Db,
(Case when C.Flag=1 then Value2Ded else 0 end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages D
left join ImportMessagesDetails Dt on(D.OrderTypeId=Dt.OrderTypeId and D.Id=Dt.Id)
left join BankCash_G2 C on(D.StoreId=C.StoreId and Dt.InvoiceNo=C.StoreInvoiceNo)
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where D.DeliveredDate between @FromDate and @ToDate 
and C.DayDate<=@ToDate
and (select (Case when C.Flag=1 then BankCash_G2_Flag1_DedAcc else BankCash_G2_Flag2_DedAcc end) from Statics)=@MainAccNo
and @SubAccNo=0
and Canceled=0
and Value2Ded<>0
and D.IsDelivered=1

union all

select C.Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when C.Flag=1 then MainValue else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Db,
(Case when C.Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue end) Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end),
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+' - '+dbo.GetLinkAccName(MainLinkFile,BankId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(LinkFile as nvarchar(100)),dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate between @FromDate and @ToDate 
and MainLinkFile=@LinkFile
and BankId=@SubAccNo
and Canceled=0

union all
--ارتداد الشيك اوتوماتيكيا
select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,C2.DayDate,
(Case when C.Flag=1 then 0 else C.MainValue end) Db,
(Case when C.Flag=1 then C.MainValue else 0 end) Cr,
0 Cash,
(case when C2.CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(C2.CheckTypeId)+' - '+C.CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(C.CheckNo,@ToDate) else '' end)
 end),
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ C.CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ C.PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(C.PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ C.ImportMessageId=0 then '' else ' - رسالة: '+cast(C.ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(C.StoreInvoiceNo as nvarchar(100)) end)
+C.Notes Notes,
--(Case C.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end)
dbo.GetBankCash_G2TypeName(C.Flag,C.BankCash_G2TypeId)
	+' - '+dbo.GetLinkAccName(C.MainLinkFile,C.BankId)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
cast(C.LinkFile as nvarchar(100)),dbo.GetLinkFileName(C.LinkFile)MainAccName,C.SubAccNo,dbo.GetLinkAccName(C.LinkFile,C.SubAccNo) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join BankCash_G2 C2 on(C2.CheckNo=C.CheckNo)
where C2.DayDate between @FromDate and @ToDate 
and C.MainLinkFile=@LinkFile
and C.BankId=@SubAccNo
and C.Canceled=0

and C.CheckTypeId in(2,3) 
and C2.CheckTypeId in(9,10)

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
MainValue Cr,
0 Cash,' - ' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'تحويلات نقدية' 'Rem',
cast(FromSubAccNo as nvarchar(100)),dbo.GetLinkFileName(FromSubAccNo)MainAccName,
(Case when FromSubAccNo=@SubAccNo then ToSubAccNo else FromSubAccNo end)SubAccNo,
dbo.GetLinkAccName((Case when FromSubAccNo=@SubAccNo then ToLinkFile else FromLinkFile end),(Case when FromSubAccNo=@SubAccNo then ToSubAccNo else FromSubAccNo end)) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G3
where DayDate between @FromDate and @ToDate
and FromLinkFile=@LinkFile 
and FromSubAccNo=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
MainValue Db,
0 Cr,
0 Cash,' - ' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'تحويلات نقدية' 'Rem',
cast(ToSubAccNo as nvarchar(100)),dbo.GetLinkFileName(ToSubAccNo)MainAccName,
(Case when ToSubAccNo=@SubAccNo then FromSubAccNo else ToSubAccNo end)SubAccNo,
dbo.GetLinkAccName((Case when ToSubAccNo=@SubAccNo then FromLinkFile else ToLinkFile end),(Case when ToSubAccNo=@SubAccNo then FromSubAccNo else ToSubAccNo end)) SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G3
where DayDate between @FromDate and @ToDate
and ToLinkFile=@LinkFile 
and ToSubAccNo=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
'','-','',null,'* '+Notes Notes,

--(Case Flag when 1 then 'مقبوضات خزنة' when 2 then 'مدفوعات خزنة' when 3 then 'مقبوضات بنك' when 4 then 'مدفوعات بنك' end) 'Rem',
(Case Flag when 1 then 'المقبوضات' when 2 then 'المدفوعات' when 3 then 'المقبوضات' when 4 then 'المدفوعات' end) 'Rem',

'','-',OutComeTypeId,dbo.GetOutComeTypeName(OutComeTypeId)MainAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash2
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0


union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
Cash,'','-',null,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خ خزنة' when 2 then 'مدفوعات خ خزنة' when 3 then 'مقبوضات خ بنك' when 4 then 'مدفوعات خ بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,'-','-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash3
where DayDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
Cash,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'مقبوضات خ خزنة' when 2 then 'مدفوعات خ خزنة' when 3 then 'مقبوضات خ بنك' when 4 then 'مدفوعات خ بنك' end) 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,'-','-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash3
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 0 else 1. end)*Value Db,
(Case when Flag in(1,3) then 1. else 0 end)*Value Cr,
0,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'شراء عملة' else 'مبيعات عملة' end) 'Rem',
'-','الصرافين',MoneyChangerId MainAccNo,dbo.GetMoneyChangerName(MoneyChangerId)MainAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash4
where DayDate between @FromDate and @ToDate 
and MoneyChangerId=@SubAccNo 
and @LinkFile=8
and Canceled=0

union all

select Flag MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when Flag in(1,3) then 1. else 0 end)*Value Db,
(Case when Flag in(1,3) then 0 else 1. end)*Value Cr,
0,'-','',null,'* '+Notes Notes,
(Case Flag when 1 then 'شراء عملة' else 'مبيعات عملة' end) 'Rem',
'-','الصرافين',MoneyChangerId MainAccNo,dbo.GetMoneyChangerName(MoneyChangerId)MainAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash4
where DayDate between @FromDate and @ToDate 
and (
	(Flag in(1,2) and @LinkFile=5) or
	(Flag in(3,4) and @LinkFile=6)
	)
and BankId=@SubAccNo
and Canceled=0

union all

--===========================================================================
--===========================================================================




select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Value Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
dbo.GetInvoicesTypeName(InvoicesTypeId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Invoices
where DayDate between @FromDate and @ToDate 
and SellerId=@SubAccNo
and @LinkFile=7


union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
0 Db,
Payed+Tips+Payments+OtherPayments Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'نوالين وإكراميات ومدفوعات' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Nolon
where DayDate between @FromDate and @ToDate 
and SellerId=@SubAccNo
and @LinkFile=7

--===========================================================================
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCustomerInvoiceTotal(InvoiceNo) Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+Notes Notes,
'فاتورة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CustomerInvoices
where DayDate between @FromDate and @ToDate 
and CustomerId=@SubAccNo
and @LinkFile=1
and @Detailed=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,d.InvoiceNo,DayDate,
Value Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+dt.Notes Notes,
dt.ItemName 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from CustomerInvoicesDt dt
left join CustomerInvoices d on(dt.InvoiceNo=d.InvoiceNo) 
where DayDate between @FromDate and @ToDate 
and CustomerId=@SubAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 1 MyFlag,@MotionType MotionType,CustomerInvoiceNo,Dt.DayDate,
Value Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+D.Notes Notes,
'إيصالات' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Invoices D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate between @FromDate and @ToDate 
and D.CustomerId=@SubAccNo
and @LinkFile=1
and Value<>0
and @Detailed=1

union all

select 1 MyFlag,@MotionType MotionType,CustomerInvoiceNo,Dt.DayDate,
Value2+Tips2 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+D.Notes Notes,
'نوالين وإكراميات' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Nolon D
right join CustomerInvoices Dt on(D.CustomerInvoiceNo=Dt.InvoiceNo)
where Dt.DayDate between @FromDate and @ToDate 
and D.CustomerId=@SubAccNo
and @LinkFile=1
and Value2+Tips2<>0
and @Detailed=1


--===========================================================================
--===========================================================================

--===========================================================================المبيعات والمشتريات

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then TotalAfterDiscount else 0 end) Db,
(case when Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then TotalAfterDiscount else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and @Detailed=0
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,D.InvoiceNo,D.DayDate,
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then D.DiscountValue else 0 end) Db,
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then D.DiscountValue else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
'خصم' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
1,D.DiscountValue
from SalesMaster D
where D.DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and D.DiscountValue<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,D.InvoiceNo,D.DayDate,
(case when D.Flag in(11,13,15,10,20,30,21,23,17,35,37,47) then Dt.Value else 0 end) Db,
(case when D.Flag in(12,14,16,9,19,29,22,24,18,36,38,48) then Dt.Value else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dt.ItemName 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
D.StoreId SalesMaster_StoreId,D.Flag SalesMaster_Flag,D.InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
Dt.Qty,Dt.Price
from SalesMaster D
left join SalesDetails Dt on(D.StoreId=dt.StoreId and D.Flag=dt.Flag and D.InvoiceNo=Dt.InvoiceNo )
where D.DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and D.Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and D.Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and D.Flag in(17,18)) or
	(	@LinkFile=15 and D.Flag in(35,36)) or
	(	@LinkFile=13 and D.Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Dt.Value<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=1) then Val1 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType1=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType1=2) then Val1 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo1) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val1<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=1) then Val2 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType2=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType2=2) then Val2 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo2) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val2<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=1) then Val3 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType3=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType3=2) then Val3 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo3) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val3<>0
and @Detailed=1
and Temp=0
--===========================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=2) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=1) then Val4 else 0 end) Db,
(case when (Flag in(11,13,15,10,20,30,21,23,17,35,37,47) and AccType4=1) or (Flag in(12,14,16,9,19,29,22,24,18,36,38,48) and AccType4=2) then Val4 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetAccName(AccNo4) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
StoreId SalesMaster_StoreId,Flag SalesMaster_Flag,InvoiceNo SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster
where DayDate between @FromDate and @ToDate 
and ToId=@SubAccNo
and (
	(	((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)) and Flag in(11,13,15,12,14,16,21,22,23,24)) or
	(	((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1)) and Flag in(9,10,19,20,29,30)) or
	(	@LinkFile=13 and Flag in(17,18)) or
	(	@LinkFile=15 and Flag in(35,36)) or
	(	@LinkFile=13 and Flag in(37,38/*,47,48*/) and CaseInvoiceNo<>0) 
	)
and Val4<>0
and @Detailed=1
and Temp=0
--===========================================================================


--===========================================================================النقدى والفيزا

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*
(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId),
dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId))MainAccName,
(Case when SaveId=@SubAccNo and @LinkFile=5 then ToId else SaveId end)ToId,
(Case when SaveId=@SubAccNo and @LinkFile=5 then dbo.GetSubAccNameLink((case when ReservToId=1 then 2 else 1 end),ToId) else dbo.GetSubAccNameLink(5,SaveId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1)))or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(11,13,15,21,23)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr,

1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId),dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 2 else 1 end),ToId))MainAccName,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then SaveId else ToId end)ToId,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then dbo.GetSubAccNameLink(5,SaveId) else dbo.GetSubAccNameLink((case when ReservToId=1 then 2 else 1 end),ToId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(12,14,16,22,24)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Db,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId),dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId))MainAccName,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then SaveId else ToId end)ToId,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then dbo.GetSubAccNameLink(5,SaveId) else dbo.GetSubAccNameLink((case when ReservToId=1 then 1 else 2 end),ToId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=2 and ReservToId=0)or(@LinkFile=1 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(9,19,29)
and PaymentType in(1,2,3,5)
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(Case 
	when SaveId=@SubAccNo and @LinkFile=5 then 
		(case when PaymentType in(1) then TotalAfterDiscount when PaymentType in(3,5) then CashValue ELSE 0 end)
	when BankId=@SubAccNo and @LinkFile=6 then 
		(case when PaymentType in(2) then TotalAfterDiscount when PaymentType in(3) then TotalAfterDiscount-CashValue ELSE 0 end)
 else 0 end) Db,
(Case when ToId=@SubAccNo and @LinkFile in(1,2) then 1. else 0 end)*(case when PaymentType in(1,2,3) then TotalAfterDiscount when PaymentType=5 then CashValue end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
dbo.GetSalesPaymentTypeName(PaymentType)+' - '+SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId),dbo.GetMainAccName(dbo.GetMainAccNoLink((case when ReservToId=1 then 1 else 2 end),ToId))MainAccName,
(Case when SaveId=@SubAccNo and @LinkFile=5 then SaveId else ToId end)ToId,
(Case when SaveId=@SubAccNo and @LinkFile=5 then dbo.GetSubAccNameLink(5,SaveId) else dbo.GetSubAccNameLink((case when ReservToId=1 then 1 else 2 end),ToId) end)SubAccName,
dbo.GetSalesItems(Flag,StoreId,InvoiceNo),
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and (
	(ToId=@SubAccNo and ((@LinkFile=1 and ReservToId=0)or(@LinkFile=2 and ReservToId=1))) or
	(SaveId=@SubAccNo and @LinkFile=5)or
	(BankId=@SubAccNo and @LinkFile=6))
and Flag in(10,20,30)
and PaymentType in(1,2,3,5)
and Temp=0


--===========================================================================حساب المبيعات والمشتريات

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
(case when Flag in(9,19,29,12,14,16,18,36,38,48,22,24) then Total else 0 end) Db,
(case when Flag in(10,20,30,11,13,15,17,35,37,47,21,23) then Total else 0 end) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(9,10,29,30,	11,13,15,17,35,37,47,21,23,		12,14,16,18,36,38,48,	22,24)
and not(Flag in(37,38,47,48) and CaseInvoiceNo=0) 
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
--====================================================================================
union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' * '+CAST(TotalAfterDiscount as nvarchar(100))+' '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(19)
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0

union all

select 1 MyFlag,@MotionType MotionType,M.InvoiceNo,M.DayDate,
0 Db,
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' ('+CAST(D.Value as nvarchar(100))+') '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(20)
and AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
--====================================================================================
--====================================================================================
union all

select 1 MyFlag,@MotionType MotionType,M.InvoiceNo,I.DeliveredDate,
0 Db,
TotalAfterDiscount*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' * '+CAST(TotalAfterDiscount as nvarchar(100))+' '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and Flag in(19)
and M.AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
and I.DeliveredDate between @FromDate and @ToDate
and I.IsDelivered=1

union all

select 1 MyFlag,@MotionType MotionType,M.InvoiceNo,I.DeliveredDate,
D.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate) Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes+' ('+CAST(D.Value as nvarchar(100))+') '+dbo.GetCurrencySIGN(M.CurrencyId) Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=D.SalesInvoiceNo)
left join ImportMessages I on(I.OrderTypeId=ID.OrderTypeId and I.Id=ID.Id)
where M.DayDate <=@ToDate 
and M.Flag in(20)
and M.AccNo=@MainAccNo
and @SubAccNo=0
and Temp=0
and I.DeliveredDate between @FromDate and @ToDate
and I.IsDelivered=1

--====================================================================================

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DayDate,
I.Bal0 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'تسجيل رسالة - أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DayDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.Bal0<>0

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
0 Db,
I.Bal0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'استلام رسالة - أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,0)=@MainAccNo
and @SubAccNo=I.OrderTypeId
and I.IsDelivered=1
and I.Bal0<>0

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.Bal0 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'استلام رسالة - أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1
and I.Bal0<>0

union all

select 1 MyFlag,@MotionType MotionType,I.Id,I.DeliveredDate,
I.val5 Db,
0 Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,
'استلام رسالة - قيمة العقود' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessages I
where I.DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(I.OrderTypeId,3)=@MainAccNo
and @SubAccNo=0
and I.IsDelivered=1

--===========================================================================حسابات الخصم والإضافة

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(11,13,15,21,23)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(12,14,16,22,24)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(9,19,29)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0

union all

select 1 MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=1 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=1 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=1 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=1 then Val4 else 0 end)) Db,
dbo.GetCurrencyExchange(0,0,CurrencyId,0,@ToDate)*((case when @MainAccNo=AccNo1 and AccType1=2 then Val1 else 0 end)+(case when @MainAccNo=AccNo2 and AccType2=2 then Val2 else 0 end)+(case when @MainAccNo=AccNo3 and AccType3=2 then Val3 else 0 end)+(case when @MainAccNo=AccNo4 and AccType4=2 then Val4 else 0 end)) Cr,
1 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+/*DocNo+' - '+*/Notes Notes,
SF.Name+' - '+dbo.GetStoreName(M.StoreId) 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate and @ToDate 
and Flag in(10,20,30)
and @MainAccNo in(AccNo1,AccNo2,AccNo3,AccNo4)
and @SubAccNo=0
and Temp=0
and ABS(Val1)+ABS(Val2)+ABS(Val3)+ABS(Val4)>0
/*
union all

--مصاريف الطلبيات
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
sum(Val3) Db,
0 Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+(case when ImportMessageId=0 then ' على عقد رقم '+cast(StoreInvoiceNo as nvarchar(100)) else ' على رسالة رقم '+cast(ImportMessageId as nvarchar(100)) end) Notes,
'توزيع مصاريف طلبية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal3 T
where DeliveredDate between @FromDate and @ToDate 
--and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag not in(4,5))
and (dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo and MyFlag in(0))
and @SubAccNo=OrderTypeId

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,ImportMessageId,StoreInvoiceNo

union all

--مصاريف الطلبيات
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
0 Db,
sum(Val3) Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+(case when ImportMessageId=0 then ' على عقد رقم '+cast(StoreInvoiceNo as nvarchar(100)) else ' على رسالة رقم '+cast(ImportMessageId as nvarchar(100)) end) Notes,
'توزيع مصاريف طلبية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal3
where DeliveredDate between @FromDate and @ToDate 
--and (MainAccNo=@MainAccNo and MyFlag not in(4,5))
and (MainAccNo=@MainAccNo and MyFlag in(0))
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,ImportMessageId,StoreInvoiceNo
*/
union all

--المصاريف الإدارية
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
sum(SubVal4) Db,
0 Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+' على '+dbo.GetSubAccNameLink(11,OrderTypeId) Notes,
'توزيع المصاريف الإدارية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal4
where DeliveredDate between @FromDate and @ToDate 
and dbo.GetOrderTypesMainAccNo(OrderTypeId,0)=@MainAccNo 
and @SubAccNo=OrderTypeId

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,OrderTypeId


union all

--المصاريف الإدارية
select 1 MyFlag,@MotionType MotionType,0,DeliveredDate,
0 Db,
sum(SubVal4) Cr,
'','-','','','* توزيع '
+(case when MainOrderTypeId=0 then ' آخر الشهر ' else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' رسالة رقم '+cast(MainImportMessageId as nvarchar(100)) end)
+' على '+dbo.GetSubAccNameLink(11,OrderTypeId) Notes,
'توزيع المصاريف الإدارية' 'Rem',
'-',
'-',
'-',
'-',
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from ImportMessageCostHistoryVal4
where DeliveredDate between @FromDate and @ToDate 
and MainAccNo=@MainAccNo 
and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0)

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,OrderTypeId

--=============================================================================================
--=========================تحويل المصاريف عبر الحسابات في رسائل الاستيراد=======================
--=============================================================================================
union all

select MyFlag,MotionType,InvoiceNo,DayDate,sum(Db),sum(Cr),
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price from (

select 1 MyFlag,@MotionType MotionType,E.InvoiceNo,
(case 
when Tbl.Line=1 and E.DayDate between @FromDate and @ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then E.DayDate
when Tbl.Line=2 and E.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then E.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and E.DayDate between @FromDate and @ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then ED.Credit
when Tbl.Line=2 and E.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Debit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Credit
else 0 end)Db,
(case 
when Tbl.Line=1 and E.DayDate between @FromDate and @ToDate and MainAccNo=@MainAccNo and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then ED.Debit
when Tbl.Line=2 and E.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Credit
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Debit
else 0 end)Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+ED.Notes Notes,
(case when CostTypeId=4 then 'م.عقد' when CostTypeId=3 then 'م.رسالة' when CostTypeId=2 then 'م.طلبية' else '-' end)'Rem',
--MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
'' MainAccNo,'-' MainAccName,'' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*E.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)

)Tbl
where (Db<>0 or Cr<>0)
and DayDate between @FromDate and @ToDate

group by MyFlag,MotionType,InvoiceNo,DayDate,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price

union all

select MyFlag,MotionType,InvoiceNo,DayDate,sum(Db),sum(Cr),
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price from (

select 1 MyFlag,@MotionType MotionType,ED.InvoiceNo,
(case 
when Tbl.Line=1 and ED.DayDate between @FromDate and @ToDate and 
(
(IsCost2=1 and MainAccNo2=@MainAccNo and (ED.SubAccNo2=@SubAccNo or @SubAccNo=0 or ED.SubAccNo2=0))or
(IsCost1=1 and MainAccNo1=@MainAccNo and (ED.SubAccNo1=@SubAccNo or @SubAccNo=0 or ED.SubAccNo1=0))
)
then ED.DayDate
when Tbl.Line=2 and ED.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and ED.DayDate between @FromDate and @ToDate and (IsCost2=1 and MainAccNo2=@MainAccNo and (ED.SubAccNo2=@SubAccNo or @SubAccNo=0 or ED.SubAccNo2=0)) 
then ED.Value2
when Tbl.Line=2 and ED.DayDate between @FromDate and @ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value1
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value2
else 0 end)Db,
(case 
when Tbl.Line=1 and ED.DayDate between @FromDate and @ToDate and (IsCost1=1 and MainAccNo1=@MainAccNo and (ED.SubAccNo1=@SubAccNo or @SubAccNo=0 or ED.SubAccNo1=0)) 
then ED.Value1
when Tbl.Line=2 and ED.DayDate between @FromDate and @ToDate and IsCost2=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value2
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and IsCost1=1 and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then ED.Value1
else 0 end)Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* '+ED.Notes Notes,
(case when CostTypeId=4 then 'م.عقد' when CostTypeId=3 then 'م.رسالة' when CostTypeId=2 then 'م.طلبية' else '-' end)'Rem',
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then MainAccNo2 else MainAccNo1 end)MainAccNo,
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetMainAccName(MainAccNo2) else dbo.GetMainAccName(MainAccNo1) end)MainAccName,
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then SubAccNo2 else SubAccNo1 end)SubAccNo,
--(case when (MainAccNo1=@MainAccNo and (SubAccNo1=@SubAccNo or @SubAccNo=0 or SubAccNo1=0)) then dbo.GetSubAccName(MainAccNo2,SubAccNo2) else dbo.GetSubAccName(MainAccNo1,SubAccNo1) end)SubAccName,
'' MainAccNo,'-' MainAccName,'' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from Entry2 ED
left join SalesMaster M on(M.StoreId=ED.StoreId and M.Flag=19 and M.InvoiceNo=ED.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(ED.CostTypeId=2 and I.OrderTypeId=ED.PurchaseAccNo)or
(ED.CostTypeId=3 and I.OrderTypeId=ED.PurchaseAccNo and I.Id=ED.ImportMessageId)or
(ED.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*ED.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0


)Tbl
where (Db<>0 or Cr<>0)
and DayDate between @FromDate and @ToDate

group by MyFlag,MotionType,InvoiceNo,DayDate,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price

union all

select MyFlag,MotionType,InvoiceNo,DayDate,sum(Db),sum(Cr),
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price from (

select C.Flag MyFlag,@MotionType MotionType,C.InvoiceNo,
(case 
when Tbl.Line=1 and C.DayDate between @FromDate and @ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then C.DayDate
when Tbl.Line=2 and C.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then C.DayDate
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then I.DeliveredDate
end)DayDate,
(case 
when Tbl.Line=1 and C.DayDate between @FromDate and @ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then 0
when Tbl.Line=2 and C.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then 0
else 0 end)Db,
(case 
when Tbl.Line=1 and C.DayDate between @FromDate and @ToDate and LinkFile=@LinkFile and (SubAccNo=@SubAccNo or @SubAccNo=0 or SubAccNo=0) 
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
when Tbl.Line=2 and C.DayDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then 0
when Tbl.Line=5 and I.IsDelivered=1 and I.DeliveredDate between @FromDate and @ToDate and dbo.GetOrderTypesMainAccNo(PurchaseAccNo,0)=@MainAccNo and PurchaseAccNo=@SubAccNo
then (case when C.Flag=1 then -MainValue2 else MainValue2 end)
else 0 end)Cr,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,@ToDate) else '' end)
 end) SheekNo,
'' SheekPerson,null SheekDate,
'* '
+(case when /*@DetailedInvoice=0 or*/ CostTypeId<>1 then '' else ' - مصاريف إدارية' end)
+(case when /*@DetailedInvoice=0 or*/ PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when /*@DetailedInvoice=0 or*/ ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when /*@DetailedInvoice=0 or*/ C.StoreId=0 then '' else ' - '+dbo.GetStoreName(C.StoreId) end)
+(case when /*@DetailedInvoice=0 or*/ StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+C.Notes Notes,
(case when CostTypeId=4 then 'م.عقد' when CostTypeId=3 then 'م.رسالة' when CostTypeId=2 then 'م.طلبية' else '-' end)'Rem',
--cast(LinkFile as nvarchar(100))MainAccNo,dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
'' MainAccNo,'-' MainAccName,'' SubAccNo,'-' SubAccName,
'' SalesItems,
0 SalesMaster_StoreId,0 SalesMaster_Flag,0 SalesMaster_InvoiceNo,@CurrencyName CurrencyName,
@CheckSum1 CheckSum1,@CheckSum2 CheckSum2,@CheckSum3 CheckSum3,@GetCheckReturnCount GetCheckReturnCount,@CurrentBal CurrentBal,
0 Qty,0 Price
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join SalesMaster M on(M.StoreId=C.StoreId and M.Flag=19 and M.InvoiceNo=C.StoreInvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(
--(C.CostTypeId=2 and I.OrderTypeId=C.PurchaseAccNo)or
(C.CostTypeId=3 and I.OrderTypeId=C.PurchaseAccNo and I.Id=C.ImportMessageId)or
(C.CostTypeId=4 and I.OrderTypeId=M.OrderTypeId and I.Id=ID.Id)
)
cross join(
			select 1 Line union all
			select 2 Line union all
			select 5 Line 
			)Tbl
where /*C.DayDate<=@ToDate
and*/ CostTypeId in(2,3,4)
and Canceled=0

)Tbl
where (Db<>0 or Cr<>0)
and DayDate between @FromDate and @ToDate

group by MyFlag,MotionType,InvoiceNo,DayDate,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,MainAccNo,MainAccName,SubAccNo,SubAccName,
SalesItems,SalesMaster_StoreId,SalesMaster_Flag,SalesMaster_InvoiceNo,CurrencyName,
CheckSum1,CheckSum2,CheckSum3,GetCheckReturnCount,CurrentBal,Qty,Price


)Tbl
where MyFlag=0 or not(Cr=0 and Db=0)

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccountBalance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountBalance]
@FromMainAccNo varchar(100),
@ToMainAccNo varchar(100),
@Level bigint,
@ActiveOnly int,
@HasBalOnly int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


create table #Fn0 (MyMainAccNo nvarchar(100),Db float,Cr float)
insert #Fn0
select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr 
from 
(
	select MyMainAccNo,DbLocal,CrLocal
	from dbo.Fn_AllEntry('',0,'1900-1-1',@FromDate-1,0,0,1) 
	
	union All
	
	select T.AccNo,(case when C.MotionType=0 then T.Bal0 else 0 end),(case when C.MotionType=1 then T.Bal0 else 0 end)
	from AllSub T
	left join Chart C on T.AccNo=C.Id
)T
group by MyMainAccNo


create table #Fn (MyMainAccNo nvarchar(100),Db float,Cr float)
insert #Fn
select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr 
from 
(
	select MyMainAccNo,DbLocal,CrLocal
	from dbo.Fn_AllEntry('',0,'1900-1-1',@ToDate,0,0,1) 
	
	union All
	
	select T.AccNo,(case when C.MotionType=0 then T.Bal0 else 0 end),(case when C.MotionType=1 then T.Bal0 else 0 end)
	from AllSub T
	left join Chart C on T.AccNo=C.Id
)T
group by MyMainAccNo


create table #tblAll (ROWNUMBER bigint,Id varchar(100),Name nvarchar(1000),MainAccId varchar(100),
FirstDb float,FirstCr float,LastDb float,LastCr float,
MyId nvarchar(100),Level bigint,SubType bigint,MotionType bigint,
Line bigint identity(1,1))

insert #tblAll

select ROW_NUMBER() over(order by cast(Id as varchar(100)))ROWNUMBER,Id,Name,MainAccId,
(case when (MotionType=0 and Bal0>0) then Bal0 when (MotionType=1 and Bal0<0) then -Bal0 else 0 end)+isnull(Fn0.Db,0) FirstDb,
(case when (MotionType=0 and Bal0<0) then -Bal0 when (MotionType=1 and Bal0>0) then Bal0 else 0 end)+isnull(Fn0.Cr,0) FirstCr,
(case when (MotionType=0 and Bal0>0) then Bal0 when (MotionType=1 and Bal0<0) then -Bal0 else 0 end)+isnull(Fn.Db,0) LastDb,
(case when (MotionType=0 and Bal0<0) then -Bal0 when (MotionType=1 and Bal0>0) then Bal0 else 0 end)+isnull(Fn.Cr,0) LastCr,
cast(Id as varchar(100)) MyId,
Level,SubType,MotionType
from chart C
left join #Fn0 Fn0 on(Fn0.MyMainAccNo=C.Id)
left join #Fn Fn on(Fn.MyMainAccNo=C.Id)

where (Id>=@FromMainAccNo or @FromMainAccNo='')
and (Id<=@ToMainAccNo or @ToMainAccNo='')

order by ROWNUMBER


declare @MyLevel bigint
select @MyLevel=max(Level) from #tblAll
while @MyLevel>0
begin
	update m set 
	FirstDb=isnull((select sum(s.FirstDb) from #tblAll s where s.MainAccId=m.Id),0),
	FirstCr=isnull((select sum(s.FirstCr) from #tblAll s where s.MainAccId=m.Id),0),
	LastDb=isnull((select sum(s.LastDb) from #tblAll s where s.MainAccId=m.Id),0),
	LastCr=isnull((select sum(s.LastCr) from #tblAll s where s.MainAccId=m.Id),0)
	from #tblAll m where Level=@MyLevel and SubType=0
	select @MyLevel-=1
end

select * from #tblAll
where 
(
	(@ActiveOnly=1 and (round(FirstDb,2)<>round(LastDb,2) or round(FirstCr,2)<>round(LastCr,2)))
	or
	(@HasBalOnly=1 and (round(LastDb,2)<>round(LastCr,2)))
)
--where Level in(@Level,@Level+1)
and Level <=@Level
order by Line


drop table #Fn
drop table #Fn0
drop table #tblAll

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccountBalanceDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountBalanceDetailed]
@FromMainAccNo nvarchar(100),
@ToMainAccNo nvarchar(100),
@Level bigint,
@ActiveOnly int,
@HasBalOnly int,
@Year nvarchar(100)
--with encryption
as
declare
@FromDate datetime=cast(cast(@Year as nvarchar(4))+'-01-01' as datetime),@ToDate datetime=cast(cast(@Year as nvarchar(4))+'-12-31' as datetime)
exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


create table #Fn0 (MyMainAccNo nvarchar(100),Db float,Cr float)
insert #Fn0
select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr 
from dbo.Fn_AllEntry('',0,'1900-1-1',cast(cast(@Year as nvarchar(4))+'-01-01' as datetime)-1,0,0,1) 
group by MyMainAccNo


create table #Fn (MyMainAccNo nvarchar(100),Db float,Cr float)
insert #Fn
select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr 
from dbo.Fn_AllEntry('',0,'1900-1-1',cast(cast(@Year as nvarchar(4))+'-12-31' as date),0,0,1) 
group by MyMainAccNo



create table #Fn01 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn01 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-01-01' as datetime),cast(cast(@Year as nvarchar(4))+'-01-31' as datetime),0,0,1) group by MyMainAccNo
create table #Fn02 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn02 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-02-01' as datetime),cast(cast(@Year as nvarchar(4))+'-03-01' as datetime)-1,0,0,1) group by MyMainAccNo
create table #Fn03 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn03 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-03-01' as datetime),cast(cast(@Year as nvarchar(4))+'-03-31' as datetime),0,0,1) group by MyMainAccNo
create table #Fn04 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn04 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-04-01' as datetime),cast(cast(@Year as nvarchar(4))+'-04-30' as datetime),0,0,1) group by MyMainAccNo
create table #Fn05 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn05 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-05-01' as datetime),cast(cast(@Year as nvarchar(4))+'-05-31' as datetime),0,0,1) group by MyMainAccNo
create table #Fn06 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn06 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-06-01' as datetime),cast(cast(@Year as nvarchar(4))+'-06-30' as datetime),0,0,1) group by MyMainAccNo
create table #Fn07 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn07 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-07-01' as datetime),cast(cast(@Year as nvarchar(4))+'-07-31' as datetime),0,0,1) group by MyMainAccNo
create table #Fn08 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn08 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-08-01' as datetime),cast(cast(@Year as nvarchar(4))+'-08-31' as datetime),0,0,1) group by MyMainAccNo
create table #Fn09 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn09 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-09-01' as datetime),cast(cast(@Year as nvarchar(4))+'-09-30' as datetime),0,0,1) group by MyMainAccNo
create table #Fn10 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn10 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-10-01' as datetime),cast(cast(@Year as nvarchar(4))+'-10-31' as datetime),0,0,1) group by MyMainAccNo
create table #Fn11 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn11 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-11-01' as datetime),cast(cast(@Year as nvarchar(4))+'-11-30' as datetime),0,0,1) group by MyMainAccNo
create table #Fn12 (MyMainAccNo nvarchar(100),Db float,Cr float) insert #Fn12 select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr from dbo.Fn_AllEntry('',0,cast(cast(@Year as nvarchar(4))+'-12-01' as datetime),cast(cast(@Year as nvarchar(4))+'-12-31' as datetime),0,0,1) group by MyMainAccNo



create table #tblAll (ROWNUMBER bigint,Id varchar(100),Name nvarchar(1000),MainAccId varchar(100),
FirstDb float,FirstCr float,
Db01 float,Cr01 float,
Db02 float,Cr02 float,
Db03 float,Cr03 float,
Db04 float,Cr04 float,
Db05 float,Cr05 float,
Db06 float,Cr06 float,
Db07 float,Cr07 float,
Db08 float,Cr08 float,
Db09 float,Cr09 float,
Db10 float,Cr10 float,
Db11 float,Cr11 float,
Db12 float,Cr12 float,
LastDb float,LastCr float,
MyId nvarchar(100),Level bigint,SubType bigint,MotionType bigint,
Line bigint identity(1,1))

insert #tblAll

select ROW_NUMBER() over(order by cast(Id as varchar(100)))ROWNUMBER,Id,Name,MainAccId,
(case when (MotionType=0 and Bal0>0) then Bal0 when (MotionType=1 and Bal0<0) then -Bal0 else 0 end)+isnull(Fn0.Db,0) FirstDb,
(case when (MotionType=0 and Bal0<0) then -Bal0 when (MotionType=1 and Bal0>0) then Bal0 else 0 end)+isnull(Fn0.Cr,0) FirstCr,

isnull(Fn01.Db,0) Db01,isnull(Fn01.Cr,0) Cr01,
isnull(Fn02.Db,0) Db02,isnull(Fn02.Cr,0) Cr02,
isnull(Fn03.Db,0) Db03,isnull(Fn03.Cr,0) Cr03,
isnull(Fn04.Db,0) Db04,isnull(Fn04.Cr,0) Cr04,
isnull(Fn05.Db,0) Db05,isnull(Fn05.Cr,0) Cr05,
isnull(Fn06.Db,0) Db06,isnull(Fn06.Cr,0) Cr06,
isnull(Fn07.Db,0) Db07,isnull(Fn07.Cr,0) Cr07,
isnull(Fn08.Db,0) Db08,isnull(Fn08.Cr,0) Cr08,
isnull(Fn09.Db,0) Db09,isnull(Fn09.Cr,0) Cr09,
isnull(Fn10.Db,0) Db10,isnull(Fn10.Cr,0) Cr10,
isnull(Fn11.Db,0) Db11,isnull(Fn11.Cr,0) Cr11,
isnull(Fn12.Db,0) Db12,isnull(Fn12.Cr,0) Cr12,

(case when (MotionType=0 and Bal0>0) then Bal0 when (MotionType=1 and Bal0<0) then -Bal0 else 0 end)+isnull(Fn.Db,0) LastDb,
(case when (MotionType=0 and Bal0<0) then -Bal0 when (MotionType=1 and Bal0>0) then Bal0 else 0 end)+isnull(Fn.Cr,0) LastCr,
cast(Id as varchar(100)) MyId,
Level,SubType,MotionType
from chart C
left join #Fn0 Fn0 on(Fn0.MyMainAccNo=C.Id)
left join #Fn Fn on(Fn.MyMainAccNo=C.Id)
left join #Fn01 Fn01 on(Fn01.MyMainAccNo=C.Id)
left join #Fn02 Fn02 on(Fn02.MyMainAccNo=C.Id)
left join #Fn03 Fn03 on(Fn03.MyMainAccNo=C.Id)
left join #Fn04 Fn04 on(Fn04.MyMainAccNo=C.Id)
left join #Fn05 Fn05 on(Fn05.MyMainAccNo=C.Id)
left join #Fn06 Fn06 on(Fn06.MyMainAccNo=C.Id)
left join #Fn07 Fn07 on(Fn07.MyMainAccNo=C.Id)
left join #Fn08 Fn08 on(Fn08.MyMainAccNo=C.Id)
left join #Fn09 Fn09 on(Fn09.MyMainAccNo=C.Id)
left join #Fn10 Fn10 on(Fn10.MyMainAccNo=C.Id)
left join #Fn11 Fn11 on(Fn11.MyMainAccNo=C.Id)
left join #Fn12 Fn12 on(Fn12.MyMainAccNo=C.Id)

where (Id>=@FromMainAccNo or @FromMainAccNo='')
and (Id<=@ToMainAccNo or @ToMainAccNo='')

order by ROWNUMBER


declare @MyLevel bigint
select @MyLevel=max(Level) from #tblAll
while @MyLevel>0
begin
	update m set 
	FirstDb=isnull((select sum(s.FirstDb) from #tblAll s where s.MainAccId=m.Id),0),
	FirstCr=isnull((select sum(s.FirstCr) from #tblAll s where s.MainAccId=m.Id),0),
	LastDb=isnull((select sum(s.LastDb) from #tblAll s where s.MainAccId=m.Id),0),
	LastCr=isnull((select sum(s.LastCr) from #tblAll s where s.MainAccId=m.Id),0)
	from #tblAll m where Level=@MyLevel and SubType=0
	select @MyLevel-=1
end

select * from #tblAll
where 
(
	(@ActiveOnly=1 and (round(FirstDb,2)<>round(LastDb,2) or round(FirstCr,2)<>round(LastCr,2)))
	or
	(@HasBalOnly=1 and (round(LastDb,2)<>round(LastCr,2)))
)
--where Level in(@Level,@Level+1)
and Level <=@Level
order by Line


drop table #Fn
drop table #Fn0
drop table #tblAll

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccountBalanceOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountBalanceOLD]
@Level bigint,
@ActiveOnly int,
@HasBalOnly int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate

create table #tblAll (ROWNUMBER bigint,Id varchar(100),Name nvarchar(1000),MainAccId varchar(100),
FirstDb float,FirstCr float,LastDb float,LastCr float,
MyId nvarchar(100),Level bigint,SubType bigint,MotionType bigint,
Line bigint identity(1,1))

insert #tblAll

select ROW_NUMBER() over(order by cast(Id as varchar(100)))ROWNUMBER,Id,Name,MainAccId,
dbo.Bal0All(Id,@FromDate-1,1) FirstDb,
dbo.Bal0All(Id,@FromDate-1,2) FirstCr,
dbo.Bal0All(Id,@ToDate,1) LastDb,
dbo.Bal0All(Id,@ToDate,2) LastCr,
cast(Id as varchar(100)) MyId,
Level,SubType,MotionType
from chart
order by ROWNUMBER


declare @MyLevel bigint
select @MyLevel=max(Level) from #tblAll
while @MyLevel>0
begin
	update m set 
	FirstDb=isnull((select sum(s.FirstDb) from #tblAll s where s.MainAccId=m.Id),0),
	FirstCr=isnull((select sum(s.FirstCr) from #tblAll s where s.MainAccId=m.Id),0),
	LastDb=isnull((select sum(s.LastDb) from #tblAll s where s.MainAccId=m.Id),0),
	LastCr=isnull((select sum(s.LastCr) from #tblAll s where s.MainAccId=m.Id),0)
	from #tblAll m where Level=@MyLevel and SubType=0
	select @MyLevel-=1
end

select * from #tblAll
where (@ActiveOnly=0 or (FirstDb<>LastDb or FirstCr<>LastCr))
and (@HasBalOnly=0 or (LastDb<>0 or LastCr<>0))
--where Level in(@Level,@Level+1)
and Level <=@Level
order by Line


drop table #tblAll

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEnd]
@EndType bigint,
@Level bigint,
@IsIncomeStatement bigint,
@FromDate datetime,
@ToDate datetime,
@IsCostCenter int,
@MyId bigint
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


--declare @PrevYearProfitAccNo nvarchar(100)=(select PrevYearProfitAccNo from Statics)
declare @YearProfitAccNo nvarchar(100)=(select YearProfitAccNo from Statics)

create table #chart(ROWNUMBER bigint,MotionType bigint,EndType bigint,
Id nvarchar(100),Name nvarchar(1000),MainAccId varchar(100),Bal0 float,MyId nvarchar(100),Level bigint,SubType bigint,Id2 bigint,
Line bigint identity(1,1))

--create table #chartPrev(ROWNUMBER bigint,MotionType bigint,EndType bigint,
--Id nvarchar(100),Name nvarchar(1000),MainAccId varchar(100),Bal0 float,MyId nvarchar(100),Level bigint,SubType bigint,Id2 bigint,
--Line bigint identity(1,1))

create table #tblAll(ROWNUMBER bigint,Level bigint,IsIncomeStatement bigint,
Db_Id bigint,Db_Name nvarchar(1000),Db_MainAccId varchar(100),Db_Bal0 float,Db_MyId nvarchar(100),Db_Level bigint,Db_SubType bigint,
Cr_Id bigint,Cr_Name nvarchar(1000),Cr_MainAccId varchar(100),Cr_Bal0 float,Cr_MyId nvarchar(100),Cr_Level bigint,Cr_SubType bigint,
Line bigint identity(1,1))

declare @FromDate0 datetime=(case when @EndType=3 then '1900-01-01' else @FromDate end)

--=============================Chart=================================================
insert #chart
select ROW_NUMBER() over(order by MyId) MyROWNUMBER,MotionType,EndType,
cast(Id as nvarchar(100)),Name,MainAccId,Bal0,MyId,Level,SubType,Id2
from
(
select MotionType,EndType,
Id,Name,MainAccId,sum(Tbl.Bal0)Bal0,MyId,Level,SubType,Id2
from(
	select ch.Id MyMainAccNo,isnull(Sub.Id,0) MySubAccNo,
	ch.MotionType,ch.EndType,
	ch.Id,ch.Name,ch.MainAccId,cast(ch.Id as varchar(100)) MyId,ch.Level,ch.SubType,ch.Id2,
	( (case when @IsCostCenter=0 then ISNULL(Sub.MainBal0,0) else 0 end)
	+(case when ch.MotionType=1 then -1. else 1. end)*(isnull(SUM(Db),0)-isnull(SUM(Cr),0)))*isnull(Curr.Exchange,1.) Bal0
	from chart ch
	left join AllSub Sub on(Sub.LinkFile=ch.LinkFile and Sub.AccNo=ch.Id)
	left join dbo.Fn_AllEntry('',0,@FromDate0,@ToDate,0,0,0) Fn on(Fn.MyMainAccNo=ch.Id and Fn.MySubAccNo=isnull(Sub.Id,0))
	left join(
				select Id,dbo.GetCurrencyExchange(0,0,Id,0,@ToDate)Exchange
				from Currencies
				)Curr on(Curr.Id=Sub.CurrencyId)
	where HideFromAccountEnd=0
	and (Ch.SubType=0 or @IsCostCenter=0 or Ch.Id=@YearProfitAccNo or Fn.CostCenterId in (select T.CostCenterId from CostCenterIds T where T.Id=@MyId))
	group by ch.Id,isnull(Sub.Id,0),ch.MotionType,Sub.CurrencyId,Curr.Id,Curr.Exchange,
	ch.MotionType,ch.EndType,
	ch.Id,ch.Name,ch.MainAccId,cast(ch.Id as varchar(100)),ch.Level,ch.SubType,ch.Id2,Sub.MainBal0
)Tbl
group by MotionType,EndType,
Id,Name,MainAccId,MyId,Level,SubType,Id2
)tbl2
order by MyROWNUMBER

update tbl
set Bal0=isnull((select -sum(t.Bal0) from #chart t where t.Id2=tbl.Id and Bal0<0),Bal0)
from #chart tbl

delete #chart where Id2<>'' and Bal0<0

IncomeStatement:
if @IsIncomeStatement=1
begin
	select @EndType-=1
end

declare @MyLevel bigint
select @MyLevel=max(Level) from #chart
while @MyLevel>1
begin
	select @MyLevel-=1
	update m set Bal0=
	isnull((select sum(s.Bal0) from #chart s where s.MainAccId=m.Id and s.EndType=m.EndType),Bal0)
	from #chart m where Level=@MyLevel
end

declare @Net float
select @Net=
(select isnull(sum(Bal0),0) from #chart where MotionType=0 and Level=1 and EndType<@EndType)-
(select isnull(sum(Bal0),0) from #chart where MotionType=1 and Level=1 and EndType<@EndType)


if @EndType<>3
begin
	insert #tblAll
	select 0 MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,
	'',(case when @Net>0 then (case @EndType when 0 then '-' when 1 then 'خسائر تشغيل' when 2 then 'مجمل خسارة' when 3 then 'صافى خسارة' else '' end) else '' end),'',(case when @Net>0 then @Net else 0 end),'',@Level-1,0,
	'',(case when @Net<0 then (case @EndType when 0 then '-' when 1 then 'أرباح تشغيل' when 2 then 'مجمل ربح' when 3 then 'صافى ربح' else '' end) else '' end),'',(case when @Net<0 then -@Net else 0 end),'',@Level-1,0
end


insert #tblAll
select ISNULL(Db.ROWNUMBER,Cr.ROWNUMBER) MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,
Db.Id,Db.Name,Db.MainAccId,Db.Bal0,Db.MyId,Db.Level,Db.SubType,
Cr.Id,Cr.Name,Cr.MainAccId,Cr.Bal0,Cr.MyId,Cr.Level,Cr.SubType
from
(
select ROW_NUMBER() over(order by Id/*(case when Level=@Level then MainAccId else Id end),Level desc,cast(Id as varchar(100))*/
)ROWNUMBER,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where MotionType=0
and Bal0<>0
and Level <=@Level
and EndType=@EndType
)Db
full outer join
(
select ROW_NUMBER() over(order by Id/*(case when Level=@Level then MainAccId else Id end),Level desc,cast(Id as varchar(100))*/
)ROWNUMBER,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where MotionType=1
and Bal0<>0
and Level <=@Level
and EndType=@EndType
)Cr
on(Db.ROWNUMBER=Cr.ROWNUMBER)
order by MyROWNUMBER

select @Net=
(select isnull(sum(Bal0),0) from #chart where MotionType=0 and Level=1 and ((EndType<=@EndType and @EndType<3)or(EndType=@EndType and @EndType=3)) /*and Id=@YearProfitAccNo*/)-
(select isnull(sum(Bal0),0) from #chart where MotionType=1 and Level=1 and ((EndType<=@EndType and @EndType<3)or(EndType=@EndType and @EndType=3)) /*and Id=@YearProfitAccNo*/)

insert #tblAll
select 0 MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,
'',(case when @Net<0 then (case @EndType when 0 then 'أرباح تشغيل' when 1 then 'مجمل ربح' when 2 then 'صافى ربح' when 3 then 'XXXXXXXXXX' else '' end) else '' end),'',(case when @Net<0 then -@Net else 0 end),'',@Level+1,0,
'',(case when @Net>0 then (case @EndType when 0 then 'خسائر تشغيل' when 1 then 'مجمل خسارة' when 2 then 'صافى خسارة' when 3 then 'XXXXXXXXXX' else '' end) else '' end),'',(case when @Net>0 then @Net else 0 end),'',@Level+1,0
where round(@Net,3)<>0 --or @EndType<3
and @EndType<>3

if @EndType=2
begin
delete YearProfit where Year(DayDate)=YEAR(@ToDate)
insert YearProfit(DayDate,Bal0)
select @ToDate,@Net
end

insert #tblAll(Level,IsIncomeStatement,
Db_Level,Db_Bal0,Db_Id,Db_MyId,Db_Name,
Cr_Level,Cr_Bal0,Cr_Id,Cr_MyId,Cr_Name)
select @Level,0 IsIncomeStatement,
@Level+1,sum(case when Db_Level<=1 OR ROWNUMBER=0 then Db_Bal0 else 0 end),0,'','------------------------------',
@Level+1,sum(case when Cr_Level<=1 OR ROWNUMBER=0 then Cr_Bal0 else 0 end),0,'','------------------------------' 
from #tblAll where (Level=@Level or @Level=1) and IsIncomeStatement=1

if @IsIncomeStatement=1
begin
	select @IsIncomeStatement-=1,@EndType+=1
	goto IncomeStatement
end

select * from #tblAll
where Level <=@Level
order by Line

drop table #tblAll
drop table #chart
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEnd2]
@EndType bigint,
@Level bigint,
@FromDate datetime,
@ToDate datetime,
@IsCostCenter int,
@MyId bigint
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate

declare @YearProfitAccNo nvarchar(100)=(select YearProfitAccNo from Statics)

create table #chart(ROWNUMBER bigint,MotionType bigint,EndType bigint,
Id nvarchar(100),Name nvarchar(1000),MainAccId varchar(100),Bal0 float,MyId nvarchar(100),Level bigint,SubType bigint,Id2 bigint,
Line bigint identity(1,1))

declare @FromDate0 datetime=(case when @EndType=3 then '1900-01-01' else @FromDate end)

--=============================Chart=================================================
insert #chart
select ROW_NUMBER() over(order by MyId) MyROWNUMBER,MotionType,EndType,
cast(Id as nvarchar(100)),Name,MainAccId,Bal0,MyId,Level,SubType,Id2
from
(
select MotionType,EndType,
Id,Name,MainAccId,sum(Tbl.Bal0)Bal0,MyId,Level,SubType,Id2
from(
	select ch.Id MyMainAccNo,isnull(Sub.Id,0) MySubAccNo,
	ch.MotionType,ch.EndType,
	ch.Id,ch.Name,ch.MainAccId,cast(ch.Id as varchar(100)) MyId,ch.Level,ch.SubType,ch.Id2,
	( (case when @IsCostCenter=0 then /*dbo.GetBal0(ch.Id,isnull(Sub.Id,0))*/isnull(Sub.MainBal0,0) else 0 end)
	+(case when ch.MotionType=1 then -1. else 1. end)*(isnull(SUM(Db),0)-isnull(SUM(Cr),0)))*isnull(Curr.Exchange,1.) Bal0
	from chart ch
	left join AllSub Sub on(Sub.LinkFile=ch.LinkFile and Sub.AccNo=ch.Id)
	left join dbo.Fn_AllEntry('',0,@FromDate0,@ToDate,0,0,0) Fn on(Fn.MyMainAccNo=ch.Id and Fn.MySubAccNo=isnull(Sub.Id,0))
	left join(
				select Id,dbo.GetCurrencyExchange(0,0,Id,0,@ToDate)Exchange
				from Currencies
				)Curr on(Curr.Id=Sub.CurrencyId)
	where HideFromAccountEnd=0
	and (Ch.SubType=0 or @IsCostCenter=0 or Ch.Id=@YearProfitAccNo or Fn.CostCenterId in (select T.CostCenterId from CostCenterIds T where T.Id=@MyId))
	group by ch.Id,isnull(Sub.Id,0),ch.MotionType,Sub.CurrencyId,Curr.Id,Curr.Exchange,
	ch.MotionType,ch.EndType,isnull(Sub.MainBal0,0),
	ch.Id,ch.Name,ch.MainAccId,cast(ch.Id as varchar(100)),ch.Level,ch.SubType,ch.Id2
)Tbl
group by MotionType,EndType,
Id,Name,MainAccId,MyId,Level,SubType,Id2
)tbl2
order by MyROWNUMBER

update tbl
set Bal0=isnull((select -sum(t.Bal0) from #chart t where t.Id2=tbl.Id and Bal0<0),Bal0)
from #chart tbl

delete #chart where Id2<>'' and Bal0<0

declare @MyLevel bigint
select @MyLevel=max(Level) from #chart
while @MyLevel>1
begin
	select @MyLevel-=1
	update m set Bal0=
	isnull((select sum(s.Bal0) from #chart s where s.MainAccId=m.Id and s.EndType=m.EndType),Bal0)
	from #chart m where Level=@MyLevel
end




declare @Net float
select @Net=
(select isnull(sum(Bal0),0) from #chart where MotionType=0 and Level=1 and EndType<@EndType+1)-
(select isnull(sum(Bal0),0) from #chart where MotionType=1 and Level=1 and EndType<@EndType+1)


--=============================End Chart=================================================


create table #tbl(ROWNUMBER bigint,Level bigint,IsIncomeStatement bigint,MotionType bigint,
_Id bigint,_Name nvarchar(1000),_MainAccId varchar(100),_Bal0 float,_MyId nvarchar(100),_Level bigint,_SubType bigint,
Line bigint identity(1,1))


if @EndType<>3
begin
	insert #tbl
	select 0 MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,2,
	'',
	(case when @Net>0 then 
		(case @EndType+1 when 0 then '-' when 1 then 'خسائر تشغيل' when 2 then 'مجمل خسارة' when 3 then 'صافى خسارة' else '' end)
	else 
		(case @EndType+1 when 0 then '-' when 1 then 'أرباح تشغيل' when 2 then 'مجمل ربح' when 3 then 'صافى ربح' else '' end)
	end)
	,'',abs(@Net),'',@Level-1,0
end

if @EndType=2
begin
delete YearProfit where Year(DayDate)=YEAR(@ToDate)
insert YearProfit(DayDate,Bal0)
select @ToDate,@Net
end



insert #tbl
select ROW_NUMBER() over(order by Id/*(case when Level=@Level then MainAccId else Id end)*/
,Level desc,cast(Id as varchar(100)))ROWNUMBER,
Level MyLevel,1 IsIncomeStatement,MotionType,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where Bal0<>0
and (
	(EndType=@EndType and @EndType=3)or
	(EndType<=@EndType and @EndType<3)
	)

order by MotionType,ROWNUMBER


select t.*,
c1.Name _MainAccName,
c2.Name c_Name
from #tbl t
left join chart c1 on(c1.Id=t._MainAccId)
left join chart c2 on(c2.Id=c1.MainAccId)
where t.Level in(@Level)
order by t.Line




drop table #tbl
drop table #chart
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd2OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEnd2OLD]
@EndType bigint,
@Level bigint,
@ToDate datetime
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp null,@ToDate

create table #chart(ROWNUMBER bigint,MotionType bigint,EndType bigint,
Id nvarchar(100),Name nvarchar(1000),MainAccId varchar(100),Bal0 float,MyId nvarchar(100),Level bigint,SubType bigint,Id2 bigint,
Line bigint identity(1,1))

insert #chart
select ROWNUMBER MyROWNUMBER,MotionType,EndType,
Id,Name,MainAccId,Bal0,MyId,Level,SubType,Id2
from
(
select ROW_NUMBER() over(order by cast(Id as varchar(100)))ROWNUMBER,MotionType,EndType,
Id,Name,MainAccId,dbo.Bal0All2(Id,@ToDate,0) Bal0,cast(Id as varchar(100)) MyId,Level,SubType,Id2
from chart
where HideFromAccountEnd=0
)tbl
order by MyROWNUMBER

update tbl
set Bal0=isnull((select -sum(t.Bal0) from #chart t where t.Id2=tbl.Id and Bal0<0),Bal0)
from #chart tbl

delete #chart where Id2<>'' and Bal0<0

declare @MyLevel bigint
select @MyLevel=max(Level) from #chart
while @MyLevel>1
begin
	select @MyLevel-=1
	update m set Bal0=
	isnull((select sum(s.Bal0) from #chart s where s.MainAccId=m.Id and s.EndType=m.EndType),Bal0)
	from #chart m where Level=@MyLevel
end

declare @Net float
select @Net=
(select isnull(sum(Bal0),0) from #chart where MotionType=0 and Level=1 and EndType<@EndType)-
(select isnull(sum(Bal0),0) from #chart where MotionType=1 and Level=1 and EndType<@EndType)

if @EndType=3
begin
	update #chart set Bal0-=@Net where Id=(select YearProfitAccNo from Statics)
	set @Net=0
	
	select @MyLevel=max(Level) from #chart
	while @MyLevel>1
	begin
		select @MyLevel-=1
		update m set Bal0=
		isnull((select sum(s.Bal0) from #chart s where s.MainAccId=m.Id and s.EndType=m.EndType),Bal0)
		from #chart m where Level=@MyLevel
	end
end

create table #tbl(ROWNUMBER bigint,Level bigint,IsIncomeStatement bigint,MotionType bigint,
_Id bigint,_Name nvarchar(1000),_MainAccId varchar(100),_Bal0 float,_MyId nvarchar(100),_Level bigint,_SubType bigint,
Line bigint identity(1,1))


if @EndType<>3
begin
	insert #tbl
	select 0 MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,2,
	'',
	(case when @Net>0 then 
		(case @EndType when 0 then '-' when 1 then 'خسائر تشغيل' when 2 then 'مجمل خسارة' when 3 then 'صافى خسارة' else '' end)
	else 
		(case @EndType when 0 then '-' when 1 then 'أرباح تشغيل' when 2 then 'مجمل ربح' when 3 then 'صافى ربح' else '' end)
	end)
	,'',abs(@Net),'',@Level-1,0
end



insert #tbl
select ROW_NUMBER() over(order by Id/*(case when Level=@Level then MainAccId else Id end)*/
,Level desc,cast(Id as varchar(100)))ROWNUMBER,
Level MyLevel,1 IsIncomeStatement,MotionType,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where Bal0<>0
--and Level in(@Level,@Level-1)

--and EndType=@EndType
and (
	(EndType=@EndType and @EndType=3)or
	(EndType<=@EndType and @EndType<3)
	)

order by MotionType,ROWNUMBER

select t.*,
dbo.GetAccName(t._MainAccId)_MainAccName,
c.Name c_Name
from #tbl t
left join chart c on(t.MotionType=c.MotionType and @EndType=c.EndType and c.Level=1)
where t.Level in(@Level)
order by t.Line

drop table #tbl
drop table #chart

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccountEnd3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEnd3]
@T0_Id int,
@T_ID int,
@FromDate datetime,
@ToDate datetime,
@WindowId bigint,
@CostCenterId bigint,
@CostCenterSubId bigint
--with encryption
as

select * from (
select MotionType,T0.Id T0_Id,T0.Name T0_Name,T.ID T_ID,T.Name T_Name,T2.ID T2_ID,T2.Name T2_Name,
sum((TT.Perc/100.)*(case when MotionType=0 then 1. else -1. end)*(isnull(Fn.DbLocal,0)-isnull(Fn.CrLocal,0)))bal
from FinalReportsMain T0
left join FinalReportsSub T on(T0.Id=T.FinalReportsMainId)
left join FinalReportsSub2 T2 on(T.FinalReportsMainId=T2.FinalReportsMainId and T.Id=T2.FinalReportsSubId)
left join FinalReportsSubDetails TT on(T2.FinalReportsMainId=TT.FinalReportsMainId and T2.FinalReportsSubId=TT.FinalReportsSubId and T2.ID=TT.ID)
left join dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,0) Fn on(Fn.MyMainAccNo=TT.AccNo and Fn.MySubAccNo=0)
where T0.ID=@T0_Id
and (T.ID=@T_Id or @T_Id=0)
and (WindowId=@WindowId or @WindowId=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (CostCenterSubId=@CostCenterSubId or @CostCenterSubId=0)
group by MotionType,T0.Id,T0.Name,T.ID,T.Name,T2.ID,T2.Name

union All

select 0,T0.Id T0_Id,T0.Name T0_Name,T.ID T_ID,T.Name T_Name,T.ID T_ID,'إجمالي ربح - '+T.Name T_Name,
sum((TT.Perc/100.)*(isnull(Fn.DbLocal,0)-isnull(Fn.CrLocal,0)))bal
from FinalReportsMain T0
left join FinalReportsSub T on(T0.Id=T.FinalReportsMainId)
left join FinalReportsSub2 T2 on(T.FinalReportsMainId=T2.FinalReportsMainId and T.Id=T2.FinalReportsSubId)
left join FinalReportsSubDetails TT on(T2.FinalReportsMainId=TT.FinalReportsMainId and T2.FinalReportsSubId=TT.FinalReportsSubId and T2.ID=TT.ID)
left join dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,0) Fn on(Fn.MyMainAccNo=TT.AccNo and Fn.MySubAccNo=0)
where T0.ID>@T0_Id and @T0_Id=2
and (WindowId=@WindowId or @WindowId=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (CostCenterSubId=@CostCenterSubId or @CostCenterSubId=0)
group by T0.Id,T0.Name,T.ID,T.Name

union All

select 0,0,'قائمة الدخل',0,'قائمة الدخل',0,'إجمالي ربح - قائمة الدخل',
sum((TT.Perc/100.)*(isnull(Fn.DbLocal,0)-isnull(Fn.CrLocal,0)))bal
from FinalReportsMain T0
left join FinalReportsSub T on(T0.Id=T.FinalReportsMainId)
left join FinalReportsSub2 T2 on(T.FinalReportsMainId=T2.FinalReportsMainId and T.Id=T2.FinalReportsSubId)
left join FinalReportsSubDetails TT on(T2.FinalReportsMainId=TT.FinalReportsMainId and T2.FinalReportsSubId=TT.FinalReportsSubId and T2.ID=TT.ID)
left join dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,0) Fn on(Fn.MyMainAccNo=TT.AccNo and Fn.MySubAccNo=0)
where T0.ID>@T0_Id and @T0_Id=1
and (WindowId=@WindowId or @WindowId=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (CostCenterSubId=@CostCenterSubId or @CostCenterSubId=0)


)Tbl
where bal<>0
order by MotionType desc,T0_Id,T0_Name,T_ID,T_Name,T2_ID,T2_Name
GO
/****** Object:  StoredProcedure [dbo].[AccountEndOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEndOLD]
@EndType bigint,
@Level bigint,
@IsIncomeStatement bigint,
@ToDate datetime
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp null,@ToDate


create table #chart(ROWNUMBER bigint,MotionType bigint,EndType bigint,
Id nvarchar(100),Name nvarchar(1000),MainAccId varchar(100),Bal0 float,MyId nvarchar(100),Level bigint,SubType bigint,Id2 bigint,
Line bigint identity(1,1))

create table #tblAll(ROWNUMBER bigint,Level bigint,IsIncomeStatement bigint,
Db_Id bigint,Db_Name nvarchar(1000),Db_MainAccId varchar(100),Db_Bal0 float,Db_MyId nvarchar(100),Db_Level bigint,Db_SubType bigint,
Cr_Id bigint,Cr_Name nvarchar(1000),Cr_MainAccId varchar(100),Cr_Bal0 float,Cr_MyId nvarchar(100),Cr_Level bigint,Cr_SubType bigint,
Line bigint identity(1,1))


insert #chart
select ROWNUMBER MyROWNUMBER,MotionType,EndType,
Id,Name,MainAccId,Bal0,MyId,Level,SubType,Id2
from
(
select ROW_NUMBER() over(order by cast(Id as varchar(100)))ROWNUMBER,MotionType,EndType,
Id,Name,MainAccId,dbo.Bal0All2(Id,@ToDate,0) Bal0,cast(Id as varchar(100)) MyId,Level,SubType,Id2
from chart
where HideFromAccountEnd=0
)tbl
order by MyROWNUMBER

update tbl
set Bal0=isnull((select -sum(t.Bal0) from #chart t where t.Id2=tbl.Id and Bal0<0),Bal0)
from #chart tbl

delete #chart where Id2<>'' and Bal0<0

IncomeStatement:
if @IsIncomeStatement=1
begin
	select @EndType-=1
end

declare @MyLevel bigint
select @MyLevel=max(Level) from #chart
while @MyLevel>1
begin
	select @MyLevel-=1
	update m set Bal0=
	isnull((select sum(s.Bal0) from #chart s where s.MainAccId=m.Id and s.EndType=m.EndType),Bal0)
	from #chart m where Level=@MyLevel
end

declare @Net float
select @Net=
(select isnull(sum(Bal0),0) from #chart where MotionType=0 and Level=1 and EndType<@EndType)-
(select isnull(sum(Bal0),0) from #chart where MotionType=1 and Level=1 and EndType<@EndType)

if @EndType=3
begin
	update #chart set Bal0-=@Net where Id=(select YearProfitAccNo from Statics)
	set @Net=0
	
	select @MyLevel=max(Level) from #chart
	while @MyLevel>1
	begin
		select @MyLevel-=1
		update m set Bal0=
		isnull((select sum(s.Bal0) from #chart s where s.MainAccId=m.Id and s.EndType=m.EndType),Bal0)
		from #chart m where Level=@MyLevel
	end	
end

if @EndType<>3
begin
	insert #tblAll
	select 0 MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,
	'',(case when @Net>0 then (case @EndType when 0 then '-' when 1 then 'خسائر تشغيل' when 2 then 'مجمل خسارة' when 3 then 'صافى خسارة' else '' end) else '' end),'',(case when @Net>0 then @Net else 0 end),'',@Level-1,0,
	'',(case when @Net<0 then (case @EndType when 0 then '-' when 1 then 'أرباح تشغيل' when 2 then 'مجمل ربح' when 3 then 'صافى ربح' else '' end) else '' end),'',(case when @Net<0 then -@Net else 0 end),'',@Level-1,0
end


insert #tblAll
select ISNULL(Db.ROWNUMBER,Cr.ROWNUMBER) MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,
Db.Id,Db.Name,Db.MainAccId,Db.Bal0,Db.MyId,Db.Level,Db.SubType,
Cr.Id,Cr.Name,Cr.MainAccId,Cr.Bal0,Cr.MyId,Cr.Level,Cr.SubType
from
(
select ROW_NUMBER() over(order by Id/*(case when Level=@Level then MainAccId else Id end),Level desc,cast(Id as varchar(100))*/
)ROWNUMBER,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where MotionType=0
and Bal0<>0
--and Level in(@Level,@Level-1)
and Level <=@Level
and EndType=@EndType
)Db
full outer join
(
select ROW_NUMBER() over(order by Id/*(case when Level=@Level then MainAccId else Id end),Level desc,cast(Id as varchar(100))*/
)ROWNUMBER,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where MotionType=1
and Bal0<>0
--and Level in(@Level,@Level-1)
and Level <=@Level
and EndType=@EndType
)Cr
on(Db.ROWNUMBER=Cr.ROWNUMBER)
order by MyROWNUMBER

select @Net=
(select isnull(sum(Bal0),0) from #chart where MotionType=0 and Level=1 and ((EndType<=@EndType and @EndType<3)or(EndType=@EndType and @EndType=3)) /*and Id=(select YearProfitAccNo from Statics)*/)-
(select isnull(sum(Bal0),0) from #chart where MotionType=1 and Level=1 and ((EndType<=@EndType and @EndType<3)or(EndType=@EndType and @EndType=3)) /*and Id=(select YearProfitAccNo from Statics)*/)

insert #tblAll
select 0 MyROWNUMBER,@Level MyLevel,1 IsIncomeStatement,
'',(case when @Net<0 then (case @EndType when 0 then 'أرباح تشغيل' when 1 then 'مجمل ربح' when 2 then 'صافى ربح' when 3 then 'XXXXXXXXXX' else '' end) else '' end),'',(case when @Net<0 then -@Net else 0 end),'',@Level+1,0,
'',(case when @Net>0 then (case @EndType when 0 then 'خسائر تشغيل' when 1 then 'مجمل خسارة' when 2 then 'صافى خسارة' when 3 then 'XXXXXXXXXX' else '' end) else '' end),'',(case when @Net>0 then @Net else 0 end),'',@Level+1,0
where round(@Net,3)<>0 --or @EndType<3
and @EndType<>3

insert #tblAll(Level,IsIncomeStatement,
Db_Level,Db_Bal0,Db_Id,Db_MyId,Db_Name,
Cr_Level,Cr_Bal0,Cr_Id,Cr_MyId,Cr_Name)
select @Level,0 IsIncomeStatement,
@Level+1,sum(case when Db_Level<=1 OR ROWNUMBER=0 then Db_Bal0 else 0 end),0,'','------------------------------',
@Level+1,sum(case when Cr_Level<=1 OR ROWNUMBER=0 then Cr_Bal0 else 0 end),0,'','------------------------------' 
from #tblAll where (Level=@Level or @Level=1) and IsIncomeStatement=1

if @IsIncomeStatement=1
begin
	select @IsIncomeStatement-=1,@EndType+=1
	goto IncomeStatement
end

select * from #tblAll
where --Level in(@Level,@Level-1)
Level <=@Level
order by Line

drop table #tblAll
drop table #chart

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AccountEndZakat]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEndZakat]
@ToDate datetime,
@IsDedCustomers int
--with encryption
as


declare @EndType bigint=3

exec GenerateCurrencyExchangeByDateTemp '1900-1-1',@ToDate

declare @YearProfitAccNo nvarchar(100)=(select YearProfitAccNo from Statics)

create table #chart(ROWNUMBER bigint,MotionType bigint,EndType bigint,
Id nvarchar(100),Name nvarchar(1000),MainAccId varchar(100),Bal0 float,MyId nvarchar(100),Level bigint,SubType bigint,Id2 bigint,
Line bigint identity(1,1))

declare @FromDate0 datetime='1900-01-01'

--=============================Chart=================================================
insert #chart
select ROW_NUMBER() over(order by MyId) MyROWNUMBER,MotionType,EndType,
cast(Id as nvarchar(100)),Name,MainAccId,Bal0,MyId,Level,SubType,Id2
from
(
select MotionType,EndType,
Id,Name,MainAccId,sum(Tbl.Bal0)Bal0,MyId,Level,SubType,Id2
from(
	select ch.Id MyMainAccNo,isnull(Sub.Id,0) MySubAccNo,
	ch.MotionType,ch.EndType,
	ch.Id,ch.Name,ch.MainAccId,cast(ch.Id as varchar(100)) MyId,ch.Level,ch.SubType,ch.Id2,
	( isnull(Sub.MainBal0,0)
	+(case when ch.MotionType=1 then -1. else 1. end)*(isnull(SUM(Db),0)-isnull(SUM(Cr),0)))*isnull(Curr.Exchange,1.) Bal0
	from chart ch
	left join AllSub Sub on(Sub.LinkFile=ch.LinkFile and Sub.AccNo=ch.Id)
	left join dbo.Fn_AllEntry('',0,@FromDate0,@ToDate,0,0,0) Fn on(Fn.MyMainAccNo=ch.Id and Fn.MySubAccNo=isnull(Sub.Id,0))
	left join(
				select Id,dbo.GetCurrencyExchange(0,0,Id,0,@ToDate)Exchange
				from Currencies
				)Curr on(Curr.Id=Sub.CurrencyId)
	where IsZakat=1
	and ((Ban=0 and Ban2=0) or @IsDedCustomers=0)
	group by ch.Id,isnull(Sub.Id,0),ch.MotionType,Sub.CurrencyId,Curr.Id,Curr.Exchange,
	ch.MotionType,ch.EndType,isnull(Sub.MainBal0,0),
	ch.Id,ch.Name,ch.MainAccId,cast(ch.Id as varchar(100)),ch.Level,ch.SubType,ch.Id2
)Tbl
group by MotionType,EndType,
Id,Name,MainAccId,MyId,Level,SubType,Id2
)tbl2
order by MyROWNUMBER



--=============================End Chart=================================================


create table #tbl(ROWNUMBER bigint,Level bigint,IsIncomeStatement bigint,MotionType bigint,
_Id bigint,_Name nvarchar(1000),_MainAccId varchar(100),_Bal0 float,_MyId nvarchar(100),_Level bigint,_SubType bigint,
Line bigint identity(1,1))


insert #tbl
select ROW_NUMBER() over(order by Id
,Level desc,cast(Id as varchar(100)))ROWNUMBER,
Level MyLevel,1 IsIncomeStatement,MotionType,
Id,Name,MainAccId,Bal0,cast(Id as varchar(100)) MyId,Level,SubType
from #chart
where Bal0<>0
and (
	(EndType=@EndType and @EndType=3)or
	(EndType<=@EndType and @EndType<3)
	)

order by MotionType,ROWNUMBER






insert #tbl
select 0 ROWNUMBER,
1 MyLevel,1 IsIncomeStatement,0 MotionType,
0 Id,'بضاعة آخر المدة بأخر سعر شراء' Name,'' MainAccId,SUM(Value),'' MyId,1 Level,0 SubType
from(
	select It.Id,It.PurchasePrice*isnull(sum(Qty),0) Value
	from dbo.Fn_AllItemMotion(0,0,@ToDate)fn
	left join Items_View It on(fn.ItemId=It.Id)
	where It.ItemType<>3
	and It.IsService=0
	Group by It.Id,It.PurchasePrice
	having isnull(sum(Qty),0)>0
)Tbl



select t.*,
c1.Name _MainAccName,
c2.Name c_Name
from #tbl t
left join chart c1 on(c1.Id=t._MainAccId)
left join chart c2 on(c2.Id=c1.MainAccId)
order by t.Line




drop table #tbl
drop table #chart
GO
/****** Object:  StoredProcedure [dbo].[AccountEndZakatSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AccountEndZakatSub]
@ToDate datetime
--with encryption
as

SELECT I.Id,I.Name,
isnull(SUM(Case when T.Flag=1 then T.Value else -T.Value end),0)+I.Bal0 Bal0
FROM Investors I
left join (
				select *
				from BankCash5
				where DayDate<=@ToDate
			) T on(T.Investorid=I.Id)
group by I.Id,I.Name,I.Bal0
GO
/****** Object:  StoredProcedure [dbo].[AddCustomer]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AddCustomer]
(
@Name varchar(1000),
@Address varchar(1000),
@Tel varchar(1000),
@Mobile varchar(1000),
@UserName bigint
)
--with encryption
as
declare @Id bigint=(select MAX(Id)+1 from Customers)
set @Id=isnull(@Id,1)

insert Customers(Id,Name,CountryId,CityId,AreaId,Address,Floor,Appartment,Tel,Mobile,Bal0,DescPerc,UserName,MyGetDate) select @Id,@Name,0,0,0,@Address,'','',@Tel,@Mobile,0,0,@UserName,GetDate()

select @Id
GO
/****** Object:  StoredProcedure [dbo].[AddMenu]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AddMenu]
@CurrentMenuitem int
--with encryption
as
declare @x int=500
declare @sql nvarchar(1000)
while @x>@CurrentMenuitem
begin
	select @sql='update NLevels set menuitem'+cast(@x as nvarchar(100))+'=menuitem'+cast(@x-1 as nvarchar(100))
	exec(@sql)
	select @x-=1
end

select @sql='update NLevels set menuitem'+cast(@CurrentMenuitem as nvarchar(100))+'=0'
exec(@sql)
GO
/****** Object:  StoredProcedure [dbo].[AddMyGetDate]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AddMyGetDate](@tbl nvarchar(1000))
--with encryption
as
exec('alter table '+@tbl+' ADD UserName bigint')
exec('alter table '+@tbl+' ADD MyGetDate datetime')
exec('alter table '+@tbl+' ADD CONSTRAINT [DF_'+@tbl+'_MyGetDate] DEFAULT (getdate()) FOR [MyGetDate]')
GO
/****** Object:  StoredProcedure [dbo].[AddTab]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AddTab]
@CurrentTab int
--with encryption
as
declare @x int=20
declare @sql nvarchar(1000)
while @x>@CurrentTab
begin
	select @sql='update NLevels set Tab'+cast(@x as nvarchar(100))+'=Tab'+cast(@x-1 as nvarchar(100))
	exec(@sql)
	select @x-=1
end

select @sql='update NLevels set Tab'+cast(@CurrentTab as nvarchar(100))+'=0'
exec(@sql)
GO
/****** Object:  StoredProcedure [dbo].[Assistant]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Assistant]
@MainAccNo varchar(100),
@LinkFile bigint,
@ActiveOnly int,
@HasBalOnly int,
@FromDate datetime,
@ToDate datetime,
@UserName int

--with encryption
as


exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


declare @TableName varchar(100),@MotionType bigint
select @TableName=TableName,@MotionType=MotionType from LinkFile where Id=@LinkFile

declare @EndType bigint
select top 1 @EndType=EndType from Chart where LinkFile=@LinkFile
 

declare @MyDate datetime=cast('1900-1-1'as date)
if @EndType<3
begin 
	select @MyDate =cast(cast((datepart(year,@ToDate)) as nvarchar(4))+'-1-1'as date)
end


declare @str varchar(4000)='
create table #tbl(Id bigint,Name nvarchar(100),Bal0 float,AccNo nvarchar(100))
insert #tbl
select C.Id,C.Name,C.MainBal0,C.AccNo
from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(100))+','+cast(@UserName as nvarchar(100))+')T 
left join '+@TableName+' C on(C.Id=T.Id)
where (C.AccNo='''+cast(@MainAccNo as nvarchar(100))+''' or '''+cast(@MainAccNo as nvarchar(100))+'''='''')

create table #Fn0 (MyMainAccNo nvarchar(100),MySubAccNo bigint,Db float,Cr float)
insert #Fn0
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('''',0,'''+cast(@MyDate as varchar(100))+''','''+cast(@FromDate-1 as varchar(100))+''',0,0,1) 
group by MyMainAccNo,MySubAccNo


create table #Fn (MyMainAccNo nvarchar(100),MySubAccNo bigint,Db float,Cr float)
insert #Fn
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('''',0,'''+cast(@MyDate as varchar(100))+''','''+cast(@ToDate as varchar(100))+''',0,0,1) 
group by MyMainAccNo,MySubAccNo


select Id,Name,
(case when ('+cast(@MotionType as nvarchar(10))+'=0 and Bal0>0) then Bal0 when ('+cast(@MotionType as nvarchar(10))+'=1 and Bal0<0) then -Bal0 else 0 end)+isnull(Fn0.Db,0) FirstDb,
(case when ('+cast(@MotionType as nvarchar(10))+'=0 and Bal0<0) then -Bal0 when ('+cast(@MotionType as nvarchar(10))+'=1 and Bal0>0) then Bal0 else 0 end)+isnull(Fn0.Cr,0) FirstCr,
(case when ('+cast(@MotionType as nvarchar(10))+'=0 and Bal0>0) then Bal0 when ('+cast(@MotionType as nvarchar(10))+'=1 and Bal0<0) then -Bal0 else 0 end)+isnull(Fn.Db,0) LastDb,
(case when ('+cast(@MotionType as nvarchar(10))+'=0 and Bal0<0) then -Bal0 when ('+cast(@MotionType as nvarchar(10))+'=1 and Bal0>0) then Bal0 else 0 end)+isnull(Fn.Cr,0) LastCr,
'+cast(@MotionType as varchar(10))+' MotionType
from #tbl C
left join #Fn0 Fn0 on(Fn0.MyMainAccNo=C.AccNo and Fn0.MySubAccNo=C.Id)
left join #Fn Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
Order by Id

drop table #tbl
drop table #Fn
drop table #Fn0
'

create table #tblAll(Id bigint,Name varchar(4000),FirstDb float,FirstCr float,LastDb float,LastCr float,MotionType bigint)
insert #tblAll
exec(@str)
print @str

select * from #tblAll
where (
(@ActiveOnly=0 and not(cast(FirstDb as decimal(18,2))<>cast(LastDb as decimal(18,2)) or cast(FirstCr as decimal(18,2))<>cast(LastCr as decimal(18,2))))or
(@ActiveOnly=1 and (cast(FirstDb as decimal(18,2))<>cast(LastDb as decimal(18,2)) or cast(FirstCr as decimal(18,2))<>cast(LastCr as decimal(18,2))))or
(@ActiveOnly=2)
)
and (
(@HasBalOnly=0 and (cast(LastDb as decimal(18,2))=cast(LastCr as decimal(18,2))))or
(@HasBalOnly=1 and (cast(LastDb as decimal(18,2))<>cast(LastCr as decimal(18,2))))or
(@HasBalOnly=2)
)

drop table #tblAll


--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[AssistantCases]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AssistantCases]
@CaseTypeId int=0,
@DoctorId int=0,
@CompanyId int,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1'

--with encryption
as

exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate

create table #Fn0 (MyMainAccNo nvarchar(100),MySubAccNo bigint,Db float,Cr float)
insert #Fn0
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('',0,'1900-1-1',@FromDate-1,0,0,1) 
group by MyMainAccNo,MySubAccNo


create table #Fn (MyMainAccNo nvarchar(100),MySubAccNo bigint,Db float,Cr float)
insert #Fn
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('',0,'1900-1-1',@ToDate,0,0,1) 
group by MyMainAccNo,MySubAccNo

select *,dbo.GetEmpName(DoctorId)DoctorName,
(select top 1 DayDate from OperationMotions where CaseId=Id order by InvoiceNo desc)_DayDate,
dbo.GetOperationMotionsOperationTypesNameAll((select top 1 InvoiceNo from OperationMotions where CaseId=Id order by InvoiceNo desc))_Operation
from (
	select Id,Name,
	(case when (Bal0>0) then Bal0 else 0 end)+isnull(Fn0.Db,0) FirstDb,
	(case when (Bal0<0) then -Bal0 else 0 end)+isnull(Fn0.Cr,0) FirstCr,
	(case when (Bal0>0) then Bal0 else 0 end)+isnull(Fn.Db,0) LastDb,
	(case when (Bal0<0) then -Bal0 else 0 end)+isnull(Fn.Cr,0) LastCr,
	0 MotionType,C.DoctorId
	from Cases C
	left join #Fn0 Fn0 on(Fn0.MyMainAccNo=C.AccNo and Fn0.MySubAccNo=C.Id)
	left join #Fn Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
	where (C.CaseTypeId=@CaseTypeId or @CaseTypeId=0)
	and (C.DoctorId=@DoctorId or @DoctorId=0)
	and (C.CompanyId=@CompanyId or @CompanyId=0)
	)Tbl
where (round(FirstDb,2)<>round(LastDb,2) or round(FirstCr,2)<>round(LastCr,2) or round(LastDb,2)<>round(LastCr,2))
Order by Id


drop table #Fn
drop table #Fn0
GO
/****** Object:  StoredProcedure [dbo].[AssistantOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AssistantOLD]
@MainAccNo varchar(100),
@LinkFile bigint,
@ActiveOnly int,
@HasBalOnly int,
@FromDate datetime,
@ToDate datetime,
@UserName int
--with encryption
as

declare @TableName varchar(100),@MotionType bigint
select @TableName=TableName,@MotionType=MotionType from LinkFile where Id=@LinkFile
declare @str varchar(1000)='select Id,Name,
dbo.Bal0(AccNo,Id,'''+cast(@FromDate-1 as varchar(100))+''',1,0,0) FirstDb,
dbo.Bal0(AccNo,Id,'''+cast(@FromDate-1 as varchar(100))+''',2,0,0) FirstCr,
dbo.Bal0(AccNo,Id,'''+cast(@ToDate as varchar(100))+''',1,0,0) LastDb,
dbo.Bal0(AccNo,Id,'''+cast(@ToDate as varchar(100))+''',2,0,0) LastCr,
'+cast(@MotionType as varchar(10))+' MotionType
from '+@TableName+'
where (AccNo='''+cast(@MainAccNo as nvarchar(100))+''' or '''+cast(@MainAccNo as nvarchar(100))+'''='''')
and Id in(select T.Id from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(100))+','+cast(@UserName as nvarchar(100))+')T)
Order by Id'
create table #tbl(Id bigint,Name varchar(4000),FirstDb float,FirstCr float,LastDb float,LastCr float,MotionType bigint)
insert #tbl
exec(@str)
print @str

select * from #tbl
where (@ActiveOnly=0 or (FirstDb<>LastDb or FirstCr<>LastCr))
and (@HasBalOnly=0 or (LastDb<>0 or LastCr<>0))
drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[AttendanceLogDelete]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AttendanceLogDelete]
@EmpId bigint,
@Month bigint,
@Year bigint
--with encryption
as
Delete AttendanceLog 
where EmpId=@EmpId
and month(DayDate)=@Month
and Year(DayDate)=@Year
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteBankCash_G2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteBankCash_G2]
(
@Flag bigint,
@BankCash_G2TypeId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedBankCash_G2),1)

declare @d datetime=getdate()

insert DeletedBankCash_G2 
select @d,@UserDelete,@LastLine,@State,* from BankCash_G2
where Flag=@Flag and BankCash_G2TypeId=@BankCash_G2TypeId and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteBankCash_G22]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteBankCash_G22]
(
@Flag bigint,
@BankCash_G2TypeId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedBankCash_G22),1)

declare @d datetime=getdate()

insert DeletedBankCash_G22 
select @d,@UserDelete,@LastLine,@State,* from BankCash_G22
where Flag=@Flag and BankCash_G2TypeId=@BankCash_G2TypeId and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteBankCash6]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[BeforeDeleteBankCash6]
(
@Flag bigint,
@BankId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedBankCash_G2),1)

declare @d datetime=getdate()

insert DeletedBankCash6
select @d,@UserDelete,@LastLine,@State,* from BankCash6
where Flag=@Flag and BankId=@BankId and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCases]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteCases]
(
@Id bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedCases),1)

declare @d datetime=getdate()

insert DeletedCases 
select @d,@UserDelete,@LastLine,@State,* from Cases
where Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCases3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteCases3]
(
@Id bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedCases3),1)

declare @d datetime=getdate()

insert DeletedCases3 select @d,@UserDelete,@LastLine,@State,* from Cases3 where Id=@Id

insert DeletedCaseData1 select @d,@UserDelete,@LastLine,@State,* from CaseData1 where CaseId=@Id
insert DeletedCaseData2 select @d,@UserDelete,@LastLine,@State,* from CaseData2 where CaseId=@Id
insert DeletedCaseData3 select @d,@UserDelete,@LastLine,@State,* from CaseData3 where CaseId=@Id
insert DeletedCaseData4 select @d,@UserDelete,@LastLine,@State,* from CaseData4 where CaseId=@Id
insert DeletedCaseData5 select @d,@UserDelete,@LastLine,@State,* from CaseData5 where CaseId=@Id
insert DeletedCaseData6 select @d,@UserDelete,@LastLine,@State,* from CaseData6 where CaseId=@Id
insert DeletedCaseData7 select @d,@UserDelete,@LastLine,@State,* from CaseData7 where CaseId=@Id
insert DeletedCaseData8 select @d,@UserDelete,@LastLine,@State,* from CaseData8 where CaseId=@Id
insert DeletedCaseData9 select @d,@UserDelete,@LastLine,@State,* from CaseData9 where CaseId=@Id
insert DeletedCaseData10 select @d,@UserDelete,@LastLine,@State,* from CaseData10 where CaseId=@Id
insert DeletedCaseData11 select @d,@UserDelete,@LastLine,@State,* from CaseData11 where CaseId=@Id
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCases3Leavebal0]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteCases3Leavebal0]
(
@CaseId bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedCases3Leavebal0),1)

declare @d datetime=getdate()

insert DeletedCases3Leavebal0 select @d,@UserDelete,@LastLine,@State,* from Cases3Leavebal0 where CaseId=@CaseId
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCriminal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[BeforeDeleteCriminal]
(
@CriminalMainAreaId bigint,
@CriminalSubAreaId bigint,
@Year bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedCriminalMaster 
where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId and Year=@Year and InvoiceNo=@InvoiceNo),1)

declare @d datetime=getdate()

insert DeletedCriminalMaster 
select @d,@UserDelete,@LastLine,@State,* from CriminalMaster
where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId  and Year=@Year and InvoiceNo=@InvoiceNo


insert DeletedCriminalImages
select @d,@UserDelete,@LastLine,@State,* from CriminalImages
where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId  and Year=@Year and InvoiceNo=@InvoiceNo


--insert DeletedCriminalDetails
--select @d,@UserDelete,@LastLine,@State,* from CriminalDetails
--where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId  and Year=@Year and InvoiceNo=@InvoiceNo


--insert DeletedCriminalDetails2
--select @d,@UserDelete,@LastLine,@State,* from CriminalDetails2
--where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId  and Year=@Year and InvoiceNo=@InvoiceNo

GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCriminalCircles]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[BeforeDeleteCriminalCircles]
(
@MainAreaId bigint,
@Id bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedCriminalCircles
where MainAreaId=@MainAreaId and Id=@Id),1)

declare @d datetime=getdate()

insert DeletedCriminalCircles
select @d,@UserDelete,@LastLine,@State,* from CriminalCircles
where MainAreaId=@MainAreaId and Id=@Id

insert DeletedCriminalCirclesDetails 
select @d,@UserDelete,@LastLine,@State,* from CriminalCirclesDetails
where MainAreaId=@MainAreaId and Id=@Id

insert DeletedCriminalCirclesDetails2
select @d,@UserDelete,@LastLine,@State,* from CriminalCirclesDetails2
where MainAreaId=@MainAreaId and Id=@Id

GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteCriminalDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[BeforeDeleteCriminalDetails]
(
@CriminalMainAreaId bigint,
@CriminalSubAreaId bigint,
@Year bigint,
@InvoiceNo bigint,
@InvoiceNoSub bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedCriminalDetails
where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId and Year=@Year and InvoiceNo=@InvoiceNo and InvoiceNoSub=@InvoiceNoSub),1)

declare @d datetime=getdate()


insert DeletedCriminalDetails
select @d,@UserDelete,@LastLine,@State,* from CriminalDetails
where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId  and Year=@Year and InvoiceNo=@InvoiceNo and InvoiceNoSub=@InvoiceNoSub


insert DeletedCriminalDetails2
select @d,@UserDelete,@LastLine,@State,* from CriminalDetails2
where CriminalMainAreaId=@CriminalMainAreaId and CriminalSubAreaId=@CriminalSubAreaId  and Year=@Year and InvoiceNo=@InvoiceNo and InvoiceNoSub=@InvoiceNoSub


GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteDeliveryOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteDeliveryOrder]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedDeliveryOrderMaster),1)

declare @d datetime=getdate()

insert DeletedDeliveryOrderMaster
select @d,@UserDelete,@LastLine,@State,* from DeliveryOrderMaster
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedDeliveryOrderDetails
select @d,@UserDelete,@LastLine,@State,* from DeliveryOrderDetails
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteExpertsFollowUp]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteExpertsFollowUp]
(
@Flag bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedExpertsFollowUp),1)

declare @d datetime=getdate()

insert DeletedExpertsFollowUp 
select @d,@UserDelete,@LastLine,@State,* from ExpertsFollowUp
where Flag=@Flag 
and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteExpertsFollowUp2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteExpertsFollowUp2]
(
@Flag bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedExpertsFollowUp2),1)

declare @d datetime=getdate()

insert DeletedExpertsFollowUp2
select @d,@UserDelete,@LastLine,@State,* from ExpertsFollowUp2
where Flag=@Flag 
and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteExpertsFollowUp4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteExpertsFollowUp4]
( 
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedExpertsFollowUp4),1)

declare @d datetime=getdate()

insert DeletedExpertsFollowUp4
select @d,@UserDelete,@LastLine,@State,* from ExpertsFollowUp4
where InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteInvoicesImages2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteInvoicesImages2]
(
@InvoicesFlagId bigint,
@Year bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedInvoicesImages2 where InvoicesFlagId=@InvoicesFlagId and Year=@Year),1)

declare @d datetime=getdate()

insert DeletedInvoicesImages2 
select @d,@UserDelete,@LastLine,@State,* from InvoicesImages2
where InvoicesFlagId=@InvoicesFlagId and Year=@Year and InvoiceNo=@InvoiceNo


insert DeletedInvoicesImages2Dt
select @d,@UserDelete,@LastLine,@State,* from InvoicesImages2Dt
where InvoicesFlagId=@InvoicesFlagId and Year=@Year and InvoiceNo=@InvoiceNo


insert DeletedInvoicesImages2Dt2
select @d,@UserDelete,@LastLine,@State,* from InvoicesImages2Dt2
where InvoicesFlagId=@InvoicesFlagId and Year=@Year and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteItemCollectionMaintenance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteItemCollectionMaintenance]
(
@StoreId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedItemCollectionMotionMaster),1)

declare @d datetime=getdate()

insert DeletedItemCollectionMaintenanceMaster 
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMaintenanceMaster
where StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedItemCollectionMaintenanceDetails
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMaintenanceDetails
where StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedItemCollectionMaintenanceDetailsFrom
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMaintenanceDetailsFrom
where StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedItemCollectionMaintenanceDetailsTo
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMaintenanceDetailsTo
where StoreId=@StoreId and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteItemCollectionMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteItemCollectionMotion]
(
@StoreId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedItemCollectionMotionMaster),1)

declare @d datetime=getdate()

insert DeletedItemCollectionMotionMaster 
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMotionMaster
where StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedItemCollectionMotionDetailsFrom
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMotionDetailsFrom
where StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedItemCollectionMotionDetailsTo
select @d,@UserDelete,@LastLine,@State,* from ItemCollectionMotionDetailsTo
where StoreId=@StoreId and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteLeaveRequests2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteLeaveRequests2]
(
@Id bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedLeaveRequests2),1)

declare @d datetime=getdate()

insert DeletedLeaveRequests2 select @d,@UserDelete,@LastLine,@State,* from LeaveRequests2 where Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteReservations]
(
@EmpId bigint,
@DayDate datetime,
@ReservId bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedReservations),1)

declare @d datetime=getdate()

insert DeletedReservations
select @d,@UserDelete,@LastLine,@State,* from Reservations
where EmpId=@EmpId and DayDate=@DayDate and ReservId=@ReservId
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteSales]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[BeforeDeleteSales]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedSalesMaster),1)

declare @d datetime=getdate()

insert DeletedSalesMaster 
select @d,@UserDelete,@LastLine,@State,* from SalesMaster
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo

insert DeletedSalesDetails
select @d,@UserDelete,@LastLine,@State,* from SalesDetails
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo



update SalesMaster set CurrencyId=1 where CurrencyId=-1
GO
/****** Object:  StoredProcedure [dbo].[BeforeDeleteServices]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BeforeDeleteServices]
(
@Flag bigint,
@InvoiceNo bigint,
@UserDelete bigint,
@State varchar(100)
)
--with encryption
as

declare @LastLine bigint=isnull((select max(LastLine)+1 from DeletedServices),1)

declare @d datetime=getdate()

insert DeletedServices
select @d,@UserDelete,@LastLine,@State,* from Services
where Flag=@Flag and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[bk]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[bk](@Bath as nvarchar(1000)='')
--with encryption
as

declare @db_name nvarchar(1000)=db_name(),
@Path nvarchar(1000)

declare @New_db_name nvarchar(1000)=substring(@db_name,1,len(@db_name)-4)

select @Path=physical_name from sys.database_files where type=0

while SUBSTRING(@Path,LEN(@Path),1)<>'\'
select @Path=SUBSTRING(@Path,1,LEN(@Path)-1)

select @Bath=@Path where @Bath=''



if SUBSTRING(@Bath,LEN(@Bath),1)<>'\'
set @Bath=ltrim(rtrim(@Bath))+'\'

declare @SQL nvarchar(1000)=ltrim(rtrim(@Bath))+@db_name+'_backup_'+
cast(Year(getdate()) as nvarchar)+'_'+
dbo.FillZero(cast(month(getdate()) as nvarchar),2)+'_'+
dbo.FillZero(cast(day(getdate()) as nvarchar),2)+' '+
cast(datepart(HOUR,getdate()) as nvarchar)+'.'+
cast(datepart(MINUTE,getdate()) as nvarchar)+'.'+
cast(datepart(SECOND,getdate()) as nvarchar)+'.bak'

select @sql

exec ('alter database ['+@db_name+'] set recovery simple
dbcc shrinkdatabase (['+@db_name+'])
alter database ['+@db_name+'] set recovery full')

exec('BACKUP DATABASE ['+@db_name+'] TO DISK='''+@sql+''' with compression')
GO
/****** Object:  StoredProcedure [dbo].[CalcAllImportMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[CalcAllImportMessages]
@MyDate datetime='2018-1-1'
--with encryption
as

update ImportMessages set IsDelivered =1 where DeliveredDate >'1900-1-1'

update ImportMessages
set Perc=0,
Cost_InvoiceNo=0,
Cost_MessageId=0
--Cost_OrderTypeId=0,
--Cost_Administrative=0
where DeliveredDate>=@MyDate

declare @tbl table(DeliveredDate datetime,OrderTypeId int,Id int,Line int identity(1,1))
insert @tbl
select DeliveredDate,OrderTypeId,Id from ImportMessages
where IsDelivered=1
and DeliveredDate>=@MyDate
order by DeliveredDate,OrderTypeId,Id



insert @tbl
select cast(getDate()as date),0,0

update ImportMessages set IsDelivered=0
where DeliveredDate>=@MyDate

delete ImportMessageCostHistoryVal3
where DeliveredDate>=@MyDate
delete ImportMessageCostHistoryVal4
where DeliveredDate>=@MyDate
delete ImportMessageCostHistoryVal4Detailed
where DeliveredDate>=@MyDate


declare @x int=1,@max int=(select COUNT(Line) from @tbl)
declare @PrevDeliveredDate datetime,@DeliveredDate datetime,@OrderTypeId int,@Id int
while @x<=@max
begin
	select @DeliveredDate=DeliveredDate,@OrderTypeId=OrderTypeId,@Id=Id from @tbl where Line=@x
	print cast(@OrderTypeId as nvarchar(100))+' - '+cast(@Id as nvarchar(100))+' - '+cast(@DeliveredDate as nvarchar(100))
	
	if @x>1
	begin
		while not(YEAR(@PrevDeliveredDate)=YEAR(@DeliveredDate) and month(@PrevDeliveredDate)=month(@DeliveredDate))
		begin
		
			while YEAR(@PrevDeliveredDate)*100+month(@PrevDeliveredDate)<>YEAR(@DeliveredDate)*100+month(@DeliveredDate)
			begin
				--declare @Date datetime=dateadd(Day,-1,CAST(CAST(YEAR(@DeliveredDate) AS VARCHAR(4)) + '-'+dbo.FillZero(CAST(Month(@DeliveredDate) AS VARCHAR(2)),2)+'-01' AS DATETIME))
				declare @Date datetime=dateadd(Day,-1,dateadd(Month,1,(CAST(CAST(YEAR(@PrevDeliveredDate) AS VARCHAR(4)) + '-'+dbo.FillZero(CAST(Month(@PrevDeliveredDate) AS VARCHAR(2)),2)+'-01' AS DATETIME))))
				exec dbo.CalcImportMessageCostSub 0,0,@Date
				if month(@Date)=12 exec CalcImportMessageCostSubAll @Date
				select @PrevDeliveredDate=@Date+1
			end
		end
	end
		
	update ImportMessages set IsDelivered=1 
	where OrderTypeId=@OrderTypeId and Id=@Id
		
	if not(@OrderTypeId=0 and @Id=0)exec CalcImportMessageCost @OrderTypeId,@Id
	
	select @PrevDeliveredDate=@DeliveredDate
	select @x+=1
end



exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcAssetsDepreciation]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcAssetsDepreciation]
@Month int,
@Year int
--with encryption

as

delete AssetsDepreciationHistory
where Month=@Month
and Year=@Year

insert AssetsDepreciationHistory(Daydate,Month,Year,AssetId,Value)
select dbo.GetLastDayInMonth(@Month,@Year),@Month,@Year,Id,(PurchasePrice-SalesPrice-PreviousCompoundValue)*DepreciationRate/100./12. from Assets
where DayDate<=dbo.GetLastDayInMonth(@Month,@Year)
and @MONTH+@Year*100.<=MONTH(DayDate)+Year(DayDate)*100.+100./DepreciationRate*100.-1.
and IsStopped=0
GO
/****** Object:  StoredProcedure [dbo].[CalcAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcAvgCost]
@FromDate datetime='2000-1-1',
@ToDate datetime='2099-1-1'
as

update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27)
and M.Temp=0

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27)
and M.Temp=0

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27)
and M.Temp=0

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27)
and M.Temp=0

--===============================================================================
--وارد فك وتركيب
update T set AvgCost=Value
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.DayDate between @FromDate and @ToDate 
and TT.Temp=0

--===============================================================================

create table #tbl(MyDayDate datetime,Line int identity(1,1))
insert #tbl
select distinct DayDate from SalesMaster 
where Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
and DayDate between @FromDate and @ToDate
and Flag not in(19,20,26,27)
and Temp=0
UNION ALL
select distinct DayDate from KidneysWashMotion
where DayDate between @FromDate and @ToDate
and Canceled=0
UNION ALL
select distinct DeliveredDate from ImportMessages
where DayDate between @FromDate and @ToDate
and IsDelivered=1
UNION ALL
select distinct DayDate from ItemCollectionMotionMaster
where DayDate between @FromDate and @ToDate
and Temp=0
ORDER BY DayDate

declare @i int=1,@max int=(select MAX(Line) from #tbl),@MyDayDate datetime
while @i<=@max
begin
	select @MyDayDate=MyDayDate from #tbl where Line=@i
	
	update D
	set AvgCost=round(ISNULL(Qty*UnitQty*dbo.GetItemAvgCost(ItemId,M.DayDate),0),2)
	from SalesDetails D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
	and M.DayDate=@MyDayDate
	and M.Flag not in(19,20,26,27)
	and M.Temp=0
	
	update D
	set AvgCost=round(ISNULL(Qty*dbo.GetItemAvgCost(ItemId,M.DayDate),0),2)
	from SalesDetailsComponants D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
	and M.DayDate=@MyDayDate
	and M.Flag not in(19,20,26,27)
	and M.Temp=0
	
	update D
	set AvgCost=round(ISNULL(Qty*dbo.GetItemAvgCost(ItemId,M.DayDate),0),2)
	from KidneysWashMotionDetails D
	left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
	where M.DayDate=@MyDayDate
	and M.Canceled=0

	-- صادر فك وتركيب
	update T
	set AvgCost=round(ISNULL(T.Qty*dbo.GetItemAvgCost(T.ItemId,TT.DayDate),0),2)
	from ItemCollectionMotionDetailsFrom T
	left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
	where TT.DayDate=@MyDayDate
	and TT.Temp=0
	
	--تعديل سعر الصنف في وارد أمر التركيب
	update TblTo
	set AvgCost=(
		select isnull(sum(AvgCost),0) from ItemCollectionMotionDetailsFrom TblFrom 
		where TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.MainItemId=TblTo.ItemId
	)
	from ItemCollectionMotionDetailsTo TblTo
	left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
	where Tbl.DayDate=@MyDayDate
	and Tbl.Temp=0
	and Tbl.MotionTypeId=1
	
	--تعديل أسعار الأصناف في وارد أمر الفك
	update TblTo
	set AvgCost=TblTo.Value/TblFrom.Value*TblFrom.AvgCost
	from ItemCollectionMotionDetailsTo TblTo
	left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
	left join ItemCollectionMotionDetailsFrom TblFrom on(TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.ItemId=TblTo.MainItemId)
	where Tbl.DayDate=@MyDayDate
	and Tbl.Temp=0
	and Tbl.MotionTypeId=0
	and TblFrom.Value<>0
	
	select @i+=1
end

drop table #tbl

exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcAvgCostOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcAvgCostOLD]
@FromDate datetime='2000-1-1',
@ToDate datetime='2099-1-1'
--with encryption
as

delete SalesDetailsComponants
where DayDate between @FromDate and @ToDate

insert SalesDetailsComponants(Flag,StoreId,InvoiceNo,DayDate,MainItemId,ItemId,ItemName,Qty,Value,AvgCost)
select M.Flag,M.StoreId,M.InvoiceNo,M.DayDate,D.ItemId,IC.ItemId,IC.ItemName,
D.Qty*isnull(IC.Qty,1)*D.UnitQty Qty,
D.Qty*isnull(IC.Qty,1)*D.UnitQty*It2.PurchasePrice Value,
0 AvgCost
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join ItemComponants IC on(D.ItemId=IC.MainItemId)
left join Items It on(It.Id=D.ItemId)
left join Items It2 on(It2.Id=IC.ItemId)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and It.ItemType=3
and M.Temp=0
--===============================================================================

update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1 or f.Id=8)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1 or f.Id=8)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================

create table #tbl(MyDayDate datetime,Line int identity(1,1))
insert #tbl
select distinct DayDate from SalesMaster 
where Flag not in(select f.Id from SalesFlags f where f.ItemIn=1 or f.Id=8)
and DayDate between @FromDate and @ToDate
and Flag not in(26,27,31)
and Temp=0
UNION ALL
select distinct DayDate from KidneysWashMotion
where DayDate between @FromDate and @ToDate
and Canceled=0
UNION ALL
select distinct DeliveredDate from ImportMessages
where DayDate between @FromDate and @ToDate
and IsDelivered=1
UNION ALL
select distinct DayDate from ItemCollectionMotionMaster
where DayDate between @FromDate and @ToDate
and Temp=0
UNION ALL
select distinct DayDate2 from ItemCollectionMotionMaster
where DayDate2 between @FromDate and @ToDate
and Temp=0
and Done=1

ORDER BY DayDate

declare @i int=1,@max int=(select MAX(Line) from #tbl),@MyDayDate datetime
while @i<=@max
begin
	select @MyDayDate=MyDayDate from #tbl where Line=@i
	
	update D
	set AvgCost=round(ISNULL(Qty*UnitQty*(
				select 
				case when SUM(DD.Qty*DD.UnitQty*(case when dbo.TestSalesFlagsItemIn(MM.Flag)=1 then 1. else -1. end) )=0 then 0 else
				 SUM(case when dbo.TestSalesFlagsItemIn(MM.Flag)=1 then DD.Value else -DD.AvgCost end)
				/SUM(DD.Qty*DD.UnitQty*(case when dbo.TestSalesFlagsItemIn(MM.Flag)=1 then 1. else -1. end) )
				end
				from SalesDetails DD
				left join SalesMaster MM on(DD.StoreId=MM.StoreId and DD.Flag=MM.Flag and DD.InvoiceNo=MM.InvoiceNo)
				where DD.ItemId=D.ItemId
				and DD.Flag not in(26,27,31)
				AND DD.Flag<>8
				and M.Temp=0
				and(
					MM.DayDate<@MyDayDate or
					(MM.DayDate=@MyDayDate and MM.Flag in(select f.Id from SalesFlags f where f.ItemIn=1 or f.Id=8))
					)
				),0),2)
	from SalesDetails D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1 or f.Id=8)
	and M.DayDate=@MyDayDate
	and M.Flag not in(26,27,31)
	and M.Temp=0

	select @i+=1
end

drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[CalcClinicsHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcClinicsHistory](@DayDate datetime)
--with encryption
as

declare @UserName int=0

delete ClinicsHistory where DayDate =@DayDate and CaseInvoiceNo=0

insert ClinicsHistory (DayDate, CaseId,Living, Supervision,Care,RoomId)
select @DayDate,RD.CaseId,RT.Living,RT.Supervision,RT.Care,RD.RoomId
from RoomsData RD
left join Rooms R on(RD.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
where RD.IsCurrent=1
and Not exists(
	select T.CaseId
	from ClinicsHistory T
	where T.DayDate =@DayDate and T.CaseId=RD.CaseId
)
and Not exists(
	select T.CaseId
	from OperationMotions T
	where T.DayDate =@DayDate and T.CaseId=RD.CaseId
)


--==========================================================================

update Services set Canceled=1,CanceledDate=GETDATE(),EmpIdCanceled=@UserName,Notes+=' - Recalculated' where Canceled=0 and Flag=2 and DayDate =@DayDate and IsAutomatic=1
update DeletedServices set Canceled=1,CanceledDate=GETDATE(),EmpIdCanceled=@UserName,Notes+=' - Recalculated' where Canceled=0 and Flag=2 and DayDate =@DayDate and IsAutomatic=1


begin tran
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

declare @InitialInvoiceNo bigint=isnull((select MAX(InvoiceNo) from Services where Flag=2),0)
insert Services(InvoiceNo,DayDate,DrId,CsId,DrValue,CsValue,CoValue,Value,ServiceGroupId,ServiceTypeId,CaseId
,Canceled,Notes,UserName,MyGetDate,SerialId,Payed,Remaining,Done,RemainingDate,EmpIdReservation,EmpIdRemaining
,EmpIdCanceled,CanceledDate,SerialId2,Returned,ReturnedDate,EmpIdReturned,IsEditing,IsClosed
,CompanyId,PreValue,PrePayed,PreRemaining,Qty,CurrentShift,InsertedDate,RefereId,Flag,CaseInvoiceNo,IsAutomatic)


SELECT T.ROWNUMBER+@InitialInvoiceNo InvoiceNo,@DayDate DayDate,0 DrId,0 CsId,ST.DrValue,ST.CsValue,ST.CoValue,
ISNULL(SG.Price,ST.DrValue+ST.CsValue+ST.CoValue) Value,
ST.ServiceGroupId,ST.Id ServiceTypeId,T.CaseId,
0 Canceled,'' Notes,@UserName,GetDate(),0 SerialId,
ISNULL(SG.Payed,ST.DrValue+ST.CsValue+ST.CoValue) Payed,
ISNULL(SG.Remaining,0) Remaining,0 Done,'1900-1-1' RemainingDate,@UserName EmpIdReservation,0 EmpIdRemaining,
0 EmpIdCanceled,'1900-1-1' CanceledDate,0 SerialId2,0 Returned,'1900-1-1' ReturnedDate,
0 EmpIdReturned,0 IsEditing,0 IsClosed,
T.CompanyId,
ISNULL(SG.Price,ST.DrValue+ST.CsValue+ST.CoValue) PreValue,
ISNULL(SG.Payed,ST.DrValue+ST.CsValue+ST.CoValue) PrePayed,
ISNULL(SG.Remaining,0) PreRemaining,1 Qty,
0 CurrentShift,GETDATE() InsertedDate,0 RefereId,2 Flag,0 CaseInvoiceNo,1 IsAutomatic

from(
select ROW_NUMBER()over(Order by TT.CaseId) ROWNUMBER,
dbo.GetCaseCompanyId(TT.CaseId)CompanyId,TT.* FROM RoomsData TT
where TT.DayDate<=@DayDate
and (TT.IsCurrent=1 or DATEADD(HOUR,-12,TT.ExitDate)>=@DayDate)
)T
left join ServiceTypes ST on(ST.IsDaily=1)
left join ServiceCompanies SG on(SG.ServiceGroupId=ST.ServiceGroupId and SG.Id=ST.Id and SG.CompanyId=T.CompanyId)


commit
GO
/****** Object:  StoredProcedure [dbo].[CalcFIFO]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[CalcFIFO]
@FromDate datetime='2010-12-31',
@ToDate datetime='2020-1-1'
--with encryption
as



set nocount on
--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo


update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31,32)
and M.Temp=0

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31,32)
and M.Temp=0

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31,32)
and M.Temp=0

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31,32)
and M.Temp=0

--===============================================================================

--================================================================== Generate @Tbl

declare @EvaluationTbl table(Id bigint)
declare @EvaluationTblId bigint=1

declare @Tbl table (MainFlag int,MainInvoiceNo bigint,MainTableIndex int,TableIndex int,TableName nvarchar(100),TableDiscription nvarchar(100),
StoreId bigint,Flag int,InvoiceNo bigint,DayDate datetime,
ItemId bigint,Price Float,Qty float,TblLine int,Line int identity(1,1))
insert @Tbl
select Tbl.* from
(
select D.Flag MainFlag,D.InvoiceNo MainInvoiceNo,1 MainTableIndex,1 TableIndex,'SalesDetails' TableName,SF.Name,D.StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(Case when D.UnitQty=0 then Price else Price/D.UnitQty end)Price,D.Qty*D.UnitQty*SF.ItemInOut Qty,D.Line
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31,32)

union all

select D.Flag,D.InvoiceNo,1 MainTableIndex,1 TableIndex,'SalesDetails' TableName,SF.Name,M.ToId StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(Case when D.UnitQty=0 then D.Price else D.Price/D.UnitQty end),D.Qty*D.UnitQty Qty,D.Line
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag =8

union all

select D.Flag,D.InvoiceNo,2 MainTableIndex,2 TableIndex,'SalesDetailsComponants',SF.Name,D.StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(case when D.Qty=0 then 0 else D.Value/D.Qty end),D.Qty*SF.ItemInOut,D.Line
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31,32)

union all

select 0,D.InvoiceNo,3 MainTableIndex,3 TableIndex,'KidneysWashMotionDetails','غسيل كلي',(select KidneysWashStoreId from Statics),SF.Id,D.InvoiceNo,M.DayDate,D.ItemId,0,D.Qty*SF.ItemInOut,D.Line
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Canceled=0

union all

select 19,TTT.InvoiceNo,4 MainTableIndex,4 TableIndex,'ImportMessagesDetailsSub2','استيراد',T.StoreId,19,TTT.InvoiceNo,T.DeliveredDate,TTT.ItemId,TTT.AvgCost/TTT.Qty,TTT.Qty,TTT.Line
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1

union all

select T.Flag,T.InvoiceNo,5 MainTableIndex,5 TableIndex,'ItemCollectionMotionDetailsFrom','فك وتركيب',TT.StoreId,
(case when TT.MotionTypeId=1 then T.MainItemId else T.ItemId end),
TT.InvoiceNo,TT.DayDate,T.ItemId,T.Price,T.Qty*SF.ItemInOut,T.Line
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
where TT.DayDate between @FromDate and @ToDate
and TT.Temp=0

union all

select T.Flag,T.InvoiceNo,6 MainTableIndex,6 TableIndex,'ItemCollectionMotionDetailsTo','فك وتركيب',TT.StoreId,
(case when TT.MotionTypeId=0 then T.MainItemId else T.ItemId end),
TT.InvoiceNo,TT.DayDate2,T.ItemId,T.Price,T.Qty*SF.ItemInOut,T.Line
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join SalesFlags SF on(2=SF.Id)
where TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1

) Tbl
left join Items It on(Tbl.ItemId=It.Id)
where It.ItemType<>3
--and It.Id in(11100013)
--and Tbl.StoreId=1
order by Tbl.DayDate,(case when Tbl.Qty>0 then 0 else 1 end),Tbl.StoreId,Tbl.Flag,Tbl.InvoiceNo

--================================================================== Generate FIFO

delete FIFO where DayDate >=@FromDate 
insert FIFO(MainFlag,MainInvoiceNo,MainLine,MainTableName,MainTableIndex,
TableIndex,TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,MainPrice,Price,Qty,TblLine,PriceDate)
select MainFlag,MainInvoiceNo,TblLine,TableName,MainTableIndex,
TableIndex,TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,Price,Price,Qty,TblLine,DayDate
from @Tbl
where Qty>0

delete @Tbl where Qty>=0 


update F
set Price=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainPrice=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainFlag=(select top 1 T.MainFlag from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainLine=(select top 1 T.MainLine from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainInvoiceNo=(select top 1 T.MainInvoiceNo from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainTableIndex=(select top 1 T.MainTableIndex from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainTableName=(select top 1 T.MainTableName from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc)
from FIFO F
where F.DayDate between @FromDate and @ToDate
and F.Flag in(2,3,14)


update T 
set AvgCost=isnull(
(select SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId and T.Line=F.TblLine),
It.PurchasePrice*T.Qty)
From SalesDetails T
left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=T.ItemId)
where M.DayDate between @FromDate and @ToDate
and T.Flag in(2,3,14)

update T 
set Value=AvgCost,
Price=AvgCost/(Qty)
From SalesDetails T
left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and T.Flag in(2,3)
and Qty<>0


declare @sql nvarchar(4000)
declare @x bigint=(select min(Line) from @Tbl),@max bigint=(select MAX(Line) from @Tbl)
while @x<=@max and @EvaluationTblId=1 and not @x is null
begin
	declare @MainFlag int,@MainInvoiceNo bigint,@TableIndex int,@TableName nvarchar(100),@TableDiscription nvarchar(100),@StoreId bigint,@Flag int,@InvoiceNo bigint,@DayDate datetime,@ItemId bigint,@MainPrice float,@Price float,@Qty float,@TblLine int
	select @MainFlag=MainFlag,@MainInvoiceNo=MainInvoiceNo,@TableIndex=TableIndex,@TableName=TableName,@TableDiscription=TableDiscription,@StoreId=StoreId,@Flag=Flag,@InvoiceNo=InvoiceNo,@DayDate=DayDate,@ItemId=ItemId,@MainPrice=Price,@Price=Price,@Qty=Qty,@TblLine=TblLine
	from @Tbl where Line=@x

	
	select @MainPrice=Price
	from @Tbl where Line=@x
	
	delete @EvaluationTbl
	insert @EvaluationTbl	
	exec GenerateFIFO @TableIndex,@TableName,@StoreId,@Flag,@InvoiceNo,@DayDate,@ItemId,@MainPrice,@Qty,@TblLine
	select @EvaluationTblId=Id from @EvaluationTbl
	if @EvaluationTblId=0 
	begin
		Select 0,@TableName TableName,@TableDiscription TableDiscription,@StoreId StoreId,@Flag Flag,@InvoiceNo InvoiceNo,@DayDate DayDate,@ItemId ItemId,@MainPrice Price,@Price Price,@Qty Qty 
		return
	end
	
	select @x=(select min(Line) from @Tbl where Line>@x)
	
	select @sql ='
	update T 
	set AvgCost=(
				select -SUM(Price*Qty) 
				from FIFO TT 
				Where T.StoreId=TT.StoreId 
				and (isnull(T.Flag,0)=TT.Flag or '''+@TableName+'''=''ItemCollectionMotionDetailsFrom'')
				and T.InvoiceNo=TT.InvoiceNo
				and T.ItemId=TT.ItemId
				and T.Line=TT.TblLine
				) 
	From '+@TableName+' T
	where (isnull(Flag,0)='+cast(@Flag as nvarchar(100))+' or '''+@TableName+'''=''ItemCollectionMotionDetailsFrom'')
	and Line='+cast(@TblLine as nvarchar(100))+' 
	--and '''+@TableName+''' not in(''ItemCollectionMotionDetailsFrom'',''ItemCollectionMotionDetailsTo'')
	'
	print @sql
	exec (@sql)
	
	if @Flag=13 and @TableName='SalesDetails'
	begin 
		update @Tbl 
		set Price=@Price
		where @MainFlag=MainFlag
		and @MainInvoiceNo=MainInvoiceNo
		and @ItemId=ItemId

 
	end
	
	
	
	if @TableName='ItemCollectionMotionDetailsFrom'
	begin
		select @sql ='
		update T 
		set AvgCost=(
					select -SUM(Price*Qty) 
					from FIFO TT 
					Where T.StoreId=TT.StoreId 
					and (T.MainItemId=TT.Flag or T.MainItemId=0)
					and T.InvoiceNo=TT.InvoiceNo
					and T.ItemId=TT.ItemId
					and T.Line=TT.TblLine
					--and round(T.Price,3)=round(TT.MainPrice,3)
					) 
		From '+@TableName+' T
		where Line='+cast(@TblLine as nvarchar(100))
		print @sql
		exec (@sql)
		
		--تعديل سعر الصنف في وارد أمر التركيب
		select @sql ='
		update TblTo
		set AvgCost=(
			select isnull(sum(AvgCost),0) from ItemCollectionMotionDetailsFrom TblFrom 
			where TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.MainItemId=TblTo.ItemId
		)
		from ItemCollectionMotionDetailsTo TblTo
		left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
		where Tbl.MotionTypeId=1
		and Tbl.StoreId='+cast(@StoreId as nvarchar(100))+' 
		and TblTo.ItemId='+cast(@Flag as nvarchar(100))+' 
		and Tbl.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))
		print @sql
		exec (@sql)
		
		
		--تعديل أسعار الأصناف في وارد أمر الفك
		select @sql ='
		update TblTo
		set AvgCost=TblTo.Value/TblFrom.Value*TblFrom.AvgCost
		from ItemCollectionMotionDetailsTo TblTo
		left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
		left join ItemCollectionMotionDetailsFrom TblFrom on(TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.ItemId=TblTo.MainItemId)
		where Tbl.MotionTypeId=0
		and TblFrom.Value<>0
		and Tbl.StoreId='+cast(@StoreId as nvarchar(100))+' 
		and TblTo.MainItemId='+cast(@Flag as nvarchar(100))+' 
		and Tbl.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+''
		print @sql
		exec (@sql)
		
		update @Tbl
		set Price=(select T.AvgCost/T.Qty
					from ItemCollectionMotionDetailsTo T
					where T.StoreId=@StoreId 
					and T.InvoiceNo=@InvoiceNo 
					and T.ItemId=@ItemId 
					)
		where TableName='ItemCollectionMotionDetailsTo'
		and TblLine=@TblLine
	
	
		select @sql ='update FIFO
		set Price=(select T.AvgCost/T.Qty
					from ItemCollectionMotionDetailsTo T
					where T.StoreId='+cast(@StoreId as nvarchar(100))+'
					--and T.MainItemId=FIFO.Flag
					and T.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+'
					and T.ItemId=FIFO.ItemId
					and T.Line=FIFO.TblLine
					)
		where TableName=''ItemCollectionMotionDetailsTo''
		and StoreId='+cast(@StoreId as nvarchar(100))+' 
		--and ItemId='+cast(@Flag as nvarchar(100))+'
		and InvoiceNo='+cast(@InvoiceNo as nvarchar(100))
					
		print @sql
		exec (@sql)
		
	
	end
	
	
	
	select @sql ='update F
	set Price=isnull((select (case when T.Qty=0 then 0 else T.AvgCost/T.Qty end)
				from SalesDetails T
				where T.Line=F.MainLine
				),
				PurchasePrice)
	from FIFO F
	left join Items It on(It.Id=F.ItemId)
	where MainTableName=''SalesDetails''
	and MainFlag=8
	and MainLine='+cast(@TblLine as nvarchar(100))
	print @sql
	exec (@sql)
	
	

	select @sql ='
			update T 
			set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId /*order by T.Line*/ and T.Line=F.TblLine)
			From SalesDetails T
			left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
			where ItemId='+cast(@ItemId as nvarchar(100))+'
			and M.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)



	select @sql ='
			update T 
			set AvgCost=Qty*It.PurchasePrice
			From SalesDetails T
			left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
			left join Items It on(It.Id=T.ItemId)
			where ItemId='+cast(@ItemId as nvarchar(100))+'
			and M.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			and AvgCost is null
			'
	print @sql
	exec (@sql)


	select @sql ='
			update T
			set AvgCost=(select sum(D.AvgCost) from SalesDetails D where T.StoreId=D.StoreId and T.Flag=D.Flag and T.InvoiceNo=D.InvoiceNo)
			From InstallmentInvoicesMaster T
			left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
			where M.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)


	select @sql ='
			update T 
			set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 5=F.TableIndex and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId and (T.MainItemId=F.Flag or T.MainItemId=0) /*order by T.Line*/ and T.Line=F.TblLine)
			From ItemCollectionMotionDetailsFrom T
			left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
			where T.ItemId='+cast(@ItemId as nvarchar(100))+'
			and TT.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)
		

	select @sql ='
			update T 
			set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 6=F.TableIndex and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId /*order by T.Line*/ and T.Line=F.TblLine)
			From ItemCollectionMotionDetailsTo T
			left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
			where T.ItemId='+cast(@ItemId as nvarchar(100))+'
			and TT.DayDate2='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)
		
	
	
	
	
	
	
	
	
	
	

	update F
	set Price=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainPrice=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainFlag=(select top 1 T.MainFlag from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainLine=(select top 1 T.MainLine from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainInvoiceNo=(select top 1 T.MainInvoiceNo from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainTableIndex=(select top 1 T.MainTableIndex from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainTableName=(select top 1 T.MainTableName from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc)
	from FIFO F
	where F.DayDate >=@DayDate
	and F.Flag in(2,3,14)
	--and ItemId=@ItemId

	update T 
	set AvgCost=isnull((select SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId and T.Line=F.TblLine),
	It.PurchasePrice*T.Qty)
	From SalesDetails T
	left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
	left join Items It on(It.Id=T.ItemId)
	where M.DayDate>=@DayDate
	and T.Flag in(2,3,14)
	--and ItemId=@ItemId

	update T 
	set Value=AvgCost,
	Price=AvgCost/Qty
	From SalesDetails T
	left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
	where M.DayDate>=@DayDate
	and T.Flag in(2,3)
	and Qty<>0
	--and ItemId=@ItemId
 
		 
end


GO
/****** Object:  StoredProcedure [dbo].[CalcFIFOByItemId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcFIFOByItemId]
@MyItemId bigint
--with encryption
as
declare 
@FromDate datetime='2010-12-31',
@ToDate datetime='2099-1-1'

set nocount on
--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo


update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0
and D.ItemId=@MyItemId

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0
and D.ItemId=@MyItemId

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0
and D.ItemId=@MyItemId

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0
and D.ItemId=@MyItemId

--===============================================================================

--================================================================== Generate @Tbl

declare @EvaluationTbl table(Id bigint)
declare @EvaluationTblId bigint=1

declare @Tbl table (MainFlag int,MainInvoiceNo bigint,MainTableIndex int,TableIndex int,TableName nvarchar(100),TableDiscription nvarchar(100),StoreId bigint,Flag int,InvoiceNo bigint,DayDate datetime,
ItemId bigint,Price Float,Qty float,TblLine int,Line int identity(1,1))
insert @Tbl
select Tbl.* from
(
select D.Flag MainFlag,D.InvoiceNo MainInvoiceNo,1 MainTableIndex,1 TableIndex,'SalesDetails' TableName,SF.Name,D.StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(Case when D.UnitQty=0 then Price else Price/D.UnitQty end)Price,D.Qty*D.UnitQty*SF.ItemInOut Qty,D.Line
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select D.Flag,D.InvoiceNo,1 MainTableIndex,1 TableIndex,'SalesDetails' TableName,SF.Name,M.ToId StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(Case when D.UnitQty=0 then D.Price else D.Price/D.UnitQty end),D.Qty*D.UnitQty Qty,D.Line
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag =8

union all

select D.Flag,D.InvoiceNo,2 MainTableIndex,2 TableIndex,'SalesDetailsComponants',SF.Name,D.StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(case when D.Qty=0 then 0 else D.Value/D.Qty end),D.Qty*SF.ItemInOut,D.Line
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select 0,D.InvoiceNo,3 MainTableIndex,3 TableIndex,'KidneysWashMotionDetails','غسيل كلي',(select KidneysWashStoreId from Statics),SF.Id,D.InvoiceNo,M.DayDate,D.ItemId,0,D.Qty*SF.ItemInOut,D.Line
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Canceled=0

union all

select 19,TTT.InvoiceNo,4 MainTableIndex,4 TableIndex,'ImportMessagesDetailsSub2','استيراد',T.StoreId,19,TTT.InvoiceNo,T.DeliveredDate,TTT.ItemId,TTT.AvgCost/TTT.Qty,TTT.Qty,TTT.Line
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1

union all

select T.Flag,T.InvoiceNo,5 MainTableIndex,5 TableIndex,'ItemCollectionMotionDetailsFrom','فك وتركيب',TT.StoreId,
(case when TT.MotionTypeId=1 then T.MainItemId else T.ItemId end),
TT.InvoiceNo,TT.DayDate,T.ItemId,T.Price,T.Qty*SF.ItemInOut,T.Line
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
where TT.DayDate between @FromDate and @ToDate
and TT.Temp=0

union all

select T.Flag,T.InvoiceNo,6 MainTableIndex,6 TableIndex,'ItemCollectionMotionDetailsTo','فك وتركيب',TT.StoreId,
(case when TT.MotionTypeId=0 then T.MainItemId else T.ItemId end),
TT.InvoiceNo,TT.DayDate2,T.ItemId,T.Price,T.Qty*SF.ItemInOut,T.Line
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join SalesFlags SF on(2=SF.Id)
where TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1

) Tbl
left join Items It on(Tbl.ItemId=It.Id)
where It.ItemType<>3
and It.Id=@MyItemId
order by Tbl.DayDate,(case when Tbl.Qty>0 then 0 else 1 end),Tbl.StoreId,Tbl.Flag,Tbl.InvoiceNo

--================================================================== Generate FIFO

delete FIFO where DayDate >=@FromDate 
and ItemId=@MyItemId

insert FIFO(MainFlag,MainInvoiceNo,MainLine,MainTableName,MainTableIndex,
TableIndex,TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,MainPrice,Price,Qty,TblLine,PriceDate)
select MainFlag,MainInvoiceNo,TblLine,TableName,MainTableIndex,
TableIndex,TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,Price,Price,Qty,TblLine,DayDate
from @Tbl
where Qty>0 

delete @Tbl where Qty>=0 


update F
set Price=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainPrice=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainFlag=(select top 1 T.MainFlag from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainLine=(select top 1 T.MainLine from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainInvoiceNo=(select top 1 T.MainInvoiceNo from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainTableIndex=(select top 1 T.MainTableIndex from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
MainTableName=(select top 1 T.MainTableName from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc)
from FIFO F
where F.DayDate between @FromDate and @ToDate
and F.Flag in(2,3)
and ItemId=@MyItemId


update T 
set AvgCost=isnull(
(select SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId and T.Line=F.TblLine),
It.PurchasePrice*T.Qty)
From SalesDetails T
left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
left join Items It on(It.Id=T.ItemId)
where M.DayDate between @FromDate and @ToDate
and T.Flag in(2,3)
and ItemId=@MyItemId

update T 
set Value=AvgCost,
Price=AvgCost/(Qty)
From SalesDetails T
left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and T.Flag in(2,3)
and Qty<>0
and ItemId=@MyItemId


declare @sql nvarchar(4000)
declare @x bigint=(select min(Line) from @Tbl),@max bigint=(select MAX(Line) from @Tbl)
while @x<=@max and @EvaluationTblId=1 and not @x is null
begin
	declare @MainFlag int,@MainInvoiceNo bigint,@TableIndex int,@TableName nvarchar(100),@TableDiscription nvarchar(100),@StoreId bigint,@Flag int,@InvoiceNo bigint,@DayDate datetime,@ItemId bigint,@MainPrice float,@Price float,@Qty float,@TblLine int
	select @MainFlag=MainFlag,@MainInvoiceNo=MainInvoiceNo,@TableIndex=TableIndex,@TableName=TableName,@TableDiscription=TableDiscription,@StoreId=StoreId,@Flag=Flag,@InvoiceNo=InvoiceNo,@DayDate=DayDate,@ItemId=ItemId,@MainPrice=Price,@Price=Price,@Qty=Qty,@TblLine=TblLine
	from @Tbl where Line=@x

	
	select @MainPrice=Price
	from @Tbl where Line=@x
	
	delete @EvaluationTbl
	insert @EvaluationTbl	
	exec GenerateFIFO @TableIndex,@TableName,@StoreId,@Flag,@InvoiceNo,@DayDate,@ItemId,@MainPrice,@Qty,@TblLine
	select @EvaluationTblId=Id from @EvaluationTbl
	if @EvaluationTblId=0 
	begin
		Select 0,@TableName TableName,@TableDiscription TableDiscription,@StoreId StoreId,@Flag Flag,@InvoiceNo InvoiceNo,@DayDate DayDate,@ItemId ItemId,@MainPrice Price,@Price Price,@Qty Qty 
		return
	end
	
	select @x=(select min(Line) from @Tbl where Line>@x)
	
	select @sql ='
	update T 
	set AvgCost=(
				select -SUM(Price*Qty) 
				from FIFO TT 
				Where T.StoreId=TT.StoreId 
				and (isnull(T.Flag,0)=TT.Flag or '''+@TableName+'''=''ItemCollectionMotionDetailsFrom'')
				and T.InvoiceNo=TT.InvoiceNo
				and T.ItemId=TT.ItemId
				and T.Line=TT.TblLine
				) 
	From '+@TableName+' T
	where (isnull(Flag,0)='+cast(@Flag as nvarchar(100))+' or '''+@TableName+'''=''ItemCollectionMotionDetailsFrom'')
	and Line='+cast(@TblLine as nvarchar(100))+' 
	--and '''+@TableName+''' not in(''ItemCollectionMotionDetailsFrom'',''ItemCollectionMotionDetailsTo'')
	'
	print @sql
	exec (@sql)
	
	if @Flag=13 and @TableName='SalesDetails'
	begin
		select @sql ='
		update F
		set MainFlag=13,
		MainInvoiceNo=S.InvoiceNo,
		MainLine=S.Line,
		MainTableIndex=1
		from FIFO F
		left join SalesDetails R on(R.StoreId=F.StoreId and R.InvoiceNo=F.InvoiceNo and R.Flag=14 and R.ItemId=F.ItemId)
		left join SalesDetails S on(S.StoreId=R.StoreId and S.InvoiceNo=R.SalesInvoiceNo and S.Flag=13 and S.ItemId=R.ItemId)
		where F.Flag=14
		and S.StoreId='+cast(@StoreId as nvarchar(100))+'
		and S.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+'
		and S.ItemId='+cast(@ItemId as nvarchar(100))+'
		
		update F
		set Price=(select top 1 T.Price from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line),
		MainPrice=(select top 1 T.Price from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line),
		MainFlag=(select top 1 T.MainFlag from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line),
		MainLine=(select top 1 T.MainLine from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line),
		MainInvoiceNo=(select top 1 T.MainInvoiceNo from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line),
		MainTableIndex=(select top 1 T.MainTableIndex from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line),
		MainTableName=(select top 1 T.MainTableName from FIFO T where T.TableIndex=F.MainTableIndex and T.InvoiceNo=F.MainInvoiceNo and T.StoreId=F.StoreId and T.ItemId=F.ItemId and T.Flag=13 order by T.Line)
		from FIFO F
		where /*F.Flag=14
		and StoreId='+cast(@StoreId as nvarchar(100))+'
		and MainInvoiceNo='+cast(@InvoiceNo as nvarchar(100))+'
		and*/ ItemId='+cast(@ItemId as nvarchar(100))+'
		and MainLine='+cast(@TblLine as nvarchar(100))+'
		
		update T 
		set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId /*order by T.Line*/ and T.Line=F.TblLine)
		From SalesDetails T
		where Flag=14
		and StoreId='+cast(@StoreId as nvarchar(100))+'
		and SalesInvoiceNo='+cast(@InvoiceNo as nvarchar(100))+'
		and ItemId='+cast(@ItemId as nvarchar(100))+'
		
		'
		
		update @Tbl 
		set Price=@Price
	 where @MainFlag=MainFlag
	 and @MainInvoiceNo=MainInvoiceNo
	 and @ItemId=ItemId

		
		print @sql
		exec (@sql)
		
	end
	
	if @TableName='ItemCollectionMotionDetailsFrom'
	begin
		select @sql ='
		update T 
		set AvgCost=(
					select -SUM(Price*Qty) 
					from FIFO TT 
					Where T.StoreId=TT.StoreId 
					and (T.MainItemId=TT.Flag or T.MainItemId=0)
					and T.InvoiceNo=TT.InvoiceNo
					and T.ItemId=TT.ItemId
					and T.Line=TT.TblLine
					--and round(T.Price,3)=round(TT.MainPrice,3)
					) 
		From '+@TableName+' T
		where Line='+cast(@TblLine as nvarchar(100))
		print @sql
		exec (@sql)
		
		--تعديل سعر الصنف في وارد أمر التركيب
		select @sql ='
		update TblTo
		set AvgCost=(
			select isnull(sum(AvgCost),0) from ItemCollectionMotionDetailsFrom TblFrom 
			where TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.MainItemId=TblTo.ItemId
		)
		from ItemCollectionMotionDetailsTo TblTo
		left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
		where Tbl.MotionTypeId=1
		and Tbl.StoreId='+cast(@StoreId as nvarchar(100))+' 
		and TblTo.ItemId='+cast(@Flag as nvarchar(100))+' 
		and Tbl.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))
		print @sql
		exec (@sql)
	end
	
	

	if @TableName='ItemCollectionMotionDetailsFrom'
	begin
		--تعديل أسعار الأصناف في وارد أمر الفك
		select @sql ='
		update TblTo
		set AvgCost=TblTo.Value/TblFrom.Value*TblFrom.AvgCost
		from ItemCollectionMotionDetailsTo TblTo
		left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
		left join ItemCollectionMotionDetailsFrom TblFrom on(TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.ItemId=TblTo.MainItemId)
		where Tbl.MotionTypeId=0
		and TblFrom.Value<>0
		and Tbl.StoreId='+cast(@StoreId as nvarchar(100))+' 
		and TblTo.MainItemId='+cast(@Flag as nvarchar(100))+' 
		and Tbl.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+''
		print @sql
		exec (@sql)
		
		update @Tbl
		set Price=(select T.AvgCost/T.Qty
					from ItemCollectionMotionDetailsTo T
					where T.StoreId=@StoreId 
					and T.InvoiceNo=@InvoiceNo 
					and T.ItemId=@ItemId 
					)
		where TableName='ItemCollectionMotionDetailsTo'
		and TblLine=@TblLine
	
	
		select @sql ='update FIFO
		set Price=(select T.AvgCost/T.Qty
					from ItemCollectionMotionDetailsTo T
					where T.StoreId='+cast(@StoreId as nvarchar(100))+'
					--and T.MainItemId=FIFO.Flag
					and T.InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+'
					and T.ItemId=FIFO.ItemId
					and T.Line=FIFO.TblLine
					)
		where TableName=''ItemCollectionMotionDetailsTo''
		and StoreId='+cast(@StoreId as nvarchar(100))+' 
		--and ItemId='+cast(@Flag as nvarchar(100))+'
		and InvoiceNo='+cast(@InvoiceNo as nvarchar(100))
					
		print @sql
		exec (@sql)
		
	
	end
	
	
	
	select @sql ='update F
	set Price=isnull((select (case when T.Qty=0 then 0 else T.AvgCost/T.Qty end)
				from SalesDetails T
				where T.Line=F.MainLine
				),
				PurchasePrice)
	from FIFO F
	left join Items It on(It.Id=F.ItemId)
	where MainTableName=''SalesDetails''
	and MainFlag=8
	and MainLine='+cast(@TblLine as nvarchar(100))
	print @sql
	exec (@sql)
	
	

	select @sql ='
			update T 
			set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId /*order by T.Line*/ and T.Line=F.TblLine)
			From SalesDetails T
			left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
			where ItemId='+cast(@ItemId as nvarchar(100))+'
			and M.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)



	select @sql ='
			update T 
			set AvgCost=Qty*It.PurchasePrice
			From SalesDetails T
			left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
			left join Items It on(It.Id=T.ItemId)
			where ItemId='+cast(@ItemId as nvarchar(100))+'
			and M.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			and AvgCost is null
			'
	print @sql
	exec (@sql)


	select @sql ='
			update T
			set AvgCost=(select sum(D.AvgCost) from SalesDetails D where T.StoreId=D.StoreId and T.Flag=D.Flag and T.InvoiceNo=D.InvoiceNo)
			From InstallmentInvoicesMaster T
			left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
			where M.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)


	select @sql ='
			update T 
			set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 5=F.TableIndex and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId and (T.MainItemId=F.Flag or T.MainItemId=0) /*order by T.Line*/ and T.Line=F.TblLine)
			From ItemCollectionMotionDetailsFrom T
			left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
			where T.ItemId='+cast(@ItemId as nvarchar(100))+'
			and TT.DayDate='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)
		

	select @sql ='
			update T 
			set AvgCost=/*Qty**/(select /*top 1 F.Price*/SUM(F.Price*abs(F.Qty)) from FIFO F where 6=F.TableIndex and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId /*order by T.Line*/ and T.Line=F.TblLine)
			From ItemCollectionMotionDetailsTo T
			left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
			where T.ItemId='+cast(@ItemId as nvarchar(100))+'
			and TT.DayDate2='''+cast(@DayDate as nvarchar(100))+'''
			'
	print @sql
	exec (@sql)
		
	
	
	
	
	
	
	
	
	
	

	update F
	set Price=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainPrice=(select top 1 T.Price from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainFlag=(select top 1 T.MainFlag from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainLine=(select top 1 T.MainLine from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainInvoiceNo=(select top 1 T.MainInvoiceNo from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainTableIndex=(select top 1 T.MainTableIndex from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc),
	MainTableName=(select top 1 T.MainTableName from FIFO T where T.ItemId=F.ItemId and T.Line<>F.Line and T.DayDate<=F.DayDate and T.Qty>0 order by T.MainTableIndex desc,T.DayDate desc)
	from FIFO F
	where F.DayDate >@DayDate
	and F.Flag in(2)
	and ItemId=@ItemId

	update T 
	set AvgCost=isnull((select SUM(F.Price*abs(F.Qty)) from FIFO F where 1=F.TableIndex and T.Flag=F.Flag and T.StoreId=F.StoreId and T.InvoiceNo=F.InvoiceNo and T.ItemId=F.ItemId and T.Line=F.TblLine),
	It.PurchasePrice*T.Qty)
	From SalesDetails T
	left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
	left join Items It on(It.Id=T.ItemId)
	where M.DayDate>@DayDate
	and T.Flag in(2)
	and ItemId=@ItemId

	update T 
	set Value=AvgCost,
	Price=AvgCost/Qty
	From SalesDetails T
	left join SalesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo)
	where M.DayDate>@DayDate
	and T.Flag in(2)
	and Qty<>0
	and ItemId=@ItemId



end
GO
/****** Object:  StoredProcedure [dbo].[CalcFIFOOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcFIFOOLD]
@FromDate datetime,
@ToDate datetime
--with encryption
as



update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================
--وارد فك وتركيب
update T set AvgCost=Value
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.DayDate2 between @FromDate and @ToDate 
and TT.Temp=0
and TT.Done=1

--===============================================================================

--================================================================== Generate @Tbl

declare @EvaluationTbl table(Id bigint)
declare @EvaluationTblId bigint=1

declare @Tbl table (TableName nvarchar(100),TableDiscription nvarchar(100),StoreId bigint,Flag int,InvoiceNo bigint,DayDate datetime,
ItemId bigint,Price Float,Qty float,Line int identity(1,1))
insert @Tbl
select Tbl.* from
(
select 'SalesDetails' TableName,SF.Name,D.StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,D.Price,D.Qty*SF.ItemInOut Qty
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select 'SalesDetails' TableName,SF.Name,M.ToId StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,D.Price,D.Qty Qty
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag =8

union all

select 'SalesDetailsComponants',SF.Name,D.StoreId,D.Flag,D.InvoiceNo,M.DayDate,D.ItemId,(case when D.Qty=0 then 0 else D.Value/D.Qty end),D.Qty*SF.ItemInOut
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select 'KidneysWashMotionDetails','غسيل كلي',(select KidneysWashStoreId from Statics),SF.Id,D.InvoiceNo,M.DayDate,D.ItemId,0,D.Qty*SF.ItemInOut
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
where M.DayDate between @FromDate and @ToDate
and M.Canceled=0

union all

select 'ImportMessages','استيراد',T.StoreId,T.OrderTypeId,T.Id,T.DeliveredDate,TTT.ItemId,TTT.AvgCost/TTT.Qty,TTT.Qty
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1

union all

select 'ItemCollectionMotionDetailsFrom','فك وتركيب',TT.StoreId,0,TT.InvoiceNo,TT.DayDate,T.ItemId,T.Price,T.Qty*SF.ItemInOut
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
where TT.DayDate between @FromDate and @ToDate
and TT.Temp=0


union all

select 'ItemCollectionMotionDetailsTo','فك وتركيب',TT.StoreId,0,TT.InvoiceNo,TT.DayDate2,T.ItemId,T.AvgCost/T.Qty,T.Qty*SF.ItemInOut
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join SalesFlags SF on(2=SF.Id)
where TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1

) Tbl
left join Items It on(Tbl.ItemId=It.Id)
where It.ItemType<>3
order by Tbl.DayDate,(case when Tbl.Qty>0 then 0 else 1 end),Tbl.StoreId,Tbl.Flag,Tbl.InvoiceNo

--================================================================== Generate FIFO


delete FIFO where DayDate between @FromDate and @ToDate
insert FIFO(TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,MainPrice,Price,Qty,PriceDate)
select TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,Price,Price,Qty,DayDate
from @Tbl
where Qty>0

delete @Tbl
where Qty>=0

declare @x bigint=(select min(Line) from @Tbl),@max bigint=(select MAX(Line) from @Tbl)
while @x<=@max and @EvaluationTblId=1 and not @x is null
begin
	declare @TableName nvarchar(100),@TableDiscription nvarchar(100),@StoreId bigint,@Flag int,@InvoiceNo bigint,@DayDate datetime,@ItemId bigint,@MainPrice float,@Price float,@Qty float
	select @TableName=TableName,@TableDiscription=TableDiscription,@StoreId=StoreId,@Flag=Flag,@InvoiceNo=InvoiceNo,@DayDate=DayDate,@ItemId=ItemId,@MainPrice=Price,@Price=Price,@Qty=Qty 
	from @Tbl where Line=@x
	
	delete @EvaluationTbl
	insert @EvaluationTbl	
	exec GenerateFIFO @TableName,@StoreId,@Flag,@InvoiceNo,@DayDate,@ItemId,@MainPrice,@Qty
	select @EvaluationTblId=Id from @EvaluationTbl
	if @EvaluationTblId=0 
	begin
		Select 0,@TableName TableName,@TableDiscription TableDiscription,@StoreId StoreId,@Flag Flag,@InvoiceNo InvoiceNo,@DayDate DayDate,@ItemId ItemId,@MainPrice Price,@Price Price,@Qty Qty 
		return
	end
	
	select @x=(select min(Line) from @Tbl where Line>@x)
	
	declare @sql nvarchar(4000)='
	update T 
	set AvgCost=(
				select -SUM(Price*Qty) 
				from FIFO TT 
				Where T.StoreId=TT.StoreId 
				and isnull(T.Flag,0)=TT.Flag
				and T.InvoiceNo=TT.InvoiceNo
				and T.ItemId=TT.ItemId
				and round(T.Price,3)=round(TT.MainPrice,3)
				) 
	From '+@TableName+' T
	where StoreId='+cast(@StoreId as nvarchar(100))+' 
	and isnull(Flag,0)='+cast(@Flag as nvarchar(100))+' 
	and InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+' 
	and ItemId='+cast(@ItemId as nvarchar(100))+' 
	and round(Price,3)='+cast(round(@Price,3) as nvarchar(100))
	print @sql
	exec (@sql)
end




--===============================================================================

--تعديل سعر الصنف في وارد أمر التركيب
update TblTo
set AvgCost=(
	select isnull(sum(AvgCost),0) from ItemCollectionMotionDetailsFrom TblFrom 
	where TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.MainItemId=TblTo.ItemId
)
from ItemCollectionMotionDetailsTo TblTo
left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
where Tbl.DayDate between @FromDate and @ToDate
and Tbl.Temp=0
and Tbl.MotionTypeId=1

--تعديل أسعار الأصناف في وارد أمر الفك
update TblTo
set AvgCost=TblTo.Value/TblFrom.Value*TblFrom.AvgCost
from ItemCollectionMotionDetailsTo TblTo
left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
left join ItemCollectionMotionDetailsFrom TblFrom on(TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.ItemId=TblTo.MainItemId)
where Tbl.DayDate between @FromDate and @ToDate
and Tbl.Temp=0
and Tbl.MotionTypeId=0
and TblFrom.Value<>0

--===============================================================================


exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcImportMessageCost]
@OrderTypeId int,@ImportMessageId int
--with encryption
as

declare @DeliveredDate datetime,@IsDelivered int
select @DeliveredDate=DeliveredDate,@IsDelivered=IsDelivered
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


exec GenerateCurrencyExchangeByDateTemp null,@DeliveredDate

--========================================
update SalesMaster
set Exchange=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)
where Flag=19
and InvoiceNo in(
select InvoiceNo from ImportMessagesDetails T
where T.OrderTypeId=@OrderTypeId
and T.Id=@ImportMessageId
)

update M
set Exchange=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
where M.Flag=20
and D.SalesInvoiceNo in(
select InvoiceNo from ImportMessagesDetails T
where T.OrderTypeId=@OrderTypeId
and T.Id=@ImportMessageId
)
--========================================




--exec dbo.CalcImportMessageCostSub 0,0,@DeliveredDate
exec dbo.CalcImportMessageCostSub @OrderTypeId,@ImportMessageId,@DeliveredDate

--if @OrderTypeId=20 and @ImportMessageId=4
--update SalesMaster set OrderTypeId=20 where Flag=19 and StoreId=1 and InvoiceNo=14

declare @val0 float,
@val1 float,
@val2 float,@val2Bal0 float,
@val3 float,
@val4 float,
@val5 float,--@val5Main float,
@val6 float,
@val7 float,
@val8 float,
@val9 float

update ImportMessages
set IsDelivered=0
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

--إجمالى عقود الرسالة
select @val5=dbo.GetCalcImportMessageCostVal5(@OrderTypeId,@ImportMessageId,@DeliveredDate)

--إجمالى عقود الطلبية
select @val6=dbo.GetCalcImportMessageCostVal6(@OrderTypeId,@ImportMessageId,@DeliveredDate)

--إجمالى جميع العقود
--select @val7=dbo.GetCalcImportMessageCostVal7(@OrderTypeId,@ImportMessageId,@DeliveredDate)

--الرسائل المفتوحة على نفس الطلبية
declare @TblImportMessages table(OrderTypeId int,ImportMessageId int,StoreId int,StoreInvoiceNo int,val5 float,Cost_OrderTypeId_Perc float,Line int identity(1,1))
insert @TblImportMessages
select OrderTypeId,Id,0,0,val5,
Cost_OrderTypeId_Perc=(case when @val6=0 then 0 else val5/@val6 end) --النسبة من الطلبيات
from
(
select OrderTypeId,Id,dbo.GetCalcImportMessageCostVal5(OrderTypeId,Id,@DeliveredDate)val5
from ImportMessages
where OrderTypeId=@OrderTypeId
and (
	Id=@ImportMessageId or 
	(IsDelivered=0 and DayDate<=@DeliveredDate)
	)
)Tbl


update ImportMessages
set Perc=0,
Cost_InvoiceNo=0,
Cost_MessageId=0
--Cost_OrderTypeId=0,
--Cost_Administrative=0,
--Cost_OrderTypeId_Perc=0,
--Cost_Administrative_Perc=0
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

--مصاريف العقود
select @val1=isnull(sum((Case when Flag=2 then 1. else -1. end)*Value),0) from BankCash_G2 T
where Canceled=0
and CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)
select @val1+=isnull(sum(Debit-Credit),0) from EntryDt T
where CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)
select @val1+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0) from Entry2 T
where Canceled=0
and CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)

--مصاريف الرسائل
select @val2Bal0=isnull(Bal0,0)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId
select @val2=isnull(sum((Case when Flag=2 then 1. else -1. end)*Value),0) from BankCash_G2 T
where Canceled=0
and CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)
select @val2+=isnull(sum(Debit-Credit),0) from EntryDt T
where CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)
select @val2+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0) from Entry2 T
where Canceled=0
and CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)

--توزيع المصاريف الإدارية على الطلبيات المفتوحة
exec dbo.CalcImportMessageCostSub @OrderTypeId,@ImportMessageId,@DeliveredDate


--مصاريف الطلبيات
exec dbo.CalcImportMessageCostSub2 @OrderTypeId,@ImportMessageId,@DeliveredDate


select @val3=isnull(SUM(Val3),0)
from ImportMessageCostHistoryVal3 T
where T.MyFlag not in(4,5)
	and(
			(OrderTypeId=@OrderTypeId and ImportMessageId=@ImportMessageId)
			OR exists
			(
				select D.StoreId from ImportMessages D
				left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
				where D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
				and D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
			)
		)

select @val4=isnull(SUM(Val3),0)
from ImportMessageCostHistoryVal3 T
where T.MyFlag in(4,5)
	and(
			(OrderTypeId=@OrderTypeId and ImportMessageId=@ImportMessageId)
			OR exists
			(
				select D.StoreId from ImportMessages D
				left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
				where D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
				and D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
			)
		)


declare 
@Cost_InvoiceNo float,
@Cost_MessageId float
--@Cost_OrderTypeId float,
--@Cost_Administrative float,
--@Cost_OrderTypeId_Perc float,
--@Cost_Administrative_Perc float
 
select 
	@Cost_InvoiceNo=round(@val1,2), --مصاريف العقود
	@Cost_MessageId=round(@val2,2) --مصاريف الرسائل
	--@Cost_OrderTypeId=round(@val3,2) --الحصة من الطلبيات
	--@Cost_Administrative=round(@val4,2), --الحصة من الإدارية
	--@Cost_OrderTypeId_Perc=0, --النسبة من الطلبيات
	--@Cost_Administrative_Perc=0 --النسبة من الإدارية

 
 
select @val0=
(case when @val5=0 then 0 else 
	(
	+@val5
	+@val2Bal0
	+@Cost_InvoiceNo
	+@Cost_MessageId
	+Cost_OrderTypeId
	+Cost_Administrative
	)
	/@val5
 end)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

update ImportMessages
set Perc=@val0,
Cost_InvoiceNo=@Cost_InvoiceNo,
Cost_MessageId=@Cost_MessageId,
--Cost_OrderTypeId=@Cost_OrderTypeId,
--Cost_Administrative=@Cost_Administrative,
--Cost_OrderTypeId_Perc=@Cost_OrderTypeId_Perc,
--Cost_Administrative_Perc=@Cost_Administrative_Perc,
val5=@val5
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


update DS
set Perc=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from ImportMessagesDetails DS 
left join ImportMessages D1 on(D1.OrderTypeId=DS.OrderTypeId and D1.Id=DS.Id)
left join SalesMaster SM on(SM.Flag=19 and SM.StoreId=D1.StoreId and SM.InvoiceNo=DS.InvoiceNo)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 

update DS
set AvgCost=DS.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from ImportMessagesDetailsSub2 DS 
left join ImportMessages D1 on(D1.OrderTypeId=DS.OrderTypeId and D1.Id=DS.Id)
left join SalesMaster SM on(SM.Flag=19 and SM.StoreId=D1.StoreId and SM.InvoiceNo=DS.InvoiceNo)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 

update D set AvgCost=Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.Flag in(19,20)
and exists(
select D1.StoreId from ImportMessages D1
left join ImportMessagesDetails DD on(D1.OrderTypeId=DD.OrderTypeId and D1.Id=DD.Id)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 
and DD.InvoiceNo=D.InvoiceNo and DD.StoreId=D.StoreId
)

update M set Perc=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from SalesMaster M
where M.Flag in(19,20)
and exists(
select D1.StoreId from ImportMessages D1
left join ImportMessagesDetails DD on(D1.OrderTypeId=DD.OrderTypeId and D1.Id=DD.Id)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 
and DD.InvoiceNo=M.InvoiceNo and DD.StoreId=M.StoreId
)

select @val0 val0,
@Cost_InvoiceNo Cost_InvoiceNo,
@Cost_MessageId Cost_MessageId,
--@Cost_OrderTypeId Cost_OrderTypeId,
--@Cost_Administrative Cost_Administrative,
--@Cost_OrderTypeId_Perc Cost_OrderTypeId_Perc,
--@Cost_Administrative_Perc Cost_Administrative_Perc,
@val5 val5



--if @OrderTypeId=20 and @ImportMessageId=4
--update SalesMaster set OrderTypeId=23 where Flag=19 and StoreId=1 and InvoiceNo=14

update ImportMessages
set IsDelivered=@IsDelivered
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

	
exec Sh

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCost2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcImportMessageCost2]
@OrderTypeId int,@ImportMessageId int
--with encryption
as


declare @val0 float,
@val1 float,
@val2 float,@val2Bal0 float

declare @DeliveredDate datetime
select @DeliveredDate=DeliveredDate
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


update ImportMessages
set Perc=0,
Cost_InvoiceNo=0,
Cost_MessageId=0
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

--مصاريف العقود
select @val1=isnull(sum((Case when Flag=2 then 1. else -1. end)*Value),0) from BankCash_G2 T
where Canceled=0
and CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)
select @val1+=isnull(sum(Debit-Credit),0) from EntryDt T
where CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)
select @val1+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0) from Entry2 T
where Canceled=0
and CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)

--مصاريف الرسائل
select @val2Bal0=isnull(Bal0,0)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId
select @val2=isnull(sum((Case when Flag=2 then 1. else -1. end)*Value),0) from BankCash_G2 T
where Canceled=0
and CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)
select @val2+=isnull(sum(Debit-Credit),0) from EntryDt T
where CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)
select @val2+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0) from Entry2 T
where Canceled=0
and CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)




declare 
@Cost_InvoiceNo float,
@Cost_MessageId float
 
select 
	@Cost_InvoiceNo=round(@val1,2), --مصاريف العقود
	@Cost_MessageId=round(@val2,2) --مصاريف الرسائل


update ImportMessages
set 
Cost_InvoiceNo=@Cost_InvoiceNo,
Cost_MessageId=@Cost_MessageId
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

update ImportMessages
set Perc=(case when val5=0 then 0 else 
	(
	+val5
	+@val2Bal0
	+Cost_InvoiceNo
	+Cost_MessageId
	+Cost_OrderTypeId
	+Cost_Administrative
	)
	/val5
 end)
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


select @val0=Perc
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId



update DS
set Perc=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from ImportMessagesDetails DS 
left join ImportMessages D1 on(D1.OrderTypeId=DS.OrderTypeId and D1.Id=DS.Id)
left join SalesMaster SM on(SM.Flag=19 and SM.StoreId=D1.StoreId and SM.InvoiceNo=DS.InvoiceNo)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 

update DS
set AvgCost=DS.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from ImportMessagesDetailsSub2 DS 
left join ImportMessages D1 on(D1.OrderTypeId=DS.OrderTypeId and D1.Id=DS.Id)
left join SalesMaster SM on(SM.Flag=19 and SM.StoreId=D1.StoreId and SM.InvoiceNo=DS.InvoiceNo)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 

update D set AvgCost=Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.Flag in(19,20)
and exists(
select D1.StoreId from ImportMessages D1
left join ImportMessagesDetails DD on(D1.OrderTypeId=DD.OrderTypeId and D1.Id=DD.Id)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 
and DD.InvoiceNo=D.InvoiceNo and DD.StoreId=D.StoreId
)

update M set Perc=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from SalesMaster M
where M.Flag in(19,20)
and exists(
select D1.StoreId from ImportMessages D1
left join ImportMessagesDetails DD on(D1.OrderTypeId=DD.OrderTypeId and D1.Id=DD.Id)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 
and DD.InvoiceNo=M.InvoiceNo and DD.StoreId=M.StoreId
)

select @val0 val0,
@Cost_InvoiceNo Cost_InvoiceNo,
@Cost_MessageId Cost_MessageId


if @OrderTypeId=20 and @ImportMessageId=4
update SalesMaster set OrderTypeId=23 where Flag=19 and StoreId=1 and InvoiceNo=14

	
exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostOLD_2015_12_07]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcImportMessageCostOLD_2015_12_07]
@OrderTypeId int,@ImportMessageId int
--with encryption
as



if @OrderTypeId=20 and @ImportMessageId=4
update SalesMaster set OrderTypeId=20 where Flag=19 and StoreId=1 and InvoiceNo=14

declare @val0 float,
@val1 float,
@val2 float,@val2Bal0 float,
@val3 float,
@val4 float,
@val5 float,--@val5Main float,
@val6 float,
@val7 float,
@val8 float,
@val9 float

declare @DeliveredDate datetime
select @DeliveredDate=DeliveredDate
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

--إجمالى عقود الرسالة
select @val5=dbo.GetCalcImportMessageCostVal5(@OrderTypeId,@ImportMessageId,@DeliveredDate)

--إجمالى عقود الطلبية
select @val6=dbo.GetCalcImportMessageCostVal6(@OrderTypeId,@ImportMessageId,@DeliveredDate)

--إجمالى جميع العقود
select @val7=dbo.GetCalcImportMessageCostVal7(@OrderTypeId,@ImportMessageId,@DeliveredDate)

--الرسائل المفتوحة على نفس الطلبية
declare @TblImportMessages table(OrderTypeId int,ImportMessageId int,StoreId int,StoreInvoiceNo int,val5 float,Cost_OrderTypeId_Perc float,Line int identity(1,1))
insert @TblImportMessages
select OrderTypeId,Id,0,0,val5,
Cost_OrderTypeId_Perc=(case when @val6=0 then 0 else val5/@val6 end) --النسبة من الطلبيات
from
(
select OrderTypeId,Id,dbo.GetCalcImportMessageCostVal5(OrderTypeId,Id,@DeliveredDate)val5
from ImportMessages
where OrderTypeId=@OrderTypeId
and (
	Id=@ImportMessageId or 
	(IsDelivered=0 and DayDate<=@DeliveredDate)
	)
)Tbl


--الطلبيات المفتوحة
declare @TblImportMessages2 table(OrderTypeId int,val6 float,Cost_Administrative_Perc float,Line int identity(1,1))
insert @TblImportMessages2
select OrderTypeId,val6,
Cost_OrderTypeId_Perc=(case when @val7=0 then 0 else val6/@val7 end) --النسبة 
from
(
select distinct OrderTypeId,dbo.GetCalcImportMessageCostVal6(OrderTypeId,0,@DeliveredDate)val6
from ImportMessages
where 
	(
	(OrderTypeId=@OrderTypeId and Id=@ImportMessageId) or 
	(IsDelivered=0 and DayDate<=@DeliveredDate)
	)
)Tbl



update ImportMessages
set Perc=0,
Cost_InvoiceNo=0,
Cost_MessageId=0,
Cost_OrderTypeId=0,
Cost_Administrative=0,
Cost_OrderTypeId_Perc=0,
Cost_Administrative_Perc=0
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId

--مصاريف العقود
select @val1=isnull(sum(Value),0) from BankCash_G2 T
where Flag=2
and Canceled=0
and CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)
select @val1+=isnull(sum(Debit-Credit),0) from EntryDt T
where CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)
select @val1+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0) from Entry2 T
where Canceled=0
and CostTypeId=4
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and T.StoreId=D.StoreId and T.StoreInvoiceNo=D.InvoiceNo
)

--مصاريف الرسائل
select @val2Bal0=isnull(Bal0,0)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId
select @val2=isnull(sum(Value),0) from BankCash_G2 T
where Flag=2
and Canceled=0
and CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)
select @val2+=isnull(sum(Debit-Credit),0) from EntryDt T
where CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)
select @val2+=isnull(sum(Value*(case when IsCost1=1 then 1. else -1. end)),0) from Entry2 T
where Canceled=0
and CostTypeId=3
and exists(
select StoreId from ImportMessagesDetails D
where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
and D.OrderTypeId=T.PurchaseAccNo and T.ImportMessageId=D.Id
)

--مصاريف الطلبيات
delete ImportMessageCostHistoryVal3
where MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId
insert ImportMessageCostHistoryVal3(MainOrderTypeId,MainImportMessageId,DeliveredDate,OrderTypeId,ImportMessageId,StoreId,StoreInvoiceNo,MyFlag,TableName,MainInvoiceNo,InvoiceNo,MotionDate,MainAccNo,SubAccNo,Perc,MainVal3,Val3)
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,0,'OrderTypes',0 BankCash_G2TypeId,T.Id,null,dbo.GetMainAccNoLink(11,Id),Id,
Tbl.Cost_OrderTypeId_Perc,
isnull((Bal0),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=0 and D.MainInvoiceNo=0 and D.InvoiceNo=T.Id),
Tbl.Cost_OrderTypeId_Perc*(isnull((Bal0),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=0 and D.MainInvoiceNo=0 and D.InvoiceNo=T.Id))
from OrderTypes T
cross join @TblImportMessages Tbl
where Id=@OrderTypeId
and Tbl.OrderTypeId=@OrderTypeId and Tbl.ImportMessageId=@ImportMessageId
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,1,'BankCash_G2',BankCash_G2TypeId,InvoiceNo,DayDate,dbo.GetMainAccNoLink(LinkFile,SubAccNo),SubAccNo,
Tbl.Cost_OrderTypeId_Perc,
isnull((Value),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo),
Tbl.Cost_OrderTypeId_Perc*(isnull((Value),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo))
from BankCash_G2 T
cross join @TblImportMessages Tbl
where Flag=2
and Canceled=0
and CostTypeId=2
and PurchaseAccNo=@OrderTypeId
and DayDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and Tbl.ImportMessageId=@ImportMessageId
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,2,'EntryDt',TT.EntryTypeId,TT.InvoiceNo,DayDate,MainAccNo,SubAccNo,
Tbl.Cost_OrderTypeId_Perc,
isnull((Debit-Credit),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=2 and D.MainInvoiceNo=0 and D.InvoiceNo=T.InvoiceNo),
Tbl.Cost_OrderTypeId_Perc*(isnull((Debit-Credit),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=2 and D.MainInvoiceNo=0 and D.InvoiceNo=T.InvoiceNo))
from EntryDt T
cross join @TblImportMessages Tbl
left join Entry TT on(T.EntryTypeId=TT.EntryTypeId and T.InvoiceNo=TT.InvoiceNo)
where CostTypeId=2
and PurchaseAccNo=@OrderTypeId
and DayDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and Tbl.ImportMessageId=@ImportMessageId
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,3,'Entry2',Entry2TypeId,InvoiceNo,DayDate,(case when IsCost1=1 then MainAccNo1 else MainAccNo2 end),(case when IsCost1=1 then SubAccNo1 else SubAccNo2 end),
Tbl.Cost_OrderTypeId_Perc,
isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=3 and D.MainInvoiceNo=0 and D.InvoiceNo=T.InvoiceNo),
Tbl.Cost_OrderTypeId_Perc*(isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=3 and D.MainInvoiceNo=0 and D.InvoiceNo=T.InvoiceNo))
from Entry2 T
cross join @TblImportMessages Tbl
where Canceled=0
and CostTypeId=2
and PurchaseAccNo=@OrderTypeId
and DayDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and Tbl.ImportMessageId=@ImportMessageId

select @val3=isnull(SUM(Val3),0)
from ImportMessageCostHistoryVal3 T
where	(
			(OrderTypeId=@OrderTypeId and ImportMessageId=@ImportMessageId)
			OR exists
			(
				select D.StoreId from ImportMessages D
				left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
				where D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
				and D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
			)
		)


--المصاريف الإدارية
--أولا: التوزيع على الطلبيات
delete ImportMessageCostHistoryVal4
where MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId
insert ImportMessageCostHistoryVal4(MainOrderTypeId,MainImportMessageId,DeliveredDate,OrderTypeId,MyFlag,TableName,MainInvoiceNo,InvoiceNo,MotionDate,MainAccNo,SubAccNo,Perc,MainVal4,SubVal4)
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,1,'BankCash_G2',BankCash_G2TypeId,InvoiceNo,DayDate,dbo.GetMainAccNoLink(LinkFile,SubAccNo),SubAccNo,
Tbl.Cost_Administrative_Perc,isnull((Value),0),Tbl.Cost_Administrative_Perc*isnull((Value),0)
from BankCash_G2 T
cross join @TblImportMessages2 Tbl
where Flag=2
and Canceled=0
and CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo
)
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,2,'EntryDt',TT.EntryTypeId,TT.InvoiceNo,DayDate,MainAccNo,SubAccNo,
Tbl.Cost_Administrative_Perc,isnull((Debit-Credit),0),Tbl.Cost_Administrative_Perc*isnull((Debit-Credit),0)
from EntryDt T
left join Entry TT on(T.EntryTypeId=TT.EntryTypeId and T.InvoiceNo=TT.InvoiceNo)
cross join @TblImportMessages2 Tbl
where CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=2 and D.MainInvoiceNo=0 and D.InvoiceNo=T.InvoiceNo
)
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,3,'Entry2',Entry2TypeId,InvoiceNo,DayDate,(case when IsCost1=1 then MainAccNo1 else MainAccNo2 end),(case when IsCost1=1 then SubAccNo1 else SubAccNo2 end),
Tbl.Cost_Administrative_Perc,isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0),Tbl.Cost_Administrative_Perc*isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
cross join @TblImportMessages2 Tbl
where Canceled=0
and CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=3 and D.MainInvoiceNo=0 and D.InvoiceNo=T.InvoiceNo
)

--ثانيا: التوزيع على الرسائل والعقود المفتوحة داخل الطلبية الحالية
delete ImportMessageCostHistoryVal4Detailed
where MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId
insert ImportMessageCostHistoryVal4Detailed
	 (MainOrderTypeId,MainImportMessageId,DeliveredDate,OrderTypeId,ImportMessageId,StoreId,StoreInvoiceNo,MyFlag,TableName,MainInvoiceNo,InvoiceNo,MotionDate,MainAccNo,SubAccNo,
	 MainPerc,SubPerc,Perc,MainVal4,SubVal4,Val4)
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,MyFlag,TableName,MainInvoiceNo,InvoiceNo,MotionDate,MainAccNo,SubAccNo,
T.Perc,Tbl.Cost_OrderTypeId_Perc,T.Perc*Tbl.Cost_OrderTypeId_Perc,MainVal4,SubVal4,SubVal4*Tbl.Cost_OrderTypeId_Perc
from ImportMessageCostHistoryVal4 T
left join @TblImportMessages Tbl on(T.OrderTypeId=Tbl.OrderTypeId)
where Tbl.OrderTypeId=@OrderTypeId and Tbl.ImportMessageId=@ImportMessageId

select @val4=isnull(SUM(Val4),0)
from ImportMessageCostHistoryVal4Detailed T
where	(
			(OrderTypeId=@OrderTypeId and ImportMessageId=@ImportMessageId)
			OR exists
			(
				select D.StoreId from ImportMessages D
				left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
				where D.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
				and D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId
			)
		)



declare 
@Cost_InvoiceNo float,
@Cost_MessageId float,
@Cost_OrderTypeId float,
@Cost_Administrative float,
@Cost_OrderTypeId_Perc float,
@Cost_Administrative_Perc float
 
select 
	@Cost_InvoiceNo=round(@val1,2), --مصاريف العقود
	@Cost_MessageId=round(@val2,2), --مصاريف الرسائل
	@Cost_OrderTypeId=round(@val3,2), --الحصة من الطلبيات
	@Cost_Administrative=round(@val4,2), --الحصة من الإدارية
	@Cost_OrderTypeId_Perc=0, --النسبة من الطلبيات
	@Cost_Administrative_Perc=0 --النسبة من الإدارية

 
 
select @val0=
(case when @val5=0 then 0 else 
	(
	+@val5
	+@val2Bal0
	+@Cost_InvoiceNo
	+@Cost_MessageId
	+@Cost_OrderTypeId
	+@Cost_Administrative
	)
	/@val5
 end)

update ImportMessages
set Perc=@val0,
Cost_InvoiceNo=@Cost_InvoiceNo,
Cost_MessageId=@Cost_MessageId,
Cost_OrderTypeId=@Cost_OrderTypeId,
Cost_Administrative=@Cost_Administrative,
Cost_OrderTypeId_Perc=@Cost_OrderTypeId_Perc,
Cost_Administrative_Perc=@Cost_Administrative_Perc,
val5=@val5
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


update DS
set Perc=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from ImportMessagesDetails DS 
left join ImportMessages D1 on(D1.OrderTypeId=DS.OrderTypeId and D1.Id=DS.Id)
left join SalesMaster SM on(SM.Flag=19 and SM.StoreId=D1.StoreId and SM.InvoiceNo=DS.InvoiceNo)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 

update DS
set AvgCost=DS.Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from ImportMessagesDetailsSub2 DS 
left join ImportMessages D1 on(D1.OrderTypeId=DS.OrderTypeId and D1.Id=DS.Id)
left join SalesMaster SM on(SM.Flag=19 and SM.StoreId=D1.StoreId and SM.InvoiceNo=DS.InvoiceNo)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 

update D set AvgCost=Value*dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.Flag in(19,20)
and exists(
select D1.StoreId from ImportMessages D1
left join ImportMessagesDetails DD on(D1.OrderTypeId=DD.OrderTypeId and D1.Id=DD.Id)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 
and DD.InvoiceNo=D.InvoiceNo and DD.StoreId=D.StoreId
)

update M set Perc=dbo.GetCurrencyExchange(0,0,CurrencyId,0,@DeliveredDate)*@val0
from SalesMaster M
where M.Flag in(19,20)
and exists(
select D1.StoreId from ImportMessages D1
left join ImportMessagesDetails DD on(D1.OrderTypeId=DD.OrderTypeId and D1.Id=DD.Id)
where D1.OrderTypeId=@OrderTypeId and D1.Id=@ImportMessageId 
and DD.InvoiceNo=M.InvoiceNo and DD.StoreId=M.StoreId
)

select @val0 val0,
@Cost_InvoiceNo Cost_InvoiceNo,
@Cost_MessageId Cost_MessageId,
@Cost_OrderTypeId Cost_OrderTypeId,
@Cost_Administrative Cost_Administrative,
@Cost_OrderTypeId_Perc Cost_OrderTypeId_Perc,
@Cost_Administrative_Perc Cost_Administrative_Perc,
@val5 val5



if @OrderTypeId=20 and @ImportMessageId=4
update SalesMaster set OrderTypeId=23 where Flag=19 and StoreId=1 and InvoiceNo=14

	
exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcImportMessageCostSub]
@OrderTypeId int,
@ImportMessageId int,
@DeliveredDate datetime
--with encryption
as


exec GenerateCurrencyExchangeByDateTemp null,@DeliveredDate

--الطلبيات المفتوحة
declare @TblImportMessages2 table(OrderTypeId int,val6 float,Cost_Administrative_Perc float,Line int identity(1,1))
/*
insert @TblImportMessages2
select OrderTypeId,dbo.GetCalcImportMessageCostVal6(OrderTypeId,0,@DeliveredDate)val6,0
from (
select distinct OrderTypeId
from SalesMaster T
where Flag in(19)
and Temp=0
and DayDate<=@DeliveredDate
and not exists(
			select D.StoreId from ImportMessages D
			left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
			where D.IsDelivered=1 and D.DeliveredDate<=@DeliveredDate
			and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
)
)MyTbl
*/

insert @TblImportMessages2
select Id,dbo.Bal0(AccNo,Id,getdate(),0,0,0)*C.Exchange val6,0
from OrderTypes T
left join CurrencyExchangeByDateTemp C on(C.CurrencyId=T.CurrencyId and C.DayDate=@DeliveredDate)


declare @val7 float=(select SUM(val6)from @TblImportMessages2)

update @TblImportMessages2
set Cost_Administrative_Perc=(case when @val7=0 then 0 else val6/@val7 end) --النسبة 



--المصاريف الإدارية
delete ImportMessageCostHistoryVal4
where (
		(MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId and @OrderTypeId<>0 and @ImportMessageId<>0)or
		(DeliveredDate=@DeliveredDate and MainOrderTypeId=@OrderTypeId and MainImportMessageId=0 and @ImportMessageId=0)
		)

insert ImportMessageCostHistoryVal4(MainOrderTypeId,MainImportMessageId,DeliveredDate,OrderTypeId,MyFlag,TableName,MainInvoiceNo,InvoiceNo,MotionDate,MainAccNo,SubAccNo,Perc,MainVal4,SubVal4)
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,1,'BankCash_G2',BankCash_G2TypeId,InvoiceNo,DayDate,dbo.GetMainAccNoLink(LinkFile,SubAccNo),SubAccNo,
Tbl.Cost_Administrative_Perc,isnull(((Case when Flag=2 then 1. else -1. end)*Value),0),Tbl.Cost_Administrative_Perc*isnull(((Case when Flag=2 then 1. else -1. end)*Value),0)
from BankCash_G2 T
cross join @TblImportMessages2 Tbl
where Canceled=0
and CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo
)
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,2,'EntryDt',TT.EntryTypeId,TT.InvoiceNo,DayDate,MainAccNo,SubAccNo,
Tbl.Cost_Administrative_Perc,isnull((Debit-Credit),0),Tbl.Cost_Administrative_Perc*isnull((Debit-Credit),0)
from EntryDt T
left join Entry TT on(T.EntryTypeId=TT.EntryTypeId and T.InvoiceNo=TT.InvoiceNo)
cross join @TblImportMessages2 Tbl
where CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=2 and D.MainInvoiceNo=T.EntryTypeId and D.InvoiceNo=T.InvoiceNo
)
union all
select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,3,'Entry2',Entry2TypeId,InvoiceNo,DayDate,(case when IsCost1=1 then MainAccNo1 else MainAccNo2 end),(case when IsCost1=1 then SubAccNo1 else SubAccNo2 end),
Tbl.Cost_Administrative_Perc,isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0),Tbl.Cost_Administrative_Perc*isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
cross join @TblImportMessages2 Tbl
where Canceled=0
and CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=3 and D.MainInvoiceNo=T.Entry2TypeId and D.InvoiceNo=T.InvoiceNo
)

delete ImportMessageCostHistoryVal4
where (
		(MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId and @OrderTypeId<>0 and @ImportMessageId<>0)or
		(DeliveredDate=@DeliveredDate and MainOrderTypeId=@OrderTypeId and MainImportMessageId=0 and @ImportMessageId=0)
		)
and round(SubVal4,6)=0
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSub2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcImportMessageCostSub2]
@OrderTypeId int,
@ImportMessageId int,
@DeliveredDate datetime
--with encryption
as

--الرسائل والعقود المفتوحة على نفس الطلبية
declare @TblImportMessages table(OrderTypeId int,ImportMessageId int,StoreId int,StoreInvoiceNo int,val5 float,Cost_OrderTypeId_Perc float,Line int identity(1,1))
insert @TblImportMessages
select OrderTypeId,Id,StoreId,StoreInvoiceNo,val5,0
from
(
	select OrderTypeId,Id,0 StoreId,0 StoreInvoiceNo,dbo.GetCalcImportMessageCostVal5(OrderTypeId,Id,@DeliveredDate)val5
	from ImportMessages
	where OrderTypeId=@OrderTypeId
	and (
		Id=@ImportMessageId or 
		((IsDelivered=0 or (IsDelivered=1 and DeliveredDate>@DeliveredDate)) and DayDate<=@DeliveredDate)
		)
	union all
	select @OrderTypeId,0,StoreId,InvoiceNo,dbo.GetCalcImportMessageCostVal4(T.StoreId,T.InvoiceNo,@DeliveredDate)val5
	from SalesMaster T
	where Flag in(19)
	and Temp=0
	and DayDate<=@DeliveredDate
	--and @DeliveredDate<='2015-12-31'
	and OrderTypeId=@OrderTypeId
	--and @ImportMessageId=0--آخر العام:)
	and not exists(
				select D.StoreId from ImportMessages D
				left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
				where D.DayDate<=@DeliveredDate
				and D.StoreId=T.StoreId and DD.InvoiceNo=T.InvoiceNo
				)
)Tbl

declare @val6 float=(select SUM(val5)from @TblImportMessages)

update @TblImportMessages
set Cost_OrderTypeId_Perc=(case when @val6=0 then 0 else val5/@val6 end) --النسبة 


--مصاريف الطلبيات
delete ImportMessageCostHistoryVal3
where MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId

insert ImportMessageCostHistoryVal3(MainOrderTypeId,MainImportMessageId,DeliveredDate,OrderTypeId,ImportMessageId,StoreId,StoreInvoiceNo,MyFlag,TableName,MainInvoiceNo,InvoiceNo,MotionDate,MainAccNo,SubAccNo,Perc,MainVal3,Val3,Line)

select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,0,'OrderTypes',0 BankCash_G2TypeId,T.Id,null,dbo.GetMainAccNoLink(11,Id),Id,
Tbl.Cost_OrderTypeId_Perc,isnull((Bal0),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=0 and D.MainInvoiceNo=0 and D.InvoiceNo=T.Id),
Tbl.Cost_OrderTypeId_Perc*(isnull((Bal0),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=0 and D.MainInvoiceNo=0 and D.InvoiceNo=T.Id)),
Line
from OrderTypes T
cross join @TblImportMessages Tbl
where Id=@OrderTypeId
and Tbl.OrderTypeId=@OrderTypeId and (Tbl.ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (Tbl.ImportMessageId<>0 or @ImportMessageId=0)--آخر العام:)
and (Tbl.ImportMessageId<>0 or @DeliveredDate<='2015-12-31')

union all

select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,1,'BankCash_G2',BankCash_G2TypeId,InvoiceNo,DayDate,dbo.GetMainAccNoLink(LinkFile,SubAccNo),SubAccNo,
Tbl.Cost_OrderTypeId_Perc,isnull(((Case when Flag=2 then 1. else -1. end)*Value),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line),
Tbl.Cost_OrderTypeId_Perc*(isnull(((Case when Flag=2 then 1. else -1. end)*Value),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line)),
T.Line
from BankCash_G2 T
cross join @TblImportMessages Tbl
where Canceled=0
and CostTypeId=2
and PurchaseAccNo=@OrderTypeId
and DayDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and (Tbl.ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (Tbl.ImportMessageId<>0 or @ImportMessageId=0)--آخر العام:)
and (Tbl.ImportMessageId<>0 or @DeliveredDate<='2015-12-31')

union all

select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,2,'EntryDt',TT.EntryTypeId,TT.InvoiceNo,DayDate,MainAccNo,SubAccNo,
Tbl.Cost_OrderTypeId_Perc,isnull((Debit-Credit),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=2 and D.MainInvoiceNo=T.EntryTypeId and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line),
Tbl.Cost_OrderTypeId_Perc*(isnull((Debit-Credit),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=2 and D.MainInvoiceNo=T.EntryTypeId and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line)),
T.Line
from EntryDt T
cross join @TblImportMessages Tbl
left join Entry TT on(T.EntryTypeId=TT.EntryTypeId and T.InvoiceNo=TT.InvoiceNo)
where CostTypeId=2
and PurchaseAccNo=@OrderTypeId
and DayDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and (Tbl.ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (Tbl.ImportMessageId<>0 or @ImportMessageId=0)--آخر العام:)
and (Tbl.ImportMessageId<>0 or @DeliveredDate<='2015-12-31')

union all

select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,3,'Entry2',Entry2TypeId,InvoiceNo,DayDate,(case when IsCost1=1 then MainAccNo1 else MainAccNo2 end),(case when IsCost1=1 then SubAccNo1 else SubAccNo2 end),
Tbl.Cost_OrderTypeId_Perc,isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=3 and D.MainInvoiceNo=T.Entry2TypeId and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line),
Tbl.Cost_OrderTypeId_Perc*(isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag=3 and D.MainInvoiceNo=T.Entry2TypeId and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line)),
T.Line
from Entry2 T
cross join @TblImportMessages Tbl
where Canceled=0
and CostTypeId=2
and PurchaseAccNo=@OrderTypeId
and DayDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and (Tbl.ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (Tbl.ImportMessageId<>0 or @ImportMessageId=0)--آخر العام:)
and (Tbl.ImportMessageId<>0 or @DeliveredDate<='2015-12-31')

union all

select @OrderTypeId,@ImportMessageId,@DeliveredDate,Tbl.OrderTypeId,Tbl.ImportMessageId,Tbl.StoreId,Tbl.StoreInvoiceNo,
(case when @ImportMessageId=0 then 5 else 4 end),
'ImportMessageCostHistoryVal4',MainInvoiceNo,InvoiceNo,DeliveredDate,MainAccNo,SubAccNo,
Tbl.Cost_OrderTypeId_Perc,isnull(SubVal4,0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag in(4,5) and D.MainInvoiceNo=T.MainInvoiceNo and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line),
Tbl.Cost_OrderTypeId_Perc*(isnull(SubVal4,0)-(select isnull(sum(Val3),0) from ImportMessageCostHistoryVal3 D where D.MyFlag in(4,5) and D.MainInvoiceNo=T.MainInvoiceNo and D.InvoiceNo=T.InvoiceNo and D.Line=T.Line)),
T.Line
from ImportMessageCostHistoryVal4 T
cross join @TblImportMessages Tbl
where T.OrderTypeId=@OrderTypeId
and DeliveredDate<=@DeliveredDate
and Tbl.OrderTypeId=@OrderTypeId and (Tbl.ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (Tbl.ImportMessageId<>0 or @ImportMessageId=0)--آخر العام:)
and (Tbl.ImportMessageId<>0 or @DeliveredDate<='2015-12-31')

delete ImportMessageCostHistoryVal3
where MainOrderTypeId=@OrderTypeId and MainImportMessageId=@ImportMessageId
and round(MainVal3,6)=0
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSubAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcImportMessageCostSubAll]
@DeliveredDate datetime
--with encryption
as


exec dbo.CalcImportMessageCostSub 0,0,@DeliveredDate

--declare @tbl table(Id bigint,Line int identity(1,1))
--insert @tbl select Id from OrderTypes
--declare @x int=1,@max int=(select max(Line) from @tbl)
--while @x<=@max
--begin
--	declare @Id bigint=(select Id from @tbl where Line=@x)
--	exec dbo.CalcImportMessageCostSub2 @Id,0,@DeliveredDate
--	set @x+=1
--end
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessageCostSubData]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[CalcImportMessageCostSubData] 
@DeliveredDate datetime
as
select SUM(Val) from(

select isnull(((Case when Flag=2 then 1. else -1. end)*Value),0) Val
from BankCash_G2 T
where Canceled=0
and CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=1 and D.MainInvoiceNo=T.BankCash_G2TypeId and D.InvoiceNo=T.InvoiceNo
)
union all
select isnull((Debit-Credit),0)
from EntryDt T
left join Entry TT on(T.EntryTypeId=TT.EntryTypeId and T.InvoiceNo=TT.InvoiceNo)
where CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=2 and D.MainInvoiceNo=T.EntryTypeId and D.InvoiceNo=T.InvoiceNo
)
union all
select isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)
from Entry2 T
where Canceled=0
and CostTypeId=1
and DayDate<=@DeliveredDate
and not exists(
select OrderTypeId from ImportMessageCostHistoryVal4 D
where D.MyFlag=3 and D.MainInvoiceNo=T.Entry2TypeId and D.InvoiceNo=T.InvoiceNo
)

)Tbl
GO
/****** Object:  StoredProcedure [dbo].[CalcImportMessagesOpennedOnly]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[CalcImportMessagesOpennedOnly]
--with encryption
as

update ImportMessages
set Perc=0,
DeliveredDate=CAST(GETDATE() as date),
Cost_InvoiceNo=0,
Cost_MessageId=0
--Cost_OrderTypeId=0,
--Cost_Administrative=0
where IsDelivered=0

declare @tbl table(OrderTypeId int,Id int,Line int identity(1,1))
insert @tbl
select OrderTypeId,Id from ImportMessages
where IsDelivered=0
order by DeliveredDate,OrderTypeId,Id

--update ImportMessages set IsDelivered=0

declare @x int=1,@max int=(select COUNT(Line) from @tbl)
declare @OrderTypeId int,@Id int
while @x<=@max
begin
	select @OrderTypeId=OrderTypeId,@Id=Id from @tbl where Line=@x
	print cast(@OrderTypeId as nvarchar(100))+' - '+cast(@Id as nvarchar(100))
	
	--update ImportMessages set IsDelivered=1 
	--where OrderTypeId=@OrderTypeId and Id=@Id
	
	exec CalcImportMessageCost @OrderTypeId,@Id
	select @x+=1
end


exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcItemsBalCostGroup]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[CalcItemsBalCostGroup]
@FromDate datetime='2000-1-1',
@ToDate datetime='2099-1-1'
as

--=======================================================================
update chart
set bal0=
(
select sum(dbo.GetItemBalGroup(Id,@FromDate)) from Groups where chart.Id=TradingFirstAccNo
)
where Id in(select distinct TradingFirstAccNo from Groups)

update chart
set MainBal0=bal0
where Id in(select distinct TradingFirstAccNo from Groups)
--=======================================================================
update chart
set bal0=
(
select sum(dbo.GetItemBalGroup(Id,@ToDate)) from Groups where chart.Id=TradingLastAccNo
)
where Id in(select distinct TradingLastAccNo from Groups)

update chart
set MainBal0=bal0
where Id in(select distinct TradingLastAccNo from Groups)
--=======================================================================
update chart
set bal0=
(
select sum(dbo.GetItemBalGroup(Id,@ToDate)) from Groups where chart.Id=BudgetAccNo
)
where Id in(select distinct BudgetAccNo from Groups)

update chart
set MainBal0=bal0
where Id in(select distinct BudgetAccNo from Groups)

exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcItemsBalCostGroupOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcItemsBalCostGroupOLD]
@FromDate datetime='2000-1-1',
@ToDate datetime='2099-1-1'
--with encryption
as

--=======================================================================
update chart
set bal0=
(
select sum(dbo.GetItemBalGroup(Id,@FromDate)) from Groups where chart.Id=TradingFirstAccNo
)
where Id in(select distinct TradingFirstAccNo from Groups)

update chart
set MainBal0=bal0
where Id in(select distinct TradingFirstAccNo from Groups)
--=======================================================================
update chart
set bal0=
(
select sum(dbo.GetItemBalGroup(Id,@ToDate)) from Groups where chart.Id=TradingLastAccNo
)
where Id in(select distinct TradingLastAccNo from Groups)

update chart
set MainBal0=bal0
where Id in(select distinct TradingLastAccNo from Groups)
--=======================================================================
update chart
set bal0=
(
select sum(dbo.GetItemBalGroup(Id,@ToDate)) from Groups where chart.Id=BudgetAccNo
)
where Id in(select distinct BudgetAccNo from Groups)

update chart
set MainBal0=bal0
where Id in(select distinct BudgetAccNo from Groups)

exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcMovingAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcMovingAvgCost]
@FromDate datetime='2000-1-1',
@ToDate datetime='2099-1-1'
--with encryption
as

update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================
--وارد فك وتركيب
update T set AvgCost=Value
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.DayDate2 between @FromDate and @ToDate 
and TT.Temp=0

--===============================================================================

create table #tbl(MyDayDate datetime,Line int identity(1,1))
insert #tbl
select distinct DayDate from SalesMaster 
where Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
and DayDate between @FromDate and @ToDate
and Flag not in(19,20,26,27,31)
and Temp=0
UNION ALL
select distinct DayDate from KidneysWashMotion
where DayDate between @FromDate and @ToDate
and Canceled=0
UNION ALL
select distinct DeliveredDate from ImportMessages
where DayDate between @FromDate and @ToDate
and IsDelivered=1
UNION ALL
select distinct DayDate from ItemCollectionMotionMaster
where DayDate between @FromDate and @ToDate
and Temp=0
UNION ALL
select distinct DayDate2 from ItemCollectionMotionMaster
where DayDate2 between @FromDate and @ToDate
and Temp=0
and Done=1

ORDER BY DayDate

declare @i int=1,@max int=(select MAX(Line) from #tbl),@MyDayDate datetime
while @i<=@max
begin
	select @MyDayDate=MyDayDate from #tbl where Line=@i
	
	update D
	set AvgCost=round(ISNULL(Qty*UnitQty*dbo.GetItemAvgCost(ItemId,M.DayDate),0),2)
	from SalesDetails D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
	and M.DayDate=@MyDayDate
	and M.Flag not in(19,20,26,27,31)
	and M.Temp=0
	
	update D
	set AvgCost=round(ISNULL(Qty*dbo.GetItemAvgCost(ItemId,M.DayDate),0),2)
	from SalesDetailsComponants D
	left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
	and M.DayDate=@MyDayDate
	and M.Flag not in(19,20,26,27,31)
	and M.Temp=0
	
	update D
	set AvgCost=round(ISNULL(Qty*dbo.GetItemAvgCost(ItemId,M.DayDate),0),2)
	from KidneysWashMotionDetails D
	left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
	where M.DayDate=@MyDayDate
	and M.Canceled=0

	-- صادر فك وتركيب
	update T
	set AvgCost=round(ISNULL(T.Qty*dbo.GetItemAvgCost(T.ItemId,TT.DayDate),0),2)
	from ItemCollectionMotionDetailsFrom T
	left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
	where TT.DayDate=@MyDayDate
	and TT.Temp=0
	
	--تعديل سعر الصنف في وارد أمر التركيب
	update TblTo
	set AvgCost=(
		select isnull(sum(AvgCost),0) from ItemCollectionMotionDetailsFrom TblFrom 
		where TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.MainItemId=TblTo.ItemId
	)
	from ItemCollectionMotionDetailsTo TblTo
	left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
	where Tbl.DayDate=@MyDayDate
	and Tbl.Temp=0
	and Tbl.MotionTypeId=1
	
	--تعديل أسعار الأصناف في وارد أمر الفك
	update TblTo
	set AvgCost=TblTo.Value/TblFrom.Value*TblFrom.AvgCost
	from ItemCollectionMotionDetailsTo TblTo
	left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
	left join ItemCollectionMotionDetailsFrom TblFrom on(TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.ItemId=TblTo.MainItemId)
	where Tbl.DayDate=@MyDayDate
	and Tbl.Temp=0
	and Tbl.MotionTypeId=0
	and TblFrom.Value<>0
	
	select @i+=1
end

drop table #tbl

exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcSalary]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[CalcSalary](@Month bigint,@Year bigint)
--with encryption
as
exec CloseAttendance @Month,@Year


declare @SalaryAddMonth bigint=isnull((select top 1 SalaryAddMonth from Statics),0)
declare @SalaryAddDay bigint=isnull((select top 1 SalaryAddDay from Statics),0)

--=========================================================================================
--========================================= Prepare =====================================
--=========================================================================================

update T 
--set ShiftCount=(select SUM(Morning+Afternoon+Additional) from EmpShifts where EmpId=Employees.Id and Month(Daydate)=@Month and YEAR(Daydate)=@Year)
set ShiftCount=isnull(1.0*(
	select sum(EmpRealWorkTime)
	from Attendance at
	where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year
	and at.EmpId=T.Id
)/(TotalHours*60+TotalMinutes),0)
from Employees T
where (ShiftsOnly=1 or SalaryOrShifts=1)
and (TotalHours*60+TotalMinutes)>0

update T 
set ShiftCount=isnull(ShiftCount,0)
from Employees T

--=========================================================================================
--=========================================================================================

delete from SalaryHistory where MONTH=@Month and Year=@Year
insert into SalaryHistory(DayDate,EmpId,Month,Year,Doctor,MainJobId,SubJobId,Salary,Tax,SalaryOnly,ShiftsOnly,SalaryOrShifts,ShiftCount,ShiftValue,IsFreelancer,IsSalary,Bonus,Allowance,SpAllowance,Insurance,DelayValue,OvertimeValue)
select Distinct 
dateadd(DAY,@SalaryAddDay,dateadd(month,@SalaryAddMonth,CAST(CAST(@Year as varchar(4))+'-'+CAST(@Month as varchar(2))+'-01' As datetime))),

Id,@Month,@Year,Doctor,MainJobId,SubJobId,Salary,Tax,SalaryOnly,ShiftsOnly,SalaryOrShifts,ShiftCount,ShiftValue,IsFreelancer,IsSalary,Bonus,Allowance,SpAllowance,Insurance,DelayValue,OvertimeValue
from Employees 
where Stopped=0 
and HiringDate<dateadd(month,1,CAST(CAST(@Year as varchar(4))+'-'+CAST(@Month as varchar(2))+'-01' As datetime))



--=========================================================================================
--========================================= Doctors =====================================
--=========================================================================================

update SalaryHistory set 
Income=dbo.GetEmpIncome(EmpId,@Month,@Year,2),
IncomeOnly=dbo.GetEmpIncome(EmpId,@Month,@Year,0),
OutcomeOnly=-dbo.GetEmpIncome(EmpId,@Month,@Year,1)
where Month=@Month and Year=@Year

--=========================================================================================
--========================================= CS =====================================
--=========================================================================================
declare @LoanDeduction bigint=dbo.GetLoanDeduction()

update SalaryHistory set 
Name1='المرتب الأساسى'/*'Salary'*/,Type1='P',Value1=Salary,
Name2='علاوة خاصة'/*'SpAllowance'*/,Type2='P',Value2=SpAllowance,
Name3='الحوافز'/*'Bonus'*/,Type3='P',Value3=Bonus,
Name4='البدلات'/*'Allowance'*/,Type4='P',Value4=Allowance,
Name5='إضافى العمل'/*'OverTime'*/,Type5='P',Value5=dbo.GetEmpOverTime(EmpId,@Month,@Year)*OvertimeValue,
Name6='الزيارات المنزلية'/*'Income'*/,Type6='P',Value6=Income,
Name7='المكافآت',Type7='P',Value7=dbo.GetEmpDirectBonus(@Month,@Year,EmpId),
Name8='',Type8='',Value8=0,
Name9='',Type9='',Value9=0,
Name10='',Type10='',Value10=0,

Name11='الغياب'/*'Absence'*/,Type11='N',Value11=dbo.GetEmpAbsence(EmpId,@Month,@Year),
Name12='التأخير'/*'Late'*/,Type12='N',Value12=dbo.GetEmpLate(EmpId,@Month,@Year)*DelayValue,
Name13='التأمينات'/*'Insurance'*/,Type13='N',Value13=Insurance,
Name14='الضرائب'/*'Tax'*/,Type14='N',Value14=Tax,

Name15='سلفة'/*'Loans'*/,Type15='N',Value15=(Case when @LoanDeduction=1 then dbo.GetEmpLoans(@Month,@Year,EmpId) else 0 end),
LoanValue=(Case when @LoanDeduction=1 then dbo.GetEmpLoans(@Month,@Year,EmpId) else 0 end),

Name16='الخصومات',Type16='N',Value16=dbo.GetEmpDirectCut(@Month,@Year,EmpId),
Name17='',Type17='',Value17=0,
Name18='',Type18='',Value18=0,
Name19='',Type19='',Value19=0,
Name20='',Type20='',Value20=0,

DaysInMonth=dbo.DaysInMonth(@MONTH,@YEAR)
where Month=@Month and Year=@Year


--=========================================================================================
--=======================================----------========================================
update SalaryHistory set Name20='',Type20='',Value20=0
where Month=@Month and Year=@Year

--=========================================================================================
--=======================================Total========================================
update SalaryHistory set Total=

((case when Type1 is null then 0. when Type1='N' then -1. else 1. end)*(case when Value1 is null then 0 else Value1 end))+
((case when Type2 is null then 0. when Type2='N' then -1. else 1. end)*(case when Value2 is null then 0 else Value2 end))+
((case when Type3 is null then 0. when Type3='N' then -1. else 1. end)*(case when Value3 is null then 0 else Value3 end))+
((case when Type4 is null then 0. when Type4='N' then -1. else 1. end)*(case when Value4 is null then 0 else Value4 end))+
((case when Type5 is null then 0. when Type5='N' then -1. else 1. end)*(case when Value5 is null then 0 else Value5 end))+
((case when Type6 is null then 0. when Type6='N' then -1. else 1. end)*(case when Value6 is null then 0 else Value6 end))+
((case when Type7 is null then 0. when Type7='N' then -1. else 1. end)*(case when Value7 is null then 0 else Value7 end))+
((case when Type8 is null then 0. when Type8='N' then -1. else 1. end)*(case when Value8 is null then 0 else Value8 end))+
((case when Type9 is null then 0. when Type9='N' then -1. else 1. end)*(case when Value9 is null then 0 else Value9 end))+
((case when Type10 is null then 0. when Type10='N' then -1. else 1. end)*(case when Value10 is null then 0 else Value10 end))+
((case when Type11 is null then 0. when Type11='N' then -1. else 1. end)*(case when Value11 is null then 0 else Value11 end))+
((case when Type12 is null then 0. when Type12='N' then -1. else 1. end)*(case when Value12 is null then 0 else Value12 end))+
((case when Type13 is null then 0. when Type13='N' then -1. else 1. end)*(case when Value13 is null then 0 else Value13 end))+
((case when Type14 is null then 0. when Type14='N' then -1. else 1. end)*(case when Value14 is null then 0 else Value14 end))+
((case when Type15 is null then 0. when Type15='N' then -1. else 1. end)*(case when Value15 is null then 0 else Value15 end))+
((case when Type16 is null then 0. when Type16='N' then -1. else 1. end)*(case when Value16 is null then 0 else Value16 end))+
((case when Type17 is null then 0. when Type17='N' then -1. else 1. end)*(case when Value17 is null then 0 else Value17 end))+
((case when Type18 is null then 0. when Type18='N' then -1. else 1. end)*(case when Value18 is null then 0 else Value18 end))+
((case when Type19 is null then 0. when Type19='N' then -1. else 1. end)*(case when Value19 is null then 0 else Value19 end))+
((case when Type20 is null then 0. when Type20='N' then -1. else 1. end)*(case when Value20 is null then 0 else Value20 end))
,
TotalBonus=
((case when Type1 is null then 0. when Type1='N' then 0 else 1. end)*(case when Value1 is null then 0 else Value1 end))+
((case when Type2 is null then 0. when Type2='N' then 0 else 1. end)*(case when Value2 is null then 0 else Value2 end))+
((case when Type3 is null then 0. when Type3='N' then 0 else 1. end)*(case when Value3 is null then 0 else Value3 end))+
((case when Type4 is null then 0. when Type4='N' then 0 else 1. end)*(case when Value4 is null then 0 else Value4 end))+
((case when Type5 is null then 0. when Type5='N' then 0 else 1. end)*(case when Value5 is null then 0 else Value5 end))+
((case when Type6 is null then 0. when Type6='N' then 0 else 1. end)*(case when Value6 is null then 0 else Value6 end))+
((case when Type7 is null then 0. when Type7='N' then 0 else 1. end)*(case when Value7 is null then 0 else Value7 end))+
((case when Type8 is null then 0. when Type8='N' then 0 else 1. end)*(case when Value8 is null then 0 else Value8 end))+
((case when Type9 is null then 0. when Type9='N' then 0 else 1. end)*(case when Value9 is null then 0 else Value9 end))+
((case when Type10 is null then 0. when Type10='N' then 0 else 1. end)*(case when Value10 is null then 0 else Value10 end))+
((case when Type11 is null then 0. when Type11='N' then 0 else 1. end)*(case when Value11 is null then 0 else Value11 end))+
((case when Type12 is null then 0. when Type12='N' then 0 else 1. end)*(case when Value12 is null then 0 else Value12 end))+
((case when Type13 is null then 0. when Type13='N' then 0 else 1. end)*(case when Value13 is null then 0 else Value13 end))+
((case when Type14 is null then 0. when Type14='N' then 0 else 1. end)*(case when Value14 is null then 0 else Value14 end))+
((case when Type15 is null then 0. when Type15='N' then 0 else 1. end)*(case when Value15 is null then 0 else Value15 end))+
((case when Type16 is null then 0. when Type16='N' then 0 else 1. end)*(case when Value16 is null then 0 else Value16 end))+
((case when Type17 is null then 0. when Type17='N' then 0 else 1. end)*(case when Value17 is null then 0 else Value17 end))+
((case when Type18 is null then 0. when Type18='N' then 0 else 1. end)*(case when Value18 is null then 0 else Value18 end))+
((case when Type19 is null then 0. when Type19='N' then 0 else 1. end)*(case when Value19 is null then 0 else Value19 end))+
((case when Type20 is null then 0. when Type20='N' then 0 else 1. end)*(case when Value20 is null then 0 else Value20 end))

,
TotalCut=
((case when Type1 is null then 0. when Type1='N' then 1. else 0 end)*(case when Value1 is null then 0 else Value1 end))+
((case when Type2 is null then 0. when Type2='N' then 1. else 0 end)*(case when Value2 is null then 0 else Value2 end))+
((case when Type3 is null then 0. when Type3='N' then 1. else 0 end)*(case when Value3 is null then 0 else Value3 end))+
((case when Type4 is null then 0. when Type4='N' then 1. else 0 end)*(case when Value4 is null then 0 else Value4 end))+
((case when Type5 is null then 0. when Type5='N' then 1. else 0 end)*(case when Value5 is null then 0 else Value5 end))+
((case when Type6 is null then 0. when Type6='N' then 1. else 0 end)*(case when Value6 is null then 0 else Value6 end))+
((case when Type7 is null then 0. when Type7='N' then 1. else 0 end)*(case when Value7 is null then 0 else Value7 end))+
((case when Type8 is null then 0. when Type8='N' then 1. else 0 end)*(case when Value8 is null then 0 else Value8 end))+
((case when Type9 is null then 0. when Type9='N' then 1. else 0 end)*(case when Value9 is null then 0 else Value9 end))+
((case when Type10 is null then 0. when Type10='N' then 1. else 0 end)*(case when Value10 is null then 0 else Value10 end))+
((case when Type11 is null then 0. when Type11='N' then 1. else 0 end)*(case when Value11 is null then 0 else Value11 end))+
((case when Type12 is null then 0. when Type12='N' then 1. else 0 end)*(case when Value12 is null then 0 else Value12 end))+
((case when Type13 is null then 0. when Type13='N' then 1. else 0 end)*(case when Value13 is null then 0 else Value13 end))+
((case when Type14 is null then 0. when Type14='N' then 1. else 0 end)*(case when Value14 is null then 0 else Value14 end))+
((case when Type15 is null then 0. when Type15='N' then 1. else 0 end)*(case when Value15 is null then 0 else Value15 end))+
((case when Type16 is null then 0. when Type16='N' then 1. else 0 end)*(case when Value16 is null then 0 else Value16 end))+
((case when Type17 is null then 0. when Type17='N' then 1. else 0 end)*(case when Value17 is null then 0 else Value17 end))+
((case when Type18 is null then 0. when Type18='N' then 1. else 0 end)*(case when Value18 is null then 0 else Value18 end))+
((case when Type19 is null then 0. when Type19='N' then 1. else 0 end)*(case when Value19 is null then 0 else Value19 end))+
((case when Type20 is null then 0. when Type20='N' then 1. else 0 end)*(case when Value20 is null then 0 else Value20 end))

where Month=@Month and Year=@Year



--=========================================================================================




exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CalcSalary1]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcSalary1]
@FromDate datetime,
@ToDate datetime

as


declare
@month int=month(@FromDate),
@year int=year(@FromDate)

exec [CloseAttendance] @month,@year

delete Employees1ShiftsDaily  where dayDate between @FromDate and @ToDate
insert Employees1ShiftsDaily 
select DayDate,T.*
from Employees1Shifts T
cross join GetPeriod(@FromDate,@ToDate)


delete Employees1Daily  where dayDate between @FromDate and @ToDate
insert Employees1Daily 
select DayDate,T.*
from Employees1 T
cross join GetPeriod(@FromDate,@ToDate)
where IsStopped=0
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[CalcSalaryEmp2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@DocNoFrom bigint,
@DocNoTo bigint
--with encryption
as

delete Employees2Salary where Month=@Month and YEAR=@Year
and Id in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete Employees2TypeItemsSalary where Month=@Month and YEAR=@Year
and Emp2Id in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

--=====================================================================
if exists(select top 1 * from Employees2Adding)
begin
	delete Employees2AddingSalary where Month=@Month and YEAR=@Year
	and EmpId in(
				select T.Id from Employees2 T
				where(T.Id>=@FromEmpId or @FromEmpId=0)
				and(T.Id<=@ToEmpId or @ToEmpId=0)
				and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
				and(T.DocNo<=@DocNoTo or @DocNoTo=0)
				)

	delete Employees2DeductionOfAddingSalary where Month=@Month and YEAR=@Year
	and EmpId in(
				select T.Id from Employees2 T
				where(T.Id>=@FromEmpId or @FromEmpId=0)
				and(T.Id<=@ToEmpId or @ToEmpId=0)
				and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
				and(T.DocNo<=@DocNoTo or @DocNoTo=0)
				)
end		
--=====================================================================
delete Employees2DirectBonusSalary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete Employees2DeductionOfDirectBonusSalary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

--=====================================================================
delete Employees2DirectBonus2Salary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete Employees2DeductionOfDirectBonus2Salary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

--=====================================================================
delete Employees2DirectBonus3Salary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete Employees2DeductionOfDirectBonus3Salary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)
--=====================================================================
delete Employees2DeductionSalary where Month=@Month and YEAR=@Year
and EmpId in(
			select T.Id from Employees2 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)
			
insert Employees2Salary
select @Month,@Year,* from Employees2 
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and IsStopped=0

insert Employees2TypeItemsSalary
select @Month,@Year,T.* 
from Employees2TypeItems T
left join Employees2 M on(M.Id=T.Emp2Id)
where(T.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(T.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.Emp2Id)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0




--insert Employees2TypeItemsSalary
--select @Month,@Year,T.EmpId,0 MainId,1 TypeId,
--T.GroupId*1000000+T.TypeId*1000+T.Id,
--isnull(T.GroupName,'')+' - '+isnull(T.TypeName,'')+' - '+isnull(T.Name,''),
--4 MyType1Id,T.Value,T.Value TotalValue,5 MyType2Id,T.UserName,T.MyGetDate,T.Notes
--from Employees2Adding T
--left join Employees2 M on(M.Id=T.EmpId)
--where(T.EmpId>=@FromEmpId or @FromEmpId=0)
--and(T.EmpId<=@ToEmpId or @ToEmpId=0)
--and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
--and(M.DocNo<=@DocNoTo or @DocNoTo=0)
--and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
--and M.IsStopped=0

insert Employees2TypeItemsSalary
select @Month,@Year,T.EmpId,0 MainId,2 TypeId,
T.GroupId*2000000+T.TypeId*2000+T.Id,
isnull(T.GroupName,'')+' - '+isnull(T.TypeName,'')+' - '+isnull(T.Name,''),
4 MyType1Id,T.Value,T.Value TotalValue,5 MyType2Id,T.UserName,T.MyGetDate,T.Notes
from Employees2Deduction T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0

--=====================================================================

if exists(select top 1 * from Employees2Adding)
begin
	insert Employees2AddingSalary
	select @Month,@Year,T.*
	from Employees2Adding T
	left join Employees2 M on(M.Id=T.EmpId)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
	and(M.DocNo<=@DocNoTo or @DocNoTo=0)
	and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
	and M.IsStopped=0


	insert Employees2DeductionOfAddingSalary
	select @Month,@Year,T.*
	from Employees2DeductionOfAdding T
	left join Employees2 M on(M.Id=T.EmpId)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
	and(M.DocNo<=@DocNoTo or @DocNoTo=0)
	and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
	and M.IsStopped=0
end

--=====================================================================

insert Employees2DirectBonusSalary
select @Month,@Year,T.*
from Employees2DirectBonus T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0


insert Employees2DeductionOfDirectBonusSalary
select @Month,@Year,T.*
from Employees2DeductionOfDirectBonus T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0

--=====================================================================

insert Employees2DirectBonus2Salary
select @Month,@Year,T.*
from Employees2DirectBonus2 T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0


insert Employees2DeductionOfDirectBonus2Salary
select @Month,@Year,T.*
from Employees2DeductionOfDirectBonus2 T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0

--=====================================================================

insert Employees2DirectBonus3Salary
select @Month,@Year,T.*
from Employees2DirectBonus3 T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0


insert Employees2DeductionOfDirectBonus3Salary
select @Month,@Year,T.*
from Employees2DeductionOfDirectBonus3 T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0

--=====================================================================

insert Employees2DeductionSalary
select @Month,@Year,T.*
from Employees2Deduction T
left join Employees2 M on(M.Id=T.EmpId)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(M.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(M.DocNo<=@DocNoTo or @DocNoTo=0)
and(dbo.GetEmployees2MyEmpId(T.EmpId)=@MyEmpId or @MyEmpId=0)
and M.IsStopped=0



--=========================================================================================




exec Shrink
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[CalcSalaryEmp4]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@DocNoFrom bigint,
@DocNoTo bigint
--with encryption
as

delete Employees4Salary where Month=@Month and YEAR=@Year
and Id in(
			select T.Id from Employees4 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete D
from Employees4ItemsSalary   D
left join Employees4 M on(D.EmpID=M.Id)
where D.Month=@Month and D.YEAR=@Year
and EmpId in(
			select T.Id from Employees4 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)


insert Employees4Salary
select @Month,@Year,* from Employees4
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and Stopped=0

insert Employees4ItemsSalary
select @Month,@Year,D.* from Employees4Items  D
left join Employees4 M on(D.EmpID=M.Id)
where(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(dbo.GetEmployees4MyEmpId(EmpId)=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and Stopped=0



update Employees4Salary 
set MyGetDate=GETDATE()
where Month=@Month and YEAR=@Year
and(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)

update D 
set MyGetDate=GETDATE()
from Employees4ItemsSalary   D
left join Employees4 M on(D.EmpID=M.Id)
where D.Month=@Month and D.YEAR=@Year
and(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(dbo.GetEmployees4MyEmpId(EmpId)=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)

--=========================================================================================




exec Shrink
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp5]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[CalcSalaryEmp5]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@DocNoFrom bigint,
@DocNoTo bigint
--with encryption
as

delete Employees5Salary where Month=@Month and YEAR=@Year
and Id in(
			select T.Id from Employees5 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete D
from Employees5ItemsSalary   D
left join Employees5 M on(D.EmpID=M.Id)
where D.Month=@Month and D.YEAR=@Year
and EmpId in(
			select T.Id from Employees5 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)


insert Employees5Salary
select @Month,@Year,* from Employees5
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and Stopped=0

insert Employees5ItemsSalary
select @Month,@Year,D.* from Employees5Items  D
left join Employees5 M on(D.EmpID=M.Id)
where(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(dbo.GetEmployees5MyEmpId(EmpId)=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and Stopped=0



update Employees5Salary 
set MyGetDate=GETDATE()
where Month=@Month and YEAR=@Year
and(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)

update D 
set MyGetDate=GETDATE()
from Employees5ItemsSalary   D
left join Employees5 M on(D.EmpID=M.Id)
where D.Month=@Month and D.YEAR=@Year
and(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(dbo.GetEmployees5MyEmpId(EmpId)=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)

--=========================================================================================




exec Shrink
GO
/****** Object:  StoredProcedure [dbo].[CalcSalaryEmp6]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[CalcSalaryEmp6]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@DocNoFrom bigint,
@DocNoTo bigint
--with encryption
as

delete Employees6Salary where Month=@Month and YEAR=@Year
and Id in(
			select T.Id from Employees6 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)

delete D
from Employees6ItemsSalary   D
left join Employees6 M on(D.EmpID=M.Id)
where D.Month=@Month and D.YEAR=@Year
and EmpId in(
			select T.Id from Employees6 T
			where(T.Id>=@FromEmpId or @FromEmpId=0)
			and(T.Id<=@ToEmpId or @ToEmpId=0)
			and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
			and(T.DocNo>=@DocNoFrom or @DocNoFrom=0)
			and(T.DocNo<=@DocNoTo or @DocNoTo=0)
			)


insert Employees6Salary
select @Month,@Year,* from Employees6
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and Stopped=0

insert Employees6ItemsSalary
select @Month,@Year,D.* from Employees6Items  D
left join Employees6 M on(D.EmpID=M.Id)
where(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(dbo.GetEmployees6MyEmpId(EmpId)=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)
and Stopped=0



update Employees6Salary 
set MyGetDate=GETDATE()
where Month=@Month and YEAR=@Year
and(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)

update D 
set MyGetDate=GETDATE()
from Employees6ItemsSalary   D
left join Employees6 M on(D.EmpID=M.Id)
where D.Month=@Month and D.YEAR=@Year
and(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(dbo.GetEmployees6MyEmpId(EmpId)=@MyEmpId or @MyEmpId=0)
and(DocNo>=@DocNoFrom or @DocNoFrom=0)
and(DocNo<=@DocNoTo or @DocNoTo=0)

--=========================================================================================




exec Shrink
GO
/****** Object:  StoredProcedure [dbo].[CalcWeightedAvgCost]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalcWeightedAvgCost]
@FromDate datetime='2000-1-1',
@ToDate datetime='2099-1-1'
--with encryption
as

update D set AvgCost=0 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=0 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================

update D set AvgCost=Value 
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D set AvgCost=Value 
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate 
and M.Flag in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

--===============================================================================
--وارد فك وتركيب
update T set AvgCost=Value
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
where TT.DayDate2 between @FromDate and @ToDate 
and TT.Temp=0

--===============================================================================

create table #tbl(ItemId int,Cost float)
insert #tbl
select Id,dbo.GetItemWeightedAvgCost(Id,@FromDate,@ToDate) from Items

update D
set AvgCost=round(ISNULL(Qty*UnitQty*Tbl.Cost,0),2)
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join #tbl Tbl on(Tbl.ItemId=D.ItemId)
where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D
set AvgCost=round(ISNULL(Qty*Tbl.Cost,0),2)
from SalesDetailsComponants D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join #tbl Tbl on(Tbl.ItemId=D.ItemId)
where M.Flag not in(select f.Id from SalesFlags f where f.ItemIn=1)
and M.DayDate between @FromDate and @ToDate
and M.Flag not in(19,20,26,27,31)
and M.Temp=0

update D
set AvgCost=round(ISNULL(Qty*Tbl.Cost,0),2)
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join #tbl Tbl on(Tbl.ItemId=D.ItemId)
where M.DayDate between @FromDate and @ToDate
and M.Canceled=0

-- صادر فك وتركيب
update T
set AvgCost=round(ISNULL(T.Qty*Tbl.Cost,0),2)
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join #tbl Tbl on(Tbl.ItemId=T.ItemId)
where TT.DayDate between @FromDate and @ToDate
and TT.Temp=0

--تعديل سعر الصنف في وارد أمر التركيب
update TblTo
set AvgCost=(
	select isnull(sum(AvgCost),0) from ItemCollectionMotionDetailsFrom TblFrom 
	where TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.MainItemId=TblTo.ItemId
)
from ItemCollectionMotionDetailsTo TblTo
left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
where Tbl.DayDate between @FromDate and @ToDate
and Tbl.Temp=0
and Tbl.MotionTypeId=1

--تعديل أسعار الأصناف في وارد أمر الفك
update TblTo
set AvgCost=TblTo.Value/TblFrom.Value*TblFrom.AvgCost
from ItemCollectionMotionDetailsTo TblTo
left join ItemCollectionMotionMaster Tbl on(Tbl.StoreId=TblTo.StoreId and Tbl.InvoiceNo=TblTo.InvoiceNo)
left join ItemCollectionMotionDetailsFrom TblFrom on(TblFrom.StoreId=Tbl.StoreId and TblFrom.InvoiceNo=Tbl.InvoiceNo and TblFrom.ItemId=TblTo.MainItemId)
where Tbl.DayDate between @FromDate and @ToDate
and Tbl.Temp=0
and Tbl.MotionTypeId=0
and TblFrom.Value<>0



drop table #tbl

exec Sh
GO
/****** Object:  StoredProcedure [dbo].[CancleSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CancleSerialId]
(
@Year bigint,
@SerialType bigint,
@SerialId bigint,
@EmpId bigint
)
--with encryption
as


update Reservations set Canceled=1,CanceledDate=GETDATE(),EmpIdCanceled=@EmpId
where (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)
and ((@SerialId=SerialId and year(ReservationDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))

update Services set Canceled=1,CanceledDate=GETDATE(),EmpIdCanceled=@EmpId
where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType
and ((@SerialId=SerialId and year(DayDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))
GO
/****** Object:  StoredProcedure [dbo].[CaseBarcode]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CaseBarcode]
@Id bigint,
@Count bigint
--with encryption
as

create table #tbl(Line bigint)
while @Count>0
begin
insert #tbl select @Count
select @Count-=1
end

select C.Id,C.Name,C.EnName,C.DateOfBirth,C.DateOnAdmission,
dbo.GetGenderName(C.Gender)GenderName,
dbo.GetCityName(1,C.CityId)CityName,
dbo.GetCompanyName() CompanyName,
C.Barcode
from Cases C
cross join #tbl
where C.Id=@Id
order by C.Id

drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[Cases2Search]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Cases2Search]
@ExistsOnly int=1
--with encryption
as
select cast(Id as nvarchar(100)),Name,EnName,'' NationalId,HomePhone,Mobile,Address
from cases2
GO
/****** Object:  StoredProcedure [dbo].[CasesSearch]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CasesSearch]
@ExistsOnly int
--with encryption
as

select cast(Id as nvarchar(100)),Name,EnName,'' NationalId,isnull(HomePhone,'')HomePhone,isnull(Mobile,'')Mobile,isnull(Address,'')Address
from cases
where @ExistsOnly=0 or InOut=1
GO
/****** Object:  StoredProcedure [dbo].[CasesSearch2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CasesSearch2]
@ExistsOnly int
--with encryption
as

select cast(Id as nvarchar(100)),Name ArName,DiagnoseOnAdmission,
dbo.GetCaseOutcomeName(CaseOutcomeId)CaseOutcomeId,
dbo.GetCityName(1,CityId)CityId,
dbo.ToStrDate(DateOnAdmission)DateOnAdmission
from cases
where @ExistsOnly=0 or InOut=1
GO
/****** Object:  StoredProcedure [dbo].[cdb]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[cdb] 
@Insert_1_To_Make_Sure_You_Want_To_Clear_DataBase int
as

if (@Insert_1_To_Make_Sure_You_Want_To_Clear_DataBase<>1)
begin
	raiserror ('Please, Write "1" as a Parameter To Make Sure You Want To Clear Your DataBase for a New Customer',16,1)
	return
end

declare @tbl table(name nvarchar(100),Line int identity)
insert @tbl
select name from sys.tables
where name not in(
'AccTypes',
'Areas',
'AttachmentTypes',
'Case2Types',
'CasePaymentTypes',
'CaseTypes',
'chart',
'CheckTypes',
'Cities',
'CostTypes',
'Countries',
'CustomerInvoicesTypes',
'Drugs',
'Drugs4000',
'DrugsAll',
'Entry2Types',
'EntryTypes',
'Gender',
'HourIndex',
'Hours',
'HoursAll',
'InvoicesTypes',
'LaboratoryTests',
'LaboratoryTestTypes',
'LabTestItems',
'LabTestItemsNormalValues',
'LabTestItemsResults',
'LastAlter',
'LastVersion',
'LevelsMenuitems',
'LinkFile',
'Minutes',
'Mychart',
'Names',
'Names2',
'NolonPriceTypes',
'PaymentDays',
'PaymentTypes',
'PlanSubFlags',
'SalesFlags',
'SalesPaymentTypes',
'SalesPriceTypes',
'SalesTypes',
'SerialTypes',
'ServiceGroups',
'ServiceTypes',
'Shifts',
'Statics',
'StoreUnits',
'Towns',
'UnitsWeights',
'VisitingTypes',
'Currencies',
'Degrees',
'Employees',
'Levels',
'LevelsTabs',
'NLevels',
'PCs',
'Stores',
'Statics',
'SalesPaymentTypes'
)

declare @max int=(select MAX(Line) from @tbl)
declare @x int=1
while @x<=@max
begin
	declare @Name nvarchar(100)=(select Name from @tbl where Line=@x)
	declare @sql nvarchar(1000)='truncate table ['+@Name+']'
	exec(@sql)
	set @x+=1
end


delete Currencies where Id>1
delete Degrees where Id>2
delete Employees where Id>1
delete Levels where Id>1
delete LevelsTabs where LevelId>1
delete NLevels where Id>1
delete PCs where Id>1
delete Stores where Id>1


update Statics set CompanyName='',CompanyTel='',Logo=null,
S_AccNo1='',S_AccNo2='',S_AccNo3='',S_AccNo4='',
S_Per1=0,S_Per2=0,S_Per3=0,S_Per4=0,
S_AccType1=0,S_AccType2=0,S_AccType3=0,S_AccType4=0,
P_AccNo1='',P_AccNo2='',P_AccNo3='',P_AccNo4='',
P_Per1=0,P_Per2=0,P_Per3=0,P_Per4=0,
P_AccType1=0,P_AccType2=0,P_AccType3=0,P_AccType4=0,
LabServiceGroupId=0,AppartementsAccNo='',TaxAcc='',
PoneComment='',PoneHeader='',CurrentShift=1,CurrentDate=CAST(GETDATE() as date),
KidneysWashStoreId=0,YearProfitAccNo='2301',BankCash_G2_Flag1_DedAcc='',BankCash_G2_Flag2_DedAcc='',
OperationAccNo='',InPatientAccNo='',InPatientSubAccNo=0,OperationSubAccNo=0,
OutPatientAccNo='',OutPatientSubAccNo=0,CaseInvoicesDiscountMainAccNo='',CaseInvoicesDiscountAubAccNo='',
CaseInvoicesDiscountAccNo='',CaseInvoicesDiscountSubAccNo=0,PrevYearProfitAccNo='',CaseInvoicesPerc0=0,
OP_AccNo='',R_OP_AccNo='',SalesDiscountMainAccNo='',SalesDiscountSubAccNo=0,
DisplayRoomId=0,DisplayCaseId=0,DisplayCaseName='',InstallRatio=0,SalaryAccNo='',InstallProfitAccNo='',InstallNotGainedAccNo=''



update chart
set bal0=0,MainBal0=0
GO
/****** Object:  StoredProcedure [dbo].[ChangeCustomerId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ChangeCustomerId]
@oldid int,@newid int
--with encryption
as

begin tran

select * from Customers where id=@oldid
select * from SalesMaster where Flag in(13,14) and toid=@oldid

--update Customers set Id=@newid where id=@oldid
--update SalesMaster set ToId=@newid where Flag in(13,14) and toid=@oldid

select * from Customers where id=@oldid
select * from SalesMaster where Flag in(13,14) and toid=@oldid

select * from Customers where id=@newid
select * from SalesMaster where Flag in(13,14) and toid=@newid


commit
GO
/****** Object:  StoredProcedure [dbo].[ChangeItemId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ChangeItemId]
@OldId nvarchar(1000),
@NewId nvarchar(1000)
--with encryption
as
declare @tbl table(string nvarchar(1000),Line int identity(1,1))
insert @tbl
select 'update '+TABLE_NAME+' set '+COLUMN_NAME+'='+@NewId+' where '+COLUMN_NAME+'=' +@OldId
from Information_schema.columns 
where (COLUMN_NAME like '%ItemId%' or (TABLE_NAME='Items' and COLUMN_NAME='Id'))

declare @x int=1,@max int=(select COUNT(*) from @tbl)
while @x<=@max
begin
	declare @str nvarchar(1000)=(select string from @tbl where Line=@x)
	print @str
	exec (@str)
	select @x+=1
end
GO
/****** Object:  StoredProcedure [dbo].[CloseAttendance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[CloseAttendance]
@Month bigint,
@Year bigint
--with encryption
as

delete Attendance where MONTH(DayDate)=@Month and Year(DayDate)=@Year

insert Attendance(EmpId,DayDate,LoginDateTime,LogOutDateTime,State,StateName,StateShortName,DayPerc)
select EmpId,cast(DayDate as date),
--min(Case when State=0 then DayDate else null end),
max(Case when State=0 then DayDate else null end),
null,
0 State,'' StateName,'' StateShortName,1
from AttendanceLog
where MONTH(DayDate)=@Month and Year(DayDate)=@Year
group by EmpId,cast(DayDate as date)


update T
set LogOutDateTime=(select top 1 (case when State=1 then DayDate else null end) from AttendanceLog TT where TT.EmpId=T.EmpId and TT.DayDate>T.LoginDateTime order by DayDate)
from Attendance T
where MONTH(DayDate)=@Month and Year(DayDate)=@Year


insert Attendance(EmpId,DayDate,LoginDateTime,LogOutDateTime,State,StateName,StateShortName,DayPerc)
select Id,M.Line,null,null,
0 State,'' StateName,'' StateShortName,1
from Employees E
cross apply dbo.MonthDays(@Month,@Year) M
where not exists
(
select * from Attendance at
where MONTH(DayDate)=@Month and Year(DayDate)=@Year
and at.EmpId=E.Id and at.DayDate=M.Line
)
and E.HasAttendance=1 and (E.TotalHours+E.TotalMinutes)>0



update at
set MONTH=@Month,Year=@Year,Day=Day(at.DayDate),
DelayMinutes=0,
OverMinutes=0
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year




update at
set EmpRealWorkTime=(
	select isnull(sum(
		isnull(datepart(DAY,OutTime-DayDate)-1,0)*60*24+
		isnull(datepart(HOUR,OutTime-DayDate),0)*60+
		isnull(datepart(MINUTE,OutTime-DayDate),0)
				),0)
	from 
	(
	select *,
		(
		select min(DayDate) 
		from AttendanceLog L 
		where T.EmpId=L.EmpId 
		--and CAST(T.DayDate AS date)=CAST(L.DayDate AS date)
		and L.State=1
		and T.DayDate<L.DayDate
		)OutTime
	from AttendanceLog T
	where EmpId=at.EmpId and CAST(DayDate AS date)=at.DayDate
	and State=0
	and (select top 1 State from AttendanceLog Lg where Lg.DayDate>T.DayDate and Lg.EmpId=T.EmpId order by DayDate)=1
	)tbl
)
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year





update at
set 
hh=(EmpRealWorkTime-EmpRealWorkTime%60)/60,
mm=EmpRealWorkTime%60
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year






update at
set HourValue=(case when (E.TotalHours+E.TotalMinutes/60.)=0 then 0 else isnull(E.Salary/30./(E.TotalHours+E.TotalMinutes/60.),0) end),
DayValue=isnull(E.Salary/30.,0),
IsFixedHours=E.IsFixedHours,
TotalHours=(case when at.DayDate between E.FromDate and E.ToDate then E.TotalHoursTemp else E.TotalHours end),
TotalMinutes=(case when at.DayDate between E.FromDate and E.ToDate then E.TotalMinutesTemp else E.TotalMinutes end)
from Attendance at
left join Employees E on E.Id=at.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year
and E.HasAttendance=1

update at
set State=11,StateName=o.Name,StateShortName='ج',
DayPerc*=(case when LoginDateTime is not null and LogOutDateTime is not null then E.HolidayWorkValue else 1. end)
from Attendance at
left join Employees E on E.Id=at.EmpId
left join OfficialHolidays o
on at.DayDate between o.FromDate and o.ToDate
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and o.Id is not null 

update at
set State=12,
StateName=(case Lr.LeaveType when 1 then 'سنوية' when 2 then 'عارضة' when 3 then 'مرضى' when 4 then 'بدون مرتب' when 5 then 'مأمورية' end),
StateShortName=(case Lr.LeaveType when 1 then 'س' when 2 then 'ع' when 3 then 'م' when 4 then 'ر' when 5 then 'و' end),
DayPerc*=(case Lr.LeaveType when 4 then 0 else 1. end)
from Attendance at
left join LeaveRequests2 LR 
on at.EmpId=LR.EmpId and at.DayDate between LR.FromDate and LR.ToDate
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and lr.Id is not null 

update at
set State=13,StateName='أجازة أسبوعية',StateShortName='ج.س',
DayPerc*=(case when LoginDateTime is not null and LogOutDateTime is not null then E.HolidayWorkValue else 1. end)
from Attendance at
left join Employees E on E.Id=at.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and dbo.IsWeekHoliday(at.DayDate,at.EmpId)=1

update at
set State=14,
StateName='إذن',
StateShortName='ذ'
from Attendance at
left join LeaveRequests LR on LR.DayDate=at.DayDate and at.EmpId=LR.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and lr.Id is not null 

--update Attendance 
--set State='',StateName='',StateShortName=''
--where MONTH(DayDate)=@Month and Year(DayDate)=@Year and State=0
--and

update Attendance 
set State=10,StateName='غياب',StateShortName='غ',DayPerc=0
where MONTH(DayDate)=@Month and Year(DayDate)=@Year and State=0
and (LoginDateTime is null or LogOutDateTime is null)


update at
set DelayMinutes=
case when 
((at.TotalHours*60+at.TotalMinutes)-(at.hh*60+at.mm)-E.LateAllowance-dbo.GetEmpLeaveRequests(at.EmpId,at.DayDate))
<0 then 0 else
((at.TotalHours*60+at.TotalMinutes)-(at.hh*60+at.mm)-E.LateAllowance-dbo.GetEmpLeaveRequests(at.EmpId,at.DayDate))
end
from Attendance at
left join Employees E on E.Id=at.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State in(0,14)

update at
set OverMinutes=(at.hh*60+at.mm)
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State in(11,13)

update at
set OverMinutes=(at.hh*60+at.mm)-(at.TotalHours*60+at.TotalMinutes)
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0

update at set DelayMinutes=0 from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0 and DelayMinutes<0

update at set OverMinutes=0 from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0 and OverMinutes<0


update Attendance 
set State='',StateName='حضور',StateShortName='ح',DayPerc=1
where MONTH(DayDate)=@Month and Year(DayDate)=@Year and State=0
GO
/****** Object:  StoredProcedure [dbo].[CloseAttendanceOld]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[CloseAttendanceOld]
@Month bigint,
@Year bigint
--with encryption
as

delete Attendance where MONTH(DayDate)=@Month and Year(DayDate)=@Year

insert Attendance(EmpId,DayDate,LoginDateTime,LogOutDateTime,State,StateName,StateShortName,DayPerc)
select EmpId,cast(DayDate as date),
min(Case when State=0 then DayDate else null end),
max(Case when State=1 then DayDate else null end),
0 State,'' StateName,'' StateShortName,1
from AttendanceLog
where MONTH(DayDate)=@Month and Year(DayDate)=@Year
group by EmpId,cast(DayDate as date)


insert Attendance(EmpId,DayDate,LoginDateTime,LogOutDateTime,State,StateName,StateShortName,DayPerc)
select Id,M.Line,null,null,
0 State,'' StateName,'' StateShortName,1
from Employees E
cross apply dbo.MonthDays(@Month,@Year) M
where not exists
(
select * from Attendance at
where MONTH(DayDate)=@Month and Year(DayDate)=@Year
and at.EmpId=E.Id and at.DayDate=M.Line
)
and E.HasAttendance=1 and (E.TotalHours+E.TotalMinutes)>0

update at
set MONTH=@Month,Year=@Year,Day=Day(at.DayDate),
--hh=isnull(datepart(HOUR,LogOutDateTime-LoginDateTime),0),
--mm=isnull(datepart(MINUTE,LogOutDateTime-LoginDateTime),0),
hh=(dbo.GetEmpRealWorkTime(EmpId,DayDate)-dbo.GetEmpRealWorkTime(EmpId,DayDate)%60)/60,
mm=dbo.GetEmpRealWorkTime(EmpId,DayDate)%60,
DelayMinutes=0,
OverMinutes=0
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year

update at
set HourValue=(case when (E.TotalHours+E.TotalMinutes/60.)=0 then 0 else isnull(E.Salary/30./(E.TotalHours+E.TotalMinutes/60.),0) end),
DayValue=isnull(E.Salary/30.,0),
IsFixedHours=E.IsFixedHours,
TotalHours=(case when at.DayDate between E.FromDate and E.ToDate then E.TotalHoursTemp else E.TotalHours end),
TotalMinutes=(case when at.DayDate between E.FromDate and E.ToDate then E.TotalMinutesTemp else E.TotalMinutes end)
from Attendance at
left join Employees E on E.Id=at.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year
and E.HasAttendance=1

update at
set State=11,StateName=o.Name,StateShortName='ج',
DayPerc*=(case when LoginDateTime is not null and LogOutDateTime is not null then E.HolidayWorkValue else 1. end)
from Attendance at
left join Employees E on E.Id=at.EmpId
left join OfficialHolidays o
on at.DayDate between o.FromDate and o.ToDate
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and o.Id is not null 

update at
set State=12,
StateName=(case Lr.LeaveType when 1 then 'سنوية' when 2 then 'عارضة' when 3 then 'مرضى' when 4 then 'بدون مرتب' when 5 then 'مأمورية' end),
StateShortName=(case Lr.LeaveType when 1 then 'س' when 2 then 'ع' when 3 then 'م' when 4 then 'ر' when 5 then 'و' end),
DayPerc*=(case Lr.LeaveType when 4 then 0 else 1. end)
from Attendance at
left join LeaveRequests2 LR 
on at.EmpId=LR.EmpId and at.DayDate between LR.FromDate and LR.ToDate
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and lr.Id is not null 

update at
set State=13,StateName='أجازة أسبوعية',StateShortName='ج.س',
DayPerc*=(case when LoginDateTime is not null and LogOutDateTime is not null then E.HolidayWorkValue else 1. end)
from Attendance at
left join Employees E on E.Id=at.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and dbo.IsWeekHoliday(at.DayDate,at.EmpId)=1

update at
set State=14,
StateName='إذن',
StateShortName='ذ'
from Attendance at
left join LeaveRequests LR on LR.DayDate=at.DayDate and at.EmpId=LR.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0
and lr.Id is not null 

--update Attendance 
--set State='',StateName='',StateShortName=''
--where MONTH(DayDate)=@Month and Year(DayDate)=@Year and State=0
--and

update Attendance 
set State=10,StateName='غياب',StateShortName='غ',DayPerc=0
where MONTH(DayDate)=@Month and Year(DayDate)=@Year and State=0
and (LoginDateTime is null or LogOutDateTime is null)


update at
set DelayMinutes=
case when 
((at.TotalHours*60+at.TotalMinutes)-(at.hh*60+at.mm)-E.LateAllowance-dbo.GetEmpLeaveRequests(at.EmpId,at.DayDate))
<0 then 0 else
((at.TotalHours*60+at.TotalMinutes)-(at.hh*60+at.mm)-E.LateAllowance-dbo.GetEmpLeaveRequests(at.EmpId,at.DayDate))
end
from Attendance at
left join Employees E on E.Id=at.EmpId
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State in(0,14)

update at
set OverMinutes=(at.hh*60+at.mm)
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State in(11,13)

update at
set OverMinutes=(at.hh*60+at.mm)-(at.TotalHours*60+at.TotalMinutes)
from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0

update at set DelayMinutes=0 from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0 and DelayMinutes<0

update at set OverMinutes=0 from Attendance at
where MONTH(at.DayDate)=@Month and Year(at.DayDate)=@Year and State=0 and OverMinutes<0


update Attendance 
set State='',StateName='حضور',StateShortName='ح',DayPerc=1
where MONTH(DayDate)=@Month and Year(DayDate)=@Year and State=0
GO
/****** Object:  StoredProcedure [dbo].[CloseCases]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CloseCases]
@DayDate datetime,
@EntryTypeId int,
@Amount float
--with encryption
as

declare
@MainAccNo varchar(4000)='',
@LinkFile bigint=13,
@UserName int=1,
@P bigint=1,
@Z bigint=1,
@N bigint=1

exec GenerateCurrencyExchangeByDateTemp null,@DayDate

declare @TableName varchar(4000),@MotionType int
select @TableName=TableName,@MotionType=MotionType from LinkFile where Id=@LinkFile
declare @str varchar(4000)='
create table #tbl(Id bigint,Name nvarchar(4000),MainBal0 float,AccNo nvarchar(4000),CurrencyId bigint,CurrencyName varchar(4000),TelFieldName nvarchar(4000),)
insert #tbl
select C.Id,C.Name,isnull(C.MainBal0,0),C.AccNo,CurrencyId,'''' CurrencyName,'+dbo.GetSubAccTelFieldName(@LinkFile)+'
from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(4000))+','+cast(@UserName as nvarchar(4000))+')T 
left join '+@TableName+' C on(C.Id=T.Id)
where (C.AccNo='''+cast(@MainAccNo as nvarchar(4000))+''' or '''+cast(@MainAccNo as nvarchar(4000))+'''='''')

create table #Fn (MyMainAccNo nvarchar(4000),MySubAccNo bigint,Db float,Cr float)
insert #Fn
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('''',0,''1900-1-1'','''+cast(@DayDate as varchar(4000))+''',0,0,0) 
group by MyMainAccNo,MySubAccNo



select Id,Name,
isnull(MainBal0,0)+((case when '+cast(@MotionType as nvarchar(10))+'=1 then -1. else 1. end)*(isnull(Fn.Db,0)-isnull(Fn.Cr,0)))MainBal0,
--dbo.Bal0(AccNo,Id,'''+cast(@DayDate as varchar(4000))+''',0,0,0) MainBal0,
0 Exchange,
0 Bal0,
CurrencyId,'''' CurrencyName,TelFieldName,
dbo.GetMainAccNoMotionType(AccNo,Id) MotionType,
'+cast(@MotionType as nvarchar(4000))+' MainMotionType,
AccNo,dbo.GetAccName(AccNo)
from #tbl C
left join #Fn Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
where (C.AccNo='''+cast(@MainAccNo as nvarchar(4000))+''' or '''+cast(@MainAccNo as nvarchar(4000))+'''='''')
and Id in(select T.Id from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(4000))+','+cast(@UserName as nvarchar(4000))+')T)
Order by Id

drop table #tbl
drop table #Fn
'
create table #tblAll(Id bigint,Name varchar(4000),MainBal0 float,Exchange float,Bal0 float,CurrencyId bigint,CurrencyName varchar(4000),TelFieldName nvarchar(4000),MotionType int,MainMotionType int,MainAccNo nvarchar(4000),MainAccName nvarchar(4000))
insert #tblAll
exec(@str)
print @str

update T 
set Exchange=dbo.GetCurrencyExchange(T.Id,@LinkFile,Curr.Id,0,@DayDate),
CurrencyName=Curr.Name
from #tblAll T
left join Currencies Curr on(T.CurrencyId=Curr.Id)

update #tblAll
set MainBal0=round(MainBal0,2)

update #tblAll
set Bal0=round(MainBal0*Exchange,2)


declare @InvoiceNo bigint
select @InvoiceNo=isnull(max(InvoiceNo),0) from Entry
where EntryTypeId=@EntryTypeId

insert [EntryDt](InvoiceNo,[Debit],[Credit],[MainAccNo],[SubAccNo],[CostCenterId],[Notes],[DocNo],[UserName],[MyGetDate],
[MainDebit],[MainCredit],[CostTypeId],[PurchaseAccNo],[ImportMessageId],[StoreId],[StoreInvoiceNo],
[EntryTypeId],[AnalysisId],[CostCenterSubId],[CurrencyId],[Exchange],[IsDocumented],[IsNotDocumented] )
SELECT @InvoiceNo+row_number()over(order by Id),
0 [Debit],MainBal0[Credit],MainAccNo,Id,0,''[Notes],''[DocNo],''[UserName],getdate()[MyGetDate],
0 [MainDebit],MainBal0[MainCredit],0 [CostTypeId],0 [PurchaseAccNo],0 [ImportMessageId],0 [StoreId],0 [StoreInvoiceNo],
@EntryTypeId,0 [AnalysisId],0 [CostCenterSubId],1[CurrencyId],1[Exchange],0 [IsDocumented],0 [IsNotDocumented] 
from #tblAll
where MainBal0<>0 and MainBal0 between -@Amount and @Amount

drop table #tblAll

insert [EntryDt](invoiceno,[Credit],[Debit],[MainAccNo],[SubAccNo],[CostCenterId],[Notes],[DocNo],[UserName],[MyGetDate],
[MainCredit],[MainDebit],[CostTypeId],[PurchaseAccNo],[ImportMessageId],[StoreId],[StoreInvoiceNo],
[EntryTypeId],[AnalysisId],[CostCenterSubId],[CurrencyId],[Exchange],[IsDocumented],[IsNotDocumented] )
select invoiceno,[Debit],[Credit],3302,59,[CostCenterId],[Notes],[DocNo],[UserName],[MyGetDate],
[MainDebit],[MainCredit],[CostTypeId],[PurchaseAccNo],[ImportMessageId],[StoreId],[StoreInvoiceNo],
[EntryTypeId],[AnalysisId],[CostCenterSubId],[CurrencyId],[Exchange],[IsDocumented],[IsNotDocumented] 
from [EntryDt]
where [EntryTypeId]=@EntryTypeId
and invoiceno>@InvoiceNo


insert [Entry]([InvoiceNo],[DayDate],[Notes],[UserName],[MyGetDate],[Exchange],[CurrencyId],[EntryTypeId]
,[InsertDate],[InsertUser],[IsPosted])
SELECT distinct [InvoiceNo],@DayDate,''[Notes],1[UserName],@DayDate[MyGetDate],1[Exchange],1[CurrencyId],
[EntryTypeId],@DayDate[InsertDate],1[InsertUser],0[IsPosted]
 from [EntryDt]
where [EntryTypeId]=@EntryTypeId
and invoiceno>@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[CloseShift]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CloseShift]
--with encryption
as

declare @MaxShift bigint,@MinShift bigint,@CurrentShift bigint,@i bigint
select @MaxShift=isnull((select Max(Id) from Shifts),0),
@MinShift=isnull((select Min(Id) from Shifts),0),
@i=0


select top 1 @CurrentShift=CurrentShift from Statics

if @CurrentShift=@MaxShift
select @CurrentShift=@MinShift,@i=1
else
select @CurrentShift=(select Min(Id) from Shifts where Id>@CurrentShift)

update Statics set
CurrentDate+=@i,
CurrentShift=@CurrentShift
GO
/****** Object:  StoredProcedure [dbo].[CloseShiftForEveryStore]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CloseShiftForEveryStore]
@StoreId bigint
--with encryption
as

declare @MaxShift bigint,@MinShift bigint,@CurrentShift bigint,@i bigint
select @MaxShift=isnull((select Max(Id) from Shifts),0),
@MinShift=isnull((select Min(Id) from Shifts),0),
@i=0


select top 1 @CurrentShift=CurrentShift from Stores where Id=@StoreId

if @CurrentShift=@MaxShift
select @CurrentShift=@MinShift,@i=1
else
select @CurrentShift=(select Min(Id) from Shifts where Id>@CurrentShift)

update Stores set
CurrentDate+=@i,
CurrentShift=@CurrentShift
where Id=@StoreId
GO
/****** Object:  StoredProcedure [dbo].[Clr]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Clr]
as  
select 'Delete ['+Name+']' from sys.tables
where name not in('Accusations','AgeTypes','Branches','Comes','Employees','ExpertsFollowUp2Flags','ExpertsFollowUp3Flags','ExpertsFollowUpFlags','Gender','LastAlter','LastVersion','LinkFile','Names','NLevels','PCs','Statics','Types','MyType1','MyType2','SummerMonthTypes','InvoicesFlags')
GO
/****** Object:  StoredProcedure [dbo].[CostCenterMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CostCenterMotion]
(
@CostCenterId bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as


exec GenerateCurrencyExchangeByDateTemp @FromDate,@ToDate


declare @MotionType bigint=0
declare @Db float=0,@Cr float=0
if @MotionType=0 select @Db=1. 
if @MotionType=1 select @Cr=1.

declare @Bal0 float
select @Bal0=isnull(SUM(DbLocal),0)-isnull(SUM(CrLocal),0)
from dbo.Fn_AllEntry('',0,'1900-01-01',@FromDate-1,0,0,1)
where CostCenterId=@CostCenterId

select * from 
(

select 0 MyFlag,@MotionType MotionType,0 InvoiceNo,@FromDate-1 DayDate,
(case when (@Bal0>0 and @Db=1) or (@Bal0<0 and @Cr=1) then abs(@Bal0) else 0 end) Db,
(case when (@Bal0>0 and @Cr=1) or (@Bal0<0 and @Db=1) then abs(@Bal0) else 0 end) Cr,
0 Cash,'-' SheekNo,'' SheekPerson,null SheekDate,'* ' Notes,'رصيد أول المدة' 'Rem',
'-' MainAccNo,'-' MainAccName,'-' SubAccNo,'-' SubAccName

--==========================================================================================
union all


select 
MyFlag,@MotionType MotionType,InvoiceNo,DayDate,
DbLocal,CrLocal,
Cash,SheekNo,SheekPerson,SheekDate,Notes,Rem,
MainAccNo,dbo.GetMainAccName(MainAccNo),SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo)
from dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,1)
where CostCenterId=@CostCenterId

)Tbl
where MyFlag=0 or not(Cr=0 and Db=0)

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[CreateCaseOnline]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CreateCaseOnline]
@Name nvarchar(100),
@HomePhone nvarchar(100),
@Mobile nvarchar(100),
@EnName nvarchar(100),
@Email nvarchar(100)
--with encryption
as

declare @Id bigint=0

if not exists(select Id from Cases where Name=@Name)
begin
	select @Id =isnull((select Max(Id) from Cases),0)+1
	
	Insert into Cases
	(UserName,MyGetDate,Id,Name,SSN,Address,DateOfBirth,JobId,Notes,Manager,BankAccount,HomePhone,Mobile,Password,
	EnName,mm,GeneralManager,HasAttendance,Accountant,Board,Cashier,Waiter,Deliveryman,Occupation,MenstrualH,ObstetricH,
	FamilyH,HusbandName,HusbandAge,HusbandOccupation,Email,DateOfBirthCount,MarriageDate,MarriageDateCount)
	Values
	('-1',GetDate(),@Id,@Name, '', '','1900-1-1', 0, '** Online Reservation **', '0', '', @HomePhone,@Mobile,'P4Wm21jrfgydPUddQBSeMg==',
	@EnName, '0', '0', '0', '0', '0', '0', '0', '0', '','', '',
	'', '', '', '',@Email, '', '1900-1-1', '0')

end

select @Id
GO
/****** Object:  StoredProcedure [dbo].[CreateCasesHistoryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CreateCasesHistoryAll]
@InvoiceNo bigint,
@FromDate datetime,
@ToDate datetime
as

if @InvoiceNo=0 
	select @InvoiceNo=isnull((select max(InvoiceNo) from CasesHistoryAll),0)+1

delete CasesHistoryAll where InvoiceNo=@InvoiceNo
insert CasesHistoryAll
select distinct @InvoiceNo InvoiceNo,Tbl.* ,
	T10.Value,
	T10.Discount,
	T10.Payed,
	0,
	T10.Value-T10.Discount-T10.Payed,
T10.SurgeonId,dbo.GetEmpArName(T10.SurgeonId)T5_SurgeonName,
T10.SurgeonId2,dbo.GetEmpArName(T10.SurgeonId2)T10_SurgeonName2,
T10.SurgeonId3,dbo.GetEmpArName(T10.SurgeonId3)T10_SurgeonName3,
T10.AnesthetistId,dbo.GetEmpArName(T10.AnesthetistId)T10_AnesthetistName,
OperationTypeName,
T10.RoomName,@FromDate,@ToDate
from(
	select T1.CaseId,T2.Name CaseName,T1.TypeId,T1.MyGetDate EntryDate,
	dbo.GetCaseExitGetDate(T1.CaseId,T1.MyGetDate) ExitGetDate,
	T3.Name CaseTypeName
	from (
				select CaseId,MIN(Line)Line
				from CasesDetails
				where CAST(MyGetDate as date) between @FromDate and @ToDate
				group by CaseId
	) T0
	left join CasesDetails T1 on(T0.Line=T1.Line)
	left join Cases T2 on(T1.CaseId=T2.Id)
	left join CaseTypes T3 on(T1.TypeId=T3.Id)
	/*
	left join (
				select CaseId,SUM(Total)Total,SUM(Discount)Discount
				from CaseInvoices
				where DayDate between @FromDate and @ToDate
				group by CaseId
	) T8 on(T1.CaseId=T8.CaseId)
	left join (
				select LinkFile,SubAccNo,SUM(Value)Value
				from(
					select LinkFile,SubAccNo,Value
					from BankCash_G
					where DayDate between @FromDate and @ToDate
					
					union All
					
					select 13,CaseId,Payed from Reservations
					where cast(ReservationDate as date) between @FromDate and @ToDate
				)T
				group by LinkFile,SubAccNo
	) T9 on(T1.CaseId=T9.SubAccNo and T9.LinkFile=13)
	*/
	where CAST(T1.MyGetDate as date) between @FromDate and @ToDate
)Tbl
left join (
			select CaseId,SurgeonId,0 SurgeonId2,0 SurgeonId3,AnesthetistId,
			dbo.GetOperationTypesName(OperationType) OperationTypeName,
			dbo.GetRoomName(RoomId) RoomName,
			0 Value,0 Discount,0 Payed
			from RoomsData T6
			where CAST(DayDate as date) between @FromDate and @ToDate

			union all
			
			select CaseId,SurgeonId,SurgeonId2,SurgeonId3,AnesthetistId,
			dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3)+' - ' OperationTypeName,
			'-' RoomName,
			0,0,0
			from ReservationsOperations T5
			where CAST(ReservationDate as date) between @FromDate and @ToDate
			
			union all
			
			select CaseId,EmpId,0,0,0,
			dbo.GetVisitingTypesName(VisitingType),
			'-',
			Value,0,Payed
			from Reservations T4
			where CAST(ReservationDate as date) between @FromDate and @ToDate
			
			union all
			
			
			select CaseId,0,0,0,0,'فاتورة رقم '+cast(InvoiceNo as nvarchar(100)),
			'-',
			--SUM(Total)Total,SUM(Discount)Discount,SUM(/*Bal*/
			Total,Discount,/*Bal*/
			(select SUM(Value) from BankCash_G where Flag=1 and LinkFile=13 and SubAccNo=CaseId and Daydate between FromDate and ToDate)Bal
			from CaseInvoices
			where DayDate between @FromDate and @ToDate
			--group by CaseId,InvoiceNo
			
			
			)T10 on(Tbl.CaseId=T10.CaseId)
order by CaseId


select @InvoiceNo InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[CreateNewReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CreateNewReservations]
@YEAR int,
@SerialId bigint,
@UserName int,
@Value float,
@Payed float,
@Remaining float,
@Notes nvarchar(1000)
--with encryption
as

declare @EmpId int,@DayDate datetime,@ReservId bigint,@NewReservId bigint
select @EmpId=EmpId,
@DayDate=DayDate,
@ReservId=ReservId,
@NewReservId=(select MAX(ReservId)+1 from Reservations R where R.DayDate=T.DayDate and R.EmpId=T.EmpId)
from Reservations T
where YEAR(ReservationDate)=@YEAR
and SerialId=@SerialId


insert Reservations(EmpId,DayDate,ReservId,Time,CaseId,CaseName,RefereId,CompanyId,MyNotes,VisitingType,Value,Payed,Remaining,SerialId,UserName,MyGetDate,ReservationDate,Done,Canceled,Returned,RemainingDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,CanceledDate,EmpIdReturned,ReturnedDate,CurrentShift,InsertedDate,IsClosed)
select EmpId,DayDate,@NewReservId,
Time,CaseId,CaseName,RefereId,CompanyId,@Notes MyNotes,VisitingType,@Value,@Payed,@Remaining,SerialId,@UserName,GETDATE() MyGetDate,
GETDATE() ReservationDate,0 Done,0 Canceled,0 Returned,'1900-1-1' RemainingDate,@UserName EmpIdReservation,0 EmpIdRemaining,
0 EmpIdCanceled,'1900-1-1' CanceledDate,
0 EmpIdReturned,'1900-1-1' ReturnedDate,0 CurrentShift,GETDATE(),0 IsClosed
from Reservations T
where @EmpId=EmpId
and @DayDate=DayDate
and @ReservId=ReservId

exec updateReservationsSerialIdCo0 0,@EmpId,@DayDate,@NewReservId 

select ReservId,SerialId
from Reservations T
where @EmpId=EmpId
and @DayDate=DayDate
and @NewReservId=ReservId
GO
/****** Object:  StoredProcedure [dbo].[CreateReservationOnline]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CreateReservationOnline]
@DayDate datetime,
@CaseId bigint,
@VisitingTypeId int

--with encryption
as

declare @EmpId int=1

delete Reservations where DayDate=@DayDate and EmpId=@EmpId and CaseId=@CaseId


declare @ReservId int=isnull((select MAX(ReservId) from Reservations where DayDate=@DayDate and EmpId=@EmpId),0)+1

declare @Value float=(select Price from VisitingTypeEmployees where EmpId=@EmpId and VisitingTypeId=@VisitingTypeId)

declare @CaseName nvarchar(100)=dbo.GetCaseArName(@CaseId)

insert Reservations(
EmpId,DayDate,ReservId,Time,CaseId,CaseName,
RefereId,CompanyId,MyNotes,VisitingType,
Value,Payed,Remaining,SerialId,UserName,MyGetDate,
ReservationDate,Done,Canceled,Returned,RemainingDate,
EmpIdReservation,EmpIdRemaining,EmpIdCanceled,CanceledDate,
EmpIdReturned,ReturnedDate,CurrentShift,InsertedDate,IsClosed)
select 
@EmpId,@DayDate,@ReservId,'12:00 PM',@CaseId,@CaseName,
'0','0','** Online **',@VisitingTypeId,
@Value,0,@Value,'','-1',GetDate(),
GetDate(),0,0,0,'1900/01/01',-1,0,0,'1900/01/01',
0,'1900/01/01','',GETDATE(),'0'



select cast(((hh*60+Duration*(@ReservId-1))-((hh*60+Duration*(@ReservId-1)) % 60))/60 as nvarchar(100))+':'+CAST(dbo.FillZero((hh*60+Duration*(@ReservId-1)) % 60,2) as nvarchar(100))
from employees
where Id=@EmpId
GO
/****** Object:  StoredProcedure [dbo].[CreateResetData]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CreateResetData]
@DayDate datetime,
@Flag int,
@UserName int
--with encryption
as

begin tran

insert ResetData(DayDate,Flag,Id,MyGetDate,UserName)
select @DayDate,@Flag,
(select isnull(max(Id),0)+1 from ResetData where DayDate=@DayDate and Flag=@Flag),
GetDate(),@UserName

select max(Id)Id from ResetData where DayDate=@DayDate and Flag=@Flag

commit
GO
/****** Object:  StoredProcedure [dbo].[CT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CT](@TableName as nvarchar(1000))
--with encryption
as

declare @SQL nvarchar(1000)='
CREATE TABLE '+@TableName+'(
	[Id] [int] NOT NULL,
	[Name] [nvarchar](100) NULL,
	[UserName] [int] NULL,
	[MyGetDate] [datetime] NULL,
 CONSTRAINT [PK_'+@TableName+'] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)
)
'

Print @sql

exec (@sql)
GO
/****** Object:  StoredProcedure [dbo].[CTR]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CTR](@TableName as nvarchar(1000))
--with encryption
as

declare @SQL nvarchar(1000)='
CREATE trigger TR_'+@TableName+' on '+@TableName+'
FOR insert
as
update '+@TableName+' set InsertUser=Username where InsertUser is null
'

Print @sql

exec (@sql)
GO
/****** Object:  StoredProcedure [dbo].[CTSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CTSub](@TableName as nvarchar(1000),@MainGroupName as nvarchar(1000))
--with encryption
as

declare @SQL nvarchar(1000)='
CREATE TABLE '+@TableName+'(
	'+@MainGroupName+' [int] NOT NULL,
	[Id] [int] NOT NULL,
	[Name] [nvarchar](100) NULL,
	[UserName] [int] NULL,
	[MyGetDate] [datetime] NULL,
 CONSTRAINT [PK_'+@TableName+'] PRIMARY KEY CLUSTERED 
(
	'+@MainGroupName+',[Id] ASC
)
)
'

Print @sql

exec (@sql)
GO
/****** Object:  StoredProcedure [dbo].[CTSub2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CTSub2](@TableName as nvarchar(1000),@MainGroupName as nvarchar(1000),@MainTypeName as nvarchar(1000))
--with encryption
as

declare @SQL nvarchar(1000)='
CREATE TABLE '+@TableName+'(
	'+@MainGroupName+' [int] NOT NULL,
	'+@MainTypeName+' [int] NOT NULL,
	[Id] [int] NOT NULL,
	[Name] [nvarchar](100) NULL,
	[UserName] [int] NULL,
	[MyGetDate] [datetime] NULL,
 CONSTRAINT [PK_'+@TableName+'] PRIMARY KEY CLUSTERED 
(
	'+@MainGroupName+','+@MainTypeName+',[Id] ASC
)
)
'

Print @sql

exec (@sql)
GO
/****** Object:  StoredProcedure [dbo].[CurrencyExchange]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CurrencyExchange]
@CurrencyId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as


select Case when SUM(MainValue)=0 then 0 else SUM(Value)/SUM(MainValue) end
from(

select 
MainValue*(Case when Flag in(1,3) then 1. else -1 end) MainValue,
Value*(Case when Flag in(1,3) then 1. else -1 end) Value
from BankCash_G2
where 
(dbo.GetSavesApplyCurrencyCycle(BankId)=1 and Flag in(1,2) and dbo.GetSafeCurrencyId(BankId)=@CurrencyId) or
(dbo.GetBanksApplyCurrencyCycle(BankId)=1 and Flag in(3,4) and dbo.GetBankCurrencyId(BankId)=@CurrencyId)

union all

select 
Qty*(Case when Flag=1 then 1. else -1 end),
Value*(Case when Flag=1 then 1. else -1 end)
from BankCash4 
where dbo.GetSavesApplyCurrencyCycle(BankId)=1
and dbo.GetSafeCurrencyId(BankId)=@CurrencyId

union all

select 
MainBal0,
Bal0
from Saves
where dbo.GetSavesApplyCurrencyCycle(Id)=1
and dbo.GetSafeCurrencyId(Id)=@CurrencyId

union all

select 
MainBal0,
Bal0
from Banks
where dbo.GetSavesApplyCurrencyCycle(Id)=1
and dbo.GetSafeCurrencyId(Id)=@CurrencyId


)tbl
GO
/****** Object:  StoredProcedure [dbo].[CurrencyExchangeOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CurrencyExchangeOLD]
@CurrencyId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as


select Case when SUM(MainValue)=0 then 0 else SUM(Value)/SUM(MainValue) end
from(

select 
MainValue*(Case when Flag in(1,3) then 1. else -1 end) MainValue,
Value*(Case when Flag in(1,3) then 1. else -1 end) Value
from BankCash_G2
where 
(dbo.GetSavesApplyCurrencyCycle(BankId)=1 and Flag in(1,2) and dbo.GetSafeCurrencyId(BankId)=@CurrencyId) or
(dbo.GetBanksApplyCurrencyCycle(BankId)=1 and Flag in(3,4) and dbo.GetBankCurrencyId(BankId)=@CurrencyId)

union all

select 
Qty*(Case when Flag=1 then 1. else -1 end),
Value*(Case when Flag=1 then 1. else -1 end)
from BankCash4 
where dbo.GetSavesApplyCurrencyCycle(BankId)=1
and dbo.GetSafeCurrencyId(BankId)=@CurrencyId

union all

select 
MainBal0,
Bal0
from Saves
where dbo.GetSavesApplyCurrencyCycle(Id)=1
and dbo.GetSafeCurrencyId(Id)=@CurrencyId

union all

select 
MainBal0,
Bal0
from Banks
where dbo.GetSavesApplyCurrencyCycle(Id)=1
and dbo.GetSafeCurrencyId(Id)=@CurrencyId


)tbl
GO
/****** Object:  StoredProcedure [dbo].[CustomersSearch]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CustomersSearch]
--with encryption
as
select cast(C.Id as nvarchar(100)),C.Name,C.NationalId,C.Tel,C.Mobile,C.Address,C.AccNo,Ch.Name AccName,
(case 
when C.Ban=1 then 'Red' 
when C.Ban2=1 then 'Green' 
when C.TempBal0=0 then 'Yellow'
else 'Azure' 
end) MyColor
from Customers C
left join chart Ch on(C.AccNo=Ch.Id)
GO
/****** Object:  StoredProcedure [dbo].[CustomersSearch_AZ]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[CustomersSearch_AZ]
--with encryption
as
select cast(C.Id as nvarchar(100)),C.Name,C.Person,C.Tel,C.Mobile,C.Address,C.AccNo,Ch.Name AccName,
(case 
when C.Ban=1 then 'Red' 
when C.TempBal0=0 then 'Yellow'
when C.Ban2=1 then 'Green' 
else 'Azure' 
end) MyColor
from Customers C
left join chart Ch on(C.AccNo=Ch.Id)
GO
/****** Object:  StoredProcedure [dbo].[EncreaseMaxSize]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[EncreaseMaxSize]
@max bigint=10000
--with encryption
as

declare @db_name nvarchar(1000)=db_name()
declare @file_name nvarchar(1000)=(select top 1 name from sys.database_files where type=0)
declare @SQL nvarchar(1000)

set @SQL='USE master
ALTER DATABASE ['+@db_name+'] MODIFY FILE(NAME = '+@file_name+',maxSIZE = '+cast(@max as nvarchar(100))+' MB)'
exec (@SQL)

set @file_name=(select top 1 name from sys.database_files where type=1)

set @SQL='USE master
ALTER DATABASE ['+@db_name+'] MODIFY FILE(NAME = '+@file_name+',maxSIZE = '+cast(@max as nvarchar(100))+' MB)'

exec (@SQL)
GO
/****** Object:  StoredProcedure [dbo].[Equalization]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Equalization]
(
@InvoiceNo int,
@StoreId int,
@InInvoiceNo int,
@OutInvoiceNo int
)
--with encryption
As

Delete From SalesMaster 
where StoreId = @StoreId 
and (
	(Flag = 2 and InvoiceNo = @InInvoiceNo)or
	(Flag = 4 and InvoiceNo = @OutInvoiceNo)
	)

Delete From SalesDetails
where StoreId = @StoreId 
and (
	(Flag = 2 and InvoiceNo = @InInvoiceNo)or
	(Flag = 4 and InvoiceNo = @OutInvoiceNo)
	)

If Exists
(
Select *
From InventoryDetails 
where InvoiceNo = @InvoiceNo
and StoreId = @StoreId 
and Deference > 0
)
Begin

Declare @Total float 

select @Total=isnull(SUM
(
(case D.UnitID when 0 then I.PurchasePrice when 1 then I.PurchasePriceSub when 2 then PurchasePriceSub2 else 0 end) * D.Deference
),0)
From InventoryDetails D
left join Items I on(D.ItemId = I.Id)
where D.InvoiceNo = @InvoiceNo and D.StoreId = @StoreId and D.Deference > 0


if @InInvoiceNo =0
Select @InInvoiceNo=Isnull(MAX(InvoiceNo),0) + 1 From SalesMaster where Flag = 2 and StoreId = @StoreId

INSERT INTO SalesMaster
(InventoryInvoiceNo,[Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[TableId],[TableSubId],[UserName],[IsClosed],[NoOfPersons],[MinPerPerson],[CancelMinPerPerson],[WithService],[WithTax],[ServiceValue],[Taxvalue],[PaymentType],[CashValue],[DiscountPerc],[DiscountValue],[ToId],[WaiterId],[MyGetDate],[Notes],[IsCashierPrinted],[Cashier],[DeliverymanId],[Total],[DocNo],[AccNo1],[Per1],[Val1],[AccNo2],[Per2],[Val2],[AccNo3],[Per3],[Val3],[AccNo4],[Per4],[Val4],[AccType1],[AccType2],[AccType3],[AccType4],[TotalAfterDiscount],[SaveId],[Temp],[IsEditing],[AccNo],[CurrencyId],[Shipping],[Freight],[CustomClearance],[OrderTypeId],[PaymentMethodId],[ShippingMethodId],[ContractTerms],[DeliveryDate],[VersionNo]
,ReservToId,Exchange,Perc,CaseInvoiceNo,PurchaseOrder,SalesTypeId,BankId,InsertDate,InsertUser,PriceListId,SubAccNo1,SubAccNo2,SubAccNo3,SubAccNo4,IsPosted,TotalCount,SphR,SphL,CylR,CylL,AxisR,AxisL,DoctorId,CostCenterId,CurrentShift,PrintUser,PrintDate,Temp2
)
SELECT @InvoiceNo,2,IM.[StoreId],@InInvoiceNo,IM.[DayDate],IM.[Shift],0,0,IM.[UserName],0,0,0,0,0,0,0,0,1,0,0,0,0,0,IM.[MyGetDate],'',0,0,0,@Total,IM.[DocNo],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,@Total,1,0,0,'',1,0,0,0,0,0,0,'',null,''
,0 ReservToId,1 Exchange,0 Perc,0 CaseInvoiceNo,0 PurchaseOrder,0 SalesTypeId,0 BankId,null InsertDate,0 InsertUser,0 PriceListId,0 SubAccNo1,0 SubAccNo2,0 SubAccNo3,0 SubAccNo4,0 IsPosted,
0 TotalCount,0 SphR,0 SphL,0 CylR,0 CylL,0 AxisR,0 AxisL,0 DoctorId,0 CostCenterId,0 CurrentShift,0 PrintUser,null PrintDate,0 Temp2
FROM InventoryMaster IM
where IM.InvoiceNo = @InvoiceNo and IM.StoreId = @StoreId

INSERT INTO SalesDetails
([Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[ItemId],[ItemName],[Qty],[Price],[QtySub],[PriceSub],[Value],[IsPrinted],[UserName],[MyGetDate],[UnitId],[UnitQty],[Barcode],[Color],[Size],[SalesPrice],[Cost],[Qty2],[FlagType],[SerialNo],[SalesInvoiceNo],[Qty3],[ReceivedQty]
,ItemDiscount,AvgCost,ItemDiscountPerc,IsDelivered,SalesManId,SD_Notes,ProductionOrderNo,ProductionOrderFlag,UnitsWeightId,PreQty,UnitsWeightQty,SalesPriceTypeId,Bonus,TotalBonus,Target,ExpDate,ExpireDate,SalesReturnStateId,SalesReturnStateReason,ItemSerialNo,ConsumptionQty,ConsumptionRemainingQty
)
SELECT 2,D.[StoreId],@InInvoiceNo,D.[DayDate],0,D.[ItemId],D.[ItemName],D.[Deference],
(case D.UnitID when 0 then I.PurchasePrice when 1 then I.PurchasePriceSub when 2 then I.PurchasePriceSub2 else 0 end),0,0,
(case D.UnitID when 0 then I.PurchasePrice when 1 then I.PurchasePriceSub when 2 then I.PurchasePriceSub2 else 0 end) * D.Deference 
,0,D.[UserName],D.[MyGetDate],D.[UnitId],
(case D.UnitID when 0 then 1 when 1 then I.UnitCount when 2 then I.UnitCount2 end)
,D.[Barcode],D.[Color],D.[Size],
(case D.UnitID when 0 then I.SalesPrice when 1 then I.SalesPriceSub when 2 then I.SalesPriceSub2 else 0 end)
,0,0,0,'','',0,0
,0 ItemDiscount,0 AvgCost,0 ItemDiscountPerc,0 IsDelivered,0 SalesManId,'' SD_Notes,'' ProductionOrderNo,0 ProductionOrderFlag,0 UnitsWeightId,0 PreQty,
0 UnitsWeightQty,0 SalesPriceTypeId,0 Bonus,0 TotalBonus,0 Target,null ExpDate,null ExpireDate,0 SalesReturnStateId,0 SalesReturnStateReason,0 ItemSerialNo,0 ConsumptionQty,0 ConsumptionRemainingQty
FROM InventoryDetails D
Left join Items I on(I.Id = ItemId)
where D.InvoiceNo = @InvoiceNo and D.StoreId = @StoreId and D.Deference > 0

end

If Exists
(
Select *
From InventoryDetails 
where InvoiceNo = @InvoiceNo
and StoreId = @StoreId 
and Deference < 0
)
Begin


select @Total=isnull(SUM
(
(case D.UnitID when 0 then I.PurchasePrice when 1 then I.PurchasePriceSub when 2 then PurchasePriceSub2 else 0 end) * (D.Deference * -1)
),0)
From InventoryDetails D
left join Items I on(D.ItemId = I.Id)
where D.InvoiceNo = @InvoiceNo and D.StoreId = @StoreId and D.Deference < 0


if @OutInvoiceNo=0
Select @OutInvoiceNo=Isnull(MAX(InvoiceNo),0) + 1 From SalesMaster where Flag = 4 and StoreId = @StoreId

INSERT INTO SalesMaster
(InventoryInvoiceNo,[Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[TableId],[TableSubId],[UserName],[IsClosed],[NoOfPersons],[MinPerPerson],[CancelMinPerPerson],[WithService],[WithTax],[ServiceValue],[Taxvalue],[PaymentType],[CashValue],[DiscountPerc],[DiscountValue],[ToId],[WaiterId],[MyGetDate],[Notes],[IsCashierPrinted],[Cashier],[DeliverymanId],[Total],[DocNo],[AccNo1],[Per1],[Val1],[AccNo2],[Per2],[Val2],[AccNo3],[Per3],[Val3],[AccNo4],[Per4],[Val4],[AccType1],[AccType2],[AccType3],[AccType4],[TotalAfterDiscount],[SaveId],[Temp],[IsEditing],[AccNo],[CurrencyId],[Shipping],[Freight],[CustomClearance],[OrderTypeId],[PaymentMethodId],[ShippingMethodId],[ContractTerms],[DeliveryDate],[VersionNo]
,ReservToId,Exchange,Perc,CaseInvoiceNo,PurchaseOrder,SalesTypeId,BankId,InsertDate,InsertUser,PriceListId,SubAccNo1,SubAccNo2,SubAccNo3,SubAccNo4,IsPosted,TotalCount,SphR,SphL,CylR,CylL,AxisR,AxisL,DoctorId,CostCenterId,CurrentShift,PrintUser,PrintDate,Temp2
)
SELECT @InvoiceNo,4,IM.[StoreId],@OutInvoiceNo,IM.[DayDate],IM.[Shift],0,0,IM.[UserName],0,0,0,0,0,0,0,0,1,0,0,0,0,0,IM.[MyGetDate],'',0,0,0,@Total,IM.[DocNo],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,@Total,1,0,0,'',1,0,0,0,0,0,0,'',null,''
,0 ReservToId,1 Exchange,0 Perc,0 CaseInvoiceNo,0 PurchaseOrder,0 SalesTypeId,0 BankId,null InsertDate,0 InsertUser,0 PriceListId,0 SubAccNo1,0 SubAccNo2,0 SubAccNo3,0 SubAccNo4,0 IsPosted,
0 TotalCount,0 SphR,0 SphL,0 CylR,0 CylL,0 AxisR,0 AxisL,0 DoctorId,0 CostCenterId,0 CurrentShift,0 PrintUser,null PrintDate,0 Temp2
FROM InventoryMaster IM
where IM.InvoiceNo = @InvoiceNo and IM.StoreId = @StoreId

INSERT INTO SalesDetails
([Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[ItemId],[ItemName],[Qty],[Price],[QtySub],[PriceSub],[Value],[IsPrinted],[UserName],[MyGetDate],[UnitId],[UnitQty],[Barcode],[Color],[Size],[SalesPrice],[Cost],[Qty2],[FlagType],[SerialNo],[SalesInvoiceNo],[Qty3],[ReceivedQty]
,ItemDiscount,AvgCost,ItemDiscountPerc,IsDelivered,SalesManId,SD_Notes,ProductionOrderNo,ProductionOrderFlag,UnitsWeightId,PreQty,UnitsWeightQty,SalesPriceTypeId,Bonus,TotalBonus,Target,ExpDate,ExpireDate,SalesReturnStateId,SalesReturnStateReason,ItemSerialNo,ConsumptionQty,ConsumptionRemainingQty
)
SELECT 4,D.[StoreId],@OutInvoiceNo,D.[DayDate],0,D.[ItemId],D.[ItemName],(D.[Deference] * -1),
(case D.UnitID when 0 then I.PurchasePrice when 1 then I.PurchasePriceSub when 2 then I.PurchasePriceSub2 else 0 end),0,0,
(case D.UnitID when 0 then I.PurchasePrice when 1 then I.PurchasePriceSub when 2 then I.PurchasePriceSub2 else 0 end) * (D.Deference * -1) 
,0,D.[UserName],D.[MyGetDate],D.[UnitId],
(case D.UnitID when 0 then 1 when 1 then I.UnitCount when 2 then I.UnitCount2 end)
,D.[Barcode],D.[Color],D.[Size],
(case D.UnitID when 0 then I.SalesPrice when 1 then I.SalesPriceSub when 2 then I.SalesPriceSub2 else 0 end)
,0,0,0,'','',0,0
,0 ItemDiscount,0 AvgCost,0 ItemDiscountPerc,0 IsDelivered,0 SalesManId,'' SD_Notes,'' ProductionOrderNo,0 ProductionOrderFlag,0 UnitsWeightId,0 PreQty,
0 UnitsWeightQty,0 SalesPriceTypeId,0 Bonus,0 TotalBonus,0 Target,null ExpDate,null ExpireDate,0 SalesReturnStateId,0 SalesReturnStateReason,0 ItemSerialNo,0 ConsumptionQty,0 ConsumptionRemainingQty
FROM InventoryDetails D
Left join Items I on(I.Id = ItemId)
where D.InvoiceNo = @InvoiceNo and D.StoreId = @StoreId and D.Deference < 0

End




UPDATE InventoryMaster
 SET [InInvoiceNo] = @InInvoiceNo,[OutInvoiceNo] =@OutInvoiceNo
where InvoiceNo = @InvoiceNo and StoreId = @StoreId
GO
/****** Object:  StoredProcedure [dbo].[Exec_Backup]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Exec_Backup](@Bath as nvarchar(1000)='E:\Projects\MyDotNetprojects\Resturant\Resturant')
--with encryption
as

declare @db_name nvarchar(1000)=db_name()

exec ('alter database ['+@db_name+'] set recovery simple
dbcc shrinkdatabase (['+@db_name+'])
--alter database ['+@db_name+'] set recovery full')

declare @SQL nvarchar(1000)=ltrim(rtrim(@Bath))+'\'+@db_name+'_'+
cast(Year(getdate()) as nvarchar)+'_'+
dbo.FillZero(cast(month(getdate()) as nvarchar),2)+'_'+
dbo.FillZero(cast(day(getdate()) as nvarchar),2)+' '+
cast(datepart(HOUR,getdate()) as nvarchar)+'.'+
cast(datepart(MINUTE,getdate()) as nvarchar)+'.'+
cast(datepart(SECOND,getdate()) as nvarchar)+'.bak'

exec('BACKUP DATABASE ['+@db_name+'] TO DISK='''+@sql+''' ')
GO
/****** Object:  StoredProcedure [dbo].[executeSql]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[executeSql](@sql varchar(1000))
--with encryption
as
exec @sql
GO
/****** Object:  StoredProcedure [dbo].[ExitCase]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ExitCase]
@UserName int,
@RoomId int,
@Id int
as

update RoomsData 
set IsCurrent=0,ExitDate=getdate(),ExitUserName=@UserName
where RoomId=@RoomId 
and Id=@Id 
and IsCurrent=1 

update RoomsDataPayments 
set IsCurrent=0,ExitDate=getdate(),ExitUserName=@UserName
where RoomId=@RoomId 
and Id=@Id 
and IsCurrent=1 


update ReservationCbo0Rooms 
set IsCurrent=0 
where RoomId=@RoomId 
and ReservId=@Id 
and IsCurrent=1 


update CaseAttachments2Rooms 
set IsCurrent=0 
where RoomId=@RoomId 
and ReservId=@Id 
and IsCurrent=1
GO
/****** Object:  StoredProcedure [dbo].[GenerateCurrencyExchangeByDateTemp]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateCurrencyExchangeByDateTemp]
@FromDate datetime,
@ToDate datetime
--with encryption
as

delete CurrencyExchangeByDateTemp
insert CurrencyExchangeByDateTemp select Id,'1900-1-1',dbo.GetCurrencyExchange(0,0,Id,0,'1900-1-1') from Currencies
insert CurrencyExchangeByDateTemp select Id,@FromDate-1,dbo.GetCurrencyExchange(0,0,Id,0,@FromDate-1) from Currencies where @FromDate is not null
insert CurrencyExchangeByDateTemp select Id,@ToDate,dbo.GetCurrencyExchange(0,0,Id,0,@ToDate) from Currencies
GO
/****** Object:  StoredProcedure [dbo].[GenerateDeletedStatics]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateDeletedStatics]
@UserDelete  [int] 
as


insert DeletedStatics
select GETDATE(),@UserDelete,null,'Update',* from Statics
GO
/****** Object:  StoredProcedure [dbo].[GenerateFIFO]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateFIFO]
@TableIndex int,
@TableName nvarchar(100),
@StoreId bigint,
@Flag int,
@InvoiceNo bigint,
@DayDate datetime,
@ItemId bigint,
@MainPrice float,
@Qty float,
@TblLine int
--with encryption

as

set nocount on
--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo


declare @MyTbl table (MainFlag int,MainInvoiceNo bigint,MainTableIndex int,MainTableName nvarchar(100),MainLine bigint,Price float,PriceDate datetime,Qty float,Line bigint identity(1,1))
insert @MyTbl 
select MainFlag,MainInvoiceNo,MainTableIndex,MainTableName,MainLine,round(Price,14),PriceDate,SUM(Qty)
from FIFO
where StoreId=@StoreId
and ItemId=@ItemId
and DayDate<=@DayDate
group by MainFlag,MainInvoiceNo,MainTableIndex,MainTableName,MainLine,round(Price,14),PriceDate
having SUM(Qty)>0
order by PriceDate,MainTableIndex,MainFlag,MainInvoiceNo,MainTableName,MainLine,round(Price,14)


if exists(select SUM(Qty) from @MyTbl having SUM(Qty)>=-@Qty)
begin
	declare @Line bigint,@LastQty float
	select @Line=isnull(min(Line),0)
	from
		(
			select T1.Line,T1.Price,T1.Qty,T1.PriceDate,sum(T2.Qty)SumQty
			from @MyTbl T1
			left join @MyTbl T2 on(T1.Line>=T2.Line)
			group by T1.Line,T1.Price,T1.Qty,T1.PriceDate
			having sum(T2.Qty)>=-@Qty
		)Tbl
	
	select @LastQty=-@Qty-isnull(SUM(Qty),0)
	from @MyTbl
	where Line<@Line
	
	insert FIFO(TableIndex,TableName,StoreId,Flag,InvoiceNo,DayDate,ItemId,MainPrice,Price,
	Qty,TblLine,PriceDate,MainFlag,MainInvoiceNo,MainTableName,MainTableIndex,MainLine)
	select @TableIndex,@TableName,@StoreId,@Flag,@InvoiceNo,@DayDate,@ItemId,@MainPrice,T.Price,
	-(case when T.Line=@Line then @LastQty else T.Qty end),@TblLine,T.PriceDate,T.MainFlag,
	T.MainInvoiceNo,T.MainTableName,T.MainTableIndex,T.MainLine
	from @MyTbl T
	where T.Line<=@Line
	
	select 1
end
else
	select 0
GO
/****** Object:  StoredProcedure [dbo].[GenerateInvoice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateInvoice]
(
@StoreId bigint,
@Flag bigint,
@InvoiceNo bigint,
@TableId bigint,
@TableSubId bigint
)
--with encryption
as

declare @NewInvoiceNo bigint
select @NewInvoiceNo=max(InvoiceNo)+1 from SalesMaster where StoreId=@StoreId and Flag=@Flag
select @NewInvoiceNo=1 where @InvoiceNo is null

insert SalesMaster(Flag,StoreId,InvoiceNo,DayDate,Shift,TableId,TableSubId,UserName,IsClosed,NoOfPersons,MinPerPerson,CancelMinPerPerson,WithService,WithTax,ServiceValue,Taxvalue,PaymentType,CashValue,DiscountPerc,DiscountValue,ToId,WaiterId,MyGetDate,OpennedDate,Notes,ClosedDate,IsCashierPrinted,Cashier)
SELECT Flag,StoreId,@NewInvoiceNo,DayDate,Shift,@TableId,@TableSubId,UserName,IsClosed,NoOfPersons,MinPerPerson
,CancelMinPerPerson,WithService,WithTax,ServiceValue,Taxvalue,PaymentType,CashValue,DiscountPerc,DiscountValue
,ToId,WaiterId,MyGetDate,OpennedDate,Notes,ClosedDate,IsCashierPrinted,Cashier 
FROM SalesMaster
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

select @NewInvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GenerateProductionOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateProductionOrder]
@Flag int,
@StoreId nvarchar(100),
@InvoiceNo int,
@NewQty float,
@EmpId1 int,
@EmpId2 int,
@EmpId3 int,
@EmpId4 int,
@Notes nvarchar(1000)
--with encryption
as

--declare @NewFlag bigint=@Flag+10
declare @NewFlag bigint=0
if @Flag<10
	select @NewFlag=@Flag+30
else
	select @NewFlag=@Flag+10

declare @NewInvoiceNo bigint=(select isnull(MAX(InvoiceNo),0)+1 from ProductionItemCollectionMotionMaster where Flag =@NewFlag and StoreId =@StoreId )

insert ProductionItemCollectionMotionMaster(Flag,StoreId,InvoiceNo,DayDate,UserName,MyGetDate,Notes,DocNo,ItemId,MainQty,MotionTypeId
,Temp,Qty,EmpId1,EmpId2,EmpId3,EmpId4,Code1,Code2,EntryUser,EntryDate,SystemUser,UpdateDate,NewInvoiceNo,OreStoreId,MachineId,IsType1,IsType2)
select @NewFlag,StoreId,@NewInvoiceNo ,CAST(GETDATE() as date),UserName,MyGetDate,@Notes,DocNo,ItemId,MainQty,MotionTypeId
,Temp,@NewQty,
(case when @EmpId1=0 then EmpId1 else @EmpId1 end),
(case when @EmpId2=0 then EmpId2 else @EmpId2 end),
(case when @EmpId3=0 then EmpId3 else @EmpId3 end),
(case when @EmpId4=0 then EmpId4 else @EmpId4 end),
Code1,Code2,EntryUser,EntryDate,SystemUser,UpdateDate,NewInvoiceNo,OreStoreId,MachineId,IsType1,IsType2
from ProductionItemCollectionMotionMaster
where Flag =@Flag 
and StoreId =@StoreId 
and InvoiceNo =@InvoiceNo 


insert ProductionItemCollectionMotionDetailsTo(StoreId,InvoiceNo,Flag,DayDate,MainItemId,ItemId,ItemName,Qty,TotalQty,Price,Value,UserName,MyGetDate,UnitId,UnitQty,Barcode,SerialNo,AvgCost)
select StoreId,@NewInvoiceNo,@NewFlag,DayDate,MainItemId,ItemId,ItemName,Qty,@NewQty*Qty,Price,Value,UserName,GetDate(),UnitId,UnitQty,Barcode,SerialNo,AvgCost
from ProductionItemCollectionMotionDetailsTo
where Flag =@Flag 
and StoreId =@StoreId 
and InvoiceNo =@InvoiceNo 
 
update ProductionItemCollectionMotionMaster
set NewInvoiceNo=@NewInvoiceNo
where Flag =@Flag 
and StoreId =@StoreId 
and InvoiceNo =@InvoiceNo 

select @NewInvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GeneratePurchaseInvoiceFromQuotation]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GeneratePurchaseInvoiceFromQuotation]
(
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as

declare @DayDate datetime=cast(Getdate() as date),@Flag bigint=28,@NewFlag bigint=9,@NewInvoiceNo bigint
select @NewInvoiceNo=isnull(max(InvoiceNo),0)+1 from SalesMaster where StoreId=@StoreId and Flag=@NewFlag

insert SalesMaster
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,Shift,TableId,TableSubId,UserName,IsClosed,NoOfPersons,MinPerPerson,CancelMinPerPerson
,WithService,WithTax,ServiceValue,Taxvalue,PaymentType,CashValue,DiscountPerc,DiscountValue,ToId,WaiterId,MyGetDate,OpennedDate
,Notes,ClosedDate,IsCashierPrinted,Cashier,DeliverymanId,Total,DocNo,AccNo1,Per1,Val1,AccNo2,Per2,Val2,AccNo3,Per3,Val3
,AccNo4,Per4,Val4,AccType1,AccType2,AccType3,AccType4,TotalAfterDiscount,SaveId,Temp,IsEditing,AccNo,CurrencyId,Shipping
,Freight,CustomClearance,OrderTypeId,PaymentMethodId,ShippingMethodId,ContractTerms,DeliveryDate,VersionNo,ReservToId
,Exchange,Perc,CaseInvoiceNo,PurchaseOrder,SalesTypeId,BankId,InsertDate,InsertUser,PriceListId,
SubAccNo1,SubAccNo2,SubAccNo3,SubAccNo4,IsPosted,InventoryInvoiceNo,[TotalCount],[SphR],[SphL],[CylR],[CylL],[AxisR],[AxisL],[DoctorId],
CostCenterId,CurrentShift,PrintUser,PrintDate,Temp2,IsDebit,TaxAmount
FROM SalesMaster
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

insert SalesDetails
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,Shift,ItemId,ItemName,Qty,Price,QtySub,PriceSub,Value,IsPrinted,/*Line,*/UserName,MyGetDate
,UnitId,UnitQty,Barcode,Color,Size,SalesPrice,Cost,Qty2,FlagType,SerialNo,SalesInvoiceNo,Qty3,ReceivedQty
,ItemDiscount,AvgCost,ItemDiscountPerc,IsDelivered,SalesManId,SD_Notes,ProductionOrderNo,ProductionOrderFlag
,UnitsWeightId,UnitsWeightQty,PreQty,SalesPriceTypeId,Bonus,TotalBonus,Target,ExpDate,ExpireDate,
SalesReturnStateId,SalesReturnStateReason,ItemSerialNo,ConsumptionQty,ConsumptionRemainingQty,rate,amount,PurchasePrice
FROM SalesDetails
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

insert SalesDetailsComponants
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,MainItemId,ItemId,ItemName,Qty,Value,AvgCost,Price/*,Line*/
FROM SalesDetailsComponants
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

select @NewInvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GenerateReservation]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateReservation]
@EmpId int,
@VisitingTypeId int,
@DayDate datetime,
@Value float,
@CaseId bigint
as

declare @ReservId int=(select isnull(ReservId,0)+1 from Reservations where EmpId=@EmpId and DayDate=@DayDate)

insert Reservations(IsMobile,EmpId,DayDate,ReservId,Time,CaseId,CaseName,RefereId,CompanyId,
MyNotes,VisitingType,Value,Payed,Remaining,SerialId,UserName,MyGetDate,ReservationDate,Done,
Canceled,Returned,RemainingDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,CanceledDate,
EmpIdReturned,ReturnedDate,CurrentShift,InsertedDate,IsClosed) 
select 1 IsMobile,@EmpId,@DayDate,@ReservId,'' Time,@CaseId,dbo.getCaseName(@CaseId),0 RefereId,0 CompanyId,
'online reservation' MyNotes,@VisitingTypeId,@Value,0 Payed,@Value Remaining,0 SerialId,1 UserName,GetDate(),
GetDate() ReservationDate,0 Done,0 Canceled,0 Returned,null RemainingDate,0 EmpIdReservation,0 EmpIdRemaining,
0 EmpIdCanceled,null CanceledDate,0 EmpIdReturned,null ReturnedDate,0 CurrentShift,getdate() InsertedDate,0 IsClosed

select @ReservId
GO
/****** Object:  StoredProcedure [dbo].[GenerateSalesInvoiceFromQuotation]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateSalesInvoiceFromQuotation]
(
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as

declare @DayDate datetime=cast(Getdate() as date),@Flag bigint=26,@NewFlag bigint=13,@NewInvoiceNo bigint
select @NewInvoiceNo=isnull(max(InvoiceNo),0)+1 from SalesMaster where StoreId=@StoreId and Flag=@NewFlag

insert SalesMaster
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,Shift,TableId,TableSubId,UserName,IsClosed,NoOfPersons,MinPerPerson,CancelMinPerPerson
,WithService,WithTax,ServiceValue,Taxvalue,PaymentType,CashValue,DiscountPerc,DiscountValue,ToId,WaiterId,MyGetDate,OpennedDate
,Notes,ClosedDate,IsCashierPrinted,Cashier,DeliverymanId,Total,DocNo,AccNo1,Per1,Val1,AccNo2,Per2,Val2,AccNo3,Per3,Val3
,AccNo4,Per4,Val4,AccType1,AccType2,AccType3,AccType4,TotalAfterDiscount,SaveId,Temp,IsEditing,AccNo,CurrencyId,Shipping
,Freight,CustomClearance,OrderTypeId,PaymentMethodId,ShippingMethodId,ContractTerms,DeliveryDate,VersionNo,ReservToId
,Exchange,Perc,CaseInvoiceNo,PurchaseOrder,SalesTypeId,BankId,InsertDate,InsertUser,PriceListId,
SubAccNo1,SubAccNo2,SubAccNo3,SubAccNo4,IsPosted,InventoryInvoiceNo,[TotalCount],[SphR],[SphL],[CylR],[CylL],[AxisR],[AxisL],[DoctorId],
CostCenterId,CurrentShift,PrintUser,PrintDate,Temp2,IsDebit,TaxAmount
FROM SalesMaster
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

insert SalesDetails
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,Shift,ItemId,ItemName,Qty,Price,QtySub,PriceSub,Value,IsPrinted,/*Line,*/UserName,MyGetDate
,UnitId,UnitQty,Barcode,Color,Size,SalesPrice,Cost,Qty2,FlagType,SerialNo,SalesInvoiceNo,Qty3,ReceivedQty
,ItemDiscount,AvgCost,ItemDiscountPerc,IsDelivered,SalesManId,SD_Notes,ProductionOrderNo,ProductionOrderFlag
,UnitsWeightId,UnitsWeightQty,PreQty,SalesPriceTypeId,Bonus,TotalBonus,Target,ExpDate,ExpireDate,
SalesReturnStateId,SalesReturnStateReason,ItemSerialNo,ConsumptionQty,ConsumptionRemainingQty,rate,amount,PurchasePrice
FROM SalesDetails
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

insert SalesDetailsComponants
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,MainItemId,ItemId,ItemName,Qty,Value,AvgCost,Price/*,Line*/
FROM SalesDetailsComponants
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

select @NewInvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GenerateSalesInvoiceFromQuotation2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GenerateSalesInvoiceFromQuotation2]
(
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as

declare @DayDate datetime=cast(Getdate() as date),@Flag bigint=31,@NewFlag bigint=13,@NewInvoiceNo bigint
select @NewInvoiceNo=isnull(max(InvoiceNo),0)+1 from SalesMaster where StoreId=@StoreId and Flag=@NewFlag

insert SalesMaster
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,Shift,TableId,TableSubId,UserName,IsClosed,NoOfPersons,MinPerPerson,CancelMinPerPerson
,WithService,WithTax,ServiceValue,Taxvalue,PaymentType,CashValue,DiscountPerc,DiscountValue,ToId,WaiterId,MyGetDate,OpennedDate
,Notes,ClosedDate,IsCashierPrinted,Cashier,DeliverymanId,Total,DocNo,AccNo1,Per1,Val1,AccNo2,Per2,Val2,AccNo3,Per3,Val3
,AccNo4,Per4,Val4,AccType1,AccType2,AccType3,AccType4,TotalAfterDiscount,SaveId,Temp,IsEditing,AccNo,CurrencyId,Shipping
,Freight,CustomClearance,OrderTypeId,PaymentMethodId,ShippingMethodId,ContractTerms,DeliveryDate,VersionNo,ReservToId
,Exchange,Perc,CaseInvoiceNo,PurchaseOrder,SalesTypeId,BankId,InsertDate,InsertUser,PriceListId,
SubAccNo1,SubAccNo2,SubAccNo3,SubAccNo4,IsPosted,InventoryInvoiceNo,[TotalCount],[SphR],[SphL],[CylR],[CylL],[AxisR],[AxisL],[DoctorId],
CostCenterId,CurrentShift,PrintUser,PrintDate,Temp2,IsDebit,TaxAmount
FROM SalesMaster
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

insert SalesDetails
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,Shift,ItemId,ItemName,Qty,Price,QtySub,PriceSub,Value,IsPrinted,/*Line,*/UserName,MyGetDate
,UnitId,UnitQty,Barcode,Color,Size,SalesPrice,Cost,Qty2,FlagType,SerialNo,SalesInvoiceNo,Qty3,ReceivedQty
,ItemDiscount,AvgCost,ItemDiscountPerc,IsDelivered,SalesManId,SD_Notes,ProductionOrderNo,ProductionOrderFlag
,UnitsWeightId,UnitsWeightQty,PreQty,SalesPriceTypeId,Bonus,TotalBonus,Target,ExpDate,ExpireDate,
SalesReturnStateId,SalesReturnStateReason,ItemSerialNo,ConsumptionQty,ConsumptionRemainingQty,rate,amount,PurchasePrice
FROM SalesDetails
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

insert SalesDetailsComponants
SELECT @NewFlag,StoreId,@NewInvoiceNo,@DayDate,MainItemId,ItemId,ItemName,Qty,Value,AvgCost,Price/*,Line*/
FROM SalesDetailsComponants
where StoreId=@StoreId and Flag=@Flag and InvoiceNo=@InvoiceNo

select @NewInvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetAllBal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAllBal]
@MainAccNo varchar(4000),
@LinkFile bigint,
@DayDate datetime,
@UserName int,
@P bigint,
@Z bigint,
@N bigint
--with encryption
as

exec GenerateCurrencyExchangeByDateTemp null,@DayDate


declare @EndType bigint
select top 1 @EndType=EndType from Chart where LinkFile=@LinkFile
 

declare @MyDate datetime=cast('1900-1-1'as date)
if @EndType<3
begin 
	select @MyDate =cast(cast((datepart(year,@DayDate)) as nvarchar(4))+'-1-1'as date)
end

declare @TableName varchar(4000),@MotionType int
select @TableName=TableName,@MotionType=MotionType from LinkFile where Id=@LinkFile
declare @str varchar(4000)='
create table #tbl(Id bigint,Name nvarchar(4000),MainBal0 float,AccNo nvarchar(4000),CurrencyId bigint,CurrencyName varchar(4000),TelFieldName nvarchar(4000),)
insert #tbl
select C.Id,C.Name,isnull(C.MainBal0,0),C.AccNo,CurrencyId,'''' CurrencyName,'+dbo.GetSubAccTelFieldName(@LinkFile)+'
from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(4000))+','+cast(@UserName as nvarchar(4000))+')T 
left join '+@TableName+' C on(C.Id=T.Id)
where (C.AccNo='''+cast(@MainAccNo as nvarchar(4000))+''' or '''+cast(@MainAccNo as nvarchar(4000))+'''='''')

create table #Fn (MyMainAccNo nvarchar(4000),MySubAccNo bigint,Db float,Cr float)
insert #Fn
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('''',0,'''+cast(@MyDate as varchar(100))+''','''+cast(@DayDate as varchar(4000))+''',0,0,0) 
group by MyMainAccNo,MySubAccNo



select Id,Name,
isnull(MainBal0,0)+((case when '+cast(@MotionType as nvarchar(10))+'=1 then -1. else 1. end)*(isnull(Fn.Db,0)-isnull(Fn.Cr,0)))MainBal0,
--dbo.Bal0(AccNo,Id,'''+cast(@DayDate as varchar(4000))+''',0,0,0) MainBal0,
0 Exchange,
0 Bal0,
CurrencyId,'''' CurrencyName,TelFieldName,
dbo.GetMainAccNoMotionType(AccNo,Id) MotionType,
'+cast(@MotionType as nvarchar(4000))+' MainMotionType,
AccNo,dbo.GetAccName(AccNo)
from #tbl C
left join #Fn Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
where (C.AccNo='''+cast(@MainAccNo as nvarchar(4000))+''' or '''+cast(@MainAccNo as nvarchar(4000))+'''='''')
and Id in(select T.Id from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(4000))+','+cast(@UserName as nvarchar(4000))+')T)
Order by Id

drop table #tbl
drop table #Fn
'
create table #tblAll(Id bigint,Name varchar(4000),MainBal0 float,Exchange float,Bal0 float,CurrencyId bigint,CurrencyName varchar(4000),TelFieldName nvarchar(4000),MotionType int,MainMotionType int,MainAccNo nvarchar(4000),MainAccName nvarchar(4000))
insert #tblAll
exec(@str)
print @str

update T 
set Exchange=dbo.GetCurrencyExchange(T.Id,@LinkFile,Curr.Id,0,@DayDate),
CurrencyName=Curr.Name
from #tblAll T
left join Currencies Curr on(T.CurrencyId=Curr.Id)

update #tblAll
set MainBal0=round(MainBal0,2)

update #tblAll
set Bal0=round(MainBal0*Exchange,2)


select * from #tblAll
where(
 (MainBal0>0 and @P=1) or 
 (MainBal0=0 and @Z=1) or 
 (MainBal0<0 and @N=1)
 )

drop table #tblAll

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[GetAllDaysInMonth]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAllDaysInMonth]
(
@Year bigint,
@Month bigint
)
--with encryption
as

declare @tbl table (DayDate datetime)

declare @today datetime=cast((cast(@year as nvarchar(4))+'-'+cast(@month as nvarchar(2))+'-01') as datetime)

while MONTH(@today)=@Month
begin
insert @tbl select @today
set @today+=1
end

select ROW_NUMBER()over (order by DayDate) Line,DATENAME(WEEKDAY,DayDate) 'Day',DayDate 'Date' from @tbl
GO
/****** Object:  StoredProcedure [dbo].[GetAllServicesTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAllServicesTypes]
--with encryption
as
select G.Name GroupName,T.*
from ServiceGroups G
left join ServiceTypes T on(G.Id=T.ServiceGroupId)
GO
/****** Object:  StoredProcedure [dbo].[GetAllSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAllSub](@LinkFile int)
--with encryption
as
select Id,Name
from dbo.AllSub
where LinkFile=@LinkFile
GO
/****** Object:  StoredProcedure [dbo].[GetAppartementSalesState]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAppartementSalesState]
@Id nvarchar(100)
--with encryption
as
select S.*,Ins.Id LineId,
isnull(Ins.Value,0) LineValue,Ins.DueDate LineDueDate,
isnull(Dt1.Value,0) PayedValue1,Dt1.DayDate PayedDate1,
isnull(Dt2.Value,0) PayedValue2,Dt2.DayDate PayedDate2,
isnull(Dt3.Value,0) LinePayedValue,Dt3.DayDate LinePayedDate
from AppartementsSales S
left join AppartementInstallments Ins on(S.Id=Ins.AppartementId)
 
left join AppartementInstallmentsDt Dt1 on(S.Id=Dt1.AppartementId and Dt1.PaymentFlag=1)
left join AppartementInstallmentsDt Dt2 on(S.Id=Dt2.AppartementId and Dt2.PaymentFlag=2)
left join AppartementInstallmentsDt Dt3 on(S.Id=Dt3.AppartementId and Dt3.PaymentFlag=3 and Ins.Id=Dt3.Id)

where S.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetAppartementStateAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAppartementStateAll] 
@BuildingId bigint
--with encryption
as
declare @tbl table(AppartementId varchar(100),State bigint)

declare @FloorCount bigint=(Select FloorCount from Buildings where Id=@BuildingId)
while @FloorCount>0
begin
	insert @tbl
	select cast(BuildingId as varchar(100))+'/'+cast(@FloorCount as varchar(100))+'/'+cast(Id as varchar(100)),
	dbo.GetAppartementState(cast(BuildingId as varchar(100))+'/'+cast(@FloorCount as varchar(100))+'/'+cast(Id as varchar(100)))
	from UnitsTypes where BuildingId=@BuildingId
	select @FloorCount-=1
end

declare @BalanceCount bigint=(Select BalanceCount from Buildings where Id=@BuildingId)
while @BalanceCount>0
begin
	insert @tbl
	select cast(@BuildingId as varchar(100))+'/0/'+cast(@BalanceCount as varchar(100)),
	dbo.GetAppartementState(cast(@BuildingId as varchar(100))+'/0/'+cast(@BalanceCount as varchar(100)))
	select @BalanceCount-=1
end

declare @ShopCount bigint=(Select ShopCount from Buildings where Id=@BuildingId)
while @ShopCount>0
begin
	insert @tbl
	select cast(@BuildingId as varchar(100))+'/00/'+cast(@ShopCount as varchar(100)),
	dbo.GetAppartementState(cast(@BuildingId as varchar(100))+'/00/'+cast(@ShopCount as varchar(100)))
	select @ShopCount-=1
end

declare @GarageCount bigint=(Select GarageCount from Buildings where Id=@BuildingId)
while @GarageCount>0
begin
	insert @tbl
	select cast(@BuildingId as varchar(100))+'/000/'+cast(@GarageCount as varchar(100)),
	dbo.GetAppartementState(cast(@BuildingId as varchar(100))+'/000/'+cast(@GarageCount as varchar(100)))
	select @GarageCount-=1
end

select * from @tbl
GO
/****** Object:  StoredProcedure [dbo].[GetAttendance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAttendance](@EmpId bigint,@Month bigint,@Year bigint)
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName
from Attendance 
where (EmpId=@EmpId or @EmpId=0)
and Month=@Month and YEAR=@Year
GO
/****** Object:  StoredProcedure [dbo].[GetAttendanceLog]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetAttendanceLog]
@EmpId bigint,
@Month bigint,
@Year bigint
--with encryption
as
select * from AttendanceLog 
where EmpId=@EmpId
and month(DayDate)=@Month
and Year(DayDate)=@Year
order by DayDate
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash]
(
@CostCenterId bigint,
@FromDate datetime,
@ToDate datetime,
@Flag bigint,
@FromId bigint,
@ToId bigint,
@MainAccNo bigint,
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint
)
--with encryption
as

select * from BankCash
where Flag=@Flag
and DayDate between @FromDate and @ToDate
and InvoiceNo between @FromInvoiceNo and @ToInvoiceNo
and BankId between @FromId and @ToId
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (MainAccNo=@MainAccNo or @MainAccNo=0)
and (SubAccNo=@SubAccNo or @SubAccNo=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G]
@BankId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as
select *,
(Case Flag 
	when 1 then 'إيرادات خزنة' 
	when 2 then 'مصروفات خزنة' 
	when 3 then 'إيرادات بنك' 
	when 4 then 'مصروفات بنك' end) 'Rem',
(Case when Flag in(1,2) then dbo.GetSubAccNameLink(5,BankId)
	 when Flag in(3,4) then dbo.GetSubAccNameLink(5,BankId) 
	 end) MainAccName,
dbo.GetLinkFileName(LinkFile) LinkFileName,
dbo.GetLinkAccName(LinkFile,SubAccNo) AccName,
dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,
dbo.GetStoreName(StoreId) StoreName
from BankCash_G
where BankId=@BankId
and Flag=@Flag
and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G12_AZ]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G12_AZ]
@BankId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as
select T.*,AllSub.*,
(Case Flag 
	when 1 then 'إيرادات خزنة' 
	when 2 then 'مصروفات خزنة' 
	when 3 then 'إيرادات بنك' 
	when 4 then 'مصروفات بنك' end) 'Rem',
(Case when Flag in(1,2) then dbo.GetSubAccNameLink(5,BankId)
	 when Flag in(3,4) then dbo.GetSubAccNameLink(5,BankId) 
	 end) MainAccName,
dbo.GetLinkFileName(T.LinkFile) LinkFileName,
dbo.GetLinkAccName(T.LinkFile,SubAccNo) AccName,
dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,
dbo.GetStoreName(StoreId) StoreName,
dbo.Bal0(AllSub.AccNo,AllSub.Id,getdate(),0,0,0)CurrentBal,
(case when AllSub.LinkFile=1 then C.MonthlyPaymentDay else 0 end)MonthlyPaymentDay,
(case when AllSub.LinkFile=1 then C.MonthlyPayment else 0 end)MonthlyPayment,
L.Name L_Name
from BankCash_G T
left join AllSub on(AllSub.LinkFile=T.LinkFile and AllSub.Id=T.SubAccNo)
left join Customers C on(AllSub.Id=C.Id)
left join LinkFile L on(L.Id=T.LinkFile)
where BankId=@BankId
and Flag=@Flag
and InvoiceNo=@InvoiceNo


GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G2]
@BankCash_G2TypeId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as
select *,
(Case Flag 
	when 1 then 'مقبوضات' 
	when 2 then 'مدفوعات' end) 'Rem',
dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) BankCash_G2TypeName,
dbo.GetLinkFileName(MainLinkFile) MainLinkFileName,
dbo.GetLinkAccName(MainLinkFile,BankId) MainAccName,
dbo.GetLinkFileName(LinkFile) LinkFileName,
dbo.GetLinkAccName(LinkFile,SubAccNo) AccName,
dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,
dbo.GetStoreName(StoreId) StoreName
from BankCash_G2
where BankCash_G2TypeId=@BankCash_G2TypeId
and Flag=@Flag
and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2_Data]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G2_Data]  
@ToId bigint,  
@FromDate datetime,  
@ToDate datetime  
--with encryption  
as  
select   
Line,dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) BankCash_G2TypeName,  
InvoiceNo,dbo.ToStrDate(DayDate)DayDate,DocNo,  
dbo.GetLinkFileName(MainLinkFile) MainLinkFileName,  
dbo.GetLinkAccName(MainLinkFile,BankId) MainAccName,  
MainValue2,dbo.GetCurrencyName(CurrencyId)CurrencyName,Value,  
Notes,  
dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,  
ImportMessageId,  
dbo.GetStoreName(StoreId) StoreName,  
StoreInvoiceNo  
from BankCash_G2 T  
where Flag=2
and LinkFile=2  
and SubAccNo=@ToId  
and DayDate between @FromDate and @ToDate  
and CheckTypeId in(1,2,4,5)
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2_Data2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G2_Data2]  
@StoreId bigint,
@InvoiceNo bigint
--with encryption  
as  
select   
T.Line,dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) BankCash_G2TypeName,  
T.InvoiceNo,dbo.ToStrDate(DayDate)DayDate,DocNo,  
dbo.GetLinkFileName(MainLinkFile) MainLinkFileName,  
dbo.GetLinkAccName(MainLinkFile,BankId) MainAccName,  
MainValue2,dbo.GetCurrencyName(CurrencyId)CurrencyName,T.Value,  
Notes,  
--dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,  
--ImportMessageId,  
--dbo.GetStoreName(T.StoreId) StoreName,  
--StoreInvoiceNo,
TT.Value TT_Value
from BankCash_G2 T  
right join SupliersPayments TT on(T.Line=TT.MainLine and TT.StoreId=@StoreId and TT.InvoiceNo=@InvoiceNo)
where Flag=2
and T.Line in(
	Select SP.MainLine 
	from SupliersPayments SP
	where SP.StoreId=@StoreId
	and SP.InvoiceNo=@InvoiceNo
)

union all

select   
T.Line,dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) BankCash_G2TypeName,  
T.InvoiceNo,dbo.ToStrDate(DayDate)DayDate,DocNo,  
dbo.GetLinkFileName(MainLinkFile) MainLinkFileName,  
dbo.GetLinkAccName(MainLinkFile,BankId) MainAccName,  
MainValue2,dbo.GetCurrencyName(CurrencyId)CurrencyName,T.Value,  
Notes,  
T.Value TT_Value
from BankCash_G2 T  
where Flag=2
and T.StoreId=@StoreId and T.StoreInvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G22]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G22]
@BankCash_G2TypeId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as
select *,
(Case Flag 
	when 1 then 'إيرادات' 
	when 2 then 'مصروفات' end) 'Rem',
dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) BankCash_G2TypeName,
dbo.GetLinkFileName(MainLinkFile) MainLinkFileName,
dbo.GetLinkAccName(MainLinkFile,BankId) MainAccName,
dbo.GetLinkFileName(LinkFile) LinkFileName,
dbo.GetLinkAccName(LinkFile,SubAccNo) AccName,
dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,
dbo.GetStoreName(StoreId) StoreName
from BankCash_G2
where BankCash_G2TypeId=@BankCash_G2TypeId
and Flag=@Flag
and InvoiceNo=@InvoiceNo
and MainValue2Ded<>0
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G23]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetBankCash_G23]
@BankCash_G2TypeId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as
select *,
(Case Flag 
	when 1 then 'مقبوضات' 
	when 2 then 'مدفوعات' end) 'Rem',
dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) BankCash_G2TypeName,
dbo.GetLinkFileName(MainLinkFile) MainLinkFileName,
dbo.GetLinkAccName(MainLinkFile,BankId) MainAccName,
dbo.GetLinkFileName(LinkFile) LinkFileName,
dbo.GetLinkAccName(LinkFile,SubAccNo) AccName,
dbo.GetOrderTypes(PurchaseAccNo) OrderTypeName,
dbo.GetStoreName(StoreId) StoreName
from BankCash_G2
where BankCash_G2TypeId=@BankCash_G2TypeId
and Flag=@Flag
and InvoiceNo=@InvoiceNo
and IsSelected=1
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_G2RPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_G2RPT]
(
@Flag bigint,
@BankCash_G2TypeId bigint,
@CostCenterId bigint,
@MainLinkFile bigint,
@BankId bigint,
@LinkFile bigint,
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@FromDate datetime,
@ToDate datetime,
@CurrencyId int,
@EmpId int
)
--with encryption
as

select M.*,
dbo.GetLinkFileName(M.MainLinkFile) MainLinkFileName,
isnull(dbo.GetLinkAccName(M.MainLinkFile,M.BankId),'-') MainAccName,
dbo.GetLinkFileName(M.LinkFile) LinkFileName,
isnull(dbo.GetLinkAccName(M.LinkFile,M.SubAccNo),'-') SubAccName,
(Case M.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end) 'Rem',
T.Name BankCash_G2TypeName,
dbo.GetCheckTypeName(CheckTypeId)CheckTypeName,
ISNULL(Ct.Name,'')+' - '+
(case when PurchaseAccNo='' then '' else dbo.GetSubAccNameLink(11,PurchaseAccNo)+' ' end)+
(case when ImportMessageId=0 then '' else 'رسالة '+cast(ImportMessageId as nvarchar(100))+' ' end)+
(case when StoreInvoiceNo=0 then '' else 'عقد '+CAST(StoreInvoiceNo as nvarchar(100)) end) Rem2,
Ct.Name Ct_Name,
Ot.Name Ot_Name,
dbo.GetAccName(IM.AccNo) IM_Name
from BankCash_G2 M
LEFT JOIN BankCash_G2Types T on(M.Flag=T.Flag and M.BankCash_G2TypeId=T.Id)
left join Employees EE on(EE.Id=@EmpId)
left join EmpBankCash_G2Types E on(E.Flag=T.Flag and E.TypeId=T.Id and E.EmpId=@EmpId)
	
left join CostTypes CT on(M.CostTypeId=Ct.Id)
left join OrderTypes OT on(M.PurchaseAccNo=OT.Id)
left join ImportMessages IM on(M.PurchaseAccNo=IM.AccNo and M.ImportMessageId=IM.Id)

where M.Flag=@Flag
and (BankCash_G2TypeId=@BankCash_G2TypeId or @BankCash_G2TypeId=0)
and M.DayDate between @FromDate and @ToDate
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (MainLinkFile=@MainLinkFile or @MainLinkFile=0)
and (BankId=@BankId or @BankId=0)

and (CostCenterId=@CostCenterId or @CostCenterId=0)

and (LinkFile=@LinkFile or @LinkFile=0)
and (SubAccNo=@SubAccNo or @SubAccNo=0)

and (CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (M.CurrencyId=@CurrencyId or @CurrencyId=0)

and Canceled=0

and(E.EmpId=@EmpId or EE.Manager=1)
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash_GRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash_GRPT]
(
@CostCenterId bigint,
@FromDate datetime,
@ToDate datetime,
@Flag bigint,
@BankId bigint,
@LinkFile bigint,
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint
)
--with encryption
as

select M.*,
dbo.GetLinkFileName(M.LinkFile) LinkFileName,
isnull(dbo.GetLinkAccName(M.LinkFile,M.SubAccNo),'-') SubAccName,
(Case Flag when 1 then 'إيرادات خزنة' when 2 then 'مصروفات خزنة' when 3 then 'إيرادات بنك' when 4 then 'مصروفات بنك' end) 'Rem',
dbo.GetSubAccNameLink((Case when Flag in(1,2) then 5 else 6 end),BankId) 'BankName'
from BankCash_G M
where Flag=@Flag
and DayDate between @FromDate and @ToDate
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (BankId=@BankId or @BankId=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (LinkFile=@LinkFile or @LinkFile=0)
and (SubAccNo=@SubAccNo or @SubAccNo=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash2]
@CostCenterId bigint,
@OutComeTypeId bigint,
@FromDate datetime,
@ToDate datetime

--with encryption
as
declare @MotionType bigint=0

select InvoiceNo,DayDate,Value,'* '+Notes Notes,
OutComeTypeId,dbo.GetOutComeTypeName(OutComeTypeId)OutComeTypeName
from BankCash2
where DayDate between @FromDate and @ToDate 
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (OutComeTypeId=@OutComeTypeId or @OutComeTypeId=0)
and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetBankCash6]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCash6]
@TeacherId bigint,
@StoreId int,
@FromDate datetime,
@ToDate datetime
as

select T.*,
S.Name 'Savename',
TT.Name 'TeacherName',
C.Name 'CustomerName',
St.Name 'StoreName',
R.Name 'RoomName',
OHF.Name 'OHF_Name',
OHT.Name 'OHT_Name'
from BankCash6 T
left join Saves S on(T.BankId=S.Id)
left join Teachers TT on(T.TeacherId=TT.Id)
left join Customers C on(C.Id=T.CustomerId)
left join Stores St on(St.Id=T.StoreId)
left join CenterRooms R on(R.Id=T.RoomId and R.StoreId=T.StoreId)
left join OpenningHours OHF on(OHF.Id=T.OpenningHoursFrom)
left join OpenningHours OHT on(OHT.Id=T.OpenningHoursTo)
where T.DayDate between @FromDate and @ToDate
and (T.TeacherId=@TeacherId or @TeacherId=0)
and (T.StoreId=@StoreId or @StoreId=0)
and T.Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetBankCashRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBankCashRPT]
(
@CostCenterId bigint,
@FromDate datetime,
@ToDate datetime,
@Flag bigint,
@BankId bigint,
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint
)
--with encryption
as

select M.*,
dbo.GetMainAccName(M.MainAccNo) MainAccName,
isnull(dbo.GetSubAccName(M.MainAccNo,M.SubAccNo),'-') SubAccName,
(Case Flag when 1 then 'إيرادات خزنة' when 2 then 'مصروفات خزنة' when 3 then 'إيرادات بنك' when 4 then 'مصروفات بنك' end) 'Rem'
from BankCash M
where Flag=@Flag
and DayDate between @FromDate and @ToDate
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (BankId=@BankId or @BankId=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)
and (MainAccNo=@MainAccNo or @MainAccNo='')
and (SubAccNo=@SubAccNo or @SubAccNo=0)
and (CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetBuildingIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetBuildingIncome]
@BuildingId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as


select *,dbo.GetCostCenterName(CostCenterId)CostCenterName
from AppartementInstallmentsDt Dt
left join Buildings B on(B.Id=dbo.fnSplitString(Dt.AppartementId,'/',1))

where (dbo.fnSplitString(Dt.AppartementId,'/',1)=@BuildingId or @BuildingId=0)
and DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetCalcImportMessageCostVal5RPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCalcImportMessageCostVal5RPT]
(
@OrderTypeId int,
@ImportMessageId int,
@DeliveredDate datetime
)
--with encryption
as

--إجمالى عقود الرسالة
select 'القيود' MyFlag,isnull((-ED.Debit+ED.Credit),0)MyVal,*
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(ED.PurchaseAccNo=@OrderTypeId and ED.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=ED.StoreId and DD.InvoiceNo=ED.StoreInvoiceNo
	)
	)

select 'التسويات' MyFlag,isnull((Value*(case when IsCost1=1 then 1. else -1. end)),0)MyVal,*
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetCancleSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCancleSerialId]
(
@Year bigint,
@SerialType bigint,
@SerialId bigint
)
--with encryption
as


select Canceled from Reservations
where (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)
and ((@SerialId=SerialId and year(ReservationDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))
--and cast(ReservationDate as date)=dbo.MyGetDate()
union all
select Canceled from Services
where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType 
and ((@SerialId=SerialId and year(DayDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))
--and DayDate=dbo.MyGetDate()
GO
/****** Object:  StoredProcedure [dbo].[GetCarMovement]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCarMovement]
@CarNo varchar(1000),
@FromDate datetime,
@ToDate datetime
--with encryption
as

select *,
dbo.GetCustomerName(CustomerId)CustomerName,
dbo.GetSellerName(SellerId)SellerName,
dbo.GetDriverName(DriverId)DriverName,
dbo.GetNolonPricesName(NolonPriceId)NolonPriceName,
dbo.GetNolonPriceTypesName(NolonPriceTypeId)NolonPriceTypeName,
dbo.GetCustomerInvoicesTypeName(CustomerInvoicesTypeId)CustomerInvoicesTypeName
from Nolon
where ltrim(rtrim(CarNo))=ltrim(rtrim(@CarNo))
and DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetCase2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCase2]
@Id bigint
--with encryption
as

select C.Name ArName,
C.DisionNo,C.DisionDate,DATEADD(MONTH,12,C.DisionDate) DisionDateEnd,C.DisionYear,
C.FileNo,C.FileYear,
C.DoseValue,
C.DoseValue*12 TotalDoseValue,
count(K.InvoiceNo)count,
min(K.DayDate)MinDate,
max(K.DayDate)MaxDate,
sum(k.Value)SumValue
from cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where C.Id=@Id
and isnull(C.Stopped,0)=0
and K.DayDate between C.DisionDate and DATEADD(MONTH,12,C.DisionDate)
group by C.Name,
C.DisionNo,C.DisionDate,C.DisionYear,
C.FileNo,C.FileYear,
C.DoseValue
GO
/****** Object:  StoredProcedure [dbo].[GetCase21]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCase21]
@Id bigint
--with encryption
as

declare @SumValue float
select @SumValue=sum(K.Value)
from cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where C.Id=@Id
and isnull(C.Stopped,0)=0
and K.DayDate between C.DisionDate and DATEADD(MONTH,12,C.DisionDate)

select C.Name ArName,
C.DisionDate,DATEADD(MONTH,12,C.DisionDate) DisionDateEnd,C.DisionYear,
C.DoseValue,
C.DoseValue*12 TotalDoseValue,
K.DayDate,
K.Value,
@SumValue SumValue
from cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where C.Id=@Id
and isnull(C.Stopped,0)=0
and K.DayDate between C.DisionDate and DATEADD(MONTH,12,C.DisionDate)
GO
/****** Object:  StoredProcedure [dbo].[GetCaseActive]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseActive]
@FromDate datetime,
@ToDate datetime
--with encryption
as

select CaseId,C.Name CaseName,
--dbo.Bal0(AccNo,Id,@FromDate-1,0,0,0) BalFirst,
--dbo.Bal0(AccNo,Id,@ToDate,0,0,0) BalEnd,
isnull(C.Bal0,0)+isnull(Fn0.Db,0)-isnull(Fn0.Cr,0)BalFirst,
isnull(C.Bal0,0)+isnull(Fn.Db,0)-isnull(Fn.Cr,0)BalEnd,
C.Notes
from
(
--select CaseId from CaseDetails where Daydate between @FromDate and @ToDate union
select Id CaseId from Cases where DateOnAdmission between @FromDate and @ToDate union
select CaseId from CasesDetails where CAST(MyGetDate as date) between @FromDate and @ToDate union
select CaseId from CaseFuckingData where Daydate between @FromDate and @ToDate union
select ToId from SalesMaster where Flag in(17,18,37,38,47,48) and Daydate between @FromDate and @ToDate union
--select CaseId from CaseICSI2 where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInFertility where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInFertility2 where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInFertility4 where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInvoices where Daydate between @FromDate and @ToDate union
--select CaseId from CaseIUI where Daydate between @FromDate and @ToDate union
select CaseId from CasesComplaint where Daydate between @FromDate and @ToDate union
select CaseId from CasesComplaintDt where Daydate between @FromDate and @ToDate union
select CaseId from ClinicsHistory where Daydate between @FromDate and @ToDate union
select CaseId from LabTests where Daydate between @FromDate and @ToDate union
select CaseId from OperationMotions where Daydate between @FromDate and @ToDate union
select CaseId from ProgressNote where Daydate between @FromDate and @ToDate union
select CaseId from Reservations where Daydate between @FromDate and @ToDate union
select CaseId from ReservationsClinics where Daydate between @FromDate and @ToDate union
select CaseId from ReservationsOperations where Daydate between @FromDate and @ToDate union
select CaseId from RoomsData where Daydate between @FromDate and @ToDate union
select CaseId from Services where Daydate between @FromDate and @ToDate
)Tbl
left join Cases C on(C.Id=Tbl.CaseId)
left join (
			select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
			from dbo.Fn_AllEntry('',0,'1900-1-1',@FromDate-1,0,0,1) 
			group by MyMainAccNo,MySubAccNo
			)Fn0 on(Fn0.MyMainAccNo=C.AccNo and Fn0.MySubAccNo=C.Id)
left join (
			select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
			from dbo.Fn_AllEntry('',0,'1900-1-1',@ToDate,0,0,1) 
			group by MyMainAccNo,MySubAccNo
			)Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
where CaseId>0
GO
/****** Object:  StoredProcedure [dbo].[GetCaseActiveOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseActiveOLD]
@FromDate datetime,
@ToDate datetime
--with encryption
as

select CaseId,C.Name CaseName,
dbo.Bal0(AccNo,Id,@FromDate-1,0,0,0) BalFirst,
dbo.Bal0(AccNo,Id,@ToDate,0,0,0) BalEnd,
C.Notes
from
(
--select CaseId from CaseDetails where Daydate between @FromDate and @ToDate union
select CaseId from CaseFuckingData where Daydate between @FromDate and @ToDate union
select ToId from SalesMaster where Flag in(17,18,37,38,47,48) and Daydate between @FromDate and @ToDate union
--select CaseId from CaseICSI2 where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInFertility where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInFertility2 where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInFertility4 where Daydate between @FromDate and @ToDate union
--select CaseId from CaseInvoices where Daydate between @FromDate and @ToDate union
--select CaseId from CaseIUI where Daydate between @FromDate and @ToDate union
select CaseId from CasesComplaint where Daydate between @FromDate and @ToDate union
select CaseId from CasesComplaintDt where Daydate between @FromDate and @ToDate union
select CaseId from ClinicsHistory where Daydate between @FromDate and @ToDate union
select CaseId from LabTests where Daydate between @FromDate and @ToDate union
select CaseId from OperationMotions where Daydate between @FromDate and @ToDate union
select CaseId from ProgressNote where Daydate between @FromDate and @ToDate union
select CaseId from Reservations where Daydate between @FromDate and @ToDate union
select CaseId from ReservationsClinics where Daydate between @FromDate and @ToDate union
select CaseId from ReservationsOperations where Daydate between @FromDate and @ToDate union
select CaseId from RoomsData where Daydate between @FromDate and @ToDate union
select CaseId from Services where Daydate between @FromDate and @ToDate
)Tbl
left join Cases C on(C.Id=Tbl.CaseId)
where CaseId>0
GO
/****** Object:  StoredProcedure [dbo].[GetCaseAllDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseAllDetails]
@CaseId int,
@Flag int,
@MainId int,
@DayDate datetime,
@Id int
--with encryption
as

select *,dbo.GetCaseArName(CaseId)CaseName from
(
select 00 Id,CaseId,dbo.GetEmpArName(EmpId) MainId,DayDate,ReservId,'العيادات' Flag,'العيادات الخارجية'		Title,dbo.GetVisitingTypesName(VisitingType)+' - '+MyNotes+' - المدفوع '+CAST(Payed as nvarchar(100))+' / '+CAST(Value as nvarchar(100))									Data	from Reservations		where (@Flag=1 and EmpId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 01 Id,dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Patient''s Complaint'		Title,Notes									Data	from ReservationCbo0Clinics		where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all
select 02 Id,																CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Investigations'			Title,Investigations						Data	from ReservationsClinics		where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 03 Id,dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Symptoms of Disease'		Title,Notes									Data	from ReservationCbo1Clinics 	where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all
select 04 Id,dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Disease Diagnoses'			Title,Notes									Data	from ReservationCbo2Clinics 	where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all
select 05 Id,dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Drugs & Doses'				Title,Notes1+' - '+Notes2					Data	from ReservationCbo3Clinics 	where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all
select 06 Id,dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Needed Rays'				Title,Notes									Data	from ReservationRaysClinics 	where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all
select 07 Id,dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)CaseId,dbo.GetClinicName(ClinicId)MainId,DayDate,ReservId,'العيادات' Flag,'Needed Laboratory Tests'	Title,Notes1+' - '+Notes2					Data	from ReservationTestsClinics	where (@Flag=1 and ClinicId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsClinics(ClinicId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all

select 08 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'نوع العملية'				Title,dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3)						Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 08 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Consult Notes'				Title,OperationDetails						Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 09 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Post Operative Diagnosis'	Title,PostOperativeDiagnosis				Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 10 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Pathology Report'			Title,PathologySpecimen						Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 11 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Operative Data'				Title,ClinicalData							Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 12 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Recomendation'				Title,Recomendation							Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 13 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Surgeon'					Title,dbo.GetEmpArName(SurgeonId)+(case when SurgeonId2=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId2) end)+(case when SurgeonId3=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId3) end) 			Data	from ReservationsOperations		where (@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 14 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'AssistantSurgeon'			Title,dbo.GetEmpArName(AssistantSurgeonId)	Data	from ReservationsOperations		where AssistantSurgeonId<>0 and((@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/)))union all
select 15 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'Anesthetist'				Title,dbo.GetEmpArName(AnesthetistId)		Data	from ReservationsOperations		where AnesthetistId<>0 and((@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/)))union all
select 16 Id,																CaseId,dbo.GetOperationRoomName(OperationsRoomId)MainId,DayDate,ReservId,'العمليات' Flag,'ScrubNurse'					Title,dbo.GetEmpArName(ScrubNurseId )		Data	from ReservationsOperations		where ScrubNurseId<>0 and((@Flag=2 and OperationsRoomId=@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/)))union all
select 17 Id,dbo.GetCaseIdFromReservationsOperations(OperationId,DayDate,ReservId),dbo.GetOperationRoomName(OperationId)MainId,DayDate,ReservId,'العمليات' Flag,'Patient''s Complaint'			Title,Notes									Data	from ReservationCbo0Operations	where (@Flag=2 and OperationId	 =@MainId and DayDate=@DayDate and ReservId=@Id) or (@Flag in(-2,-1,0) and (dbo.GetCaseIdFromReservationsOperations(OperationId,DayDate,ReservId)=@CaseId/* or @CaseId=0*/))union all

select 18 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'نوع العملية'				Title,dbo.GetOperationTypesName(OperationType)	Data from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 18 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Date'		Title,dbo.ToStrDate(DayDate)+' To '+dbo.ToStrDate(ExitDate)	Data from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 19 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Consult Notes'			Title,RoomDetails							Data	from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 20 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Post Operative Diagnosis'	Title,PostOperativeDiagnosis				Data	from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 21 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Pathology Report'			Title,PathologySpecimen						Data	from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 22 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Operative Data'			Title,ClinicalData							Data	from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 23 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Recomendation'			Title,Recomendation							Data	from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 24 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Surgeon'					Title,dbo.GetEmpArName(SurgeonId) 			Data	from RoomsData					where (@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all
select 25 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'AssistantSurgeon'			Title,dbo.GetEmpArName(AssistantSurgeonId)	Data	from RoomsData					where AssistantSurgeonId<>0 and((@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/)))union all
select 26 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'Anesthetist'				Title,dbo.GetEmpArName(AnesthetistId)		Data	from RoomsData					where AnesthetistId<>0 and((@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/)))union all
select 27 Id,CaseId,dbo.GetRoomName(RoomId)MainId,		DayDate,Id	ReservId,'الداخلي'	Flag,'ScrubNurse'				Title,dbo.GetEmpArName(ScrubNurseId)		Data	from RoomsData					where ScrubNurseId<>0 and((@Flag=3 and RoomId			=@MainId and	 Id=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/)))union all
select 28 Id,CaseId,dbo.GetRoomName(RoomId)MainId,null DayDate,	ReservId,'الداخلي'	Flag,'Patient''s Complaint'		Title,Notes									Data	from ReservationCbo0Rooms		where (@Flag=3 and RoomId			=@MainId and	 ReservId=@Id) or (@Flag in(-2,-1,0) and (CaseId=@CaseId/* or @CaseId=0*/))union all

select 101 Id,T.CaseId,'Lab',T.DayDate DayDate,T.InvoiceNo,
'المعمل'	Flag,dbo.GetLaboratoryTestsName(Dt.TestId,Dt.SubTestId)		Title,dbo.GetLabTestItemsName(Dt.TestId,Dt.SubTestId,Dt.Id)+': '+Dt.Result									Data
from LabTests T
left join LabTestsDt Dt on(T.InvoiceNo=Dt.InvoiceNo)
where (@Flag in(/*-2,*/-1,0) and (T.CaseId=@CaseId/* or @CaseId=0*/))

union all

select 111 Id,T.CaseId,'Services',T.DayDate DayDate,T.InvoiceNo,
'الخدمات'	Flag,dbo.GetServiceGroupName(ServiceGroupId)		Title,dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)/*+': '+CAST(Payed as nvarchar(100))+' ج'*/									Data
from Services T
where (@Flag in(/*-2,*/-1,0) and (T.CaseId=@CaseId/* or @CaseId=0*/))

union all

select 121 Id,M.ToId,'Consumables',M.DayDate DayDate,M.InvoiceNo,
'المستهلكات'	Flag,dbo.GetStoreName(M.StoreId)		Title,
D.ItemName Data
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
where (@Flag in(/*-2,*/-1,0) and (M.ToId=@CaseId/* or @CaseId=0*/))
and M.Flag in(17,35,37,47)

)Tbl
where Data<>''
GO
/****** Object:  StoredProcedure [dbo].[GetCaseData9]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetCaseData9]
@Id int
as

declare @Year int=year(getdate())

select No 'رقم القرار',DayDate 'تاريخ الصدور',CasesPunichId 'نوع الجزاء',DayDate2 'تاريخ الاعتماد'
from CaseData9 
where CaseId=@Id 
order by Line
GO
/****** Object:  StoredProcedure [dbo].[GetCaseDataAttachments]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseDataAttachments]
@CaseId int
as

select * 
from CaseDataAttachments
where CaseId=@CaseId
GO
/****** Object:  StoredProcedure [dbo].[GetCaseInvoice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseInvoice]
@CaseInvoiceNo int
--with encryption
as


select *,
dbo.GetCaseArName(T.CaseId)CaseName
from CaseInvoices T
cross join (
			select 8 OrderIndex,'حد المستلزمات والأدوية' Data,sum(ConsumablesValue)Value
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 9 OrderIndex,'إضافي المستلزمات والأدوية',sum(Total0)
			from CaseInvoices
			where InvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 10 OrderIndex,'مستهلكات الداخلي',sum(Total1)
			from CaseInvoices
			where InvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 6 OrderIndex,dbo.GetServiceGroupName(ServiceGroupId)GroupName,sum(Value)
			from services S
			left join ServiceGroups G on(S.ServiceGroupId=G.Id)
			where S.Flag=2 and S.CaseInvoiceNo=@CaseInvoiceNo
			and G.IsTotal=1
			group by ServiceGroupId
			
			union All
			
			select 7 OrderIndex,dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)TypeName,sum(Value)
			from services S
			left join ServiceGroups G on(S.ServiceGroupId=G.Id)
			where S.Flag=2 and S.CaseInvoiceNo=@CaseInvoiceNo
			and G.IsTotal=0
			group by ServiceGroupId,ServiceTypeId
			
			union All
			
			select 1 OrderIndex,dbo.GetOperationMotionsOperationTypesNameAll(InvoiceNo)
			,null
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 1 OrderIndex,'أتعاب فريق طبي',Dr1Value+ Dr2Value+ Dr3Value+ AnesthetistValue
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 1 OrderIndex,'حصة المستشفى',CoValue
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 2 OrderIndex,'فتح غرفة العمليات',RoomValue
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 3 OrderIndex,'إقامة',SUM(Value)
			from(
				select sum(RoomValue2)Value
				from OperationMotions 
				where CaseInvoiceNo=@CaseInvoiceNo
				
				union All
				
				select sum(Living)
				from ClinicsHistory 
				where CaseInvoiceNo=@CaseInvoiceNo
				)TT
			
			union All
			
			select 4 OrderIndex,'إشراف',sum(Value)
			from(
				select sum(MedicalValue)Value
				from OperationMotions 
				where CaseInvoiceNo=@CaseInvoiceNo
				
				union all
				
				select sum(Supervision)
				from ClinicsHistory 
				where CaseInvoiceNo=@CaseInvoiceNo
			)TT
			
			union All
			
			select 5 OrderIndex,'الرعاية التمريضية بالغرفة',sum(Value)
			from(
				select sum(CsValue)Value
				from OperationMotions 
				where CaseInvoiceNo=@CaseInvoiceNo
				
				union All
				
				select sum(Care)
				from ClinicsHistory 
				where CaseInvoiceNo=@CaseInvoiceNo
				)TT
			
)Tbl
where T.InvoiceNo=@CaseInvoiceNo
and Value is not null
order by Tbl.OrderIndex
GO
/****** Object:  StoredProcedure [dbo].[GetCaseInvoice2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseInvoice2]
@CaseInvoiceNo int
--with encryption
as


select *,
dbo.GetCaseArName(T.CaseId)CaseName
from CaseInvoices T
cross join (
			select 8 OrderIndex,DayDate _DayDate,'حد المستلزمات والأدوية' Data,ConsumablesValue Value
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 9 OrderIndex,DayDate,'إضافي المستلزمات والأدوية',Total0
			from CaseInvoices
			where InvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 10 OrderIndex,DayDate,'مستهلكات الداخلي',Total1
			from CaseInvoices
			where InvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 6 OrderIndex,DayDate,dbo.GetServiceGroupName(ServiceGroupId)GroupName,Value
			from services S
			left join ServiceGroups G on(S.ServiceGroupId=G.Id)
			where S.Flag=2 and S.CaseInvoiceNo=@CaseInvoiceNo
			and G.IsTotal=1
			
			union All
			
			select 7 OrderIndex,DayDate,dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)TypeName,Value
			from services S
			left join ServiceGroups G on(S.ServiceGroupId=G.Id)
			where S.Flag=2 and S.CaseInvoiceNo=@CaseInvoiceNo
			and G.IsTotal=0
			
			union All
			
			select 1 OrderIndex,DayDate,dbo.GetOperationMotionsOperationTypesNameAll(InvoiceNo)
			,null
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 1 OrderIndex,DayDate,'أتعاب فريق طبي',Dr1Value+ Dr2Value+ Dr3Value+ AnesthetistValue
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 1 OrderIndex,DayDate,'حصة المستشفى',CoValue
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 2 OrderIndex,DayDate,'فتح غرفة العمليات',RoomValue
			from OperationMotions 
			where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select 3 OrderIndex,DayDate,'إقامة',Value
			from(
				select DayDate,sum(RoomValue2)Value
				from OperationMotions 
				where CaseInvoiceNo=@CaseInvoiceNo
				group by DayDate
				
				union All
				
				select DayDate,sum(Living)
				from ClinicsHistory 
				where CaseInvoiceNo=@CaseInvoiceNo
				group by DayDate
				)TT
			
			union All
			
			select 4 OrderIndex,DayDate,'إشراف',Value
			from(
				select DayDate,sum(MedicalValue)Value
				from OperationMotions 
				where CaseInvoiceNo=@CaseInvoiceNo
				group by DayDate
				
				union all
				
				select DayDate,sum(Supervision)
				from ClinicsHistory 
				where CaseInvoiceNo=@CaseInvoiceNo
				group by DayDate
			)TT
			
			union All
			
			select 5 OrderIndex,DayDate,'الرعاية التمريضية بالغرفة',Value
			from(
				select DayDate,sum(CsValue)Value
				from OperationMotions 
				where CaseInvoiceNo=@CaseInvoiceNo
				group by DayDate
				
				union All
				
				select DayDate,sum(Care)
				from ClinicsHistory 
				where CaseInvoiceNo=@CaseInvoiceNo
				group by DayDate
				)TT
			
)Tbl
where T.InvoiceNo=@CaseInvoiceNo
and Value is not null
and Value <>0
order by _DayDate,Tbl.OrderIndex
GO
/****** Object:  StoredProcedure [dbo].[GetCaseInvoiceAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCaseInvoiceAll]
@FromDate datetime,
@ToDate datetime
--with encryption
as


select *,
C.Name CaseName
from CaseInvoices T
left join (
			select CaseInvoiceNo,8 OrderIndex,'حد المستلزمات والأدوية' Data,sum(ConsumablesValue)Value
			from OperationMotions 
			--where CaseInvoiceNo=@CaseInvoiceNo
			group by CaseInvoiceNo
			
			union All
			
			select InvoiceNo,9 OrderIndex,'إضافي المستلزمات والأدوية',sum(Total0)
			from CaseInvoices
			--where InvoiceNo=@CaseInvoiceNo
			group by InvoiceNo
			
			union All
			
			select InvoiceNo,10 OrderIndex,'مستهلكات الداخلي',sum(Total1)
			from CaseInvoices
			--where InvoiceNo=@CaseInvoiceNo
			group by InvoiceNo
			
			union All
			
			select S.CaseInvoiceNo,6 OrderIndex,dbo.GetServiceGroupName(ServiceGroupId)GroupName,sum(Value)
			from services S
			left join ServiceGroups G on(S.ServiceGroupId=G.Id)
			where S.Flag=2 
			--and S.CaseInvoiceNo=@CaseInvoiceNo
			and G.IsTotal=1
			group by S.CaseInvoiceNo,ServiceGroupId
			
			union All
			
			select S.CaseInvoiceNo,7 OrderIndex,dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)TypeName,sum(Value)
			from services S
			left join ServiceGroups G on(S.ServiceGroupId=G.Id)
			where S.Flag=2 
			--and S.CaseInvoiceNo=@CaseInvoiceNo
			and G.IsTotal=0
			group by S.CaseInvoiceNo,ServiceGroupId,ServiceTypeId
			
			union All
			
			select CaseInvoiceNo,1 OrderIndex,dbo.GetOperationMotionsOperationTypesNameAll(InvoiceNo)
			,null
			from OperationMotions 
			--where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select CaseInvoiceNo,1 OrderIndex,'أتعاب فريق طبي',Dr1Value+ Dr2Value+ Dr3Value+ AnesthetistValue
			from OperationMotions 
			--where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select CaseInvoiceNo,1 OrderIndex,'حصة المستشفى',CoValue
			from OperationMotions 
			--where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select CaseInvoiceNo,2 OrderIndex,'فتح غرفة العمليات',RoomValue
			from OperationMotions 
			--where CaseInvoiceNo=@CaseInvoiceNo
			
			union All
			
			select CaseInvoiceNo,3 OrderIndex,'إقامة',SUM(Value)
			from(
				select CaseInvoiceNo,sum(RoomValue2)Value
				from OperationMotions 
				--where CaseInvoiceNo=@CaseInvoiceNo
				group by CaseInvoiceNo
				
				union All
				
				select CaseInvoiceNo,sum(Living)
				from ClinicsHistory 
				--where CaseInvoiceNo=@CaseInvoiceNo
				group by CaseInvoiceNo
				)TT
			group by CaseInvoiceNo
			
			union All
			
			select CaseInvoiceNo,4 OrderIndex,'إشراف',sum(Value)
			from(
				select CaseInvoiceNo,sum(MedicalValue)Value
				from OperationMotions 
				--where CaseInvoiceNo=@CaseInvoiceNo
				group by CaseInvoiceNo
				
				union all
				
				select CaseInvoiceNo,sum(Supervision)
				from ClinicsHistory 
				--where CaseInvoiceNo=@CaseInvoiceNo
				group by CaseInvoiceNo
			)TT
			group by CaseInvoiceNo
			
			union All
			
			select CaseInvoiceNo,5 OrderIndex,'الرعاية التمريضية بالغرفة',sum(Value)
			from(
				select CaseInvoiceNo,sum(CsValue)Value
				from OperationMotions 
				--where CaseInvoiceNo=@CaseInvoiceNo
				group by CaseInvoiceNo
				
				union All
				
				select CaseInvoiceNo,sum(Care)
				from ClinicsHistory 
				--where CaseInvoiceNo=@CaseInvoiceNo
				group by CaseInvoiceNo
				)TT
			group by CaseInvoiceNo
			
)Tbl on(T.InvoiceNo=Tbl.CaseInvoiceNo)
left join Cases C on(T.CaseId=C.Id)
where T.DayDate between @FromDate and @toDate
and Value is not null
order by T.InvoiceNo,Tbl.OrderIndex
GO
/****** Object:  StoredProcedure [dbo].[GetCasePayments]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCasePayments]
@CaseId int,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1'
as

select Value,Daydate,'المقبوضات' Data,InvoiceNo
from BankCash_G 
where Flag=1 
and LinkFile=13 
and SubAccNo=@CaseId 
and Daydate between @FromDate and @ToDate

union all

select TP.Value,TP.InsertedDate,'سداد الداخلي',TP.Id
from RoomsDataPayments TP 
left join RoomsData T on(T.RoomId=TP.RoomId and T.Id=TP.Id and T.MyLine=TP.MyMainLine) 
where T.CaseId=@CaseId 
and cast(TP.InsertedDate as date) between @FromDate and @ToDate

union all

select Value,Daydate,'حجز الداخلي',ReservId
from ReservationsRooms 
where CaseId=@CaseId 
and Daydate between @FromDate and @ToDate

union all

select Payed,Daydate,'تأمين عمليات',InvoiceNo
from OperationMotions 
where CaseId=@CaseId 
and Daydate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetCases]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCases]
@Id int
--with encryption
as
select T.*,
C.Name CityName,
J.Name JobName,
G.Name GenderName,
CT.Name CaseTypeName,
E.EnName DoctorName,
E.Name DoctorArName,
Com.Name CompanyName,
dbo.GetEmpArName(T.EntryUser)EntryUserName,
dbo.GetRelationName(T.RelationId)RelationName,
dbo.GetRelationName(T.RelationId2)RelationName2,
Tbl.RoomName,Tbl.DayDate,Tbl.ExitDate,Tbl.OperationTypesName,Tbl.Recomendation,Tbl.SurgeonName,
Tbl2.CompanyName Tbl2_CompanyName,
Tbl2.DoctorName Tbl2_DoctorName,
Tbl2.OperationTypesName Tbl2_OperationTypesName,
Tbl2.OperationTypesName2 Tbl2_OperationTypesName2,
Tbl2.RoomName Tbl2_RoomName,
Tbl2.TypeName Tbl2_TypeName,
Tbl2.MyGetDate Tbl2_MyGetDate,
Tbl3.DayDate Tbl3_DayDate
from Cases T
left join Cities C on(C.CountryId=1 and T.CityId=C.Id)
left join Jobs J on(T.JobId=J.Id)
left join Gender G on(T.Gender=G.Id)
left join CaseTypes CT on(T.CaseTypeId=CT.Id)
left join Employees E on(T.DoctorId=E.Id)
left join Companies Com on(T.CompanyId=Com.Id)
left join(
	select top 1 
	dbo.GetRoomName(RoomId)RoomName,DayDate,ExitDate,
	dbo.GetOperationTypesName(OperationType)OperationTypesName,
	Recomendation,
	dbo.GetEmpArName(SurgeonId)SurgeonName
	from RoomsData
	where CaseId=@Id
	order by DayDate desc
)Tbl on(1=1)
left join(
	select top 1 
	dbo.GetCompaniesName(CompanyId)CompanyName,
	dbo.GetEmpArName(DoctorId)DoctorName,
	dbo.GetOperationTypesName(OperationId)OperationTypesName,
	dbo.GetOperationTypesName(OperationId2)OperationTypesName2,
	dbo.GetRoomName(RoomId)RoomName,
	dbo.GetCaseTypeName(TypeId)TypeName,
	MyGetDate
	from CasesDetails
	where CaseId=@Id
	order by Line desc
)Tbl2 on(1=1)
left join(
select MAX(DayDate)DayDate from OperationMotions where CaseId=@Id
)Tbl3 on(1=1)
where T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetCases3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCases3]
@Id int
as


declare @x int=0

set @x =0
declare @str7 nvarchar(4000)=''

select @x=isnull(Min(Line),0)-1 from(
select Top 3 Line from CaseData7 where CaseId=@Id order by Line DESC
)Tbl
while exists(select * from CaseData7 where CaseId=@Id and Line>@x)
begin
	select Top 1 @x=Line from CaseData7 where CaseId=@Id and Line>@x order by Line
	select Top 1 @str7+='** '+dbo.GetEstimateName(EstimateId)+' لسنة '+Year+' ' 
	from CaseData7 where CaseId=@Id and Line=@x order by Line
end


declare @NoCaseData9 int=0
set @x =0
declare @str9 nvarchar(4000)=''
while exists(select * from CaseData9 where CaseId=@Id and Line>@x)
begin
	select Top 1 @x=Line from CaseData9 where CaseId=@Id and Line>@x order by Line
	select Top 1 @str9+='** رقم القرار '+No+' تاريخ الصدور '+DayDate+' نوع الجزاء '+CasesPunichId+' تاريخ الاعتماد '+DayDate2+'
' from CaseData9 where CaseId=@Id and Line=@x order by Line
end
if @str9='' select @NoCaseData9=1,@str9='--------------------------------------------------لا يوجد--------------------------------------------------'

set @x =0
declare @str10 nvarchar(4000)=''
while exists(select * from CaseData10 where CaseId=@Id and Line>@x)
begin
	select Top 1 @x=Line from CaseData10 where CaseId=@Id and Line>@x order by Line
	select Top 1 @str10+='** ثم ردت الأقدمية اعتبارا من '+DayDate+' بسبب '+Notes+'
' from CaseData10 where CaseId=@Id and Line=@x order by Line
end

select T.Id,T.ArName,T.DateOfBirth,T.MotherName,T.JobDate,T.JoinDate,
(select top 1 TT.DayDate from CaseData3 TT where TT.CaseId=T.Id order by TT.Line )'تاريخ مباشرة العمل',
dbo.GetCasesDegreeName((select top 1 TT.Id from CaseData3 TT where TT.CaseId=T.Id order by TT.Line desc))CasesDegreeName,
dbo.GetQualificationName((select top 1 TT.Id from CaseData6 TT where TT.CaseId=T.Id order by TT.Line desc))'المؤهل الدراسي',
@str7 'التقرير السنوي',
@str9 'الجزاءات',
@str10 'الأقدمية',
Sc.Name SocialSituationName,
@NoCaseData9 NoCaseData9,
isnull((select top 1 dbo.GetCasesDegreeName(Id) from CaseData3 TT where CaseId=T.Id order by TT.Line),'')Top1CasesDegreeName
from Cases3 T
left join SocialSituations Sc on(T.SocialSituationId=Sc.Id)
where T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetCases3All]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCases3All]
@CasesDegreeId int,
@QualificationId int,
@FromDateOfBirth datetime,
@ToDateOfBirth datetime,
@FromJobDate datetime,
@ToJobDate datetime,
@FromJoinDate datetime,
@ToJoinDate datetime,
@CasesDepartementId int,
@EntedabId int
as

select *,
dbo.GetCasesDegreeName(MyCasesDegreeId)CasesDegreeName,
dbo.GetQualificationName(MyQualificationId)'المؤهل الدراسي'
from
(
select T.*,
(select top 1 TT.DayDate from CaseData3 TT where TT.CaseId=T.Id order by TT.Line )'تاريخ مباشرة العمل',
(select top 1 TT.Id from CaseData3 TT where TT.CaseId=T.Id order by TT.Line desc)MyCasesDegreeId,
(select top 1 TT.Id from CaseData6 TT where TT.CaseId=T.Id order by TT.Line desc)MyQualificationId,
(select top 1 TT.Id from CaseData2 TT where TT.CaseId=T.Id order by TT.Line desc)MyCasesDepartementId,
dbo.getCasesDepartement2Name((select top 1 TT.Id from CaseData2 TT where TT.CaseId=T.Id order by TT.Line desc))CasesDepartementName,
Sc.Name SocialSituationName,
D1.DayDate,D1.Notes D1_Notes
from Cases3 T
left join SocialSituations Sc on(T.SocialSituationId=Sc.Id)
left join CaseData1 D1 on(D1.CaseId=T.Id)
)Tbl
where (MyCasesDegreeId=@CasesDegreeId or @CasesDegreeId=0)
and (MyQualificationId=@QualificationId or @QualificationId=0)
and DateOfBirth between @FromDateOfBirth and @ToDateOfBirth
and JobDate between @FromJobDate and @ToJobDate
and JoinDate between @FromJoinDate and @ToJoinDate
and (MyCasesDepartementId=@CasesDepartementId or @CasesDepartementId=0)
and (EntedabId=@EntedabId or @EntedabId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetCases4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCases4]
@Id int
as

declare @Year int=year(getdate())

declare @x int=0

set @x =0
declare @str7 nvarchar(4000)=''

select @x=isnull(Min(Line),0)-1 from(
select Top 3 Line from CaseData7 where CaseId=@Id order by Line DESC
)Tbl
while exists(select * from CaseData7 where CaseId=@Id and Line>@x)
begin
	select Top 1 @x=Line from CaseData7 where CaseId=@Id and Line>@x order by Line
	select Top 1 @str7+='** '+dbo.GetEstimateName(EstimateId)+' لسنة '+Year+' ' 
	from CaseData7 where CaseId=@Id and Line=@x order by Line
end

set @x =0
declare @str9 nvarchar(4000)=''
while exists(select * from CaseData9 where CaseId=@Id and Line>@x and Year in(@Year,@Year-1,@Year-2))
begin
	select Top 1 @x=Line from CaseData9 where CaseId=@Id and Line>@x and Year in(@Year,@Year-1,@Year-2) order by Line
	select Top 1 @str9+='** رقم القرار '+No+' تاريخ الصدور '+DayDate+' نوع الجزاء '+CasesPunichId+' تاريخ الاعتماد '+DayDate2+'
' from CaseData9 where CaseId=@Id and Line=@x order by Line
end
if @str9='' set @str9='--------------------------------------------------لا يوجد--------------------------------------------------'

set @x =0
declare @str10 nvarchar(4000)=''
while exists(select * from CaseData10 where CaseId=@Id and Line>@x)
begin
	select Top 1 @x=Line from CaseData10 where CaseId=@Id and Line>@x order by Line
	select Top 1 @str10+='** ثم ردت الأقدمية اعتبارا من '+DayDate+' بسبب '+Notes+'
' from CaseData10 where CaseId=@Id and Line=@x order by Line
end

set @x =0
declare @str2 nvarchar(4000)=''
select Top 1 @str2=dbo.GetCasesDepartements2Name(Id)
from CaseData2 where CaseId=@Id order by Line desc


set @x =0
declare @str11 nvarchar(4000)=''
while exists(select * from CaseData11 where CaseId=@Id and Line>@x and Year in(@Year,@Year-1,@Year-2))
begin
	select Top 1 @x=Line from CaseData11 where CaseId=@Id and Line>@x and Year in(@Year,@Year-1,@Year-2) order by Line
	select Top 1 @str11+='** النوع: '+dbo.GetMandateCategoriesName(MandateCategoryId)+' - المكان: '+dbo.GetMandatePlacesName(MandatePlaceId)+' - التاريخ: '+DayDate+' - ملاحظات: '+Notes+'
' from CaseData11 where CaseId=@Id and Line=@x order by Line
end
if @str11='' set @str11='--------------------------------------------------لا يوجد--------------------------------------------------'


select T.Id,T.ArName,T.DateOfBirth,T.MotherName,T.JobDate,T.JoinDate,
(select top 1 TT.DayDate from CaseData3 TT where TT.CaseId=T.Id order by TT.Line )'تاريخ مباشرة العمل',
dbo.GetCasesDegreeName((select top 1 TT.Id from CaseData3 TT where TT.CaseId=T.Id order by TT.Line desc))CasesDegreeName,
dbo.GetQualificationName((select top 1 TT.Id from CaseData6 TT where TT.CaseId=T.Id order by TT.Line desc))'المؤهل الدراسي',
@str2 'آخر قسم',
@str7 'التقرير السنوي',
@str9 'الجزاءات',
@str10 'الأقدمية',
@str11 'الانتدابات',
Sc.Name SocialSituationName 
from Cases3 T
left join SocialSituations Sc on(T.SocialSituationId=Sc.Id)
where T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetCases4Editing]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCases4Editing]
@Id int
as


declare @x int=0
declare @CurrentLine int=0

set @x =0
set @CurrentLine =0
declare @str1 nvarchar(1000)=''
while exists(select * from DeletedCaseData1 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData1 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str1+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData1 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData1 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData1 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str1+='** التاريخ: '+DayDate+' البيان '+Notes+' 
'
		from DeletedCaseData1 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str2 nvarchar(1000)=''
while exists(select * from DeletedCaseData2 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData2 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str2+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData2 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData2 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData2 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str2+='** رقم القرار: '+DocNo+' التاريخ '+Daydate+' '+DocNo+' القسم '+dbo.getCasesDepartement2Name(Id)+' 
'
		from DeletedCaseData2 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str3 nvarchar(1000)=''
while exists(select * from DeletedCaseData3 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData3 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str3+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData3 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData3 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData3 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str3+='** التاريخ: '+DayDate+' الدرجة '+dbo.GetCasesDegreeName(Id)+' 
'
		from DeletedCaseData3 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str4 nvarchar(1000)=''
while exists(select * from DeletedCaseData4 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData4 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str4+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData4 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData4 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData4 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str4+='** التاريخ: '+DayDate+' العلاوة '+Notes+' 
'
		from DeletedCaseData4 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str5 nvarchar(1000)=''
while exists(select * from DeletedCaseData5 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData5 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str5+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData5 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData5 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData5 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str5+='** التاريخ: '+DayDate+' العلاوة '+Notes+' 
'
		from DeletedCaseData5 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str6 nvarchar(1000)=''
while exists(select * from DeletedCaseData6 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData6 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str6+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData6 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData6 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData6 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str6+='** التاريخ: '+DayDate+' المؤهل '+dbo.GetQualificationName(id)+' بيانات المؤهل: '+Notes+' التقدير: '+dbo.GetEstimateName(DegreeId)+' المجموع: '+Total+' 
		'
		from DeletedCaseData6 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str7 nvarchar(1000)=''
while exists(select * from DeletedCaseData7 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData7 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str7+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData7 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData7 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData7 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str7+='** '+dbo.GetEstimateName(EstimateId)+' لسنة '+Year+' 
'
		from DeletedCaseData7 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str8 nvarchar(1000)=''
while exists(select * from DeletedCaseData8 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData8 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str8+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData8 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData8 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData8 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str8+='** رقم القرار '+No+' تاريخ الصدور '+DayDate+' نوع القرار: '+dbo.GetCasesOrderTypeName(CasesOrderTypeId)+' اعتبارا من تاريخ: '+DayDate2+' 
'
		from DeletedCaseData8 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str9 nvarchar(1000)=''
while exists(select * from DeletedCaseData9 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData9 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str9+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData9 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData9 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData9 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str9+='** رقم القرار '+No+' تاريخ الصدور '+DayDate+' نوع الجزاء '+CasesPunichId+' تاريخ الاعتماد '+DayDate2+'
'from DeletedCaseData9 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str10 nvarchar(1000)=''
while exists(select * from DeletedCaseData10 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData10 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str10+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData10 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData10 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData10 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str10+='** ثم ردت الأقدمية اعتبارا من '+DayDate+' بسبب '+Notes+'
'from DeletedCaseData10 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end

set @x =0
set @CurrentLine =0
declare @str11 nvarchar(1000)=''
while exists(select * from DeletedCaseData11 where CaseId=@Id and LastLine>@CurrentLine)
begin
	select Top 1 @CurrentLine=LastLine from DeletedCaseData11 where CaseId=@Id and LastLine>@CurrentLine order by LastLine
	select Top 1 @str11+='
****** '+dbo.ToStrDate(DeletedDate)+' '+dbo.ToStrTime(DeletedDate)+' ****** '+dbo.GetEmpArName(UserDelete)+' ****** '+State+' ****** 
'
	from DeletedCaseData11 where CaseId=@Id and LastLine=@CurrentLine
	while exists(select * from DeletedCaseData11 where CaseId=@Id and LastLine=@CurrentLine and Line>@x)
	begin
		select Top 1 @x=Line from DeletedCaseData11 where CaseId=@Id and LastLine=@CurrentLine and Line>@x order by Line
		select Top 1 @str11+='** النوع: '+dbo.GetMandateCategoriesName(MandateCategoryId)+' - المكان: '+dbo.GetMandatePlacesName(MandatePlaceId)+' - التاريخ: '+DayDate+' - ملاحظات: '+Notes+'
'from DeletedCaseData11 where CaseId=@Id and LastLine=@CurrentLine and Line=@x order by Line
	end
end


select T.DeletedDate,T.UserDelete,dbo.GetEmpArName(T.UserDelete)UserDeleteName,T.LastLine,T.State,
T.Id,T.ArName,T.DateOfBirth,T.MotherName,T.JobDate,T.JoinDate,
(select top 1 TT.DayDate from DeletedCaseData3 TT where TT.CaseId=T.Id order by TT.Line )'تاريخ مباشرة العمل',
dbo.GetCasesDegreeName((select top 1 TT.Id from DeletedCaseData3 TT where TT.CaseId=T.Id order by TT.Line desc))CasesDegreeName,
dbo.GetQualificationName((select top 1 TT.Id from DeletedCaseData6 TT where TT.CaseId=T.Id order by TT.Line desc))'المؤهل الدراسي',
@str1 'محل الاقامة',
@str2 'الأقسام',
@str3 'الدرجات',
@str4 'العلاوات التشجيعية',
@str5 'علاوات المؤهل',
@str6 'بيانات المؤهل',
@str7 'كفاءة الأداء',
@str8 'القرارات الوزارية',
@str9 'الجزاءات',
@str10 'الأقدمية',
@str11 'الانتدابات',
Sc.Name SocialSituationName 
from deletedCases3 T
left join SocialSituations Sc on(T.SocialSituationId=Sc.Id)
where T.Id=@Id
order by T.LastLine
GO
/****** Object:  StoredProcedure [dbo].[GetCasesAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCasesAll]
@CaseTypeId int, 
@DoctorId int, 
@CompanyId int
--with encryption
as
select T.Id,T.Name,
Address,JobId,dbo.GetJobName(JobId)JobName,
Notes,HomePhone,Mobile,Email,
CaseTypeId,dbo.GetCaseTypeName(CaseTypeId)CaseTypeName,
DoctorId,dbo.GetEmpArName(DoctorId)DoctorName,
CompanyId,dbo.GetCompanyName1(CompanyId)CompanyName1,
MemberName,
RelationId,dbo.GetRelationName(RelationId)RelationName,
BrokerCoId,dbo.GetBrokerCoName(BrokerCoId)BrokerCoName,
MembershipNo,
C.Name CityName,
G.Name GenderName,
T.DateOnAdmission
from Cases T
left join Cities C on(C.CountryId=1 and T.CityId=C.Id)
left join Gender G on(T.Gender=G.Id)
where (CaseTypeId=@CaseTypeId or @CaseTypeId=0)
and(DoctorId=@DoctorId or @DoctorId=0)
and(CompanyId=@CompanyId or @CompanyId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetCasesAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCasesAll2]
as



select T.*,
(select top 1 TT.DayDate from CaseData3 TT where TT.CaseId=T.Id order by TT.Line )'تاريخ مباشرة العمل',
dbo.GetCasesDegreeName((select top 1 TT.Id from CaseData3 TT where TT.CaseId=T.Id order by TT.Line desc))CasesDegreeName,
dbo.GetQualificationName((select top 1 TT.Id from CaseData6 TT where TT.CaseId=T.Id order by TT.Line desc))'المؤهل الدراسي',
(select Top 1 dbo.GetCasesDepartements2Name(CaseData2.Id)from CaseData2 where CaseId=T.Id order by Line desc)'آخر قسم',
Sc.Name SocialSituationName,
D1.DayDate,D1.Notes D1_Notes,


dbo.GetGenderName(T.Gender)GenderName,
dbo.GetCasesDepartementsName(T.CasesDepartementId)CasesDepartementsName,
dbo.GetSpecificGroupsName(T.SpecificGroupId)SpecificGroupsName,
dbo.GetBirthPlacesName(T.BirthPlaceId)BirthPlacesName,
dbo.GetSocialSituationsName(T.SocialSituationId)SocialSituationsName,
dbo.GetPenDepartmentName(T.PenDepartmentId)PenDepartmentName,
dbo.GetLeaveJobNoteName(T.LeaveJobNoteId)LeaveJobNoteName,
dbo.GetWeekDaysName(T.WeekDayId)WeekDaysName,

S1.DayDate S1_DayDate,
S1.Notes S1_Notes,

S2.DayDate S2_DayDate,
S2.DocNo S2_DocNo,
dbo.GetCasesDepartements2Name(S2.Id) S2_Id,

S3.DayDate S3_DayDate,
dbo.GetCasesDegreeName(S3.Id) S3_Id,

S4.DayDate S4_DayDate,
S4.Notes S4_Notes,

S5.DayDate S5_DayDate,
S5.Notes S5_Notes,

S6.DayDate S6_DayDate,
S6.Notes S6_Notes,
dbo.GetEstimateName(S6.DegreeId) S6_DegreeId,
dbo.GetQualificationName(S6.Id) S6_Id,
S6.Total S6_Total,

S7.DegreeId S7_DegreeId,
S7.DegreeName S7_DegreeName,
dbo.GetEstimateName(S7.EstimateId) S7_EstimateId,
S7.Year S7_Year,

S8.DayDate S8_DayDate,
S8.DayDate2 S8_DayDate2,
S8.CasesOrderTypeId S8_CasesOrderTypeId,
S8.No S8_No,

S9.DayDate S9_DayDate,
S9.CasesPunichId S9_CasesPunichId,
S9.DayDate2 S9_DayDate2,
S9.No S9_No,
S9.Year S9_Year,

S10.DayDate S10_DayDate,
S10.Notes S10_Notes,

S11.DayDate S11_DayDate,
S11.Notes S11_Notes,
dbo.GetMandateCategoriesName(S11.MandateCategoryId) S11_MandateCategoryId,
dbo.GetMandatePlacesName(S11.MandatePlaceId) S11_MandatePlaceId,
S11.Year S11_Year

from Cases3 T
left join SocialSituations Sc on(T.SocialSituationId=Sc.Id)
left join CaseData1 D1 on(D1.CaseId=T.Id)

left join(select TT.CaseId,max(TT.Line)Line from CaseData1 TT group by TT.CaseId )T1 on(T.Id=T1.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData1 TT)S1 on(S1.CaseId=T1.CaseId and S1.Line=T1.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData2 TT group by TT.CaseId )T2 on(T.Id=T2.CaseId)
left join(select TT.CaseId,TT.Line,TT.Id,TT.DayDate,TT.DocNo from CaseData2 TT)S2 on(S2.CaseId=T2.CaseId and S2.Line=T2.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData3 TT group by TT.CaseId )T3 on(T.Id=T3.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Id from CaseData3 TT)S3 on(S3.CaseId=T3.CaseId and S3.Line=T3.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData4 TT group by TT.CaseId )T4 on(T.Id=T4.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData4 TT)S4 on(S4.CaseId=T4.CaseId and S4.Line=T4.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData5 TT group by TT.CaseId )T5 on(T.Id=T5.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData5 TT)S5 on(S5.CaseId=T5.CaseId and S5.Line=T5.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData6 TT group by TT.CaseId )T6 on(T.Id=T6.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes,TT.Id,TT.DegreeId,TT.Total from CaseData6 TT)S6 on(S6.CaseId=T6.CaseId and S6.Line=T6.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData7 TT group by TT.CaseId )T7 on(T.Id=T7.CaseId)
left join(select TT.CaseId,TT.Line,TT.DegreeId,TT.DegreeName,TT.EstimateId,TT.Year from CaseData7 TT)S7 on(S7.CaseId=T7.CaseId and S7.Line=T7.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData8 TT group by TT.CaseId )T8 on(T.Id=T8.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.CasesOrderTypeId,TT.DayDate2,TT.No from CaseData8 TT)S8 on(S8.CaseId=T8.CaseId and S8.Line=T8.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData9 TT group by TT.CaseId )T9 on(T.Id=T9.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.CasesPunichId,TT.DayDate2,TT.No,TT.Year from CaseData9 TT)S9 on(S9.CaseId=T9.CaseId and S9.Line=T9.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData10 TT group by TT.CaseId )T10 on(T.Id=T10.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData10 TT)S10 on(S10.CaseId=T10.CaseId and S10.Line=T10.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData11 TT group by TT.CaseId )T11 on(T.Id=T11.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes,TT.MandateCategoryId,TT.MandatePlaceId,TT.Year from CaseData11 TT)S11 on(S11.CaseId=T11.CaseId and S11.Line=T11.Line)

where T.LeaveJob=0
GO
/****** Object:  StoredProcedure [dbo].[GetCasesAll3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetCasesAll3]
as



select T.*,
(select top 1 TT.DayDate from CaseData3 TT where TT.CaseId=T.Id order by TT.Line )'تاريخ مباشرة العمل',
dbo.GetCasesDegreeName((select top 1 TT.Id from CaseData3 TT where TT.CaseId=T.Id order by TT.Line desc))CasesDegreeName,
dbo.GetQualificationName((select top 1 TT.Id from CaseData6 TT where TT.CaseId=T.Id order by TT.Line desc))'المؤهل الدراسي',
(select Top 1 dbo.GetCasesDepartements2Name(CaseData2.Id)from CaseData2 where CaseId=T.Id order by Line desc)'آخر قسم',
Sc.Name SocialSituationName,
D1.DayDate,D1.Notes D1_Notes,


dbo.GetGenderName(T.Gender)GenderName,
dbo.GetCasesDepartementsName(T.CasesDepartementId)CasesDepartementsName,
dbo.GetSpecificGroupsName(T.SpecificGroupId)SpecificGroupsName,
dbo.GetBirthPlacesName(T.BirthPlaceId)BirthPlacesName,
dbo.GetSocialSituationsName(T.SocialSituationId)SocialSituationsName,
dbo.GetPenDepartmentName(T.PenDepartmentId)PenDepartmentName,
dbo.GetLeaveJobNoteName(T.LeaveJobNoteId)LeaveJobNoteName,
dbo.GetWeekDaysName(T.WeekDayId)WeekDaysName,

S1.DayDate S1_DayDate,
S1.Notes S1_Notes,

S2.DayDate S2_DayDate,
S2.DocNo S2_DocNo,
dbo.GetCasesDepartements2Name(S2.Id) S2_Id,

S3.DayDate S3_DayDate,
dbo.GetCasesDegreeName(S3.Id) S3_Id,

S4.DayDate S4_DayDate,
S4.Notes S4_Notes,

S5.DayDate S5_DayDate,
S5.Notes S5_Notes,

S6.DayDate S6_DayDate,
S6.Notes S6_Notes,
dbo.GetEstimateName(S6.DegreeId) S6_DegreeId,
dbo.GetQualificationName(S6.Id) S6_Id,
S6.Total S6_Total,

S7.DegreeId S7_DegreeId,
S7.DegreeName S7_DegreeName,
dbo.GetEstimateName(S7.EstimateId) S7_EstimateId,
S7.Year S7_Year,

S8.DayDate S8_DayDate,
S8.DayDate2 S8_DayDate2,
S8.CasesOrderTypeId S8_CasesOrderTypeId,
S8.No S8_No,

S9.DayDate S9_DayDate,
S9.CasesPunichId S9_CasesPunichId,
S9.DayDate2 S9_DayDate2,
S9.No S9_No,
S9.Year S9_Year,

S10.DayDate S10_DayDate,
S10.Notes S10_Notes,

S11.DayDate S11_DayDate,
S11.Notes S11_Notes,
dbo.GetMandateCategoriesName(S11.MandateCategoryId) S11_MandateCategoryId,
dbo.GetMandatePlacesName(S11.MandatePlaceId) S11_MandatePlaceId,
S11.Year S11_Year

from Cases3 T
left join SocialSituations Sc on(T.SocialSituationId=Sc.Id)
left join CaseData1 D1 on(D1.CaseId=T.Id)

left join(select TT.CaseId,max(TT.Line)Line from CaseData1 TT group by TT.CaseId )T1 on(T.Id=T1.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData1 TT)S1 on(S1.CaseId=T1.CaseId and S1.Line=T1.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData2 TT group by TT.CaseId )T2 on(T.Id=T2.CaseId)
left join(select TT.CaseId,TT.Line,TT.Id,TT.DayDate,TT.DocNo from CaseData2 TT)S2 on(S2.CaseId=T2.CaseId and S2.Line=T2.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData3 TT group by TT.CaseId )T3 on(T.Id=T3.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Id from CaseData3 TT)S3 on(S3.CaseId=T3.CaseId and S3.Line=T3.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData4 TT group by TT.CaseId )T4 on(T.Id=T4.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData4 TT)S4 on(S4.CaseId=T4.CaseId and S4.Line=T4.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData5 TT group by TT.CaseId )T5 on(T.Id=T5.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData5 TT)S5 on(S5.CaseId=T5.CaseId and S5.Line=T5.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData6 TT group by TT.CaseId )T6 on(T.Id=T6.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes,TT.Id,TT.DegreeId,TT.Total from CaseData6 TT)S6 on(S6.CaseId=T6.CaseId and S6.Line=T6.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData7 TT group by TT.CaseId )T7 on(T.Id=T7.CaseId)
left join(select TT.CaseId,TT.Line,TT.DegreeId,TT.DegreeName,TT.EstimateId,TT.Year from CaseData7 TT)S7 on(S7.CaseId=T7.CaseId and S7.Line=T7.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData8 TT group by TT.CaseId )T8 on(T.Id=T8.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.CasesOrderTypeId,TT.DayDate2,TT.No from CaseData8 TT)S8 on(S8.CaseId=T8.CaseId and S8.Line=T8.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData9 TT group by TT.CaseId )T9 on(T.Id=T9.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.CasesPunichId,TT.DayDate2,TT.No,TT.Year from CaseData9 TT)S9 on(S9.CaseId=T9.CaseId and S9.Line=T9.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData10 TT group by TT.CaseId )T10 on(T.Id=T10.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes from CaseData10 TT)S10 on(S10.CaseId=T10.CaseId and S10.Line=T10.Line)

left join(select TT.CaseId,max(TT.Line)Line from CaseData11 TT group by TT.CaseId )T11 on(T.Id=T11.CaseId)
left join(select TT.CaseId,TT.Line,TT.DayDate,TT.Notes,TT.MandateCategoryId,TT.MandatePlaceId,TT.Year from CaseData11 TT)S11 on(S11.CaseId=T11.CaseId and S11.Line=T11.Line)

where T.LeaveJob=0
GO
/****** Object:  StoredProcedure [dbo].[GetCasesHistoryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCasesHistoryAll]
@InvoiceNo bigint
as

select * from CasesHistoryAll where InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetCasesHistoryAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCasesHistoryAll2]
@InvoiceNo bigint,
@Str nvarchar(4000)=''
as


declare @sql nvarchar(4000)='
select * 
from CasesHistoryAll 
where InvoiceNo='+cast(@InvoiceNo as nvarchar(100))+' 
and Line in('+@Str+')'

exec(@sql)
print @sql
GO
/****** Object:  StoredProcedure [dbo].[GetCasesStatistics]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCasesStatistics]
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1'
--with encryption
as


select tbl.*,T1.MyGetDate EntryDate,
dbo.GetCaseExitGetDate(T1.CaseId,T1.MyGetDate) ExitGetDate,
dbo.GetCaseTypeName((select top 1 TypeId from CasesDetails T where T.CaseId=tbl.CaseId and T.TypeId>0 and T.DoctorId>0 and T.OperationId>0 order by Line desc))CaseTypeName
from
(
select 1 MainFlagId,'العيادات' MainFlagName,T.ClinicId FlagId,TT.Name FlagName,T.DayDate,T.ReservId,T.CaseId,
C.Name CaseName,DATEDIFF(YYYY,C.DateOfBirth,T.DayDate) Age,
T.VisitingType,TTT.Name,T.UserName,dbo.GetEmpArName(T.UserName)EmpArName,
'-' DrArName
from ReservationsClinics T
left join Clinics TT on(TT.Id=T.ClinicId)
left join VisitingTypes TTT on(TTT.Id=T.VisitingType)
left join Cases C on(T.CaseId=C.Id)
where T.DayDate between @FromDate and @ToDate
and Canceled=0

union all

select 1 MainFlagId,'العيادات الخارجية' MainFlagName,T.EmpId FlagId,dbo.GetEmpArName(T.EmpId) FlagName,T.DayDate,T.ReservId,T.CaseId,
C.Name CaseName,DATEDIFF(YYYY,C.DateOfBirth,T.DayDate) Age,
T.VisitingType,TTT.Name,T.UserName,dbo.GetEmpArName(T.UserName)EmpArName,
dbo.GetEmpArName(T.EmpId)DrArName
from Reservations T
left join VisitingTypes TTT on(TTT.Id=T.VisitingType)
left join Cases C on(T.CaseId=C.Id)
where T.DayDate between @FromDate and @ToDate
and Canceled=0

union all

/*select 2 MainFlagId,'العمليات' MainFlagName,T.OperationsRoomId,TT.Name,T.DayDate,T.ReservId,T.CaseId,
C.Name,DATEDIFF(YYYY,C.DateOfBirth,T.DayDate),
T.OperationType,TTT.Name,T.UserName,dbo.GetEmpArName(T.UserName)EmpArName,
dbo.GetEmpArName(T.SurgeonId)DrArName
from ReservationsOperations T
left join OperationsRooms TT on(TT.Id=T.OperationsRoomId)
left join OperationTypes TTT on(TTT.Id=T.OperationType)
left join Cases C on(T.CaseId=C.Id)
where T.DayDate between @FromDate and @ToDate
and Canceled=0
*/
select 2 MainFlagId,'العمليات' MainFlagName,T.RoomId,TT.Name,T.DayDate,T.InvoiceNo,T.CaseId,
C.Name,DATEDIFF(YYYY,C.DateOfBirth,T.DayDate),
T2.OperationTypeId,TTT.Name,T.UserName,dbo.GetEmpArName(T.UserName)EmpArName,
dbo.GetEmpArName(T.DrId1)DrArName
from OperationMotions T
left join OperationMotionsOperationTypes T2 on(T.InvoiceNo=T2.InvoiceNo)
left join OperationsRooms TT on(TT.Id=T.RoomId)
left join OperationTypes TTT on(TTT.Id=T2.OperationTypeId)
left join Cases C on(T.CaseId=C.Id)
where T.DayDate between @FromDate and @ToDate
and Canceled=0

union all

select 3 MainFlagId,'الوحدات الداخلية' MainFlagName,T.RoomId,TT.Name,T.DayDate,T.Id,T.CaseId,
C.Name,DATEDIFF(YYYY,C.DateOfBirth,T.DayDate),
0,C.DiagnoseOnAdmission,T.UserName,dbo.GetEmpArName(T.UserName)EmpArName,
dbo.GetEmpArName(T.SurgeonId)DrArName
from RoomsData T
left join Rooms TT on(TT.Id=T.RoomId)
left join Cases C on(T.CaseId=C.Id)
where T.DayDate between @FromDate and @ToDate
and isnull(Canceled,0)=0
)tbl
left join (
				select CaseId,MIN(Line)Line
				from CasesDetails
				where CAST(MyGetDate as date) between @FromDate and @ToDate
				group by CaseId
	) T0 on(tbl.CaseId=T0.CaseId)
	left join CasesDetails T1 on(T0.Line=T1.Line)
GO
/****** Object:  StoredProcedure [dbo].[GetCenterNetIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCenterNetIncome]
@StoreId int=1,
@FromDate datetime='2022-1-1',
@ToDate datetime='2022-4-1'
as

select 1 MyOrder,F.Name F_Name,
G.Name 'Rem',
isnull(SUM(D.Value)*(Case when M.Flag in(10,13) then 1. else -1. end),0) Value
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join Items_View It on(It.Id=D.ItemId)
Left join Groups G on(G.Id=It.GroupId)
left join SalesFlags F on(M.Flag=F.Id)
where (M.StoreId=@StoreId or @StoreId=0)
and M.DayDate between @FromDate and @ToDate
and M.Flag in(9,10,13,14)
group by F.Name,G.Name,F.FlagValue,M.Flag

union all

select 2 MyOrder,'إيراد القاعات','إيراد القاعات',isnull(Sum(M.CenterValue),0) Value
from BankCash6 M
where (M.StoreId=@StoreId or @StoreId=0)
and M.DayDate between @FromDate and @ToDate

union all

select 3 MyOrder,
(Case when M.Flag in(1,3) then 'مقبوضات' else 'مدفوعات' end),
(Case when M.Flag in(1,2) then 'خزنة' else 'بنك' end),
isnull(Sum(M.Value)*(Case when M.Flag in(1,3) then 1. else -1. end),0) Value
from BankCash_G M
where M.DayDate between @FromDate and @ToDate
and M.LinkFile not in(5,14)
group by M.Flag

order by  MyOrder,Value desc
GO
/****** Object:  StoredProcedure [dbo].[GetChart]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetChart]
(
@FromId nvarchar(100),
@ToId nvarchar(100)
)
--with encryption
as
select *,
replicate(' ',Level)+cast(id as nvarchar(100))+' - '+Name MyName 
from Chart
where (Id>=@FromId or @FromId='')
and (Id<=@ToId or @ToId='')
order by Id
GO
/****** Object:  StoredProcedure [dbo].[GetChatList]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetChatList]
@UserToId bigint,
@IsGrouping int
as

if @IsGrouping=0
	select *
	from(
		Select E.Id,E.Name,E.LevelId,L.Name LevelName,
		(
			select MAX(C0.Line) 
			from Chat C0 
			where (
					(C0.UserFromId=E.Id and C0.UserToId=@UserToId)or
					(C0.UserToId=E.Id and C0.UserFromId=@UserToId)
				)
		)ChatLine,
		(
			select count(C0.Line) 
			from Chat C0 
			where IsSeen=0
			and C0.UserFromId=E.Id 
			and C0.UserToId=@UserToId
		)Count
		from Employees E
		left join Levels L on(E.LevelId=L.Id)
		where E.SystemUser=1
		and E.Stopped=0
		and E.Id<>@UserToId
	)Tbl
	left join Chat C on(Tbl.ChatLine=C.Line)
	order by C.Line desc,Tbl.Name

else

	select *
	from(
		Select L.Id,L.Name,0 LevelId,'' LevelName,
		(
			select MAX(C0.Line) 
			from Chat C0 
			where C0.ToLevelId=L.Id
		)ChatLine,
		0 Count
		from Levels L 
	)Tbl
	left join Chat C on(Tbl.ChatLine=C.Line)
	order by C.Line desc,Tbl.Name

GO
/****** Object:  StoredProcedure [dbo].[GetChatOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetChatOne]
@UserFromId bigint,
@UserToId bigint,
@IsGrouping int
as



if @IsGrouping=0
	select * from (
		select top 1000 
		C.UserFromId,C.UserToId,C.Msg,convert(char(5), C.MyGetDate, 108)MyGetDate,C.IsDelivered,convert(char(5), C.DeliveredDate, 108)DeliveredDate,C.IsSeen,convert(char(5), C.SeenDate, 108)SeenDate,
		C.Line,C.ToLevelId,
		dbo.ToStrDate(C.MyGetDate)MyDate,E.Name,
		(Case when UserFromId=@UserFromId then 1 else 0 end)IsMe
		from Chat C
		left join Employees E on(C.UserFromId=E.Id)
		where(
				(C.UserFromId=@UserFromId and C.UserToId=@UserToId)or
				(C.UserToId=@UserFromId and C.UserFromId=@UserToId)
			)
		order by Line desc
	)Tbl
	order by Line

else
	select * from (
		select distinct top 1000
		C.UserFromId,0 UserToId,C.Msg,convert(char(5), max(C.MyGetDate), 108)MyGetDate,0 IsDelivered,null DeliveredDate,0 IsSeen,null SeenDate,
		max(C.Line)Line,C.ToLevelId,
		dbo.ToStrDate(max(C.MyGetDate))MyDate,'' Name,
		1 IsMe
		from Chat C
		where(C.UserFromId=@UserFromId and C.ToLevelId=@UserToId)
		group by C.UserFromId,C.Msg,C.ToLevelId
		order by Line desc
	)Tbl
	order by Line
	
	

GO
/****** Object:  StoredProcedure [dbo].[GetCheckMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCheckMotion] 
@IsRPT int=0,
@TypeId int,
@CheckTypeName2 nvarchar(100),
@CheckNo nvarchar(100),
@MainLinkFile int,
@MainLinkFile2 int,
@BankId bigint,
@BankId2 bigint,
@Rdo int,
@FromDate datetime,
@ToDate datetime,
@EmpId int
--with encryption
as
select Tbl.*,Tbl2.*,
(case when @Rdo=1 then [تاريخ التسجيل] when @Rdo=2 then [تاريخ الاستحقاق] else [تاريخ آخر حركة] end) MyDate,
(case when @Rdo=1 then 'تاريخ التسجيل' when @Rdo=2 then 'تاريخ الاستحقاق' else 'تاريخ آخر حركة' end) MyDateName
from 
(
select M.Flag,(Case when M.Flag=1 then 'أوراق قبض' else 'أوراق دفع' end) 'النوع',
CheckNo,dbo.GetCheckBankName(CheckBankId)'بنك الشيك',dbo.ToStrDate(DayDate) 'تاريخ التسجيل',dbo.ToStrDate(CheckDate) 'تاريخ الاستحقاق',
cast(ROW_NUMBER()over(partition by CheckNo Order by Daydate,CheckTypeId)as nvarchar(100)) ROWNUMBER,
cast((Case when M.Flag=2 then MainLinkFile else LinkFile end)as nvarchar(100))LinkFile,
(Case when M.Flag=2 then dbo.GetLinkFileName(MainLinkFile) else dbo.GetLinkFileName(LinkFile) end)LinkFileName,
cast((Case when M.Flag=2 then BankId else SubAccNo end)as nvarchar(100))AccNo,
(Case when M.Flag=2 then dbo.GetSubAccNameLink(MainLinkFile,BankId) else dbo.GetSubAccNameLink(LinkFile,SubAccNo) end)AccName,
cast(CAST(MainValue as decimal(18,2)) as nvarchar(100))MainValue,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetCheckTypeName(CheckTypeId)CheckTypeName
from BankCash_G2 M
LEFT JOIN BankCash_G2Types T on(M.Flag=T.Flag and M.BankCash_G2TypeId=T.Id)
left join Employees EE on(EE.Id=@EmpId)
left join EmpBankCash_G2Types E on(E.Flag=T.Flag and E.TypeId=T.Id and E.EmpId=@EmpId)
	
where CheckTypeId<>1
and DayDate<=@ToDate
and Canceled=0

and(E.EmpId=@EmpId or EE.Manager=1)

)Tbl
left join
(
select CheckNo CheckNo2,
cast(ROW_NUMBER()over(partition by CheckNo Order by Daydate desc,CheckTypeId desc)as nvarchar(100)) ROWNUMBER2,
dbo.ToStrDate(DayDate) 'تاريخ آخر حركة',
cast((Case when Flag=1 then MainLinkFile else LinkFile end)as nvarchar(100))LinkFile2,
(Case when Flag=1 then dbo.GetLinkFileName(MainLinkFile) else dbo.GetLinkFileName(LinkFile) end)LinkFileName2,
cast((Case when Flag=1 then BankId else SubAccNo end)as nvarchar(100))AccNo2,
(Case when Flag=1 then dbo.GetSubAccNameLink(MainLinkFile,BankId) else dbo.GetSubAccNameLink(LinkFile,SubAccNo) end)AccName2,
cast(CAST(MainValue as decimal(18,2)) as nvarchar(100))MainValue2,
dbo.GetCurrencyName(CurrencyId)CurrencyName2,
dbo.GetCheckTypeName(CheckTypeId)CheckTypeName2
from BankCash_G2
where CheckTypeId<>1
and DayDate<=@ToDate
and Canceled=0
)Tbl2 on(Tbl.CheckNo=Tbl2.CheckNo2)
where Tbl.ROWNUMBER=1 and Tbl2.ROWNUMBER2=1
and (@IsRPT=0 or
	(
		(Flag=@TypeId or @TypeId=0) and
 (CheckTypeName2 like '%'+@CheckTypeName2+'%' or @CheckTypeName2='-') and
 (CheckNo like '%'+@CheckNo+'%') and
 (LinkFile=@MainLinkFile or @MainLinkFile=0) and
 (LinkFile2=@MainLinkFile2 or @MainLinkFile2=0) and
 (AccNo=@BankId or @BankId=0) and
 (AccNo2=@BankId2 or @BankId2=0) and
 (
			(@Rdo=1 and [تاريخ التسجيل] between @FromDate and @ToDate)or
			(@Rdo=2 and [تاريخ الاستحقاق] between @FromDate and @ToDate)or
			(@Rdo=3 and [تاريخ آخر حركة] between @FromDate and @ToDate and CheckTypeName2='محصل')
 )
	)
)
order by MyDate
GO
/****** Object:  StoredProcedure [dbo].[GetCheckMotionSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCheckMotionSub]
@CheckNo nvarchar(100)
--with encryption
as
select cast((Case when Flag=2 then 'المدفوعات' else 'المقبوضات' end)as nvarchar(100))'نوع الحركة',
dbo.GetBankCash_G2TypeName(Flag,BankCash_G2TypeId) 'اليومية',InvoiceNo 'مسلسل',
dbo.ToStrDate(DayDate) 'التاريخ',
CheckNo 'رقم الشيك',
ROW_NUMBER()over(partition by CheckNo Order by Daydate) ROWNUMBER,
cast(MainLinkFile as nvarchar(100))MainLinkFile,
dbo.GetLinkFileName(MainLinkFile) 'الجهة الرئيسية',
cast(BankId as nvarchar(100)) 'الكود',
dbo.GetSubAccNameLink(MainLinkFile,BankId) 'الاسم',
MainValue 'المبلغ',
dbo.GetCurrencyName(CurrencyId) 'العملة',
cast(LinkFile as nvarchar(100))LinkFile,
dbo.GetLinkFileName(LinkFile) 'الجهة الفرعية',
cast(SubAccNo as nvarchar(100)) 'الفرعي',
dbo.GetSubAccNameLink(LinkFile,SubAccNo) 'اسم الفرعي',
dbo.GetCheckTypeName(CheckTypeId) 'الحالة'
from BankCash_G2
where CheckNo=@CheckNo
and Canceled=0
order by DayDate
GO
/****** Object:  StoredProcedure [dbo].[GetCheckStates]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCheckStates]
@LinkFile int=0,
@AccNo bigint=0,
@LinkFile2 int=0,
@AccNo2 bigint=0
--with encryption
as
select Tbl.CheckNo 'رقم الشيك',dbo.ToStrDate(Tbl.[تاريخ الاستحقاق]) 'تاريخ الاستحقاق',
Tbl.الجهة,
Tbl2.[حالة الشيك],cast(cast(Tbl.المبلغ as decimal(32,2))as nvarchar(100))المبلغ,
cast(cast(isnull(Tbl3.المدفوع,0) as decimal(32,2)) as nvarchar(100))المدفوع,
cast(cast(isnull(Tbl.المبلغ,0)-isnull(Tbl3.المدفوع,0) as decimal(32,2)) as nvarchar(100)) 'المتبقي' from 
(
select CheckNo,dbo.ToStrDate(DayDate) 'تاريخ التسجيل',dbo.ToStrDate(CheckDate) 'تاريخ الاستحقاق',
(Case when Flag=2 and CheckTypeId<>3 then dbo.GetSubAccNameLink(MainLinkFile,BankId) else dbo.GetSubAccNameLink(LinkFile,SubAccNo) end)'الجهة',
ROW_NUMBER()over(partition by CheckNo Order by Daydate,CheckTypeId) ROWNUMBER,
MainValue 'المبلغ',
dbo.GetCurrencyName(CurrencyId)CurrencyName,
MainLinkFile,BankId,
LinkFile,SubAccNo
from BankCash_G2
where CheckTypeId<>1
and Canceled=0
)Tbl
left join
(
select CheckNo CheckNo2,ROW_NUMBER()over(partition by CheckNo Order by Daydate desc,CheckTypeId desc) ROWNUMBER2,
cast((Case when Flag=1 then MainLinkFile else LinkFile end)as nvarchar(100))LinkFile2,
(Case when Flag=1 then dbo.GetLinkFileName(MainLinkFile) else dbo.GetLinkFileName(LinkFile) end)LinkFileName2,
cast((Case when Flag=1 then BankId else SubAccNo end)as nvarchar(100))AccNo2,
(Case when Flag=1 then dbo.GetSubAccNameLink(MainLinkFile,BankId) else dbo.GetSubAccNameLink(LinkFile,SubAccNo) end)AccName2,
dbo.GetCheckTypeName(CheckTypeId) 'حالة الشيك'
from BankCash_G2
where CheckTypeId<>1
and Canceled=0
)Tbl2 on(Tbl.CheckNo=Tbl2.CheckNo2)
left join
(
select CheckNo CheckNo3,
--sum(Case when Flag=1 then MainValue else -MainValue end)'المدفوع'
sum(MainValue)'المدفوع'
from BankCash_G2
where CheckTypeId<>1 
and CheckTypeId in(4,5,6,8)
and Canceled=0
group by CheckNo
)Tbl3 on(Tbl.CheckNo=Tbl3.CheckNo3)
where Tbl.ROWNUMBER=1 and Tbl2.ROWNUMBER2=1
and 
	(
	(Tbl2.LinkFile2=@LinkFile and Tbl2.AccNo2=@AccNo)or
	(Tbl.MainLinkFile=@LinkFile2 and Tbl.BankId=@AccNo2)or
	(Tbl2.LinkFile2=@LinkFile2 and Tbl2.AccNo2=@AccNo2)or
	(Tbl.MainLinkFile=@LinkFile and Tbl.BankId=@AccNo)or
	(Tbl.LinkFile=@LinkFile and Tbl.SubAccNo=@AccNo)or
	(Tbl.LinkFile=@LinkFile2 and Tbl.SubAccNo=@AccNo2)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetClinicschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetClinicschedule]
@ClinicId bigint
--with encryption
as



select Id,Name,'السبت' day,(case when hh>12 then hh-12 else hh end)hh,(case when hh>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm,2)mm from Clinics where Id=@ClinicId and Saturday=1 union all
select Id,Name,'الأحد',(case when hh2>12 then hh2-12 else hh2 end)hh,(case when hh2>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm2,2) from Clinics where Id=@ClinicId and Sunday=1 union all
select Id,Name,'الإثنين',(case when hh3>12 then hh3-12 else hh3 end)hh,(case when hh3>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm3,2) from Clinics where Id=@ClinicId and Monday=1 union all
select Id,Name,'الثلاثاء',(case when hh4>12 then hh4-12 else hh4 end)hh,(case when hh4>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm4,2) from Clinics where Id=@ClinicId and Tuesday=1 union all
select Id,Name,'الأربعاء',(case when hh5>12 then hh5-12 else hh5 end)hh,(case when hh5>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm5,2) from Clinics where Id=@ClinicId and Wednesday=1 union all
select Id,Name,'الخميس',(case when hh6>12 then hh6-12 else hh6 end)hh,(case when hh6>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm6,2) from Clinics where Id=@ClinicId and Thursday=1 union all
select Id,Name,'الجمعة',(case when hh7>12 then hh7-12 else hh7 end)hh,(case when hh7>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm7,2) from Clinics where Id=@ClinicId and Friday=1
GO
/****** Object:  StoredProcedure [dbo].[GetCloseShift]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCloseShift]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId) 'EmpName'
from EmpCloseShift
where (EmpId=@EmpId or @EmpId=0)
and DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetCompanyPrices]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCompanyPrices]
@CompanyId bigint=10
--with encryption
as

select T.CompanyId,T.VisitingTypeId,T.DegreeId,T.Price,T.Payed,T.Remaining,T.Notes,
dbo.GetCompanyName1(T.CompanyId)CompanyName,
cast(dbo.GetVisitingTypesName(T.VisitingTypeId) as nvarchar(100))VisitingTypeName,
dbo.GetDegreeName(T.DegreeId)DegreeName,
VD.Price MainPrice
from DoctorsCompanies T
left join VisitingTypeDegrees VD on(T.DegreeId=VD.DegreeId and T.VisitingTypeId=VD.VisitingTypeId)
where CompanyId=@CompanyId

union all

select T.CompanyId,T.ServiceGroupId,T.Id,T.Price,T.Payed,T.Remaining,T.Notes,
dbo.GetCompanyName1(T.CompanyId)CompanyName,
dbo.GetServiceGroupName(T.ServiceGroupId)ServiceGroupName,
dbo.GetServiceTypeName(T.ServiceGroupId,T.Id)ServiceTypeName,
ST.DrValue+ST.CsValue+ST.CoValue MainPrice
from ServiceCompanies T
left join ServiceTypes ST on(T.ServiceGroupId=ST.ServiceGroupId and T.Id=ST.Id)
where CompanyId=@CompanyId
GO
/****** Object:  StoredProcedure [dbo].[getConferencesMaster]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getConferencesMaster]
@ConferenceId bigint,
@SponsorId bigint
as

select distinct C.Id,C.Code,C.Name,C.MobileNumber,C.WhatsappNumber,C.Email,T.*,S.Name S_Name
from ConferencesMaster T
left join Customers C on (T.CustomerId=C.Id)
left join Sponsors S on (T.SponsorId=S.Id)
where (ConferenceId=@ConferenceId or @ConferenceId=0)
and (T.SponsorId=@SponsorId or @SponsorId=0)
and T.IsAttend=1
GO
/****** Object:  StoredProcedure [dbo].[GetCriminal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminal]
--declare
@CriminalMainAreaId int=1,
@CriminalCircleId int=1,
@RoleId int,
@CriminalStatusId int,
@FromDate datetime,
@ToDate datetime
as

select 
CD2.OrderId 'م',
CD.*,CM.*,
R.Name R_Name,
CC.Name CC_Name,
A.Name A_Name,
N.Name N_Name,
CS.Name CS_Name,
CD2.AccusedName,
CSC.Name CSC_Name,
CAS.Name CAS_Name,
CT.Count
from CriminalDetails CD 
left join(
	select * from(
		select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,InvoiceNoSub,Count(InvoiceNoSub)Count
		from CriminalDetails2
		where InActiveId=0
		group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,InvoiceNoSub
	)CT0
)CT on(CT.CriminalMainAreaId=CD.CriminalMainAreaId and CT.CriminalSubAreaId=CD.CriminalSubAreaId and CT.Year=CD.Year and CT.InvoiceNo=CD.InvoiceNo and CT.InvoiceNoSub=CD.InvoiceNoSub)
left join CriminalDetails2 CD2 on(CD2.CriminalMainAreaId=CD.CriminalMainAreaId and CD2.CriminalSubAreaId=CD.CriminalSubAreaId and CD2.Year=CD.Year and CD2.InvoiceNo=CD.InvoiceNo and CD2.InvoiceNoSub=CD.InvoiceNoSub and CD2.InActiveId=0)
left join CriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalAccusedStatus CAS on(CAS.Id=CD2.CriminalAccusedStatuId)

where (CD.CriminalMainAreaId=@CriminalMainAreaId or @CriminalMainAreaId=0)
and (CD.CriminalCircleId=@CriminalCircleId or @CriminalCircleId=0)
and (CD.CriminalStatusId=@CriminalStatusId or @CriminalStatusId=0)
and (R.Id=@RoleId or @RoleId=0)
and CD.DayDate2 between @FromDate and @ToDate

order by CD2.OrderId
GO
/****** Object:  StoredProcedure [dbo].[GetCriminal30]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetCriminal30]
--declare
@CriminalMainAreaId int=1,
@CriminalCircleId int=1,
@RoleId int,
@CriminalStatusId int,
@FromDate datetime,
@ToDate datetime,
@CriminalDecisionTypeId int,
@RPTFlag int
as

select 
CD2.*,CM.*,
R.Name R_Name,
CC.Name CC_Name,
A.Name A_Name,
N.Name N_Name,
CS.Name CS_Name,
CSC.Name CSC_Name,
CDT.Name CDT_Name
from (
	select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,max(InvoiceNoSub)InvoiceNoSub
	from CriminalDetails
	group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo
) CD 
left join CriminalDetails CD2 on(CD.CriminalMainAreaId=CD2.CriminalMainAreaId and CD.CriminalSubAreaId=CD2.CriminalSubAreaId and CD.Year=CD2.Year and CD.InvoiceNo=CD2.InvoiceNo and CD.InvoiceNoSub=CD2.InvoiceNoSub)
left join CriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD2.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD2.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD2.CriminalDecisionTypeId)

where (CD.CriminalMainAreaId=@CriminalMainAreaId or @CriminalMainAreaId=0)
and (CD2.CriminalCircleId=@CriminalCircleId or @CriminalCircleId=0)
and (CD2.CriminalStatusId=@CriminalStatusId or @CriminalStatusId=0)
and (R.Id=@RoleId or @RoleId=0)
and CD2.DayDate2 between @FromDate and @ToDate
and (CD2.CriminalDecisionTypeId=@CriminalDecisionTypeId or @CriminalDecisionTypeId=0)
and (
	@RPTFlag not in(4,5)
	or
	@RPTFlag=4 and CD2.CriminalDecisionTypeId not in(0)
	or
	@RPTFlag=5 and CD2.CriminalDecisionTypeId not in(0,9,11,12,13)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetCriminal40]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminal40]
--declare
@CriminalMainAreaId int=1,
@CriminalCircleId int=1,
@RoleId int,
@CriminalStatusId int,
@FromDate datetime,
@ToDate datetime,
@CriminalDecisionTypeId int,
@RPTFlag int
as

select 
R.Name R_Name,
Cm.CriminalMainAreaId,CD2.CriminalCircleId,
CD.InvoiceNoSub, 
CC.Name CC_Name,
A.Name A_Name, 
CDT.Name CDT_Name
from (
	select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,max(InvoiceNoSub)InvoiceNoSub
	from CriminalDetails
	group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo
) CD 
left join CriminalDetails CD2 on(CD.CriminalMainAreaId=CD2.CriminalMainAreaId and CD.CriminalSubAreaId=CD2.CriminalSubAreaId and CD.Year=CD2.Year and CD.InvoiceNo=CD2.InvoiceNo and CD.InvoiceNoSub=CD2.InvoiceNoSub)
left join CriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD2.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD2.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD2.CriminalDecisionTypeId)

where (CD.CriminalMainAreaId=@CriminalMainAreaId or @CriminalMainAreaId=0)
and (CD2.CriminalCircleId=@CriminalCircleId or @CriminalCircleId=0)
and (CD2.CriminalStatusId=@CriminalStatusId or @CriminalStatusId=0)
and (R.Id=@RoleId or @RoleId=0)
and CD2.DayDate2 between @FromDate and @ToDate
and (CD2.CriminalDecisionTypeId=@CriminalDecisionTypeId or @CriminalDecisionTypeId=0)
and (
	@RPTFlag not in(4,5)
	or
	@RPTFlag=4 and CD2.CriminalDecisionTypeId not in(0)
	or
	@RPTFlag=5 and CD2.CriminalDecisionTypeId not in(0,9,11,12,13)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminalAll]
--declare
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@CriminalNiabaId int,
@TableNo int,
@TableNoYear int,
@SubNoId int,
@SubNoYear int,
@MainNoId int,
@MainNoYear int,
@CriminalMainChargeId int,
@CriminalSubChargeId int,
@RoleId int,
@CriminalCircleId int,
@CriminalStatusId int,
@CriminalDecisionTypeId int,
@CriminalAccusedId int,
@CriminalAccusedStatusId int,
@CriminalJudgmentTypeId int,
@FromDate datetime,
@ToDate datetime,
@FromDate2 datetime,
@ToDate2 datetime
as

select CD.*,CM.*,
R.Name R_Name,
CC.Name CC_Name,
A.Name A_Name,
S.Name S_Name,
N.Name N_Name,
CS.Name CS_Name,
CD2.AccusedName,
CMC.Name CMC_Name,
CSC.Name CSC_Name,
CAS.Name CAS_Name,
CJT.Name CJT_Name,
CDT.Name CDT_Name
from CriminalDetails CD 
left join CriminalDetails2 CD2 on(CD2.CriminalMainAreaId=CD.CriminalMainAreaId and CD2.CriminalSubAreaId=CD.CriminalSubAreaId and CD2.Year=CD.Year and CD2.InvoiceNo=CD.InvoiceNo and CD2.InvoiceNoSub=CD.InvoiceNoSub and CD2.InActiveId=0)
left join CriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CD.CriminalMainAreaId and S.Id=CD.CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalMainCharge CMC on(CMC.Id=CM.CriminalMainChargeId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalAccusedStatus CAS on(CAS.Id=CD2.CriminalAccusedStatuId)
left join CriminalJudgmentTypes CJT on(CJT.Id=CD2.CriminalJudgmentTypeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD.CriminalDecisionTypeId)

where (CD.CriminalMainAreaId=@CriminalMainAreaId or @CriminalMainAreaId=0)
and (CD.CriminalSubAreaId=@CriminalSubAreaId or @CriminalSubAreaId=0)
and (CD.Year=@Year or @Year=0)
and (CM.CriminalNiabaId=@CriminalNiabaId or @CriminalNiabaId=0)
and (CM.TableNo=@TableNo or @TableNo=0)
and (CM.TableNoYear=@TableNoYear or @TableNoYear=0)
and (CM.SubNoId=@SubNoId or @SubNoId=0)
and (CM.SubNoYear=@SubNoYear or @SubNoYear=0)
and (CM.MainNoId=@MainNoId or @MainNoId=0)
and (CM.MainNoYear=@MainNoYear or @MainNoYear=0)
and (CM.CriminalMainChargeId=@CriminalMainChargeId or @CriminalMainChargeId=0)
and (CM.CriminalSubChargeId=@CriminalSubChargeId or @CriminalSubChargeId=0)

and (R.Id=@RoleId or @RoleId=0)
and (CD.CriminalCircleId=@CriminalCircleId or @CriminalCircleId=0)
and (CD.CriminalStatusId=@CriminalStatusId or @CriminalStatusId=0)
and (CD.CriminalDecisionTypeId=@CriminalDecisionTypeId or @CriminalDecisionTypeId=0)

and (CD2.AccusedId=@CriminalAccusedId or @CriminalAccusedId=0)
and (CD2.CriminalAccusedStatuId=@CriminalAccusedStatusId or @CriminalAccusedStatusId=0)
and (CD2.CriminalJudgmentTypeId=@CriminalJudgmentTypeId or @CriminalJudgmentTypeId=0)

and CD.DayDate between @FromDate and @ToDate
and CD.DayDate2 between @FromDate2 and @ToDate2
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetCriminalAll2]
--declare
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@CriminalNiabaId int,
@TableNo int,
@TableNoYear int,
@SubNoId int,
@SubNoYear int,
@MainNoId int,
@MainNoYear int,
@CriminalMainChargeId int,
@CriminalSubChargeId int,
@RoleId int,
@CriminalCircleId int,
@CriminalStatusId int,
@CriminalDecisionTypeId int,
@CriminalAccusedId int,
@CriminalAccusedStatusId int,
@CriminalJudgmentTypeId int,
@FromDate datetime,
@ToDate datetime,
@FromDate2 datetime,
@ToDate2 datetime
as

select 
CD.CriminalMainAreaId,
CD.CriminalSubAreaId,
CD.Year,
CD.InvoiceNo,
A.Name 'المنطقة الرئيسية',
S.Name 'المنطقة الفرعية',
Cm.TableNo 'رقم الجدول',
Cm.TableNoYear 'السنة',
CM.SubNoId 'الرقم الجزئي',
CM.SubNoYear 'السنة',
N.Name 'النيابة',

CM.MainNoId 'الرقم الكلي',
CM.MainNoYear 'السنة',

dbo.ToStrDate(CD.DayDate2) 'تاريخ الجلسة',
CC.Name 'الدائرة',


CD2.AccusedName 'المتهم',
--CMC.Name 'التهمة الرئيسية',
CSC.Name 'التهمة الفرعية',
CAS.Name 'حالة المتهم',

CS.Name 'حالة القضية',

CJT.Name 'نوع الحكم',
CDT.Name 'نوع القرار',
isnull(CDT.Name,'') 'القرار',
isnull(CD.Notes,'') 'الحكم'
from (
	select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,max(InvoiceNoSub)InvoiceNoSub
	from CriminalDetails2 
	group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo
)CD0
left join CriminalDetails CD on(CD0.CriminalMainAreaId=CD.CriminalMainAreaId and CD0.CriminalSubAreaId=CD.CriminalSubAreaId and CD0.Year=CD.Year and CD0.InvoiceNo=CD.InvoiceNo and CD0.InvoiceNoSub=CD.InvoiceNoSub)
left join (
	select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,InvoiceNoSub,MIN(Line)Line
	from CriminalDetails2 
	group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,InvoiceNoSub
)CD20 on(CD20.CriminalMainAreaId=CD.CriminalMainAreaId and CD20.CriminalSubAreaId=CD.CriminalSubAreaId and CD20.Year=CD.Year and CD20.InvoiceNo=CD.InvoiceNo and CD20.InvoiceNoSub=CD.InvoiceNoSub)
left join CriminalDetails2 CD2 on(CD2.Line=CD20.Line)
left join CriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CD.CriminalMainAreaId and S.Id=CD.CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalMainCharge CMC on(CMC.Id=CM.CriminalMainChargeId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalAccusedStatus CAS on(CAS.Id=CD2.CriminalAccusedStatuId)
left join CriminalJudgmentTypes CJT on(CJT.Id=CD2.CriminalJudgmentTypeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD.CriminalDecisionTypeId)

where (CD.CriminalMainAreaId=@CriminalMainAreaId or @CriminalMainAreaId=0)
and (CD.CriminalSubAreaId=@CriminalSubAreaId or @CriminalSubAreaId=0)
and (CD.Year=@Year or @Year=0)
and (CM.CriminalNiabaId=@CriminalNiabaId or @CriminalNiabaId=0)
and (CM.TableNo=@TableNo or @TableNo=0)
and (CM.TableNoYear=@TableNoYear or @TableNoYear=0)
and (CM.SubNoId=@SubNoId or @SubNoId=0)
and (CM.SubNoYear=@SubNoYear or @SubNoYear=0)
and (CM.MainNoId=@MainNoId or @MainNoId=0)
and (CM.MainNoYear=@MainNoYear or @MainNoYear=0)
and (CM.CriminalMainChargeId=@CriminalMainChargeId or @CriminalMainChargeId=0)
and (CM.CriminalSubChargeId=@CriminalSubChargeId or @CriminalSubChargeId=0)

and (R.Id=@RoleId or @RoleId=0)
and (CD.CriminalCircleId=@CriminalCircleId or @CriminalCircleId=0)
and (CD.CriminalStatusId=@CriminalStatusId or @CriminalStatusId=0)
and (CD.CriminalDecisionTypeId=@CriminalDecisionTypeId or @CriminalDecisionTypeId=0)

and (CD2.AccusedId=@CriminalAccusedId or @CriminalAccusedId=0)
and (CD2.CriminalAccusedStatuId=@CriminalAccusedStatusId or @CriminalAccusedStatusId=0)
and (CD2.CriminalJudgmentTypeId=@CriminalJudgmentTypeId or @CriminalJudgmentTypeId=0)

and CD.DayDate between @FromDate and @ToDate
and CD.DayDate2 between @FromDate2 and @ToDate2
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll2Images]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetCriminalAll2Images]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo bigint

as

select T.MyIndex 'المسلسل',TT.Name 'نوع البيان',T.Description 'الوصف',dbo.ToStrDate(T.DayDate)'التاريخ'
from CriminalImages T
left join ImagesTypes TT on(T.ImagesTypeId=TT.Id)
where CriminalMainAreaId = @CriminalMainAreaId
and CriminalSubAreaId = @CriminalSubAreaId
and Year = @Year 
and InvoiceNo = @InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAll3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminalAll3]
--declare
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@CriminalCircleId int,
@DayDate datetime
as

select 
CD.CriminalMainAreaId,
CD.CriminalSubAreaId,
CD.Year,

ROW_NUMBER()over(order by CD2.OrderId,CS.OrderId,CD.InvoiceNo)'م',
CD.InvoiceNo 'المسلسل',
CD.InvoiceNoSub 'مسلسل الجلسة',
CM.SubNoId 'الرقم الجزئي',
CM.SubNoYear 'السنة',
N.Name 'النيابة',
CM.MainNoId 'الرقم الكلي',
CM.MainNoYear 'السنة',
CD2.AccusedName 'المتهم',
--CMC.Name 'التهمة الرئيسية',
CSC.Name 'التهمة الفرعية',
CS.Name 'حالة القضية',
--CAS.Name 'حالة المتهم',
--CJT.Name 'نوع الحكم',
isnull(CDT.Name,'') 'القرار',
isnull(CD.Notes,'') 'الحكم'
from (
	select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,max(InvoiceNoSub)InvoiceNoSub
	from CriminalDetails2 
	group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo
)CD0
left join CriminalDetails CD on(CD0.CriminalMainAreaId=CD.CriminalMainAreaId and CD0.CriminalSubAreaId=CD.CriminalSubAreaId and CD0.Year=CD.Year and CD0.InvoiceNo=CD.InvoiceNo and CD0.InvoiceNoSub=CD.InvoiceNoSub)
left join (
	select CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,InvoiceNoSub,MIN(Line)Line
	from CriminalDetails2 
	group by CriminalMainAreaId,CriminalSubAreaId,Year,InvoiceNo,InvoiceNoSub
)CD20 on(CD20.CriminalMainAreaId=CD.CriminalMainAreaId and CD20.CriminalSubAreaId=CD.CriminalSubAreaId and CD20.Year=CD.Year and CD20.InvoiceNo=CD.InvoiceNo and CD20.InvoiceNoSub=CD.InvoiceNoSub)
left join CriminalDetails2 CD2 on(CD2.Line=CD20.Line)
left join CriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CD.CriminalMainAreaId and S.Id=CD.CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalMainCharge CMC on(CMC.Id=CM.CriminalMainChargeId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalAccusedStatus CAS on(CAS.Id=CD2.CriminalAccusedStatuId)
left join CriminalJudgmentTypes CJT on(CJT.Id=CD2.CriminalJudgmentTypeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD.CriminalDecisionTypeId)

where (CD.CriminalMainAreaId=@CriminalMainAreaId or @CriminalMainAreaId=0)
and (CD.CriminalSubAreaId=@CriminalSubAreaId or @CriminalSubAreaId=0)
and (CD.CriminalCircleId=@CriminalCircleId or @CriminalCircleId=0)
and CD.DayDate2=@DayDate

order by CD2.OrderId,CS.OrderId

GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAllDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetCriminalAllDeleted]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int
as

select CD.*,CM.*,
R.Name R_Name,
CC.Name CC_Name,
A.Name A_Name,
S.Name S_Name,
N.Name N_Name,
CS.Name CS_Name,
CD2.AccusedName,
CMC.Name CMC_Name,
CSC.Name CSC_Name,
CAS.Name CAS_Name,
CJT.Name CJT_Name,
CDT.Name CDT_Name
from DeletedCriminalDetails CD 
left join DeletedCriminalDetails2 CD2 on(CD2.CriminalMainAreaId=CD.CriminalMainAreaId and CD2.CriminalSubAreaId=CD.CriminalSubAreaId and CD2.Year=CD.Year and CD2.InvoiceNo=CD.InvoiceNo and CD2.InvoiceNoSub=CD.InvoiceNoSub and CD2.InActiveId=0)
left join DeletedCriminalMaster CM on(CM.CriminalMainAreaId=CD.CriminalMainAreaId and CM.CriminalSubAreaId=CD.CriminalSubAreaId and CM.Year=CD.Year and CM.InvoiceNo=CD.InvoiceNo)
left join CriminalStatus CS on(CS.Id=CD.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CD.CriminalMainAreaId and S.Id=CD.CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=CD.CriminalMainAreaId and N.SubAreaId=CD.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalMainCharge CMC on(CMC.Id=CM.CriminalMainChargeId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)
left join CriminalAccusedStatus CAS on(CAS.Id=CD2.CriminalAccusedStatuId)
left join CriminalJudgmentTypes CJT on(CJT.Id=CD2.CriminalJudgmentTypeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD.CriminalDecisionTypeId)

where CD.CriminalMainAreaId=@CriminalMainAreaId
and CD.CriminalSubAreaId=@CriminalSubAreaId
and CD.Year=@Year
and CD.InvoiceNo=@InvoiceNo

GO
/****** Object:  StoredProcedure [dbo].[GetCriminalAllDeletedMaster]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminalAllDeletedMaster]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int
as

select CM.*, CIM.*, 
A.Name A_Name,
S.Name S_Name,
N.Name N_Name,  
CMC.Name CMC_Name,
CSC.Name CSC_Name,
IT.Name IT_Name,
dbo.GetEmpArName(CM.UserDelete)DeletedEmpName,
dbo.GetEmpArName(CIM.UserDelete)DeletedEmpNameImages
from DeletedCriminalMaster CM 
left join DeletedCriminalImages CIM on(CM.CriminalMainAreaId=CIM.CriminalMainAreaId and CM.CriminalSubAreaId=CIM.CriminalSubAreaId and CM.Year=CIM.Year and CM.InvoiceNo=CIM.InvoiceNo and CM.LastLine=CIM.LastLine)
left join ImagesTypes IT on(IT.Id=CIM.ImagesTypeId)
left join CriminalMainAreas A on(A.Id=CM.CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CM.CriminalMainAreaId and S.Id=CM.CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=CM.CriminalMainAreaId and N.SubAreaId=CM.CriminalSubAreaId and N.Id=CM.CriminalNiabaId)
left join CriminalMainCharge CMC on(CMC.Id=CM.CriminalMainChargeId)
left join CriminalSubCharge CSC on(CSC.MainChargeId=CM.CriminalMainChargeId and CSC.Id=CM.CriminalSubChargeId)

where CM.CriminalMainAreaId=@CriminalMainAreaId
and CM.CriminalSubAreaId=@CriminalSubAreaId
and CM.Year=@Year
and CM.InvoiceNo=@InvoiceNo

GO
/****** Object:  StoredProcedure [dbo].[GetCriminalCirclesDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminalCirclesDeleted]
@MainAreaId int,
@Id int
as

select CM.*, CIM.*, 
A.Name A_Name,
S.Name S_Name,
R.Name R_Name,
dbo.GetEmpArName(CM.UserDelete)DeletedEmpName
from DeletedCriminalCircles CM 
left join DeletedCriminalCirclesDetails CIM on(CM.MainAreaId=CIM.MainAreaId and CM.Id=CIM.Id and CM.LastLine=CIM.LastLine)
left join CriminalMainAreas A on(A.Id=CM.MainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CM.MainAreaId and S.Id=CM.SubAreaId)
left join Roles R on(R.Id=CM.RoleId)

where CM.MainAreaId=@MainAreaId
and CM.Id=@Id

GO
/****** Object:  StoredProcedure [dbo].[GetCriminalDetailedAllDeleted]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminalDetailedAllDeleted]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int,
@InvoiceNoSub int
as

select CD.*,
R.Name R_Name,
CC.Name CC_Name,
A.Name A_Name,
S.Name S_Name,
CS.Name CS_Name,
CD2.AccusedName,
CAS.Name CAS_Name,
CJT.Name CJT_Name,
CDT.Name CDT_Name,
dbo.GetEmpArName(CD.UserDelete)DeletedEmpName
from DeletedCriminalDetails CD 
left join DeletedCriminalDetails2 CD2 on(CD2.CriminalMainAreaId=CD.CriminalMainAreaId and CD2.CriminalSubAreaId=CD.CriminalSubAreaId and CD2.Year=CD.Year and CD2.InvoiceNo=CD.InvoiceNo and CD2.InvoiceNoSub=CD.InvoiceNoSub and CD2.InActiveId=0 and CD2.LastLine=CD.LastLine)
left join CriminalStatus CS on(CS.Id=CD.CriminalStatusId)
left join CriminalCircles CC on(CC.MainAreaId=CD.CriminalMainAreaId and CC.Id=CD.CriminalCircleId)
left join Roles R on(R.Id=CC.RoleId)
left join CriminalMainAreas A on(A.Id=CD.CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=CD.CriminalMainAreaId and S.Id=CD.CriminalSubAreaId)
left join CriminalAccusedStatus CAS on(CAS.Id=CD2.CriminalAccusedStatuId)
left join CriminalJudgmentTypes CJT on(CJT.Id=CD2.CriminalJudgmentTypeId)
left join CriminalDecisionTypes CDT on(CDT.Id=CD.CriminalDecisionTypeId)

where CD.CriminalMainAreaId=@CriminalMainAreaId
and CD.CriminalSubAreaId=@CriminalSubAreaId
and CD.Year=@Year
and CD.InvoiceNo=@InvoiceNo
and CD.InvoiceNoSub=@InvoiceNoSub

GO
/****** Object:  StoredProcedure [dbo].[getCriminalOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getCriminalOne]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int
as


declare @InvoiceNoSub int
select @InvoiceNoSub=isnull(max(InvoiceNoSub),0)
from CriminalDetails
where CriminalMainAreaId=@CriminalMainAreaId
and CriminalSubAreaId=@CriminalSubAreaId
and Year=@Year
and InvoiceNo=@InvoiceNo


select T.*,
D.*,
D2.*,
CS.Name CS_Name,
Ch.Name Ch_Name,
CAS.Name CAS_Name,
CC.Name CC_Name,
A.Name A_Name,
MyA.Name MyA_Name,
S.Name S_Name,
N.Name N_Name,
CDT.Name CDT_Name
from CriminalMaster T
left join CriminalDetails D on(D.CriminalMainAreaId=@CriminalMainAreaId and D.CriminalSubAreaId=@CriminalSubAreaId and D.Year=@Year and D.InvoiceNo=@InvoiceNo and D.InvoiceNoSub=@InvoiceNoSub)
left join CriminalDetails2 D2 on(D2.CriminalMainAreaId=@CriminalMainAreaId and D2.CriminalSubAreaId=@CriminalSubAreaId and D2.Year=@Year and D2.InvoiceNo=@InvoiceNo and D2.InvoiceNoSub=@InvoiceNoSub)
left join CriminalStatus CS on(D.CriminalStatusId=CS.Id)
left join CriminalSubCharge Ch on(T.CriminalMainChargeId=Ch.MainChargeId and T.CriminalSubChargeId=Ch.Id)
left join CriminalAccusedStatus CAS on(D2.CriminalAccusedStatuId=CAS.Id)
left join CriminalCircles CC on(CC.MainAreaId=D.MyCriminalMainAreaId and D.CriminalCircleId=CC.Id)
left join CriminalMainAreas A on(A.Id=@CriminalMainAreaId)
left join CriminalMainAreas MyA on(MyA.Id=D.MyCriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=@CriminalMainAreaId and S.Id=@CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=@CriminalMainAreaId and N.SubAreaId=@CriminalSubAreaId and N.Id=T.CriminalNiabaId)
left join CriminalDecisionTypes CDT on(CDT.Id=D.CriminalDecisionTypeId)


where T.CriminalMainAreaId=@CriminalMainAreaId
and T.CriminalSubAreaId=@CriminalSubAreaId
and T.Year=@Year
and T.InvoiceNo=@InvoiceNo
and D2.InActiveId=0
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalOneAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCriminalOneAll]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int,
@All int
as


declare @InvoiceNoSub int
select @InvoiceNoSub=isnull(max(InvoiceNoSub),0)
from CriminalDetails
where CriminalMainAreaId=@CriminalMainAreaId
and CriminalSubAreaId=@CriminalSubAreaId
and Year=@Year
and InvoiceNo=@InvoiceNo


select T.*,
D.*,
D2.*,
CS.Name CS_Name,
Ch.Name Ch_Name,
CAS.Name CAS_Name,
CC.Name CC_Name,
A.Name A_Name,
S.Name S_Name,
N.Name N_Name,
JT.Name JT_Name,
CDT.Name CDT_Name
from CriminalMaster T
left join CriminalDetails D on(D.CriminalMainAreaId=@CriminalMainAreaId and D.CriminalSubAreaId=@CriminalSubAreaId and D.Year=@Year and D.InvoiceNo=@InvoiceNo)
left join CriminalDetails2 D2 on(D2.CriminalMainAreaId=@CriminalMainAreaId and D2.CriminalSubAreaId=@CriminalSubAreaId and D2.Year=@Year and D2.InvoiceNo=@InvoiceNo and D2.InvoiceNoSub=D.InvoiceNoSub)
left join CriminalStatus CS on(D.CriminalStatusId=CS.Id)
left join CriminalSubCharge Ch on(T.CriminalMainChargeId=Ch.MainChargeId and T.CriminalSubChargeId=Ch.Id)
left join CriminalAccusedStatus CAS on(D2.CriminalAccusedStatuId=CAS.Id)
left join CriminalJudgmentTypes JT on(D2.CriminalJudgmentTypeId=JT.Id)
left join CriminalCircles CC on(CC.MainAreaId=@CriminalMainAreaId and D.CriminalCircleId=CC.Id)
left join CriminalMainAreas A on(A.Id=@CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=@CriminalMainAreaId and S.Id=@CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=@CriminalMainAreaId and N.SubAreaId=@CriminalSubAreaId and N.Id=T.CriminalNiabaId)
left join CriminalDecisionTypes CDT on(CDT.Id=D.CriminalDecisionTypeId)

where T.CriminalMainAreaId=@CriminalMainAreaId
and T.CriminalSubAreaId=@CriminalSubAreaId
and T.Year=@Year
and T.InvoiceNo=@InvoiceNo
and D2.InActiveId=0
and (D.InvoiceNoSub=@InvoiceNoSub or @All=1)
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalOneAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[GetCriminalOneAll2]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int,
@InvoiceNoSub int
as


select T.*,
D.*,
D2.*,
CS.Name CS_Name,
Ch.Name Ch_Name,
CAS.Name CAS_Name,
'الدائرة '+ CC.Name CC_Name,
A.Name A_Name,
S.Name S_Name,
N.Name N_Name,
JT.Name JT_Name,
CDT.Name CDT_Name
from CriminalMaster T
left join CriminalDetails D on(D.CriminalMainAreaId=@CriminalMainAreaId and D.CriminalSubAreaId=@CriminalSubAreaId and D.Year=@Year and D.InvoiceNo=@InvoiceNo)
left join CriminalDetails2 D2 on(D2.CriminalMainAreaId=@CriminalMainAreaId and D2.CriminalSubAreaId=@CriminalSubAreaId and D2.Year=@Year and D2.InvoiceNo=@InvoiceNo and D2.InvoiceNoSub=D.InvoiceNoSub)
left join CriminalStatus CS on(D.CriminalStatusId=CS.Id)
left join CriminalSubCharge Ch on(T.CriminalMainChargeId=Ch.MainChargeId and T.CriminalSubChargeId=Ch.Id)
left join CriminalAccusedStatus CAS on(D2.CriminalAccusedStatuId=CAS.Id)
left join CriminalJudgmentTypes JT on(D2.CriminalJudgmentTypeId=JT.Id)
left join CriminalCircles CC on(CC.MainAreaId=@CriminalMainAreaId and D.CriminalCircleId=CC.Id)
left join CriminalMainAreas A on(A.Id=@CriminalMainAreaId)
left join CriminalSubAreas S on(S.MainAreaId=@CriminalMainAreaId and S.Id=@CriminalSubAreaId)
left join CriminalNiabas N on(N.MainAreaId=@CriminalMainAreaId and N.SubAreaId=@CriminalSubAreaId and N.Id=T.CriminalNiabaId)
left join CriminalDecisionTypes CDT on(CDT.Id=D.CriminalDecisionTypeId)

where T.CriminalMainAreaId=@CriminalMainAreaId
and T.CriminalSubAreaId=@CriminalSubAreaId
and T.Year=@Year
and T.InvoiceNo=@InvoiceNo
and D2.InActiveId=0
and D.InvoiceNoSub=@InvoiceNoSub
GO
/****** Object:  StoredProcedure [dbo].[GetCriminalOneAll2Detailes]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetCriminalOneAll2Detailes]
@CriminalMainAreaId int,
@CriminalSubAreaId int,
@Year int,
@InvoiceNo int,
@InvoiceNoSub int
as

 
declare @CriminalCircleId int
select @CriminalCircleId=CriminalCircleId 
from CriminalDetails D 
where D.CriminalMainAreaId=@CriminalMainAreaId 
and D.CriminalSubAreaId=@CriminalSubAreaId 
and D.Year=@Year 
and D.InvoiceNo=@InvoiceNo
and D.InvoiceNoSub=@InvoiceNoSub

select Row,M_Name,J_Name,Line,(case Row when 1 then 'برئاسة السيد الأستاذ المستشار/ ' else rem end) rem from(
select top 3 ROW_NUMBER()over(order by Line)Row,M.Name M_Name,
J.Name J_Name,Line,'وعضوية السيد الأستاذ المستشار/ ' rem
from CriminalCirclesDetails2 T 
left join CriminalMembers M on(M.Id=T.CriminalMemberId) 
left join CriminalJobs J on(J.Id=T.CriminalJobId) 
where T.MainAreaId=@CriminalMainAreaId
and T.Id=@CriminalCircleId


union 

select 4,NiabaPerson,'وكيل نيابة',0,'وحضور السيد الأستاذ/ ' rem
from CriminalDetails D 
where D.CriminalMainAreaId=@CriminalMainAreaId 
and D.CriminalSubAreaId=@CriminalSubAreaId 
and D.Year=@Year 
and D.InvoiceNo=@InvoiceNo
and D.InvoiceNoSub=@InvoiceNoSub

union 

select top 1 5,M.Name M_Name,
J.Name J_Name,Line,'وحضور الأستاذ/ ' rem
from CriminalCirclesDetails2 T 
left join CriminalMembers M on(M.Id=T.CriminalMemberId) 
left join CriminalJobs J on(J.Id=T.CriminalJobId) 
where T.MainAreaId=@CriminalMainAreaId
and T.Id=@CriminalCircleId
order by Line desc

)Tbl
order by Row
GO
/****** Object:  StoredProcedure [dbo].[GetCurrencyExchangeRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCurrencyExchangeRPT]
@Id bigint,
@LinkFile int,
@CurrencyId bigint,
@ApplyCurrencyCycle int,
@DayDate datetime
--with encryption
as

if @ApplyCurrencyCycle in(0,3) select @ApplyCurrencyCycle=dbo.GetAllApplyCurrencyCycle(@Id,@LinkFile)
if @ApplyCurrencyCycle in(0,3) select @ApplyCurrencyCycle=1

declare @MainAccNo nvarchar(100)=dbo.GetMainAccNoLink(@LinkFile,@Id)


declare @CurrencyExchange float=dbo.GetCurrencyExchange(@Id,@LinkFile,@CurrencyId,@ApplyCurrencyCycle,@DayDate)

select *,@CurrencyExchange CurrencyExchange from
(

select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Customers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 1=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,(-Bal0) Val,(-MainBal0) MainVal,Exchange from Suppliers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 2=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Debits		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 3=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,(-Bal0) Val,(-MainBal0) MainVal,Exchange from Credits		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 4=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Saves			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 5=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Banks			where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 6=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Sellers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 7=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,(-Bal0) Val,(-MainBal0) MainVal,Exchange from MoneyChangers	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 8=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from OutComeTypes	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 9=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,(-Bal0) Val,(-MainBal0) MainVal,Exchange from InComeTypes	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 10=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from OrderTypes	where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 11=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Assets		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 12=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Cases		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 13=@LinkFile)) union all
select 0 MyFlag,0 InvoiceNo,cast('2000-01-01' AS datetime) DayDate,'-' SheekNo,'رصيد أول المدة' 'Rem',AccNo MainLinkFile,dbo.GetAccName(AccNo)MainAccName,Id,Name SubAccName,'-' MainLinkFile2,'-'MainAccName2,0 Id2,'-' SubAccName2,( Bal0) Val,( MainBal0) MainVal,Exchange from Teachers		where Bal0<>0 and ((@ApplyCurrencyCycle=3 and ApplyCurrencyCycle<>0 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle =1 /*in(1,2)*/ and ApplyCurrencyCycle=1 and CurrencyId=@CurrencyId)or(@ApplyCurrencyCycle=2 and Id=@Id and 14=@LinkFile)) union all



select C.Flag MyFlag,InvoiceNo,DayDate,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo end) SheekNo,
(Case C.Flag 
	when 1 then 'مقبوضات' 
	when 2 then 'مدفوعات' end)
	+cast(T.Id as nvarchar(100))'Rem',
MainLinkFile,dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
LinkFile,dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
(Case when C.Flag=1 then Value else -Value end) Value,
(Case when C.Flag=1 then MainValue else -MainValue end) MainValue,
Exchange
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(BankId,MainLinkFile)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(BankId,MainLinkFile)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and BankId=@Id and MainLinkFile=@LinkFile)
	)

union all

select C.Flag MyFlag,InvoiceNo,DayDate,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo end) SheekNo,
(Case C.Flag 
	when 1 then 'مقبوضات' 
	when 2 then 'مدفوعات' end)
	+cast(T.Id as nvarchar(100))'Rem',
LinkFile,dbo.GetLinkFileName(LinkFile)MainAccName,SubAccNo,dbo.GetLinkAccName(LinkFile,SubAccNo) SubAccName,
MainLinkFile,dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
(Case when C.Flag=1 then -Value else Value end) Value,
(Case when C.Flag=1 then -MainValue2 else MainValue2 end) MainValue,
Exchange2
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(SubAccNo,LinkFile)<>0 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(SubAccNo,LinkFile)=1 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo=@Id and LinkFile=@LinkFile)
	)

union all

select C.Flag MyFlag,InvoiceNo,DayDate,
'-' SheekNo,
'تحويلات نقدية - '	+cast(InvoiceNo as nvarchar(100))'Rem',
FromLinkFile MainLinkFile,dbo.GetLinkFileName(FromLinkFile)MainAccName,FromSubAccNo,dbo.GetLinkAccName(FromLinkFile,FromSubAccNo) SubAccName,
ToLinkFile MainLinkFile,dbo.GetLinkFileName(ToLinkFile)MainAccName,ToSubAccNo,dbo.GetLinkAccName(ToLinkFile,ToSubAccNo) SubAccName,
-Value,
-MainValue,
Exchange
from BankCash_G3 C
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(FromSubAccNo,FromLinkFile)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(FromSubAccNo,FromLinkFile)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and FromSubAccNo=@Id and FromLinkFile=@LinkFile)
	)

union all

select C.Flag MyFlag,InvoiceNo,DayDate,
'-' SheekNo,
'تحويلات نقدية - '	+cast(InvoiceNo as nvarchar(100))'Rem',
FromLinkFile MainLinkFile,dbo.GetLinkFileName(FromLinkFile)MainAccName,ToSubAccNo,dbo.GetLinkAccName(FromLinkFile,ToSubAccNo) SubAccName,
ToLinkFile MainLinkFile,dbo.GetLinkFileName(ToLinkFile)MainAccName,FromSubAccNo,dbo.GetLinkAccName(ToLinkFile,FromSubAccNo) SubAccName,
Value,
MainValue,
Exchange
from BankCash_G3 C
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(ToSubAccNo,ToLinkFile)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(ToSubAccNo,ToLinkFile)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and ToSubAccNo=@Id and ToLinkFile=@LinkFile)
	)


union all

select C.Flag MyFlag,InvoiceNo,DayDate,
'-' SheekNo,
(Case when Flag=1 then 'شراء عملة' else 'بيع عملة' end)+' - '	+cast(InvoiceNo as nvarchar(100))'Rem',
5 LinkFile,dbo.GetLinkFileName(5)MainAccName,BankId,dbo.GetLinkAccName(5,BankId) SubAccName,
8 LinkFile,dbo.GetLinkFileName(8)MainAccName,MoneyChangerId,dbo.GetLinkAccName(8,MoneyChangerId) SubAccName,
(Case when Flag=1 then Value else -Value end),
(Case when Flag=1 then Qty else -Qty end),
Price
from BankCash4 C
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycle(BankId,5)<>0 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycle(BankId,5)=1 and CurrencyId=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and BankId=@Id and 5=@LinkFile)
	)

union all

select 0 MyFlag,InvoiceNo,DayDate,
'-' SheekNo,
'التسويات - '	+cast(InvoiceNo as nvarchar(100))'Rem',
MainAccNo1 LinkFile,dbo.GetAccName(MainAccNo1)MainAccName,SubAccNo1,dbo.GetSubAccName(MainAccNo1,SubAccNo1) SubAccName,
MainAccNo2 LinkFile,dbo.GetAccName(MainAccNo2)MainAccName,SubAccNo2,dbo.GetSubAccName(MainAccNo2,SubAccNo2) SubAccName,
Value,
Value1,
(case when Value1=0 then 0 else Value/Value1 end)
from Entry2 
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo1,MainAccNo1)<>0 and CurrencyId1=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo1,MainAccNo1)=1 and CurrencyId1=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo1=@Id and MainAccNo1=@MainAccNo and SubAccNo1<>0)
	)

union all

select 0 MyFlag,InvoiceNo,DayDate,
'-' SheekNo,
'التسويات - '	+cast(InvoiceNo as nvarchar(100))'Rem',
MainAccNo2 LinkFile,dbo.GetAccName(MainAccNo2)MainAccName,SubAccNo2,dbo.GetSubAccName(MainAccNo2,SubAccNo2) SubAccName,
MainAccNo1 LinkFile,dbo.GetAccName(MainAccNo1)MainAccName,SubAccNo1,dbo.GetSubAccName(MainAccNo1,SubAccNo1) SubAccName,
-Value,
-Value2,
(case when Value2=0 then 0 else Value/Value2 end)
from Entry2 
where DayDate<=@DayDate
and Canceled=0
and (
	(@ApplyCurrencyCycle=3 and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo2,MainAccNo2)<>0 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle =1 /*in(1,2)*/ and dbo.GetAllApplyCurrencyCycleAccNo(SubAccNo2,MainAccNo2)=1 and CurrencyId2=@CurrencyId)or
	(@ApplyCurrencyCycle=2 and SubAccNo2=@Id and MainAccNo2=@MainAccNo and SubAccNo2<>0)
	)


)Tbl
GO
/****** Object:  StoredProcedure [dbo].[GetCurrent]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCurrent]
--with encryption
as

SELECT top 1 S.CurrentDate,S.CurrentShift,Sh.Name 'CurrentShiftName',S.CompanyName
from Statics S
left join Shifts Sh on(S.CurrentShift=Sh.Id)
GO
/****** Object:  StoredProcedure [dbo].[GetCurrentForEveryStore]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCurrentForEveryStore]
@StoreId bigint
--with encryption
as

SELECT top 1 S.CurrentDate,S.CurrentShift,Sh.Name 'CurrentShiftName',ss.CompanyName
from Stores S
left join Shifts Sh on(S.CurrentShift=Sh.Id)
cross join Statics ss
where S.Id=@StoreId
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerCompanies]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomerCompanies]
@CompanyId bigint,
@CustId bigint
--with encryption
as
select *,dbo.GetCustomerName(CustId)CustomerName from CustomerCompanies
where (Id=@CompanyId or @CompanyId=0)
and	(CustId=@CustId or @CustId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerData]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomerData](@Id bigint)
--with encryption
as
select
'الدولة: '+dbo.GetCountryName(CountryId),
'المحافظة: '+dbo.GetCityName(CountryId,CityId),
'المنطقة: '+dbo.GetAreaName(CountryId,CityId,AreaId),
'العنوان: '+Address,
'الدور: '+Floor,
'الشقة: '+Appartment,
'التليفون: '+Tel,
'الموبايل: '+Mobile,
'الملاحظات: '+Notes,
DescPerc
from Customers
where Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoice]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomerInvoice]
@InvoiceNo bigint
--with encryption
as

select 1 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
D.ItemName,D.Value,'* '+D.Notes Notes2,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
right join CustomerInvoicesDt D on(M.InvoiceNo=D.InvoiceNo)
where M.InvoiceNo=@InvoiceNo 

union all

select 2 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
dbo.GetInvoicesTypeName(InvoicesTypeId),
sum(Value),'* '+ max(I.Notes) Notes2,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from Invoices I
left join CustomerInvoices M on(I.CustomerInvoiceNo=M.InvoiceNo)
where M.InvoiceNo=@InvoiceNo
group by M.InvoiceNo,M.DayDate,M.CustomerId,M.CountryId,M.CityId,M.AreaId,M.CountryId1,M.CityId1,M.AreaId1,M.Notes,M.UserName,M.MyGetDate,M.CertificationNo,M.SuppPersonId,InvoicesTypeId


union all

select distinct 3 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
'نولون '+(CAST(dbo.GetNolonCount(M.InvoiceNo,N.NolonPriceTypeId) AS varchar(100)))+' حاويات '+
dbo.GetNolonPriceTypesName(N.NolonPricetypeId),
dbo.GetNolonSumValue(M.InvoiceNo,N.NolonPriceTypeId),'* ' Notes2,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
left join Nolon N on(M.InvoiceNo=N.CustomerInvoiceNo)
where M.InvoiceNo=@InvoiceNo
and dbo.GetNolonSumValue(M.InvoiceNo,N.NolonPriceTypeId)<>0

union all

select 4 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
'إكراميات',
dbo.GetNolonSumTips2(M.InvoiceNo),'* ' Notes2,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
where M.InvoiceNo=@InvoiceNo
and dbo.GetNolonSumTips2(M.InvoiceNo)<>0
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoice2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomerInvoice2]
@InvoiceNo bigint
--with encryption
as

select M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
D.*,
Dv.Name 'DriverName',
Dv.Mobile/*+' - '+Dv.Tel*/ 'DriverMobile',
T.Name 'NolonPriceTypeName',
T2.Name 'CustomerInvoicesTypeName'
from CustomerInvoices M
left join Nolon D on(M.InvoiceNo=D.CustomerInvoiceNo)
left join Drivers Dv on(D.DriverId=Dv.Id)
left join NolonPriceTypes T on(T.Id=D.NolonPriceTypeId)
left join CustomerInvoicesTypes T2 on(T2.Id=D.CustomerInvoicesTypeId)
where M.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoice3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomerInvoice3]
@CarNo varchar(100),
@TrillaNo varchar(100),
@CustomerId bigint,
@DriverId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select D.*,
dbo.GetCustomerName(D.CustomerId) 'CustomerName',
dbo.GetCountryName(P.CountryId) 'CountryName',
dbo.GetCityName(P.CountryId,P.CityId) 'CityName',
dbo.GetAreaName(P.CountryId,P.CityId,P.AreaId) 'AreaName',
dbo.GetCountryName(P.CountryId1) 'CountryName1',
dbo.GetCityName(P.CountryId1,P.CityId1) 'CityName1',
dbo.GetAreaName(P.CountryId1,P.CityId1,P.AreaId1) 'AreaName1',
D.*,
Dv.Name 'DriverName',
Dv.Mobile/*+' - '+Dv.Tel*/ 'DriverMobile',
T.Name 'NolonPriceTypeName',
T2.Name 'CustomerInvoicesTypeName'
from Nolon D
left join Drivers Dv on(D.DriverId=Dv.Id)
left join NolonPrices P on(P.Id=D.NolonPriceId)
left join NolonPriceTypes T on(T.Id=D.NolonPriceTypeId)
left join CustomerInvoicesTypes T2 on(T2.Id=D.CustomerInvoicesTypeId)
where D.DayDate between @FromDate and @ToDate
and (D.CarNo=@CarNo or @CarNo='')
and (D.TrillaNo=@TrillaNo or @TrillaNo='')
and (D.CustomerId=@CustomerId or @CustomerId=0)
and (D.DriverId=@DriverId or @DriverId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetCustomerInvoiceOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomerInvoiceOLD]
@InvoiceNo bigint
--with encryption
as

select 1 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
D.ItemName,D.Value,'* '+D.Notes Notes,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
left join CustomerInvoicesDt D on(M.InvoiceNo=D.InvoiceNo)
where M.InvoiceNo=@InvoiceNo 

union all

select 2 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
dbo.GetInvoicesTypeName(D.InvoicesTypeId)+' ( '+D.DocNo+' )',D.Value,'* '+D.Notes Notes ,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
left join Invoices D on(M.InvoiceNo=D.CustomerInvoiceNo)
where M.InvoiceNo=@InvoiceNo

union all

select 3 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
'نولون / '+dbo.GetNolonPricesName(D.NolonPriceId)+' ( '+cast(D.InvoiceNo as varchar(100))+' )',D.Value2,'* '+D.Notes Notes,
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
left join Nolon D on(M.InvoiceNo=D.CustomerInvoiceNo)
where M.InvoiceNo=@InvoiceNo


union all

select 4 MyType,M.*,
dbo.GetCustomerName(M.CustomerId) 'CustomerName',
dbo.GetCountryName(M.CountryId) 'CountryName',
dbo.GetCityName(M.CountryId,M.CityId) 'CityName',
dbo.GetAreaName(M.CountryId,M.CityId,M.AreaId) 'AreaName',
dbo.GetCountryName(M.CountryId1) 'CountryName1',
dbo.GetCityName(M.CountryId1,M.CityId1) 'CityName1',
dbo.GetAreaName(M.CountryId1,M.CityId1,M.AreaId1) 'AreaName1',
'إكراميات / '+' ( '+cast(D.InvoiceNo as varchar(100))+' )',D.Tips2,'* ',
dbo.GetSuppPersonName(M.SuppPersonId)'SuppPersonName'
from CustomerInvoices M
left join Nolon D on(M.InvoiceNo=D.CustomerInvoiceNo)
where M.InvoiceNo=@InvoiceNo
and D.Tips2<>0
GO
/****** Object:  StoredProcedure [dbo].[getCustomerMonthlyPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc [dbo].[getCustomerMonthlyPayment]
@Id bigint=1
as

declare
@MonthlyPayment float ,
@MonthlyPaymentDay int 


select @MonthlyPayment=MonthlyPayment,@MonthlyPaymentDay=MonthlyPaymentDay from Customers where Id=@Id
declare @bal float=dbo.Bal0Link(1,@Id,getdate(),0)

declare @Date datetime=cast((cast(year(getdate()) as nvarchar(100))+'-'+cast(month(getdate()) as nvarchar(100))+'-'+cast(@MonthlyPaymentDay as nvarchar(100))) as datetime)
 
if @Date<CAST(GETDATE() as date)
select @Date=DATEADD(Month,1,@Date) 
 

declare @Tbl table(DayDate datetime,Value float,Line int identity)

while @bal>0
begin
	insert @Tbl
	select @Date,(case when @bal>@MonthlyPayment then @MonthlyPayment else @bal end)
	select @Date=DATEADD(Month,1,@Date),@bal-=@MonthlyPayment	
end

select T.*,C.Name,@MonthlyPaymentDay MonthlyPaymentDay
from @Tbl T
left join Customers C on(C.Id=@Id)
GO
/****** Object:  StoredProcedure [dbo].[GetCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomers]
@CountryId int,
@CityId int,
@AreaId int,
@Ban int
--with encryption
as
select C.*,
dbo.GetCountryName(CountryId)CountryName,
dbo.GetCityName(CountryId,CityId)CityName,
dbo.GetAreaName(CountryId,CityId,AreaId)AreaName,
dbo.GetCurrencyName(CurrencyId)CurrencyName,
PL.Name PL_Name
from Customers C
left join PriceLists PL on(C.PriceListId=PL.Id)
where (CountryId=@CountryId or @CountryId=0)
and (CityId=@CityId or @CityId=0)
and (AreaId=@AreaId or @AreaId=0)
and (Ban=@Ban or @Ban=2)
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersAcceptance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[GetCustomersAcceptance]
@AccNo bigint,
@EmpId int,
@RptFlag int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select C.*,
dbo.GetCountryName(CountryId)CountryName,
dbo.GetCityName(CountryId,CityId)CityName,
dbo.GetAreaName(CountryId,CityId,AreaId)AreaName,
dbo.GetCurrencyName(CurrencyId)CurrencyName
from Customers C
where (AccNo=@AccNo or @AccNo=0)
and (EmpId=@EmpId or @EmpId=0)
and (
	(@RptFlag=1 and Ins1=1 and Date1 between @FromDate and @ToDate)or
	(@RptFlag=2 and Ins10=1 and Date1 between @FromDate and @ToDate)or
	(@RptFlag=3 and Ins2=1 and Date2 between @FromDate and @ToDate)or
	(@RptFlag=4 and Ins20=1 and Date2 between @FromDate and @ToDate)or
	(@RptFlag=5 and Ins3=1 and Date3 between @FromDate and @ToDate)or
	(@RptFlag=6 and Ins30=1 and Date3 between @FromDate and @ToDate)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersAcceptanceAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomersAcceptanceAll]
@AccNo bigint,
@EmpId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as


create table #tbl(DayDate datetime,Ins1 int,Ins10 int,Ins2 int,Ins20 int,Ins3 int,Ins30 int)

while @FromDate<=@ToDate
begin
	insert #tbl(DayDate)
	select @FromDate
	
	update #tbl 
	set 
	Ins1=isnull((select SUM(Ins1) from Customers where Date1=@FromDate),0),
	Ins10=isnull((select SUM(Ins10) from Customers where Date1=@FromDate),0),
	Ins2=isnull((select SUM(Ins2) from Customers where Date2=@FromDate),0),
	Ins20=isnull((select SUM(Ins20) from Customers where Date2=@FromDate),0),
	Ins3=isnull((select SUM(Ins3) from Customers where Date3=@FromDate),0),
	Ins30=isnull((select SUM(Ins30) from Customers where Date3=@FromDate),0)
	where DayDate=@FromDate

	select @FromDate+=1
end

select * from #tbl
drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersDateOfBirth]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetCustomersDateOfBirth]
@CountryId int,
@CityId int,
@AreaId int,
@Ban int
--with encryption
as
select C.*,
dbo.GetCountryName(CountryId)CountryName,
dbo.GetCityName(CountryId,CityId)CityName,
dbo.GetAreaName(CountryId,CityId,AreaId)AreaName,
dbo.GetCurrencyName(CurrencyId)CurrencyName,
PL.Name PL_Name
from Customers C
left join PriceLists PL on(C.PriceListId=PL.Id)
where (CountryId=@CountryId or @CountryId=0)
and (CityId=@CityId or @CityId=0)
and (AreaId=@AreaId or @AreaId=0)
and (Ban=@Ban or @Ban=2)
and day(DateOfBirth)=day(getdate())
and month(DateOfBirth)=month(getdate())
and DateOfBirth<>'1900-01-01'
GO
/****** Object:  StoredProcedure [dbo].[GetCustomersPoints]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetCustomersPoints]
@CountryId int,
@CityId int,
@AreaId int,
@Ban int
--with encryption
as
select C.*,
dbo.GetCountryName(CountryId)CountryName,
dbo.GetCityName(CountryId,CityId)CityName,
dbo.GetAreaName(CountryId,CityId,AreaId)AreaName,
dbo.GetCurrencyName(CurrencyId)CurrencyName,
PL.Name PL_Name
from Customers C
left join PriceLists PL on(C.PriceListId=PL.Id)
where (CountryId=@CountryId or @CountryId=0)
and (CityId=@CityId or @CityId=0)
and (AreaId=@AreaId or @AreaId=0)
and (Ban=@Ban or @Ban=2)
and Points>0
GO
/****** Object:  StoredProcedure [dbo].[getCustomersTempBal0]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getCustomersTempBal0]
as


select Tbl0.*,
S.Name StoreName
from(
	select Tbl.*,
	(select top 1 StoreId from SalesMaster SM where SM.Flag=13 and SM.ToId=Tbl.Id and SM.DayDate=Tbl.DayDate)StoreId
	from (
		select Id,Name,TempBal0,Ban,
		(select top 1 DayDate from SalesMaster SM where SM.Flag=13 and SM.ToId=C.Id order by DayDate desc)DayDate,
		(select top 1 ST.Name 
			from SalesMaster SM 
			left join SalesTypes ST on(ST.Id=SM.SalesTypeId)
			where SM.Flag=13 and SM.ToId=C.Id 
			order by DayDate desc
			)SalesTypeName
		from Customers C
		where TempBal0>0
		group by Id,Name,TempBal0,Ban
	)Tbl
)Tbl0
left join Stores S on(S.Id=Tbl0.StoreId)
order by DayDate
GO
/****** Object:  StoredProcedure [dbo].[GetDailyMotionRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDailyMotionRPT]
(
@FromDate datetime,
@ToDate datetime,
@PaymentTypeId bigint
)
--with encryption
as

select D.*,
dbo.GetCustomerName(D.CustomerId)CustomerName,
dbo.GetSellerName(D.SellerId)SellerName,
dbo.GetNolonPricesName(D.NolonPriceId)NolonPriceName,
dbo.GetPaymentTypeName(D.PaymentTypeId)PaymentTypeName,
dbo.GetSuppPersonName(D.SuppPersonId)SuppPersonName,
N.PoliceNo N_PoliceNo,N.DocNo,dbo.GetNolonPriceTypesName(N.NolonPriceTypeId)NolonPriceTypeName
from DailyMotion D
left join Nolon N on(D.PoliceNo=N.PoliceNo)

where D.DayDate between @FromDate and @ToDate
and (D.PaymentTypeId=@PaymentTypeId or @PaymentTypeId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedBankCash_G2RPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedBankCash_G2RPT]
(
@Flag bigint,
@BankCash_G2TypeId bigint,
@CostCenterId bigint,
@MainLinkFile bigint,
@BankId bigint,
@LinkFile bigint,
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@FromDate datetime,
@ToDate datetime,
@CurrencyId int
)
--with encryption
as

select M.*,
U.EnName UserFullName,UD.EnName UserDeletedFullName,
dbo.GetLinkFileName(M.MainLinkFile) MainLinkFileName,
isnull(dbo.GetLinkAccName(M.MainLinkFile,M.BankId),'-') MainAccName,
dbo.GetLinkFileName(M.LinkFile) LinkFileName,
isnull(dbo.GetLinkAccName(M.LinkFile,M.SubAccNo),'-') SubAccName,
(Case M.Flag when 1 then 'مقبوضات' when 2 then 'مدفوعات' end) 'Rem',
T.Name BankCash_G2TypeName,
dbo.GetCheckTypeName(CheckTypeId)CheckTypeName,
(case when PurchaseAccNo='' then '' else dbo.GetSubAccNameLink(11,PurchaseAccNo)+' ' end)+
(case when ImportMessageId=0 then '' else 'رسالة '+cast(ImportMessageId as nvarchar(100))+' ' end)+
(case when StoreInvoiceNo=0 then '' else 'عقد '+CAST(StoreInvoiceNo as nvarchar(100)) end) Rem2
from DeletedBankCash_G2 M
LEFT JOIN BankCash_G2Types T on(M.Flag=T.Flag and M.BankCash_G2TypeId=T.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees UD on(M.UserDelete=UD.Id)
where M.Flag=@Flag
and (BankCash_G2TypeId=@BankCash_G2TypeId or @BankCash_G2TypeId=0)
and DayDate between @FromDate and @ToDate
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (MainLinkFile=@MainLinkFile or @MainLinkFile=0)
and (BankId=@BankId or @BankId=0)

and (CostCenterId=@CostCenterId or @CostCenterId=0)

and (LinkFile=@LinkFile or @LinkFile=0)
and (SubAccNo=@SubAccNo or @SubAccNo=0)

and (CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (M.CurrencyId=@CurrencyId or @CurrencyId=0)

and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedCases]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedCases]
@Id int
--with encryption
as
select T.*,
U.EnName UserFullName,UD.EnName UserDeletedFullName,
C.Name CityName,
J.Name JobName,
G.Name GenderName,
CT.Name CaseTypeName,
E.EnName DoctorName,
Com.Name CompanyName,
dbo.GetEmpArName(T.EntryUser)EntryUserName,
dbo.GetRelationName(T.RelationId)RelationName,
Tbl.RoomName,Tbl.DayDate,Tbl.ExitDate,Tbl.OperationTypesName,Tbl.Recomendation,Tbl.SurgeonName
from DeletedCases T
left join Employees U on(T.UserName=U.Id)
left join Employees UD on(T.UserDelete=UD.Id)
left join Cities C on(T.CityId=C.Id)
left join Jobs J on(T.JobId=J.Id)
left join Gender G on(T.Gender=G.Id)
left join CaseTypes CT on(T.CaseTypeId=CT.Id)
left join Employees E on(T.DoctorId=E.Id)
left join Companies Com on(T.CompanyId=Com.Id)
left join(
	select top 1 
	dbo.GetRoomName(RoomId)RoomName,DayDate,ExitDate,
	dbo.GetOperationTypesName(OperationType)OperationTypesName,
	Recomendation,
	dbo.GetEmpArName(SurgeonId)SurgeonName
	from RoomsData
	where CaseId=@Id
	order by DayDate desc
)Tbl on(1=1)
where T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedExpertsFollowUp]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedExpertsFollowUp]
@Flag int,
@RecipientId int,
@ComeId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select T.*,
dbo.GetEmpArName(T.UserDelete)EmpArName,
Cr.Name Circle_Name,
App.Name Appellant_Name,
App2.Name Appellant2_Name,
(case when T.Flag<10 then Rec.Name else Rec2.Name end)Recipients_Name,
C.Name Come_Name,
Ag.Name Ag_Name

from DeletedExpertsFollowUp T
left join ExpertsCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)
left join Appellants App2 on(T.AppellantId2=App2.Id)
left join Recipients Rec on(T.RecipientId=Rec.Id and T.Flag<10)
left join Recipients2 Rec2 on(T.RecipientId=Rec2.Id and T.Flag>10)
left join Comes C on(T.ComeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)

where T.Flag=@Flag
and(T.RecipientId=@RecipientId or @RecipientId=0)
and(T.ComeId=@ComeId or @ComeId=0)
and cast(T.DeletedDate as date) between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedExpertsFollowUp2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedExpertsFollowUp2]
@Flag int,
@CirclId int, 
@OfficeId int, 
@ComeId int,
@Type int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select T.*,
Cr.Name Circle_Name,
App.Name Appellant_Name,
App2.Name Appellant2_Name,
(case 
when T.Flag<11 then Rec.Name 
when T.Flag<21 then Rec2.Name 
else Rec3.Name end)Recipients_Name,
C.Name Come_Name,
Ag.Name Ag_Name,
E.ArName ,
F.Name FlagName,
dbo.GetEmpArName(T.UserName)EmpArName
from DeletedExpertsFollowUp2 T
left join ExpertsFollowUp2Flags F on(T.Flag=F.Id)
left join ExpertsCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)
left join Appellants App2 on(T.AppellantId2=App2.Id)
left join Recipients Rec on(T.RecipientId=Rec.Id and T.Flag<=10)
left join Recipients2 Rec2 on(T.RecipientId=Rec2.Id and T.Flag between 11 and 20)
left join Recipients3 Rec3 on(T.RecipientId=Rec3.Id and T.Flag>20)
left join Comes C on(T.ComeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)
left join Employees E on(T.EmpId=E.Id)

where (T.Flag=@Flag and @Flag<>0 and cast(T.DeletedDate as date) between @FromDate and @ToDate)
and(T.CirclId=@CirclId or @CirclId=0)
and(T.OfficeId=@OfficeId or @OfficeId=0)
and(T.ComeId=@ComeId or @ComeId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedExpertsFollowUpOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedExpertsFollowUpOne]
@Flag int,
@InvoiceNo int
--with encryption
as

select T.*,
dbo.GetEmpArName(T.UserDelete)EmpArName,
Cr.Name Circle_Name,
App.Name Appellant_Name,
App2.Name Appellant2_Name,
(case when T.Flag<10 then Rec.Name else Rec2.Name end)Recipients_Name,
C.Name Come_Name,
Ag.Name Ag_Name

from DeletedExpertsFollowUp T
left join ExpertsCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)
left join Appellants App2 on(T.AppellantId2=App2.Id)
left join Recipients Rec on(T.RecipientId=Rec.Id and T.Flag<10)
left join Recipients2 Rec2 on(T.RecipientId=Rec2.Id and T.Flag>10)
left join Comes C on(T.ComeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)

where T.Flag=@Flag
and T.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedInvoices]
@InvoicesFlagId int,
@Year int,
@TypeId INT,
@BranchId INT, 
@MainNoAreaId INT, 
@AccusationId INT, 
@CirclId INT,
@FromDate datetime,
@ToDate datetime,
@SubNoId nvarchar(100),
@SubNoYear int,
@MainNoId nvarchar(100),
@AccusedId bigint
--with encryption
as

declare
@InvoicesFlagId0 int=@InvoicesFlagId,
@Year0 int=@Year,
@TypeId0 INT=@TypeId,
@BranchId0 INT=@BranchId, 
@MainNoAreaId0 INT=@MainNoAreaId, 
@AccusationId0 INT=@AccusationId, 
@CirclId0 INT=@CirclId,
@FromDate0 datetime=@FromDate,
@ToDate0 datetime=@ToDate,
@SubNoId0 nvarchar(100)=@SubNoId,
@SubNoYear0 int=@SubNoYear,
@MainNoId0 nvarchar(100)=@MainNoId,
@AccusedId0 bigint=@AccusedId


select T.*,
dbo.GetEmpArName(T.UserDelete)EmpArName,
Ty.Name Type_Name,
--Mn.Name MainNo_Name,
--Sn.Name SubNo_Name,
Mr.Name MainNoArea_Name,
Sr.Name SubNoArea_Name,
Ad.Name Accused_Name,
Ac.Name Accusation_Name,
Cr.Name Circle_Name,
Br.Name Branch_Name

from DeletedInvoices T
left join DeletedInvoicesDt Dt on(T.InvoicesFlagId=Dt.InvoicesFlagId and T.Year=Dt.Year and T.InvoiceNo=Dt.InvoiceNo and T.LastLine=Dt.LastLine)
left join Types Ty on(Dt.TypeId=Ty.Id)
--left join MainNos Mn on(T.MainNoId=Mn.Id)
--left join SubNos Sn on(T.SubNoId=Sn.Id)
left join Areas Mr on(T.InvoicesFlagId=Mr.InvoicesFlagId and T.MainNoAreaId=Mr.Id)
left join Areas Sr on(T.InvoicesFlagId=Sr.InvoicesFlagId and T.SubNoAreaId=Sr.Id)
left join Accuseds Ad on(Dt.AccusedId=Ad.Id)
left join Accusations Ac on(T.InvoicesFlagId=Ac.InvoicesFlagId and T.AccusationId=Ac.Id)
left join Circles Cr on(T.CirclId=Cr.Id)
left join Branches Br on(T.InvoicesFlagId=Br.InvoicesFlagId and T.BranchId=Br.Id)

where cast(T.DeletedDate as date) between @FromDate0 and @ToDate0
AND (DT.TypeId=@TypeId0 OR @TypeId0=0)
AND (BranchId=@BranchId0 OR @BranchId0=0)
AND (MainNoAreaId=@MainNoAreaId0 OR @MainNoAreaId0=0)
AND (AccusationId=@AccusationId0 OR @AccusationId0=0)
AND (CirclId=@CirclId0 OR @CirclId0=0)
and (T.InvoicesFlagId=@InvoicesFlagId0 or @InvoicesFlagId0=0)
and (T.Year=@Year0 or @Year0=0)
and (T.SubNoId=@SubNoId0 or @SubNoId0='')
and (T.SubNoYear=@SubNoYear0 or @SubNoYear0=0)
and (T.MainNoId=@MainNoId0 or @MainNoId0='')
and (Dt.AccusedId=@AccusedId0 or @AccusedId0=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedInvoicesOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedInvoicesOne]
@InvoicesFlagId int,
@Year int,
@InvoiceNo int
--with encryption
as

select T.*,
dbo.GetEmpArName(T.UserDelete)EmpArName,
Ty.Name Type_Name,
--Mn.Name MainNo_Name,
--Sn.Name SubNo_Name,
Mr.Name MainNoArea_Name,
Sr.Name SubNoArea_Name,
Ad.Name Accused_Name,
Ac.Name Accusation_Name,
Cr.Name Circle_Name,
Br.Name Branch_Name

from DeletedInvoices T
left join DeletedInvoicesDt Dt on(T.InvoicesFlagId=Dt.InvoicesFlagId and T.Year=Dt.Year and T.InvoiceNo=Dt.InvoiceNo and T.LastLine=Dt.LastLine)
left join Types Ty on(Dt.TypeId=Ty.Id)
--left join MainNos Mn on(T.MainNoId=Mn.Id)
--left join SubNos Sn on(T.SubNoId=Sn.Id)
left join Areas Mr on(T.MainNoAreaId=Mr.Id)
left join Areas Sr on(T.SubNoAreaId=Sr.Id)
left join Accuseds Ad on(Dt.AccusedId=Ad.Id)
left join Accusations Ac on(T.AccusationId=Ac.Id)
left join Circles Cr on(T.CirclId=Cr.Id)
left join Branches Br on(T.BranchId=Br.Id)

where T.InvoiceNo=@InvoiceNo
and T.InvoicesFlagId=@InvoicesFlagId 
and T.Year=@Year
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedItemCollectionMotionRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedItemCollectionMotionRpt]
(
@StoreId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as


select TT.StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'صرف أصناف' FlagName,
T.*,
TT.MotionTypeId,
'كود الصنف الوارد' Title1,
'كود الصنف الصادر' Title2,
TT.Temp,U.EnName UserFullName,UD.EnName UserDeletedFullName
from DeletedItemCollectionMotionDetailsFrom T
left join DeletedItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo and T.LastLine=TT.LastLine)
left join Stores St on(@StoreId=St.Id)
left join Employees U on(T.UserName=U.Id)
left join Employees UD on(T.UserDelete=UD.Id)
where (TT.StoreId=@StoreId or @StoreId=0)
and (TT.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (TT.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and TT.DayDate between @FromDate and @ToDate


union all

select TT.StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'إضافة أصناف' FlagName,
T.*,
TT.MotionTypeId,
'كود الصنف الصادر' Title1,
'كود الصنف الوارد' Title2,
TT.Temp,U.EnName UserFullName,UD.EnName UserDeletedFullName
from DeletedItemCollectionMotionDetailsTo T
left join DeletedItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo and T.LastLine=TT.LastLine)
left join Stores St on(@StoreId=St.Id)
left join Employees U on(T.UserName=U.Id)
left join Employees UD on(T.UserDelete=UD.Id)
where (TT.StoreId=@StoreId or @StoreId=0)
and (TT.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (TT.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and TT.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedLeaveRequests20]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedLeaveRequests20]
@CaseId bigint,
@LeaveType bigint,
@PenDepartmentId bigint,
@CasesDepartements2Id bigint,
@CasesDegreesId bigint,
@FromDate datetime,
@ToDate datetime,
@Daydate datetime
as
select *,
dbo.GetPenDepartmentName(PenDepartmentId)PenDepartmentName,
dbo.GetCasesDepartements2Name(CasesDepartements2Id)CasesDepartements2Name,
dbo.GetCasesDegreeName(CasesDegreesId)CasesDegreesName,
dbo.GetEmpArName(UserName)EmpArName
from
(
select T.*,
dbo.GetCase3ArName(T.CaseId)CaseName,
dbo.GetLeaveTypeName(T.LeaveType)LeaveTypeName,
TT.PenDepartmentId,
(Select top 1 T0.Id from CaseData2 T0 where T0.CaseId=T.CaseId order by Line desc)CasesDepartements2Id,
(Select top 1 T0.Id from CaseData3 T0 where T0.CaseId=T.CaseId order by Line desc)CasesDegreesId
from DeletedLeaveRequests2 T
left join Cases3 TT on(T.CaseId=TT.Id)
where (T.CaseId=@CaseId or @CaseId=0)
and (T.LeaveType=@LeaveType or @LeaveType=0)
and (TT.PenDepartmentId=@PenDepartmentId or @PenDepartmentId=0)
and cast(T.DeletedDate as date) between @FromDate and @ToDate 
and (@Daydate between FromDate and ToDate or @Daydate='1900-01-01')
)Tbl
where (CasesDepartements2Id=@CasesDepartements2Id or @CasesDepartements2Id=0)
and (CasesDegreesId=@CasesDegreesId or @CasesDegreesId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedSales]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeletedSales]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@CashierId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@IsClosedOnly bigint=0,
@ToId bigint=0,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0
)
--with encryption
as

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,U.EnName UserFullName,UD.EnName UserDeletedFullName,C.EnName CashierName,
(case 

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
CS.Name CostCenterName
from DeletedSalesMaster M
left join DeletedSalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo and M.LastLine=D.LastLine)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees UD on(M.UserDelete=UD.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
where cast(M.DeletedDate as date) between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.Cashier=@CashierId or @CashierId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (M.ToId=@ToId or @ToId=0)

and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (D.ItemId=@ItemId or @ItemId=0)

and (M.IsClosed=@IsClosedOnly or @IsClosedOnly=0 or M.Flag<>11) -- الموائد المغلقة فقط

and (
		(--M.Temp=0 and
			(
			(M.Flag=@RPTFlag2) or
			@RPTFlag1=0 or
			(@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or
			(@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or
			(@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or
			(@RPTFlag1 in(7,10) and M.Flag between 19 and 20 and @RPTFlag2=0) or
			(@RPTFlag1=3 and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or
			(@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0)
			)
		)
		or (M.Temp=1 and M.Flag=13 and @RPTFlag1=5)or
		((@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )or
		((@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )
	)


and (
	@RPTFlag1<>10 or
	(M.Flag=19 and M.Temp=0 and Not exists(
				select TT.Id
				from ImportMessagesDetails TT 
				where M.StoreId=TT.StoreId and M.InvoiceNo=TT.InvoiceNo)
				)
	)

order by D.ItemId,D.Color,D.Size
GO
/****** Object:  StoredProcedure [dbo].[GetDeletedSalesSpecific]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE proc [dbo].[GetDeletedSalesSpecific]
(
@LastLine bigint
)
--with encryption
as

select ItemId 'كود الصنف',ItemName 'اسم الصنف',Qty 'الكمية',Price 'السعر',Value 'القيمة'
from DeletedSalesDetails D
where LastLine=@LastLine





GO
/****** Object:  StoredProcedure [dbo].[getDeletedStatics]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getDeletedStatics]
as
SELECT T.[DeletedDate]
      ,T.[UserDelete]
      ,T.[LastLine]
      ,T.[State]
      --,T.[Logo]
      ,T.[UserName]
      ,T.[MyGetDate]
      ,T.[CompanyName]
      ,T.[CompanyTel]
      ,T.[PoneComment]
      ,T.[CurrentShift]
      ,T.[CurrentDate]
      ,T.[PoneHeader]
      ,T.[S_AccNo]
      ,T.[R_S_AccNo]
      ,T.[P_AccNo]
      ,T.[R_P_AccNo]
      ,T.[S_AccNo1]
      ,T.[S_Per1]
      ,T.[S_AccType1]
      ,T.[S_AccNo2]
      ,T.[S_Per2]
      ,T.[S_AccType2]
      ,T.[S_AccNo3]
      ,T.[S_Per3]
      ,T.[S_AccType3]
      ,T.[S_AccNo4]
      ,T.[S_Per4]
      ,T.[S_AccType4]
      ,T.[P_AccNo1]
      ,T.[P_Per1]
      ,T.[P_AccType1]
      ,T.[P_AccNo2]
      ,T.[P_Per2]
      ,T.[P_AccType2]
      ,T.[P_AccNo3]
      ,T.[P_Per3]
      ,T.[P_AccType3]
      ,T.[P_AccNo4]
      ,T.[P_Per4]
      ,T.[P_AccType4]
      ,T.[LabServiceGroupId]
      ,T.[AppartementsAccNo]
      ,T.[TaxAcc]
      ,T.[KidneysWashStoreId]
      ,T.[SalesSerialNoCount]
      ,T.[Address]
      ,T.[Month]
      ,T.[Year]
      ,T.[IsEdit]
      ,T.[ImagesPath]
      ,T.[ImagesUserName]
      ,T.[ImagesPassword]
      ,T.[ScannerPath]
      ,T.[CriminalFromDate]
      ,T.[CriminalToDate]
      ,E.ArName
      ,CS.Name CS_Name
  FROM [DeletedStatics] T
  left join Employees E on(T.UserDelete=E.Id)
  left join CriminalStatus CS on(CS.Id=T.CriminalStatusId)

order by DeletedDate
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetDeliveryCustomers]
@StoreId int,
@SalesDeliveryHistoryInvoiceNo int
as


declare
@StoreId0 int=@StoreId,
@SalesDeliveryHistoryInvoiceNo0 int=@SalesDeliveryHistoryInvoiceNo


select ToId,ToName,Tel,Address,
--dbo.GetCustInvoicesDelivery(@StoreId0,@SalesDeliveryHistoryInvoiceNo0,ToId)
'' InvoiceNo,
--cast(dbo.GetCustInvoicesDeliveryValue(@StoreId0,@SalesDeliveryHistoryInvoiceNo0,ToId) as nvarchar(100))
'0' TotalValue,
Bal0,Payed,PayedVisa,CustomerNotes,IsSelected,IsPayed
from(
select distinct Tbl2.ToId,ToName,Tel,Address,
			
			cast(Bal0 as nvarchar(100))Bal0,cast(Payed as nvarchar(10))Payed,cast(PayedVisa as nvarchar(10))PayedVisa,CustomerNotes,
			CAST(0 as bit)'IsSelected',
			cast(IsPayed as nvarchar(10))IsPayed
			 from(
			select distinct cast(ToId as nvarchar(100))ToId,
			C.Name ToName,
			C.Tel+(case when C.Tel='' and C.Mobile='' then '' else ' - ' end)+C.Mobile Tel ,C.Address,
			isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 
			--dbo.Bal0(C.AccNo,ToId,GETDATE(),0)
			C_TempBal0--dbo.Bal0CustomerRiviera(C.AccNo,ToId,GETDATE(),0)
			else Tbl.Bal0 end),0)Bal0,
			CAST(Value as float)Value,
			CAST(Payed as float)Payed,
			CAST(PayedVisa as float)PayedVisa,
			MAX_SalesTypeId,MIN_IsDelivered,CustomerNotes,IsPayed
			from(
				select distinct C.Id ToId,C.TempBal0 C_TempBal0,
				isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 0 else H.Bal0 end),0)Bal0,
				isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 0 else H.Payed end),0)Payed,
				isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 0 else H.PayedVisa end),0)PayedVisa,
				isnull(SUM(D.Value),0)Value,
				isnull(max(M.SalesTypeId),0)MAX_SalesTypeId,
				isnull(MIN(D.IsDelivered),0)MIN_IsDelivered,
				isnull(max(H.CustomerNotes),'')CustomerNotes,
				MAX(isnull(H.IsPayed,0))IsPayed
				from SalesDetails D
				left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
				left join SalesDeliveryHistory H on(D.StoreId=H.StoreId and M.ToId=H.CustomerId and (D.Line=H.SalesDetailsLine or H.SalesDetailsLine=0))
				left join Customers C on(C.Id=M.ToId)
				where --(@SalesDeliveryHistoryInvoiceNo0=0 and C.Bal0/*<*/>0) or
					(
						(M.StoreId=@StoreId0 or @StoreId0=0)
						and (H.InvoiceNo=@SalesDeliveryHistoryInvoiceNo0 or @SalesDeliveryHistoryInvoiceNo0=0)
						and M.Flag in(13,14)
						and M.Temp=0
					)	
				group by C.Id,C.TempBal0,
				isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 0 else H.Bal0 end),0),
				isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 0 else H.Payed end),0),
				isnull((case when @SalesDeliveryHistoryInvoiceNo0=0 then 0 else H.PayedVisa end),0)
				)Tbl
				left join Customers C on(Tbl.ToId=C.Id)
			)Tbl2
			left join(
			select M.ToId
			from SalesDetails D
			left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
			where (M.StoreId=@StoreId0 or @StoreId0=0)
			and M.Flag=13
			and M.Temp=0
			and M.SalesTypeId>1
			and (D.IsDelivered=0 or @SalesDeliveryHistoryInvoiceNo0<>0)
			)Tbl3 on(Tbl3.ToId=Tbl2.ToId)
			where (Bal0<>0 or Tbl3.ToId is not null)
)MainTbl
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetDeliveryCustomers2]
@StoreId int,
@SalesDeliveryHistoryInvoiceNo int
--with encryption
as

declare @StoreId0 int=@StoreId,
@SalesDeliveryHistoryInvoiceNo0 int=@SalesDeliveryHistoryInvoiceNo

select cast(M.StoreId as nvarchar(100))StoreId,
isnull(S.Name,'') StoreName,
cast(isnull(H.InvoiceNo,0) as nvarchar(100))SalesDeliveryHistoryInvoiceNo,
cast(M.InvoiceNo as nvarchar(100))InvoiceNo,
isnull(replace(CAST(CAST(M.DayDate as Date)as nvarchar(10)),'-','/'),'')DayDate,
isnull(E.Name,'') 'البائع',
cast(D.SalesManId as nvarchar(100))SalesManId,
isnull(E2.Name,'') SalesManName,
cast(M.ToId as nvarchar(100))ToId,
isnull(C.Name,'') ToName,
cast((case when @SalesDeliveryHistoryInvoiceNo0=0 then 
--isnull(dbo.Bal0(dbo.GetMainAccNoLink(1,ToId),ToId,GETDATE(),0,0,0),0)
isnull(TempBal0,0)
else isnull(H.Bal0,0) end) as nvarchar(100))Bal0,
isnull(ST.Name,'') SalesTypeName,
cast(D.ItemId as nvarchar(100))ItemId ,
D.ItemName,
D.SD_Notes 'ملاحظات',
cast(D.Qty as nvarchar(100))Qty ,
cast(D.Price as nvarchar(100))Price ,
cast(D.Value as nvarchar(100))TotalValue ,
cast(D.Line as nvarchar(100))Line ,
CAST(D.IsDelivered as bit)D_IsDelivered,
CAST(D.IsDelivered as bit)IsDelivered,
cast(isnull(H.IsPayed,0) as nvarchar(10))IsPayed
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesTypes ST on(M.SalesTypeId=ST.Id)
left join SalesDeliveryHistory H on(D.StoreId=H.StoreId and D.Line=H.SalesDetailsLine)
left join Stores S on(S.Id=M.StoreId)
left join Employees E on(E.Id=M.Cashier)
left join Employees E2 on(E2.Id=D.SalesManId)
left join Customers C on(C.Id=ToId)
where (M.StoreId=@StoreId0 or @StoreId0=0)
and M.Flag=13
and M.SalesTypeId>1
and (D.IsDelivered=0 or @SalesDeliveryHistoryInvoiceNo0>0)
and M.Temp=0

and (
	H.InvoiceNo=@SalesDeliveryHistoryInvoiceNo0 or 
	(@SalesDeliveryHistoryInvoiceNo0=0 and
	(H.InvoiceNo is null or exists(
	select * from (
	select SalesDetailsLine,MAX(InvoiceNo)MAX_InvoiceNo from SalesDeliveryHistory
	group by SalesDetailsLine
	)Tbl
	where Tbl.MAX_InvoiceNo=H.InvoiceNo and Tbl.SalesDetailsLine=D.Line
	))
	)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeliveryCustomers3]
@StoreId int,
@FromInvoiceNo int,
@ToInvoiceNo int,
@FromDate datetime,
@ToDate datetime,
@UnDeliveredOnly int
--with encryption
as

select H.StoreId StoreId,
dbo.GetStoreName(H.StoreId)StoreName,
H.InvoiceNo SalesDeliveryHistoryInvoiceNo,
H.DayDate H_DayDate,
M.InvoiceNo InvoiceNo,dbo.ToStrDate(M.DayDate)DayDate,
D.SalesManId ,dbo.GetEmpArName(D.SalesManId)SalesManName,
H.CustomerId ToId,C.Name ToName,
C.Address,C.Tel,
isnull(H.Bal0,0)Bal0,
isnull(H.Payed,0)Payed,
ST.Name SalesTypeName,
cast(D.ItemId as nvarchar(100))ItemId ,
D.ItemName,
cast(D.Qty as nvarchar(100))Qty ,
cast(D.Price as nvarchar(100))Price ,
cast(D.Value as nvarchar(100))Value ,
cast(D.Line as nvarchar(100))Line ,
CAST(D.IsDelivered as bit)D_IsDelivered,
CAST(D.IsDelivered as bit)IsDelivered,
dbo.GetEmpArName(H.UserName)H_UserName
from SalesDeliveryHistory H 
left join SalesDetails D on(D.StoreId=H.StoreId and D.Line=H.SalesDetailsLine and D.Flag=13)
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesTypes ST on(M.SalesTypeId=ST.Id)
left join Customers C on(H.CustomerId=C.Id)
where (H.StoreId=@StoreId or @StoreId=0)
and (H.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (H.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (H.DayDate>=@FromDate or @FromDate=0)
and (H.DayDate<=@ToDate or @ToDate=0)
and isnull(M.Temp,0)=0
and (@UnDeliveredOnly=0 or H.IsPayed=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryCustomers31]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeliveryCustomers31]
@StoreId int,
@FromInvoiceNo int,
@ToInvoiceNo int,
@FromDate datetime,
@ToDate datetime,
@UnDeliveredOnly int
--with encryption
as

select StoreId,
StoreName,
SalesDeliveryHistoryInvoiceNo,
H_DayDate,
max(SalesManId)SalesManId,dbo.GetEmpArName(max(SalesManId))SalesManName,
ToId,ToName,
Address,Tel,
Bal0,
Payed,
--SalesTypeName,
H_UserName,
min(D_IsDelivered)min_D_IsDelivered,
max(D_IsDelivered)max_D_IsDelivered,
CustomerNotes
from (
select H.StoreId StoreId,
dbo.GetStoreName(H.StoreId)StoreName,
H.InvoiceNo SalesDeliveryHistoryInvoiceNo,
H.DayDate H_DayDate,
D.SalesManId ,--dbo.GetEmpArName(D.SalesManId)SalesManName,
H.CustomerId ToId,C.Name ToName,
C.Address,C.Tel+(case when C.Tel='' or C.Mobile='' then '' else ' - ' end)+C.Mobile Tel,
isnull(H.Bal0,0)Bal0,
isnull(H.Payed,0)Payed,
--ST.Name SalesTypeName,
cast(D.ItemId as nvarchar(100))ItemId ,
D.ItemName,
cast(D.Qty as nvarchar(100))Qty ,
cast(D.Price as nvarchar(100))Price ,
cast(D.Value as nvarchar(100))Value ,
cast(D.Line as nvarchar(100))Line ,
D.IsDelivered D_IsDelivered,
CAST(D.IsDelivered as bit)IsDelivered,
dbo.GetEmpArName(H.UserName)H_UserName,
H.CustomerNotes
from SalesDeliveryHistory H 
left join SalesDetails D on(D.StoreId=H.StoreId and D.Line=H.SalesDetailsLine and D.Flag=13)
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesTypes ST on(M.SalesTypeId=ST.Id)
left join Customers C on(H.CustomerId=C.Id)
where (H.StoreId=@StoreId or @StoreId=0)
and (H.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (H.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (H.DayDate>=@FromDate or @FromDate=0)
and (H.DayDate<=@ToDate or @ToDate=0)
and isnull(M.Temp,0)=0
and (@UnDeliveredOnly=0 or H.IsPayed=0)
)Tbl
group by 
StoreId,
StoreName,
SalesDeliveryHistoryInvoiceNo,
H_DayDate,
--SalesManId,SalesManName,
ToId,ToName,
Address,Tel,
Bal0,
Payed,
--SalesTypeName,
H_UserName,
CustomerNotes
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeliveryOrder]
@Flag int,
@StoreId int,
@InvoiceNo bigint
--with encryption
as


select *,
(case when SD_Qty20=0 then 0 else 
((D_Qty2-(D_Qty2 % SD_Qty20)) / SD_Qty20)+(case when (D_Qty2 % SD_Qty20)>0 then 1. else 0. end)end) QtyQty
from(

select SM.InvoiceNo SM_InvoiceNo,dbo.GetStoreName(M.StoreId)StoreName,
M.DayDate,M.ToId,M.Notes,M.Cashier,M.DocNo,M.Temp,
D.*,
(Case when @Flag=0 then C.Name else S.Name end) ToName,
(Case when @Flag=0 then dbo.GetCityName(C.CountryId,C.CityId) else dbo.GetCityName(S.CountryId,S.CityId) end)CityName,
(Case when @Flag=0 then dbo.GetAreaName(C.CountryId,C.CityId,C.AreaId) else dbo.GetAreaName(S.CountryId,S.CityId,S.AreaId) end)AreaName,
(Case when @Flag=0 then C.Address else S.Address end)Address,
cast(D.Qty2 as decimal(18,2)) D_Qty2,
cast(SD.Qty2 as decimal(18,2)) SD_Qty20,
M.DayDate /*SM.DeliveryDate*/ DeliveryDate,
DP.Name DP_Name

from DeliveryOrderDetails D
left join DeliveryOrderMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesMaster SM on(D.StoreId=SM.StoreId and M.SalesFlagId=SM.Flag and M.SalesInvoiceNo=SM.InvoiceNo and SM.DocNo=M.DocNo)
left join SalesDetails SD on(SD.StoreId=SM.StoreId and SD.Flag=SM.Flag and SM.InvoiceNo=SD.InvoiceNo and SD.ItemId=D.ItemId)
left join Customers C on(SM.ToId=C.Id)
left join Suppliers S on(SM.ToId=S.Id)
left join DeliveryPersons DP on(DP.Id=M.DeliveryPersonId)
where M.StoreId=@StoreId
and M.Flag=@Flag
and M.InvoiceNo=@InvoiceNo

)Tbl
GO
/****** Object:  StoredProcedure [dbo].[GetDeliveryOrderAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDeliveryOrderAll]
@Flag int,
@FromDate datetime,
@ToDate datetime
--with encryption
as


select *,
(case when SD_Qty20=0 then 0 else 
((D_Qty2-(D_Qty2 % SD_Qty20)) / SD_Qty20)+(case when (D_Qty2 % SD_Qty20)>0 then 1. else 0. end)end) QtyQty
from(

select SM.InvoiceNo SM_InvoiceNo,dbo.GetStoreName(M.StoreId)StoreName,
M.DayDate,M.ToId,M.Notes,M.Cashier,M.DocNo,M.Temp,
D.*,
(Case when @Flag=0 then C.Name else S.Name end) ToName,
(Case when @Flag=0 then dbo.GetCityName(C.CountryId,C.CityId) else dbo.GetCityName(S.CountryId,S.CityId) end)CityName,
(Case when @Flag=0 then dbo.GetAreaName(C.CountryId,C.CityId,C.AreaId) else dbo.GetAreaName(S.CountryId,S.CityId,S.AreaId) end)AreaName,
(Case when @Flag=0 then C.Address else S.Address end)Address,
cast(D.Qty2 as decimal(18,2)) D_Qty2,
cast(SD.Qty2 as decimal(18,2)) SD_Qty20,
M.DayDate /*SM.DeliveryDate*/ DeliveryDate,
DP.Name DP_Name

from DeliveryOrderDetails D
left join DeliveryOrderMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join SalesMaster SM on(D.StoreId=SM.StoreId and M.SalesFlagId=SM.Flag and M.SalesInvoiceNo=SM.InvoiceNo and SM.DocNo=M.DocNo)
left join SalesDetails SD on(SD.StoreId=SM.StoreId and SD.Flag=SM.Flag and SM.InvoiceNo=SD.InvoiceNo and SD.ItemId=D.ItemId)
left join Customers C on(SM.ToId=C.Id)
left join Suppliers S on(SM.ToId=S.Id)
left join DeliveryPersons DP on(DP.Id=M.DeliveryPersonId)
where M.DayDate between @FromDate and @ToDate
and M.Flag=@Flag
)Tbl
GO
/****** Object:  StoredProcedure [dbo].[GetDiff]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDiff]
@Id int,
@Year int

as

select T.*,T2.*,TT.Month MyMonth,TT.Month2 MyMonth2
from (
Select 1 Month,7 Month2 union
Select 2 Month,8 Month2 union
Select 3 Month,9 Month2 union
Select 4 Month,10 Month2 union
Select 5 Month,11 Month2 union
Select 6 Month,12 Month2 
)TT 
left join Employees2Salary T on(T.Month=TT.Month and T.Year=@Year and T.Id=@Id)  
left join Employees2Salary T2 on(T2.Month=TT.Month2 and T2.Year=@Year and T2.Id=@Id)  
order by TT.Month
GO
/****** Object:  StoredProcedure [dbo].[GetDirectBonus]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDirectBonus]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName,
(case IsVal when 0 then 'ساعات' when 1 then 'أيام' when 2 then 'قيمة' else '' end) IsValName,
(case IsVal when 0 then (hh+mm/60.) else value end) IsValValue
from DirectBonus 
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDirectCut]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDirectCut]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName,
(case IsVal when 0 then 'ساعات' when 1 then 'أيام' when 2 then 'قيمة' else '' end) IsValName,
(case IsVal when 0 then (hh+mm/60.) else value end) IsValValue
from DirectCut
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetDoctorsCompanies]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDoctorsCompanies](@CompanyId int)
--with encryption
as

	select D.Id DegreeId,D.Name DegreeName,V.Id VisitingTypeId,V.Name VisitingTypeName,C.Price,C.Payed,C.Remaining,C.Notes
	from Degrees D
	cross join VisitingTypes V
	left join Companies C0 on(C0.Id=@CompanyId)
	left join DoctorsCompanies C on(C.DegreeId=D.Id and C.VisitingTypeId=V.Id and C.CompanyId=C0.Id)
GO
/****** Object:  StoredProcedure [dbo].[GetDoctorsCompaniesData]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetDoctorsCompaniesData]
@CompanyId bigint,
@VisitingTypeId bigint,
@DoctorId bigint
--with encryption
as
select * from DoctorsCompanies
where CompanyId=@CompanyId
and VisitingTypeId=@VisitingTypeId
and DegreeId=(select T.DegreeId from Employees T where Id=@DoctorId)
GO
/****** Object:  StoredProcedure [dbo].[GetEmpBankCash_G2Types]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpBankCash_G2Types]
(
@Flag bigint,
@EmpId bigint
)
--with encryption
as
	select 0 Id, '-' Name 
	
	union all

 select distinct T.Id Id,T.Name
	from Employees EE
	cross join BankCash_G2Types T
	left join EmpBankCash_G2Types E on(E.Flag=T.Flag and E.TypeId=T.Id and E.EmpId=EE.Id)
	where T.Flag=@Flag 
	and(EmpId=@EmpId or exists(select Id from Employees where Id=@EmpId and Manager=1))
GO
/****** Object:  StoredProcedure [dbo].[GetEmpCloseShift]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpCloseShift]
@UserId bigint=0
--with encryption
as
select top 1 *,dbo.GetEmpArName(EmpId)EmpArName
from EmpCloseShift
where EmpId=@UserId
order by MyGetDate desc
GO
/****** Object:  StoredProcedure [dbo].[GetEmpEntry2Types]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpEntry2Types]
(
@Flag bigint,
@EmpId bigint
)
--with encryption
as
	select 0 Id, '-' Name 
	
	union all
	
	select distinct T.Id Id,cast(T.Id as nvarchar(100))+' - '+T.Name Name
	from Employees EE
	cross join Entry2Types T
	left join EmpEntry2Types E on(E.TypeId=T.Id and E.EmpId=EE.Id)
	where T.Flag=@Flag 
	and(EmpId=@EmpId or exists(select Id from Employees where Id=@EmpId and Manager=1))
GO
/****** Object:  StoredProcedure [dbo].[GetEmpEntryTypes]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[GetEmpEntryTypes]
(
@Flag bigint,
@EmpId bigint
)
--with encryption
as
	select 0 Id, '-' Name 
	union all
	select distinct T.Id Id,T.Name
	from Employees EE
	cross join EntryTypes T
	left join EmpEntryTypes E on(E.TypeId=T.Id and E.EmpId=EE.Id)
	where T.Flag=@Flag 
	and(EmpId=@EmpId or exists(select Id from Employees where Id=@EmpId and Manager=1))
GO
/****** Object:  StoredProcedure [dbo].[GetEmpLoanDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpLoanDetailed]
@EmpId bigint
--with encryption
as

select EmpId,Year,Month,LoanValue
from SalaryHistory
where (EmpId=@EmpId or @EmpId=0)
and LoanValue<>0
order by Year,Month
GO
/****** Object:  StoredProcedure [dbo].[GetEmployee1Absence]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployee1Absence]
@FromDate datetime,
@ToDate datetime,
@MainJobId int, 
@SubJobId int,
@Flag int
as

--@Flag
--1 ansence
--2 not attend
--3 not leave

set datefirst 6


select T.DayDate,T.Id,T.Name,
J.Name 'MainJobName',
SJ.Name 'SubJobName',
(case @Flag 
when 3 then min (L.DayDate)
when 2 then max (L2.DayDate)
else null end)LogDateTime
from Employees1Daily T
left join AttendanceLog L on(T.Id=L.EmpId and T.DayDate=CAST(L.DayDate as date) and L.State=0)
left join AttendanceLog L2 on(T.Id=L2.EmpId and T.DayDate=CAST(L2.DayDate as date) and L2.State=1)
left join LeaveRequests LR on(T.Id=LR.EmpId and T.DayDate=LR.DayDate)
left join LeaveRequests2 LR2 on(T.Id=LR2.EmpId and T.DayDate between LR2.FromDate and LR2.ToDate)
left join OfficialHolidays OH on(T.DayDate between OH.FromDate and OH.ToDate)
left join MainJobs J on (J.Id=T.MainJobId)
left join SubJobs SJ on (SJ.MainJobId=T.MainJobId and SJ.Id=T.SubJobId)
left join Employees1Details ED 
	on ED.Id=T.Id
	and T.DayDate between 
		CAST(CONVERT(VARCHAR, ED.Year) + '-' + CONVERT(VARCHAR, ED.Month) + '-' + CONVERT(VARCHAR, ED.FromDay) AS DATETIME)
	and 
		CAST(CONVERT(VARCHAR, ED.ToYear) + '-' + CONVERT(VARCHAR, ED.ToMonth) + '-' + CONVERT(VARCHAR, ED.ToDay) AS DATETIME)
	and ED.Holiday=DATEPART(WEEKDAY,T.DayDate)
where T.DayDate between @FromDate and @ToDate
and (T.MainJobId=@MainJobId or @MainJobId=0)
and (T.SubJobId=@SubJobId or @SubJobId=0)
and T.IsStopped=0
and J.IsStopped=0
and LR.EmpId is null
and LR2.EmpId is null
and OH.Id is null

--and dbo.IsWeekHoliday1(T.DayDate,T.Id)=0
--and not(ED.Holiday=DATEPART(WEEKDAY,T.DayDate) or DATEPART(WEEKDAY,T.DayDate)=7)
and ED.Holiday is null 
and DATEPART(WEEKDAY,T.DayDate)<>7


and (
		(@Flag=1 and L.EmpId is null and L2.EmpId is null)or
		(@Flag=2 and L.EmpId is null and L2.EmpId is not null)or
		(@Flag=3 and L.EmpId is not null and L2.EmpId is null)
	)
group by T.DayDate,T.Id,T.Name,T.MainJobId,T.SubJobId,J.Name,SJ.Name
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees]
--with encryption
as
select Id,Name,dbo.GetEmpName(Id) 'EmpName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(Id)) 'DepartmentName',
dbo.GetMainJobName(MainJobId) 'MainJobName',
dbo.GetSubJobName(MainJobId,SubJobId) 'SubJobName'
from Employees
where Stopped=0
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees1]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees1]
@MainJobId int,
@SubJobId int
--with encryption
as
select Id,Name,
dbo.GetMainJobName(MainJobId) 'MainJobName',
dbo.GetSubJobName(MainJobId,SubJobId) 'SubJobName'
from Employees1
where (MainJobId=@MainJobId or @MainJobId=0)
and (SubJobId=@SubJobId or @SubJobId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees2]
(@Id int)
--with encryption
as
select *,
dbo.GetJobTypeName(JobTypeId)JobTypeName,
dbo.GetEducationDegreeName(EducationDegreeId)EducationDegreeName,
dbo.GetJobName(JobId)JobName,
dbo.GetSocialStatusName(SocialStatusId)SocialStatusIdName
from Employees2 
where Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees2Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetEmployees2Salary]
as
select  0 Sort,ID,Name,S1,'الأجر الوظيفي القديم' Title from Employees2Salary union all
select  0 Sort,ID,Name,S2,'7% دورية' Title from Employees2Salary union all
select  0 Sort,ID,Name,S3,'استثنائية' Title from Employees2Salary union all
select  0 Sort,ID,Name,S4,'الأجر الوظيفي الجديد' Title from Employees2Salary union all
select  0 Sort,ID,Name,S5,'الأساسي القديم' Title from Employees2Salary union all
select  0 Sort,ID,Name,S6,'9%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S8,'الأجر الوظيفي الجديد' Title from Employees2Salary union all
select  0 Sort,ID,Name,S9,'الأجر المكمل' Title from Employees2Salary union all
select  0 Sort,ID,Name,S10,'البند التعويضي' Title from Employees2Salary union all
select  0 Sort,ID,Name,S100,'حافز مبالغ مقطوعة' Title from Employees2Salary union all
select  0 Sort,ID,Name,S11,'الأجر المتغير' Title from Employees2Salary union all
select  0 Sort,ID,Name,S12,'حوافز' Title from Employees2Salary union all
select  0 Sort,ID,Name,S13,'أضافي' Title from Employees2Salary union all
select  0 Sort,ID,Name,S14,'50%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S14_1,'5% حافز' Title from Employees2Salary union all
select  0 Sort,ID,Name,S15,'بدل علاج' Title from Employees2Salary union all
select  0 Sort,ID,Name,S16,'حافز تميز' Title from Employees2Salary union all
select  0 Sort,ID,Name,S17,'4% صحي' Title from Employees2Salary union all
select  0 Sort,ID,Name,S18,'المبلغ' Title from Employees2Salary union all
select  0 Sort,ID,Name,S19,'المبلغ + 3%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S20,'صندوق التكافل' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_1_1,'15%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_1_2,'1%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_1_3,'2%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_1_4,'3%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_1,'15%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_2,'10%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_3,'2%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_4,'3%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_5,'3%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_6,'1%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_2_7,'1%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_3_1,'15%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_3_2,'1%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_3_3,'3%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_4_1,'15%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_4_2,'10%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_4_3,'3%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_4_4,'1%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S_4_5,'1%' Title from Employees2Salary union all
select  0 Sort,ID,Name,S4_1,'إجمالي الأجر الوظيفي' Title from Employees2Salary union all
select  0 Sort,ID,Name,S9_1,'إجمالي الأجر المكمل' Title from Employees2Salary union all
select  0 Sort,ID,Name,Total,'الإجمالي العام' Title from Employees2Salary union all
select  0 Sort,ID,Name,D1,'قسط أجازة بدون مرتب' Title from Employees2Salary union all
select  0 Sort,ID,Name,D2,'قسط أجازة' Title from Employees2Salary union all
select  0 Sort,ID,Name,D3,'مدة مشتراه' Title from Employees2Salary union all
select  0 Sort,ID,Name,D4,'شركة مصر للتأمين' Title from Employees2Salary union all
select  0 Sort,ID,Name,D5,'صندوق زمالة' Title from Employees2Salary union all
select  0 Sort,ID,Name,D6,'قسط إعارة' Title from Employees2Salary union all
select  0 Sort,ID,Name,Damgha,'الدمغة' Title from Employees2Salary union all
select  0 Sort,ID,Name,Tax,'كسب العمل' Title from Employees2Salary union all
select  0 Sort,ID,Name,S21,'بدل جذب' Title from Employees2Salary union all
select  0 Sort,ID,Name,S22,'بدل وجبة' Title from Employees2Salary union all
select  0 Sort,ID,Name,S23,'بدل صرافة' Title from Employees2Salary union all
select  0 Sort,ID,Name,S24,'خدمة مستشارين' Title from Employees2Salary union all
select  0 Sort,ID,Name,S25,'بدل نقدي' Title from Employees2Salary union all
select  0 Sort,ID,Name,S26,'بدل إقامة' Title from Employees2Salary union all
select  0 Sort,ID,Name,S27,'بدل تفرغ' Title from Employees2Salary
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetEmployees4]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.* 
from Employees4Salary E
left join Employees4ItemsSalary S on(E.Month=S.Month and E.Year=S.Year and E.Id=S.EmpID)
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4Daily]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees4Daily]
@FromDate Datetime,
@ToDate Datetime,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.* 
from Employees4 E
left join Employees4Items S on(E.Id=S.EmpID)
where cast(E.MyGetDate as date) between @FromDate and @ToDate
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees4Salary]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
E.IsEmployee,
S.* ,
dbo.GetDeductionValue(S.Month,S.Year,S.GroupId,S.TypeId,S.Id) D_Value,
dbo.GetEmployees5ItemsSalaryValue(S.YEAR,S.MONTH,S.GroupId,S.TypeId,S.Id) S5_Value
from Employees4Salary E
left join Employees4ItemsSalary S on(E.Month=S.Month and E.Year=S.Year and E.Id=S.EmpID)
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4Salary0]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees4Salary0]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Month,E.Year,E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
It.*,
dbo.GetDeductionValue(E.Month,E.Year,It.GroupId,It.TypeId,It.Id) D_Value
from Employees4Salary E
cross join (
	select Itt.*,
	Gp.Name GroupName,
	Tp.Name TypeName,
	dbo.GetEmployees4ItemsSalaryValue(@YEAR,@MONTH,Gp.Id,Tp.Id,Itt.Id) S4_Value,
	dbo.GetEmployees5ItemsSalaryValue(@YEAR,@MONTH,Gp.Id,Tp.Id,Itt.Id) S5_Value
	from DeductionGroups Gp 
	left join DeductionTypes Tp on(Tp.GroupId=Gp.Id)
	left join DeductionItems Itt on(Itt.GroupId=Tp.GroupId and Itt.TypeId=Tp.Id)
) It
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (It.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (It.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (It.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4SalaryDeductionItems]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetEmployees4SalaryDeductionItems]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select @MONTH MONTH,@YEAR YEAR,0 EmpId,'' EmpName,
0 MyEmpId,'' MyEmpName,
0 MyEmpId2,'' MyEmpName2,
'' DocNo,
It.*,
Gp.Name GroupName,
Tp.Name TypeName,
dbo.GetEmployees4DeductionValue(@YEAR,@MONTH,Gp.Id,Tp.Id,It.Id) D_Value,
dbo.GetEmployees4ItemsSalaryValue(@YEAR,@MONTH,Gp.Id,Tp.Id,It.Id) S4_Value,
dbo.GetEmployees5ItemsSalaryValue(@YEAR,@MONTH,Gp.Id,Tp.Id,It.Id) S5_Value
from DeductionItems It
left join DeductionGroups Gp on(It.GroupId=Gp.Id)
left join DeductionTypes Tp on(It.GroupId=Tp.GroupId and It.TypeId=Tp.Id)
where (@MONTH=@Month or @Month=0)
and (@YEAR=@Year or @Year=0)
--and (E.Id>=@FromEmpId or @FromEmpId=0)
--and (E.Id<=@ToEmpId or @ToEmpId=0)
--and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
--and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
--and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
--and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (It.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (It.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (It.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees4SalaryOld]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees4SalaryOld]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.* ,
dbo.GetDeductionValue(S.Month,S.Year,S.GroupId,S.TypeId,S.Id) D_Value,
dbo.GetEmployees5ItemsSalaryValue(S.YEAR,S.MONTH,S.GroupId,S.TypeId,S.Id) S5_Value
from Employees4Salary E
left join Employees4ItemsSalary S on(E.Month=S.Month and E.Year=S.Year and E.Id=S.EmpID)
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees5Daily]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees5Daily]
@FromDate Datetime,
@ToDate Datetime,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.* 
from Employees5 E
left join Employees5Items S on(E.Id=S.EmpID)
where cast(E.MyGetDate as date) between @FromDate and @ToDate
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees5Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees5Salary]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.*
from Employees5Salary E
left join Employees5ItemsSalary S on(E.Month=S.Month and E.Year=S.Year and E.Id=S.EmpID)
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Daily]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees6Daily]
@FromDate Datetime,
@ToDate Datetime,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.* 
from Employees6 E
left join Employees6Items S on(E.Id=S.EmpID)
where cast(E.MyGetDate as date) between @FromDate and @ToDate
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees6Salary]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S.*
from Employees6Salary E
left join Employees6ItemsSalary S on(E.Month=S.Month and E.Year=S.Year and E.Id=S.EmpID)
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary0001]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetEmployees6Salary0001]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select E.Id EmpId,E.Name EmpName,
E.MyEmpId,dbo.GetEmpArName(E.MyEmpId)MyEmpName,
E.MyEmpId2,dbo.GetEmpArName(E.MyEmpId2)MyEmpName2,
E.DocNo,
S4.*,
isnull(S5.Value,0) S5_Value
from Employees4Salary E
left join Employees4ItemsSalary S4 on(E.Month=S4.Month and E.Year=S4.Year and E.Id=S4.EmpID)
left join Employees5ItemsSalary S5 on(E.Month=S5.Month and E.Year=S5.Year and E.Id=S5.EmpID 
and S4.GroupId=S5.GroupId and S4.TypeId=S5.TypeId and S4.Id=S5.Id)
where (E.Month=@Month or @Month=0)
and (E.Year=@Year or @Year=0)
and (E.Id>=@FromEmpId or @FromEmpId=0)
and (E.Id<=@ToEmpId or @ToEmpId=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (E.MyEmpId2=@MyEmpId2 or @MyEmpId2=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (S4.GroupId=@DeductionGroupId or @DeductionGroupId=0)
and (S4.TypeId=@DeductionTypeId or @DeductionTypeId=0)
and (S4.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary0002]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees6Salary0002]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select @Year Year,@Month Month,0 EmpId,G.Id GroupId,G.Name GroupName,T.Id TypeId,T.Name TypeName,isnull(It.Id,0) ItemId,isnull(It.Name,'') ItemName,

dbo.GetEmployeesItemValuePre(@Year,@Month,G.Id,T.Id,It.Id) BalPrev,
dbo.GetEmployees4ItemsSalaryValue(@Year,@Month,G.Id,T.Id,It.Id)S4_Value,
dbo.GetEmployees5ItemsSalaryValue(@Year,@Month,G.Id,T.Id,It.Id)S5_Value,
dbo.GetEmployees6ItemsSalaryValue(@Year,@Month,G.Id,T.Id,It.Id)S6_Value,
dbo.GetDeductionValue(@Month,@Year,G.Id,T.Id,It.Id) D_Value,
dbo.GetDeductionValue2(@Month,@Year,G.Id,T.Id,It.Id) D_Value2
from DeductionGroups G
left join DeductionTypes T on(G.Id=T.GroupId)
left join DeductionItems It on(G.Id=It.GroupId and T.Id=It.TypeId)

where (G.Id=@DeductionGroupId or @DeductionGroupId=0)
and (T.Id=@DeductionTypeId or @DeductionTypeId=0)
and (It.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary0002OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees6Salary0002OLD]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select @Year Year,@Month Month,0 EmpId,G.Id GroupId,G.Name GroupName,T.Id TypeId,T.Name TypeName,isnull(It.Id,0) ItemId,isnull(It.Name,'') ItemName,
isnull(S4.Value,0) S4_Value,
isnull(S5.Value,0) S5_Value,
dbo.GetDeductionValue(@Month,@Year,G.Id,T.Id,It.Id) D_Value
from DeductionGroups G
left join DeductionTypes T on(G.Id=T.GroupId)
left join DeductionItems It on(G.Id=It.GroupId and T.Id=It.TypeId)
left join (
select TT.GroupId,TT.TypeId,TT.Id,sum(TT.Value)Value
from Employees4ItemsSalary TT
where @Month=TT.Month and @Year=TT.Year 
group by TT.GroupId,TT.TypeId,TT.Id
)
S4 on(S4.GroupId=G.Id and S4.TypeId=T.Id and (S4.Id=It.Id or S4.Id=0))
left join (
select TT.GroupId,TT.TypeId,TT.Id,sum(TT.Value)Value
from Employees5ItemsSalary TT
where @Month=TT.Month and @Year=TT.Year 
group by TT.GroupId,TT.TypeId,TT.Id
)
S5 on(S5.GroupId=G.Id and S5.TypeId=T.Id and (S5.Id=It.Id or S5.Id=0))
where (G.Id=@DeductionGroupId or @DeductionGroupId=0)
and (T.Id=@DeductionTypeId or @DeductionTypeId=0)
and (It.Id=@DeductionItemId or @DeductionItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEmployees6Salary2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmployees6Salary2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@MyEmpId int,
@MyEmpId2 int,
@DocNoFrom int,
@DocNoTo int,
@DeductionGroupId int,
@DeductionTypeId int,
@DeductionItemId int
--with encryption
as

select @Year Year,@Month Month,0 EmpId,G.Id GroupId,G.Name GroupName,T.Id TypeId,T.Name TypeName,isnull(It.Id,0) ItemId,isnull(It.Name,'') ItemName,
isnull(S4.Value,0) S4_Value,
isnull(S5.Value,0) S5_Value,
isnull(D.Value,0) D_Value
from DeductionGroups G
left join DeductionTypes T on(G.Id=T.GroupId)
left join DeductionItems It on(G.Id=It.GroupId and T.Id=It.TypeId)
left join Deduction D on(D.Month=@Month and D.Year=@Year and D.GroupId=G.Id and D.TypeId=T.Id and (D.Id=It.Id or D.Id=0))
left join (
select TT.GroupId,TT.TypeId,TT.Id,sum(TT.Value)Value
from Employees4ItemsSalary TT
where @Month=TT.Month and @Year=TT.Year 
group by TT.GroupId,TT.TypeId,TT.Id
)
S4 on(S4.GroupId=G.Id and S4.TypeId=T.Id and (S4.Id=It.Id or S4.Id=0))
left join (
select TT.GroupId,TT.TypeId,TT.Id,sum(TT.Value)Value
from Employees5ItemsSalary TT
where @Month=TT.Month and @Year=TT.Year 
group by TT.GroupId,TT.TypeId,TT.Id
)
S5 on(S5.GroupId=G.Id and S5.TypeId=T.Id and (S5.Id=It.Id or S5.Id=0))
where (G.Id=@DeductionGroupId or @DeductionGroupId=0)
and (T.Id=@DeductionTypeId or @DeductionTypeId=0)
and (It.Id=@DeductionItemId or @DeductionItemId=0)

GO
/****** Object:  StoredProcedure [dbo].[GetEmpOutcome]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpOutcome]
(
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as

select *,dbo.GetEmpArName(EmpId)EmpArName
from EmpOutcome
where (EmpId=@EmpId or @EmpId=0)
and DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetEmps]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmps]
as



declare @Path nvarchar(1000)='D:\ftp\Emps\'

EXEC ('EXEC sp_configure ''show advanced options'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''Ole Automation Procedures'',1; ')
EXEC ('EXEC sp_configure ''xp_cmdshell'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''show advanced options'', 0; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')

declare @dir nvarchar(1000)='MD '+@Path
exec master.dbo.xp_cmdshell @dir,NO_OUTPUT

create table #tbl(AttachedName nvarchar(100),Line int identity)
insert #tbl(AttachedName)
SELECT cast(Id as nvarchar(100))+'.jpg' from Employees where Stopped=0


declare @x int=1,@max int=(select MAX(line) from #tbl)
while @x<=@max
begin
	declare @Name nvarchar(1000)=@Path+(select AttachedName from #tbl where Line=@x)
 DECLARE @isExists INT
	exec master.dbo.xp_fileexist @Name,@isExists OUTPUT
	--if @isExists=1
	--delete #tbl where Line=@x
	select @x+=1
end




DECLARE @SQLIMG VARCHAR(MAX),
 @IMG_PATH VARBINARY(MAX),
 @AttachedName VARCHAR(MAX),
 @TIMESTAMP nVARCHAR(4000),
 @ObjectToken INT

DECLARE IMGPATH CURSOR FAST_FORWARD FOR 
 SELECT Image,cast(Id as nvarchar(100))+'.jpg' 
 from Employees
 where cast(Id as nvarchar(100))+'.jpg' in(select AttachedName from #tbl)

OPEN IMGPATH 

FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName

WHILE @@FETCH_STATUS = 0
 BEGIN
 SET @TIMESTAMP = @Path+@AttachedName
 
 PRINT @TIMESTAMP
 PRINT @SQLIMG

 EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT
 EXEC sp_OASetProperty @ObjectToken, 'Type', 1
 EXEC sp_OAMethod @ObjectToken, 'Open'
 EXEC sp_OAMethod @ObjectToken, 'Write', NULL, @IMG_PATH
 EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, @TIMESTAMP, 2
 EXEC sp_OAMethod @ObjectToken, 'Close'
 EXEC sp_OADestroy @ObjectToken

 FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName
 END 

CLOSE IMGPATH
DEALLOCATE IMGPATH

drop table #tbl

SELECT Name,cast(Id as nvarchar(100))+'.jpg' AttachedName,
MainJobId,dbo.GetMainJobName(MainJobId)MainJobName,
SubJobId,dbo.GetSubJobName(MainJobId,SubJobId)SubJobName
from Employees 
order by MainJobId,SubJobId,Id
GO
/****** Object:  StoredProcedure [dbo].[GetEmpschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpschedule]
@EmpId bigint
--with encryption
as



select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'السبت' day,(case when hh>12 then hh-12 else hh end)hh,(case when hh>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm,2)mm from Employees where Id=@EmpId and Saturday=1 union all
select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'الأحد',(case when hh2>12 then hh2-12 else hh2 end)hh,(case when hh2>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm2,2) from Employees where Id=@EmpId and Sunday=1 union all
select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'الإثنين',(case when hh3>12 then hh3-12 else hh3 end)hh,(case when hh3>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm3,2) from Employees where Id=@EmpId and Monday=1 union all
select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'الثلاثاء',(case when hh4>12 then hh4-12 else hh4 end)hh,(case when hh4>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm4,2) from Employees where Id=@EmpId and Tuesday=1 union all
select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'الأربعاء',(case when hh5>12 then hh5-12 else hh5 end)hh,(case when hh5>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm5,2) from Employees where Id=@EmpId and Wednesday=1 union all
select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'الخميس',(case when hh6>12 then hh6-12 else hh6 end)hh,(case when hh6>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm6,2) from Employees where Id=@EmpId and Thursday=1 union all
select Id,Name ArName,Notes,dbo.GetDepartmentName(DepartmentId)DepartmentName,'الجمعة',(case when hh7>12 then hh7-12 else hh7 end)hh,(case when hh7>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm7,2) from Employees where Id=@EmpId and Friday=1
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShiftIncome]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpShiftIncome]
@FromDate datetime,
@ToDate datetime
--with encryption
as

select T.*,E.Name E_Name 
from(
select EmpIdReservation UserId,CurrentShift,0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Payed Value,MyNotes Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,Time,InsertedDate,
Payed Income,0 Outcome 
from Reservations where Canceled=0 and Returned=0 and cast(ReservationDate as date) between @FromDate-10 and @ToDate+1 and CurrentShift>0

union all

select EmpIdRemaining UserId,CurrentShift,0 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,RemainingDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Remaining Value,MyNotes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,Remaining MyPayed,0 MyRemaining,Time,InsertedDate,
Remaining Income,0 Outcome 
from Reservations where Canceled=0 and Returned=0 and cast(RemainingDate as date) between @FromDate-10 and @ToDate+1 and CurrentShift>0

union all 

select EmpIdReservation UserId,CurrentShift,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Payed Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate,
Payed Income,0 Outcome 
from Services where Canceled=0 and Returned=0 and cast(DayDate as date) between @FromDate-10 and @ToDate+1 and CurrentShift>0

union all 

select EmpIdRemaining UserId,CurrentShift,0 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,RemainingDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,Remaining MyPayed,0 MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate,
Remaining Income,0 Outcome 
from Services where Canceled=0 and Returned=0 and cast(RemainingDate as date) between @FromDate-10 and @ToDate+1 and CurrentShift>0



union all 

select EmpIdReservation UserId,CurrentShift,0 CancelFlag,2 SerialFlag,DayDate ReservationDate,
RoomId,0,0,RemainingDate DayDate,'-' SerialIdType,
Value,Notes,Canceled,MyLine SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
'-','-','-',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value,Value MyPayed,0 MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate,
Remaining Income,0 Outcome 
from ReservationsRooms where Canceled=0 and Returned=0 and cast(DayDate as date) between @FromDate-10 and @ToDate+1 and CurrentShift>0


union all 

select UserNameId UserId,CurrentShift,0 CancelFlag,2 SerialFlag,InsertedDate ReservationDate,
TP.RoomId,0,0,InsertedDate DayDate,'-' SerialIdType,
Tp.Value,TP.Notes,0,TP.Line SerialId,TP.UserName,TP.MyGetDate,UserNameId,dbo.GetEmpName(UserNameId) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
'-',dbo.GetRoomName(T.RoomId),'-',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
TP.Value,TP.Value MyPayed,0 MyRemaining,left(CAST(TP.MyGetDate as time),5),InsertedDate,
Remaining Income,0 Outcome 
from RoomsDataPayments TP
left join RoomsData T on(T.RoomId=TP.RoomId and T.Id=TP.Id and T.MyLine=TP.MyMainLine)
where cast(InsertedDate as date) between @FromDate-10 and @ToDate+1 and CurrentShift>0




union all 

select PrintUser UserId,CurrentShift,0 CancelFlag,2 SerialFlag,DayDate,
0,0,0,DayDate,'-' SerialIdType,
TotalAfterDiscount,Notes,0,InvoiceNo,M.Cashier,PrintDate,M.Cashier,dbo.GetEmpName(M.Cashier) 'EmpIdReservationName',0,0,
'-','-','-',
ToId,dbo.GetCaseArName(ToId) 'CaseArName',dbo.GetCaseEnName(ToId) 'CaseEnName',
SF.FlagValue*TotalAfterDiscount,SF.FlagValue*TotalAfterDiscount,0 MyRemaining,left(CAST(PrintDate as time),5),MyGetDate,
SF.FlagValue*TotalAfterDiscount Income,0 Outcome 
from SalesMaster M
left join SalesFlags SF on(M.Flag=SF.Id)
where DayDate between @FromDate-10 and @ToDate+1 and CurrentShift>0
)T
left join Employees E on (T.UserName=E.Id)
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShiftNet]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpShiftNet]
@UserId bigint=0
--with encryption
as

select isnull(sum(Income),0)Income,isnull(sum(Outcome),0)Outcome,isnull(sum(Income),0)-isnull(sum(Outcome),0) Net
 from 
(
select Payed Income,0 Outcome from Reservations where Canceled=0 and Returned=0 and IsClosed=0 and (EmpIdReservation=@UserId or @UserId=0)

union all

select Remaining Income,0 Outcome from Reservations where Canceled=0 and Returned=0 and IsClosed=0 and Done=1 and (EmpIdRemaining=@UserId or @UserId=0)

union all 

select Payed Income,0 Outcome from Services where Canceled=0 and Returned=0 and IsClosed=0 and (EmpIdReservation=@UserId or @UserId=0)

union all 

select Remaining Income,0 Outcome from Services where Canceled=0 and Returned=0 and IsClosed=0 and Done=1 and (EmpIdRemaining=@UserId or @UserId=0)

union all 

select TotalAfterDiscount Income,0 Outcome from SalesMaster where Flag=17 and Temp=0 and IsClosed=0 and (PrintUser=@UserId or @UserId=0)

union all 

select -TotalAfterDiscount Income,0 Outcome from SalesMaster where Flag=18 and Temp=0 and IsClosed=0 and (PrintUser=@UserId or @UserId=0)

union all 

select 0 Income,Value Outcome from EmpOutcome where IsClosed=0 and (EmpId=@UserId or @UserId=0)
 

union all 

select Value Income,0 Outcome from ReservationsRooms where Canceled=0 and Returned=0 and IsClosed=0 and (EmpIdReservation=@UserId or @UserId=0)
 

union all 

select Value Income,0 Outcome from RoomsDataPayments where IsClosed=0 and (UserNameId=@UserId or @UserId=0)
 
 
)tbl
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShiftNetDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpShiftNetDetailed]
--with encryption
as

select T.*,E.Name E_Name 
from EmpOutcome T
left join Employees E on (T.UserName=E.Id)
GO
/****** Object:  StoredProcedure [dbo].[GetEmpShifts]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEmpShifts]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName
from EmpShifts
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEntry2One]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEntry2One]
@Entry2TypeId bigint,
@InvoiceNo bigint
--with encryption
as

select T.*,
dbo.GetAccName(MainAccNo1)AccName1,
dbo.GetSubAccName(MainAccNo1,SubAccNo1)SubAccName1,
dbo.GetCurrencyName(CurrencyId1)CurrencyName1,
dbo.GetAccName(MainAccNo2)AccName2,
dbo.GetSubAccName(MainAccNo2,SubAccNo2)SubAccName2,
dbo.GetCurrencyName(CurrencyId2)CurrencyName2,
dbo.GetCostTypeName(CostTypeId)CostTypeName,
dbo.GetOrderTypes(PurchaseAccNo)OrderTypeName,
dbo.GetShipperName(M.ShipperId)ShipperName,
dbo.GetStoreName(T.StoreId)StoreName
from Entry2 T
left join ImportMessages M on(M.OrderTypeId=T.PurchaseAccNo and M.Id=T.ImportMessageId)
where Entry2TypeId=@Entry2TypeId
and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetEntryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEntryAll]
@EntryTypeId int,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select ET.Name ET_Name,ED.*,E.*,
dbo.GetAccName(dbo.GetMainAccId(MainAccNo))MainAccName,
dbo.GetAccName(MainAccNo)AccName,
dbo.GetSubAccName(MainAccNo,SubAccNo)SubAccName,
dbo.GetCurrencyName(ED.CurrencyId)CurrencyName,
dbo.GetCostTypeName(CostTypeId)CostTypeName,
dbo.GetOrderTypes(PurchaseAccNo)OrderTypeName,
dbo.GetShipperName(M.ShipperId)ShipperName,
dbo.GetStoreName(ED.StoreId)StoreName
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join Entry2Types ET on(E.EntryTypeId=ET.Id)
left join ImportMessages M on(M.OrderTypeId=ED.PurchaseAccNo and M.Id=ED.ImportMessageId)
where (E.EntryTypeId=@EntryTypeId or @EntryTypeId=0)
and (E.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (E.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (E.DayDate>=@FromDate or @FromDate=0)
and (E.DayDate<=@ToDate or @ToDate=0)
GO
/****** Object:  StoredProcedure [dbo].[GetEntryOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetEntryOne]
@EntryTypeId bigint,
@InvoiceNo bigint
--with encryption
as

select ET.Name ET_Name,ED.*,E.*,
dbo.GetAccName(dbo.GetMainAccId(MainAccNo))MainAccName,
dbo.GetAccName(MainAccNo)AccName,
dbo.GetSubAccName(MainAccNo,SubAccNo)SubAccName,
dbo.GetCurrencyName(ED.CurrencyId)CurrencyName,
dbo.GetCostTypeName(CostTypeId)CostTypeName,
dbo.GetOrderTypes(PurchaseAccNo)OrderTypeName,
dbo.GetShipperName(M.ShipperId)ShipperName,
dbo.GetStoreName(ED.StoreId)StoreName
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join EntryTypes ET on(E.EntryTypeId=ET.Id)
left join ImportMessages M on(M.OrderTypeId=ED.PurchaseAccNo and M.Id=ED.ImportMessageId)
where ED.EntryTypeId=@EntryTypeId
and ED.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetERPStoresItemsBal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetERPStoresItemsBal]
@StoreId int,
@GroupId bigint,
@TypeId int,
@IsStopped int=0,
@ToDate datetime
--with encryption
as

select *,
(Case when BalOLD>0 then SalesPrice*BalOLD else 0 end)ValueOLD,
BalIN*SalesPrice ValueIN,
BalOUTSalesCost ValueOUTSalesCost,
BalOUT*SalesPrice ValueOUT,
(Case when BalNEW>0 then SalesPrice*BalNEW else 0 end)ValueNEW

 from (
select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
It.Id,It.Name,
It.GroupId,it.TypeId,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,it.TypeId)TypeName,
It.SalesPrice,
dbo.GetStoreItemBal(St.Id,it.Id,'',0,0,@ToDate-1) BalOLD,
dbo.GetStoreItemSales(St.Id,it.Id,@ToDate,1) BalIN,
-dbo.GetStoreItemSales(St.Id,it.Id,@ToDate,2) BalOUTSales,
-dbo.GetStoreItemSalesCost(St.Id,it.Id,@ToDate,2) BalOUTSalesCost,
-dbo.GetStoreItemSales(St.Id,it.Id,@ToDate,3) BalOUT,
dbo.GetStoreItemBal(St.Id,it.Id,'',0,0,@ToDate) BalNEW
from Items_View It
left join Stores St on(St.Id=@StoreId or @StoreId=0)
where(It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsStopped=@IsStopped or @IsStopped=2)
and It.ItemType<>3
and It.IsService=0
)Tbl
WHERE (
BalOLD>0 or
BalIN>0 or
BalOUTSales>0 or
BalOUT>0 or
BalNEW>0
)
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUp]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetExpertsFollowUp]
@Flag int,
@RecipientId int,
@ComeId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select T.*,
ISNULL(Cr.Name,'') Circle_Name,
ISNULL(App.Name,'') Appellant_Name,
ISNULL(App2.Name,'') Appellant2_Name,
isnull((case 
when T.Flag<11 then Rec.Name 
when T.Flag<21 then Rec2.Name 
else Rec3.Name end),'')Recipients_Name,
isnull(C.Name,'') Come_Name,
isnull(Ag.Name,'') Ag_Name

from ExpertsFollowUp T
left join ExpertsCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)
left join Appellants App2 on(T.AppellantId2=App2.Id)
left join Recipients Rec on(T.RecipientId=Rec.Id and T.Flag<=10)
left join Recipients2 Rec2 on(T.RecipientId=Rec2.Id and T.Flag between 11 and 20)
left join Recipients3 Rec3 on(T.RecipientId=Rec3.Id and T.Flag>20)
left join Comes C on(T.ComeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)

where T.Flag=@Flag
and(T.RecipientId=@RecipientId or @RecipientId=0)
and(T.ComeId=@ComeId or @ComeId=0)
and T.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUp2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetExpertsFollowUp2]
@Flag int,
@CirclId int, 
@OfficeId int, 
@ComeId int,
@Type int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select T.*,
Cr.Name Circle_Name,
App.Name Appellant_Name,
App2.Name Appellant2_Name,
isnull((case 
when T.Flag<11 then Rec.Name 
when T.Flag<21 then Rec2.Name 
else Rec3.Name end),'')Recipients_Name,
isnull(C.Name,'') Come_Name,
isnull(Ag.Name,'') Ag_Name,
E.ArName ,
isnull(F.Name,'') FlagName
from ExpertsFollowUp2 T
left join ExpertsFollowUp2Flags F on(T.Flag=F.Id)
left join ExpertsCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)
left join Appellants App2 on(T.AppellantId2=App2.Id)
left join Recipients Rec on(T.RecipientId=Rec.Id and T.Flag<=10)
left join Recipients2 Rec2 on(T.RecipientId=Rec2.Id and T.Flag between 11 and 20)
left join Recipients3 Rec3 on(T.RecipientId=Rec3.Id and T.Flag>20)
left join Comes C on(T.ComeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)
left join Employees E on(T.EmpId=E.Id)

where (
		(@Type=1 and T.Flag=@Flag and @Flag<>0 and T.ComeDate between @FromDate and @ToDate) or
		(@Type=2 and T.Flag=@Flag and @Flag<>0 and T.DateFirst2 between @FromDate and @ToDate) or
	 	(                 @Flag=0 and T.DayDate between @FromDate and @ToDate)
	  )
and(T.CirclId=@CirclId or @CirclId=0)
and(T.OfficeId=@OfficeId or @OfficeId=0)
and(T.ComeId=@ComeId or @ComeId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUp4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetExpertsFollowUp4]
@CirclId int,
@CirclTypeId int,
@FloorId int,
@CourtId int,
@StateId int,
@AppellantId int,
@AppellantId2 int,
@FromDate datetime,
@ToDate datetime,
@FromDateFirst datetime,
@ToDateFirst datetime,
@FromDateNext datetime,
@ToDateNext datetime

as
select *,
dbo.GetExpertsCirclName(CirclId)CirclName,
dbo.GetCirclTypeName(CirclTypeId)CirclTypeName,
dbo.GetFloorName(FloorId)FloorName,
dbo.GetCourtName(CourtId)CourtName,
dbo.GetStateName(StateId)StateName,
dbo.GetAppellantName(AppellantId)AppellantName,
dbo.GetAppellantName(AppellantId2)AppellantName2

from ExpertsFollowUp4
where (CirclId=@CirclId or @CirclId=0)
and (CirclTypeId=@CirclTypeId or @CirclTypeId =0)
and (FloorId=@FloorId or @FloorId =0)
and (CourtId=@CourtId or @CourtId =0)
and (StateId=@StateId or @StateId =0)
and (AppellantId=@AppellantId or @AppellantId =0)
and (AppellantId2=@AppellantId2 or @AppellantId2 =0)
and DayDate between @FromDate and @ToDate
and DateFirst between @FromDateFirst and @ToDateFirst
and DateNext between @FromDateNext and @ToDateNext
GO
/****** Object:  StoredProcedure [dbo].[GetExpertsFollowUpOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetExpertsFollowUpOne]
@Flag int,
@InvoiceNo int
--with encryption
as

select T.*,
Cr.Name Circle_Name,
App.Name Appellant_Name,
App2.Name Appellant2_Name,
isnull((case 
when T.Flag<11 then Rec.Name 
when T.Flag<21 then Rec2.Name 
else Rec3.Name end),'')Recipients_Name,
isnull(C.Name,'') Come_Name,
isnull(Ag.Name,'') Ag_Name

from ExpertsFollowUp T
left join ExpertsCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)
left join Appellants App2 on(T.AppellantId2=App2.Id)
left join Recipients Rec on(T.RecipientId=Rec.Id and T.Flag<=10)
left join Recipients2 Rec2 on(T.RecipientId=Rec2.Id and T.Flag between 11 and 20)
left join Recipients3 Rec3 on(T.RecipientId=Rec3.Id and T.Flag>20)
left join Comes C on(T.ComeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)

where T.Flag=@Flag
and T.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[getFifoImportMessage]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getFifoImportMessage]
@OrderTypeId bigint=0,
@ImportMessageId bigint=0,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-9-9'
as

select T0.DeliveredDate,T0.CertificateNo,T.OrderTypeId,OT.Name OT_Name,T.Id,T2.StoreId,T2.InvoiceNo,T2.ItemId,It.Name ItemName,T2.Line,

--1 SalesDetails
--2 SalesDetailsComponants
----3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo
'إضافة' 'Name1',
'صرف' 'Name2',
'هدايا' 'Name3',
'هالك' 'Name4',
'تحويل إلى مخزن' 'Name5',
'المبيعات' 'Name6',
'مردودات المبيعات' 'Name7',
'عينات' 'Name8',
'مردودات مشتريات خارجية' 'Name9',
'رسائل استيراد' 'Name10',
'صادر فك وتركيب' 'Name11',



sum(Case when F.TableIndex=1 and F.Flag=2 then F.Qty else 0 end)Qty1_0,
sum(Case when F.TableIndex=1 and F.Flag=4 then F.Qty else 0 end)Qty2_0,
sum(Case when F.TableIndex=1 and F.Flag=6 then F.Qty else 0 end)Qty3_0,
sum(Case when F.TableIndex=1 and F.Flag=7 then F.Qty else 0 end)Qty4_0,
sum(Case when F.TableIndex=1 and F.Flag=8 then F.Qty else 0 end)Qty5_0,
sum(Case when F.TableIndex=1 and F.Flag=13 then F.Qty else 0 end)Qty6_0,
sum(Case when F.TableIndex=1 and F.Flag=14 then F.Qty else 0 end)Qty7_0,
sum(Case when F.TableIndex=1 and F.Flag=25 then F.Qty else 0 end)Qty8_0,
sum(Case when F.TableIndex=1 and F.Flag=30 then F.Qty else 0 end)Qty9_0,
sum(Case when F.TableIndex=4 then F.Qty else 0 end)Qty10_0,
sum(Case when F.TableIndex=5 then F.Qty else 0 end)Qty11_0,

sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=2 then F.Qty else 0 end)Qty1,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=4 then F.Qty else 0 end)Qty2,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=6 then F.Qty else 0 end)Qty3,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=7 then F.Qty else 0 end)Qty4,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=8 then F.Qty else 0 end)Qty5,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=13 then F.Qty else 0 end)Qty6,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=14 then F.Qty else 0 end)Qty7,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=25 then F.Qty else 0 end)Qty8,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=1 and F.Flag=30 then F.Qty else 0 end)Qty9,
sum(Case when F.TableIndex=4 then F.Qty else 0 end)Qty10,
sum(Case when f.DayDate between @FromDate and @ToDate AND F.TableIndex=5 then F.Qty else 0 end)Qty11

from 
(
SELECT distinct OrderTypeId,Id FROM ImportMessagesDetailsSub2
WHERE (OrderTypeId=@OrderTypeId or @OrderTypeId=0)
and (Id=@ImportMessageId or @ImportMessageId=0)
and Line IN(
	select MainLine from Fifo
	where DayDate between @FromDate and @ToDate
	AND TableIndex<>4
	AND MainTableIndex=4
	)
)T
left join ImportMessagesDetailsSub2 T2 on(T.OrderTypeId=T2.OrderTypeId and T.Id=T2.Id)
left join ImportMessages T0 on(T.OrderTypeId=T0.OrderTypeId and T.Id=T0.Id)
left join FIFO f on(F.MainTableIndex=4 and F.MainLine=T2.Line)
left join SalesFlags SF on(F.Flag=SF.Id)
left join OrderTypes OT on(OT.Id=T.OrderTypeId)
left join Items_View It on(It.Id=T2.ItemId)
group by T.OrderTypeId,OT.Name,T.Id,T0.DeliveredDate,T0.CertificateNo,T2.StoreId,T2.InvoiceNo,T2.ItemId,It.Name,T2.Line
order by T.OrderTypeId,OT.Name,T.Id,T0.DeliveredDate,T0.CertificateNo,T2.StoreId,T2.InvoiceNo,T2.ItemId,It.Name,T2.Line
GO
/****** Object:  StoredProcedure [dbo].[GetFloors]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetFloors]
--with encryption
as
select F.Id,F.Name,(select COUNT(*) from Rooms T where T.FloorId=F.Id)Cnt,(select COUNT(*) from Rooms)AllCnt
from Floors F 
group by F.Id,F.Name
order by F.Id
GO
/****** Object:  StoredProcedure [dbo].[GetFnEntryAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetFnEntryAll]
@FromDate datetime,
@ToDate datetime
--with encryption
as

--delete YearProfit where Year(DayDate)=YEAR(@ToDate)

select Fn.*,
dbo.GetAccName(MyMainAccNo)MyMainAccName,
dbo.GetSubAccName(MyMainAccNo,MySubAccNo)MySubAccName,
dbo.GetCurrencyName(CurrencyId)CurrencyName
from Fn_AllEntry('',0,@FromDate,@ToDate,0,0,1)Fn
where Fn.DayDate between @FromDate and @ToDate
and MyFlag<>-999
order by DayDate,InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetGallery]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetGallery]
as




declare @Path nvarchar(1000)='D:\ftp\Gallery\'

EXEC ('EXEC sp_configure ''show advanced options'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''Ole Automation Procedures'',1; ')
EXEC ('EXEC sp_configure ''xp_cmdshell'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''show advanced options'', 0; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')

declare @dir nvarchar(1000)='MD '+@Path
exec master.dbo.xp_cmdshell @dir,NO_OUTPUT

create table #tbl(AttachedName nvarchar(100),Line int identity)
insert #tbl(AttachedName)
SELECT Id from Gallery


declare @x int=1,@max int=(select MAX(line) from #tbl)
while @x<=@max
begin
	declare @Name nvarchar(1000)=@Path+(select AttachedName+'.jpg' from #tbl where Line=@x)
 DECLARE @isExists INT
	exec master.dbo.xp_fileexist @Name,@isExists OUTPUT
	if @isExists=1
	delete #tbl where Line=@x
	select @x+=1
end




DECLARE @SQLIMG VARCHAR(MAX),
 @IMG_PATH VARBINARY(MAX),
 @AttachedName VARCHAR(MAX),
 @TIMESTAMP nVARCHAR(4000),
 @ObjectToken INT

DECLARE IMGPATH CURSOR FAST_FORWARD FOR 
 SELECT Image,Id 
 from Gallery 
 where Id in(select AttachedName from #tbl)

OPEN IMGPATH 

FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName

WHILE @@FETCH_STATUS = 0
 BEGIN
 SET @TIMESTAMP = @Path+@AttachedName+'.jpg'
 
 PRINT @TIMESTAMP
 PRINT @SQLIMG

 EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT
 EXEC sp_OASetProperty @ObjectToken, 'Type', 1
 EXEC sp_OAMethod @ObjectToken, 'Open'
 EXEC sp_OAMethod @ObjectToken, 'Write', NULL, @IMG_PATH
 EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, @TIMESTAMP, 2
 EXEC sp_OAMethod @ObjectToken, 'Close'
 EXEC sp_OADestroy @ObjectToken

 FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName
 END 

CLOSE IMGPATH
DEALLOCATE IMGPATH

drop table #tbl

SELECT Name,cast(Id as nvarchar(100))+'.jpg' AttachedName from Gallery order by Id desc
GO
/****** Object:  StoredProcedure [dbo].[GetGalleryMain]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetGalleryMain]
as



declare @Path nvarchar(1000)='D:\ftp\GalleryMain\'

EXEC ('EXEC sp_configure ''show advanced options'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''Ole Automation Procedures'',1; ')
EXEC ('EXEC sp_configure ''xp_cmdshell'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''show advanced options'', 0; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')

declare @dir nvarchar(1000)='MD '+@Path
exec master.dbo.xp_cmdshell @dir,NO_OUTPUT

create table #tbl(AttachedName nvarchar(100),Line int identity)
insert #tbl(AttachedName)
SELECT AttachedName from GalleryMain


declare @x int=1,@max int=(select MAX(line) from #tbl)
while @x<=@max
begin
	declare @Name nvarchar(1000)=@Path+(select AttachedName from #tbl where Line=@x)
 DECLARE @isExists INT
	exec master.dbo.xp_fileexist @Name,@isExists OUTPUT
	if @isExists=1
	delete #tbl where Line=@x
	select @x+=1
end




DECLARE @SQLIMG VARCHAR(MAX),
 @IMG_PATH VARBINARY(MAX),
 @AttachedName VARCHAR(MAX),
 @TIMESTAMP nVARCHAR(4000),
 @ObjectToken INT

DECLARE IMGPATH CURSOR FAST_FORWARD FOR 
 SELECT Image,AttachedName 
 from GalleryMain
 where AttachedName in(select AttachedName from #tbl)

OPEN IMGPATH 

FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName

WHILE @@FETCH_STATUS = 0
 BEGIN
 SET @TIMESTAMP = @Path+@AttachedName
 
 PRINT @TIMESTAMP
 PRINT @SQLIMG

 EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT
 EXEC sp_OASetProperty @ObjectToken, 'Type', 1
 EXEC sp_OAMethod @ObjectToken, 'Open'
 EXEC sp_OAMethod @ObjectToken, 'Write', NULL, @IMG_PATH
 EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, @TIMESTAMP, 2
 EXEC sp_OAMethod @ObjectToken, 'Close'
 EXEC sp_OADestroy @ObjectToken

 FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName
 END 

CLOSE IMGPATH
DEALLOCATE IMGPATH

drop table #tbl

SELECT Name,AttachedName from GalleryMain order by Id desc
GO
/****** Object:  StoredProcedure [dbo].[GetHefz]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetHefz]
@Flag int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select T.*,
Cr.Name Circle_Name,
App.Name Appellant_Name,
isnull(C.Name,'') Come_Name,
isnull(Ag.Name,'') Ag_Name

from Hefz T
left join HefzCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)  
left join HefzDocTypes C on(T.HefzDocTypeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)

where (T.Flag=@Flag or @Flag=0)
and T.DateNext between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetHefzOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[GetHefzOne]
@Flag int,
@InvoiceNo int
--with encryption
as

select T.*,
Cr.Name Circle_Name,
App.Name Appellant_Name,
isnull(C.Name,'') Come_Name,
isnull(Ag.Name,'') Ag_Name

from Hefz T
left join HefzCircles Cr on(T.CirclId=Cr.Id)
left join Appellants App on(T.AppellantId=App.Id)  
left join HefzDocTypes C on(T.HefzDocTypeId=C.Id)
left join Agencies Ag on(T.AgencyId=Ag.Id)

where T.Flag=@Flag
and T.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetImageTemp]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImageTemp] (@Line bigint)
--with encryption
as
select * from ImageTemp where Line=@Line
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessageCostHistoryVal3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessageCostHistoryVal3]
@StoreId bigint,
@InvoiceNo bigint
--with encryption
as


select T.DeliveredDate,T.StoreId,T.StoreInvoiceNo,
sum(T.Val3) Db,
0 Cr,
'* توزيع '+dbo.GetSubAccNameLink(11,T.MainOrderTypeId) Notes,
SM.DayDate,SM.ToId,dbo.GetSubAccNameLink(2,SM.ToId)SupplierName
from ImportMessageCostHistoryVal3 T
left join SalesMaster SM on(T.StoreId=SM.StoreId and T.StoreInvoiceNo=SM.InvoiceNo and SM.Flag=19)
where StoreInvoiceNo<>0
and (T.StoreId=@StoreId or @StoreId=0)
and (T.StoreInvoiceNo=@InvoiceNo or @InvoiceNo=0)

group by T.DeliveredDate,T.MainOrderTypeId,T.StoreId,T.StoreInvoiceNo,SM.DayDate,SM.ToId

union all

select T.Daydate,T.StoreId,T.StoreInvoiceNo,
isnull(sum((Case when T.Flag=2 then 1. else 0 end)*Value),0) Db,
isnull(sum((Case when T.Flag=2 then 0 else 1. end)*Value),0) Cr,
dbo.GetBankCash_G2TypeName(T.Flag,T.BankCash_G2TypeId) Notes,
SM.DayDate,SM.ToId,dbo.GetSubAccNameLink(2,SM.ToId)SupplierName
from BankCash_G2 T
left join SalesMaster SM on(T.StoreId=SM.StoreId and T.StoreInvoiceNo=SM.InvoiceNo and SM.Flag=19)
where Canceled=0
and CostTypeId=4
and (T.StoreId=@StoreId or @StoreId=0)
and (T.StoreInvoiceNo=@InvoiceNo or @InvoiceNo=0)
group by T.Daydate,T.StoreId,T.StoreInvoiceNo,SM.DayDate,SM.ToId,T.Flag,T.BankCash_G2TypeId

union all

select E.Daydate,ED.StoreId,ED.StoreInvoiceNo,
isnull(sum(Debit),0) Db,
isnull(sum(Credit),0) Cr,
'* توزيعات' Rem,
SM.DayDate,SM.ToId,dbo.GetSubAccNameLink(2,SM.ToId)SupplierName
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
left join SalesMaster SM on(ED.StoreId=SM.StoreId and ED.StoreInvoiceNo=SM.InvoiceNo and SM.Flag=19)
where CostTypeId=4
and (ED.StoreId=@StoreId or @StoreId=0)
and (ED.StoreInvoiceNo=@InvoiceNo or @InvoiceNo=0)
group by E.Daydate,ED.StoreId,ED.StoreInvoiceNo,SM.DayDate,SM.ToId

union all

select T.Daydate,T.StoreId,T.StoreInvoiceNo,
isnull(sum(Value*(case when IsCost1=1 then 1. else 0 end)),0) Db,
isnull(sum(Value*(case when IsCost1=1 then 0 else 1. end)),0) Cr,
'تسويات نقدية' 'Rem',
SM.DayDate,SM.ToId,dbo.GetSubAccNameLink(2,SM.ToId)SupplierName
from Entry2 T
left join SalesMaster SM on(T.StoreId=SM.StoreId and T.StoreInvoiceNo=SM.InvoiceNo and SM.Flag=19)
where Canceled=0
and CostTypeId=4
and (T.StoreId=@StoreId or @StoreId=0)
and (T.StoreInvoiceNo=@InvoiceNo or @InvoiceNo=0)
group by T.Daydate,T.StoreId,T.StoreInvoiceNo,SM.DayDate,SM.ToId


order by T.DeliveredDate,T.StoreId,T.StoreInvoiceNo,SM.DayDate,SM.ToId
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessageCostHistoryVal4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessageCostHistoryVal4]
@OrderTypeId int,
@ImportMessageId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select DeliveredDate,MainOrderTypeId,MainImportMessageId,
OrderTypeId,dbo.GetSubAccNameLink(11,OrderTypeId)OrderTypeName,
Perc*100. Perc,
(case when MainOrderTypeId=0 then 'توزيع آخر الشهر'
else dbo.GetSubAccNameLink(11,MainOrderTypeId)+' - رسالة '+cast(MainImportMessageId as nvarchar(10))+' - '+dbo.GetImportmessageName(MainOrderTypeId,MainImportMessageId) end) DateNotes,
sum(MainVal4)MainVal4,sum(SubVal4)SubVal4
from ImportMessageCostHistoryVal4
where (MainOrderTypeId=@OrderTypeId or @OrderTypeId=0)
and (MainImportMessageId=@ImportMessageId or @ImportMessageId=0)
and DeliveredDate between @FromDate and @ToDate

group by DeliveredDate,MainOrderTypeId,MainImportMessageId,OrderTypeId,Perc
order by DeliveredDate,MainOrderTypeId,MainImportMessageId,OrderTypeId,Perc
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages]
@OrderTypeId int,
@Id int
--with encryption
as
SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,
dbo.GetShipperName(ShipperId)ShipperName,
dbo.GetShippingLineName(ShippingLineId)ShippingLineName,
dbo.GetShippingCompanyName(ShippingCompanyId)ShippingCompanyName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where T.OrderTypeId=@OrderTypeId and T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages0]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages0]
@OrderTypeId int,
@Id int
--with encryption
as
SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,
dbo.GetShipperName(ShipperId)ShipperName,
dbo.GetShippingLineName(ShippingLineId)ShippingLineName,
dbo.GetShippingCompanyName(ShippingCompanyId)ShippingCompanyName,
TTT.Price-TTT.ItemDiscount ItemPriceAfterDiscount,
dbo.GetReturnQty(TTT.StoreId,TTT.Flag,TTT.InvoiceNo,TTT.ItemId)ReturnQty,
F.Name FlagName

from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join SalesDetails TTT on(T.StoreId=TTT.StoreId and TTT.Flag in(19) and TT.InvoiceNo=TTT.InvoiceNo)
right join SalesMaster M on(M.StoreId=TTT.StoreId and M.Flag=TTT.Flag and M.InvoiceNo=TTT.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where T.OrderTypeId=@OrderTypeId and T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages0Images]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages0Images]
@OrderTypeId int,
@Id int
--with encryption
as
SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,
dbo.GetShipperName(ShipperId)ShipperName,
dbo.GetShippingLineName(ShippingLineId)ShippingLineName,
dbo.GetShippingCompanyName(ShippingCompanyId)ShippingCompanyName,
TTT.Price-TTT.ItemDiscount ItemPriceAfterDiscount,
dbo.GetReturnQty(TTT.StoreId,TTT.Flag,TTT.InvoiceNo,TTT.ItemId)ReturnQty,
F.Name FlagName,
dbo.GetItemImage(TTT.ItemId) ItemImage
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join SalesDetails TTT on(T.StoreId=TTT.StoreId and TTT.Flag in(19) and TT.InvoiceNo=TTT.InvoiceNo)
right join SalesMaster M on(M.StoreId=TTT.StoreId and M.Flag=TTT.Flag and M.InvoiceNo=TTT.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where T.OrderTypeId=@OrderTypeId and T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages2]
@OrderTypeId int,
@Id int
--with encryption
as
SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where T.OrderTypeId=@OrderTypeId and T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages2Images]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages2Images]
@OrderTypeId int,
@Id int
--with encryption
as
SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,
dbo.GetItemImage(TTT.ItemId) ItemImage
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
where T.OrderTypeId=@OrderTypeId and T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages3]
@OrderTypeId int,
@Id int,
@StoreId bigint,
@InvoiceNo bigint,
@ItemId bigint
--with encryption
as

--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo


SELeCT T.OrderTypeId,T.Id,T.DayDate,
TTT.InvoiceNo TTT_InvoiceNo,
TTT.ItemId TTT_ItemId,
TTT.ItemName TTT_ItemName,
TTT.Line TTT_Line,
TTT.Qty TTT_Qty,
TTT.Qty2 TTT_Qty2,
TTT.Qty3 TTT_Qty3,
TTT.AvgCost TTT_AvgCost,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,

Tbl.*,F.MainPrice,F.Price,F.PriceDate,F.Qty
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join FIFO FMain on(TTT.Line=FMain.MainLine and FMain.TableIndex=4)
left join FIFO F on(FMain.TableIndex=F.MainTableIndex and FMain.TblLine=F.MainLine)
left join (

select 1 TableIndex,D.Line,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
D.Price SalesPrice,
CS.Name CostCenterName
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select 2 TableIndex,D.Line,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
D.Price SalesPrice,
CS.Name CostCenterName
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items It on(It.Id=D.ItemId)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select 3 TableIndex,D.Line,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name ArName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
D.AvgCost SalesPrice,
'' CostCenterName
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)

where M.Canceled=0

union all

select 4 TableIndex,TTT.Line,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.InvoiceNo InvoiceNo,SF.Id Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
sf.Name FlagName,
SF.Title FlagTitle,
TTT.Price SalesPrice,
'' CostCenterName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
where t.IsDelivered=1


union all

select 5 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
T.Price SalesPrice,
'' CostCenterName
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
where TT.Temp=0


union all

select 6 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
T.Price SalesPrice,
'' CostCenterName
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
where TT.Temp=0
and TT.Done=1

)Tbl on(Tbl.TableIndex=F.TableIndex and Tbl.Line=F.TblLine)

where T.OrderTypeId=@OrderTypeId 
and T.Id=@Id
and (T.StoreId=@StoreId or @StoreId=0)
and (TTT.InvoiceNo=@InvoiceNo or @InvoiceNo=0)
and (TTT.ItemId=@ItemId or @ItemId=0)

order by F.Qty desc,Tbl.InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessages3OLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessages3OLD]
@OrderTypeId int,
@Id int
--with encryption
as
SELeCT T.*,TT.*,TTT.*,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,

F.MainLine,
F.StoreId F_StoreId,
F.Flag F_Flag,
SF.Name SF_Name,
F.InvoiceNo F_InvoiceNo,
F.DayDate F_DayDate,
F.ItemId F_ItemId,
F.Price F_Price,
-F.Qty F_Qty,
-F.Price*F.Qty F_Cost
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join FIFO F on(F.MainFlag=19 and F.MainInvoiceNo=TTT.InvoiceNo and F.MainLine=TTT.Line and F.ItemId= TTT.ItemId and F.Qty<0)
left join SalesFlags SF on(SF.Id=F.Flag)
where T.OrderTypeId=@OrderTypeId and T.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessagesAll]
@OrderTypeId int,
@ImportMessageId int
--with encryption
as

declare @tbl table
(DeliveredDate datetime,DayDate datetime,InvoiceNo int,Rem nvarchar(100),PurchaseAccNo nvarchar(100),ImportMessageId int,
StoreId int,StoreInvoiceNo int,SubAccName nvarchar(100),MainValue2Ded float,Value2Ded float)
insert @tbl
exec GetImportMessagesAllSub_StoreInvoiceNo @OrderTypeId,@ImportMessageId 

declare @MainValue2Ded float,@Value2Ded float
select @MainValue2Ded=isnull(SUM(MainValue2Ded),0),@Value2Ded=isnull(sum(Value2Ded),0) from @tbl
--select @MainValue2Ded,@Value2Ded

SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,
dbo.GetShipperName(ShipperId)ShipperName,
dbo.GetShippingLineName(ShippingLineId)ShippingLineName,
dbo.GetShippingCompanyName(ShippingCompanyId)ShippingCompanyName,
TTT.Price-TTT.ItemDiscount ItemPriceAfterDiscount,
dbo.GetReturnQty(TTT.StoreId,TTT.Flag,TTT.InvoiceNo,TTT.ItemId)ReturnQty,
F.Name FlagName,dbo.GetCurrencyExchange(0,0,M.CurrencyId,0,T.DeliveredDate)CurrencyExchange,
dbo.GetMainValue2Ded(T.StoreId,TT.InvoiceNo,T.DeliveredDate)MainValue2Ded,
dbo.GetValue2Ded(T.StoreId,TT.InvoiceNo,T.DeliveredDate)Value2Ded,
TT.Perc InvPerc,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
-- -@MainValue2Ded TotalMainValue2Ded,
-- -@Value2Ded TotalValue2Ded,
dbo.Fn_ImportMessagesAllSub_StoreInvoiceNo(@OrderTypeId,@ImportMessageId,M.StoreId,M.InvoiceNo,1)TotalMainValue2Ded,
dbo.Fn_ImportMessagesAllSub_StoreInvoiceNo(@OrderTypeId,@ImportMessageId,M.StoreId,M.InvoiceNo,0)TotalValue2Ded,

DBO.GetCurrencyName(m.CurrencyId)CurrencyName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join SalesDetails TTT on(T.StoreId=TTT.StoreId and TTT.Flag in(19) and TT.InvoiceNo=TTT.InvoiceNo)
right join SalesMaster M on(M.StoreId=TTT.StoreId and M.Flag=TTT.Flag and M.InvoiceNo=TTT.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where T.OrderTypeId=@OrderTypeId
and T.Id=@ImportMessageId
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessagesAll2]
@OrderTypeId int,
@ImportMessageId int
--with encryption
as
SELeCT *,
dbo.GetStoreName(T.StoreId)StoreName,dbo.getOrderTypes(T.OrderTypeId)OrderTypeName,
dbo.GetItemGroupName(TTT.ItemId)Group_Name,
dbo.GetItemTypeName(TTT.ItemId)Type_Name,
dbo.GetItemName(TTT.ItemId)Item_Name,
dbo.GetContainerSizeName(T.ContainerSizeId)ContainerSizeName,
dbo.GetItemUnitName(TTT.ItemId,0)ItemUnitName,
dbo.GetShipperName(ShipperId)ShipperName,
dbo.GetShippingLineName(ShippingLineId)ShippingLineName,
dbo.GetShippingCompanyName(ShippingCompanyId)ShippingCompanyName,
TTT.Price-TTT.ItemDiscount ItemPriceAfterDiscount,
dbo.GetReturnQty(TTT.StoreId,TTT.Flag,TTT.InvoiceNo,TTT.ItemId)ReturnQty,
F.Name FlagName,dbo.GetCurrencyExchange(0,0,M.CurrencyId,0,T.DeliveredDate)CurrencyExchange,
dbo.GetMainValue2Ded(T.StoreId,TT.InvoiceNo,T.DeliveredDate)MainValue2Ded,
dbo.GetValue2Ded(T.StoreId,TT.InvoiceNo,T.DeliveredDate)Value2Ded,
TT.Perc InvPerc,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
DBO.GetCurrencyName(m.CurrencyId)CurrencyName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
right join SalesDetails TTT on(T.StoreId=TTT.StoreId and TTT.Flag in(19) and TT.InvoiceNo=TTT.InvoiceNo)
right join SalesMaster M on(M.StoreId=TTT.StoreId and M.Flag=TTT.Flag and M.InvoiceNo=TTT.InvoiceNo)
left join SalesFlags F on(M.Flag=F.Id)
where T.OrderTypeId=@OrderTypeId
and T.Id=@ImportMessageId
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAllSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessagesAllSub]
@OrderTypeId int,
@ImportMessageId int
--with encryption
as

declare @DeliveredDate datetime
select @DeliveredDate=DeliveredDate
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


select T.DayDate,T.InvoiceNo,cast((Case when Flag=2 then 'المدفوعات' else 'المقبوضات' end)as nvarchar(100)) 'Rem',
T.PurchaseAccNo,T.ImportMessageId,T.StoreId,T.StoreInvoiceNo,dbo.GetSubAccNameLink(T.LinkFile,T.SubAccNo)SubAccName,
val5Main=(Case when Flag=2 then -1. else 1. end)*MainValue2Ded,
val5=(Case when Flag=2 then -1. else 1. end)*Value2Ded
from BankCash_G2 T
where Canceled=0
and MainValue2Ded<>0
and T.DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)

union all

select E.DayDate,ED.InvoiceNo,'القيود' 'Rem',
ED.PurchaseAccNo,ED.ImportMessageId,ED.StoreId,ED.StoreInvoiceNo,dbo.GetSubAccName(ED.MainAccNo,ED.SubAccNo)SubAccName,
val5Main=(-ED.Debit+ED.Credit),
val5=(-ED.Debit+ED.Credit)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and (ED.Debit-ED.Credit)<>0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(ED.PurchaseAccNo=@OrderTypeId and ED.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=ED.StoreId and DD.InvoiceNo=ED.StoreInvoiceNo
	)
	)

union all

select T.DayDate,T.InvoiceNo,'تسويات نقدية' 'Rem',
T.PurchaseAccNo,T.ImportMessageId,T.StoreId,T.StoreInvoiceNo,dbo.GetSubAccName(T.MainAccNo1,T.SubAccNo1)SubAccName,
val5Main=Value1,
val5=Value*(case when IsCost1=1 then 1. else -1. end)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and Value<>0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	or exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAllSub_ImportMessageId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessagesAllSub_ImportMessageId]
@OrderTypeId int,
@ImportMessageId int
--with encryption
as

declare @DeliveredDate datetime
select @DeliveredDate=(case when IsDelivered=1 then DeliveredDate else GETDATE() end)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


select T.DayDate,T.InvoiceNo,cast((Case when Flag=2 then 'المدفوعات' else 'المقبوضات' end)as nvarchar(100)) 'Rem',
T.PurchaseAccNo,T.ImportMessageId,T.StoreId,T.StoreInvoiceNo,dbo.GetSubAccNameLink(T.LinkFile,T.SubAccNo)SubAccName,
val5Main=(Case when Flag=2 then -1. else 1. end)*MainValue2Ded,
val5=(Case when Flag=2 then -1. else 1. end)*Value2Ded
from BankCash_G2 T
where Canceled=0
and MainValue2Ded<>0
and T.DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	)

union all

select E.DayDate,ED.InvoiceNo,'القيود' 'Rem',
ED.PurchaseAccNo,ED.ImportMessageId,ED.StoreId,ED.StoreInvoiceNo,dbo.GetSubAccName(ED.MainAccNo,ED.SubAccNo)SubAccName,
val5Main=(-ED.Debit+ED.Credit),
val5=(-ED.Debit+ED.Credit)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and (ED.Debit-ED.Credit)<>0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(ED.PurchaseAccNo=@OrderTypeId and ED.ImportMessageId=@ImportMessageId)
	)

union all

select T.DayDate,T.InvoiceNo,'تسويات نقدية' 'Rem',
T.PurchaseAccNo,T.ImportMessageId,T.StoreId,T.StoreInvoiceNo,dbo.GetSubAccName(T.MainAccNo1,T.SubAccNo1)SubAccName,
val5Main=Value1,
val5=Value*(case when IsCost1=1 then 1. else -1. end)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and Value<>0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	(T.PurchaseAccNo=@OrderTypeId and T.ImportMessageId=@ImportMessageId)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetImportMessagesAllSub_StoreInvoiceNo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetImportMessagesAllSub_StoreInvoiceNo]
@OrderTypeId int,
@ImportMessageId int
--with encryption
as

declare @DeliveredDate datetime
select @DeliveredDate=(case when IsDelivered=1 then DeliveredDate else GETDATE() end)
from ImportMessages
where OrderTypeId=@OrderTypeId and Id=@ImportMessageId


select @DeliveredDate DeliveredDate,T.DayDate,T.InvoiceNo,cast((Case when Flag=2 then 'المدفوعات' else 'المقبوضات' end)as nvarchar(100))'Rem',
T.PurchaseAccNo,T.ImportMessageId,T.StoreId,T.StoreInvoiceNo,dbo.GetSubAccNameLink(T.LinkFile,T.SubAccNo)SubAccName,
val5Main=(Case when Flag=2 then -1. else 1. end)*MainValue2Ded,
val5=(Case when Flag=2 then -1. else 1. end)*Value2Ded
from BankCash_G2 T
where Canceled=0
and MainValue2Ded<>0
and T.DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)

union all

select @DeliveredDate DeliveredDate,E.DayDate,ED.InvoiceNo,'القيود' 'Rem',
ED.PurchaseAccNo,ED.ImportMessageId,ED.StoreId,ED.StoreInvoiceNo,dbo.GetSubAccName(ED.MainAccNo,ED.SubAccNo)SubAccName,
val5Main=(-ED.Debit+ED.Credit),
val5=(-ED.Debit+ED.Credit)
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and (ED.Debit-ED.Credit)<>0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=ED.StoreId and DD.InvoiceNo=ED.StoreInvoiceNo
	)
	)

union all

select @DeliveredDate DeliveredDate,T.DayDate,T.InvoiceNo,'تسويات نقدية' 'Rem',
T.PurchaseAccNo,T.ImportMessageId,T.StoreId,T.StoreInvoiceNo,dbo.GetSubAccName(T.MainAccNo1,T.SubAccNo1)SubAccName,
val5Main=Value1*(case when IsCost1=1 then 1. else -1. end),
val5=Value*(case when IsCost1=1 then 1. else -1. end)
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and Value<>0
and DayDate<=@DeliveredDate
and (PurchaseAccNo<>'' or ImportMessageId<>0 or StoreId<>0 or StoreInvoiceNo<>0)
and (
	exists(
	select D.StoreId from ImportMessages D
	left join ImportMessagesDetails DD on(D.OrderTypeId=DD.OrderTypeId and D.Id=DD.Id)
	where D.OrderTypeId=@OrderTypeId and D.Id=@ImportMessageId 
	and DD.StoreId=T.StoreId and DD.InvoiceNo=T.StoreInvoiceNo
	)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetIncomeRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetIncomeRPT]
(
@FromDate datetime,
@ToDate datetime,
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint
)
--with encryption
as

select M.*,
dbo.GetMainAccName(M.MainAccNo) MainAccName,
isnull(dbo.GetSubAccName(M.MainAccNo,M.SubAccNo),'-') SubAccName
from Income M
where 
M.DayDate between @FromDate and @ToDate
and (M.MainAccNo=@MainAccNo or @MainAccNo='')
and (M.SubAccNo=@SubAccNo or @SubAccNo=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetInfertirity]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInfertirity]
as



declare @Path nvarchar(1000)='D:\ftp\Infertirity\'

EXEC ('EXEC sp_configure ''show advanced options'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''Ole Automation Procedures'',1; ')
EXEC ('EXEC sp_configure ''xp_cmdshell'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''show advanced options'', 0; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')

declare @dir nvarchar(1000)='MD '+@Path
exec master.dbo.xp_cmdshell @dir,NO_OUTPUT

create table #tbl(AttachedName nvarchar(100),Line int identity)
insert #tbl(AttachedName)
SELECT cast(Id as nvarchar(100))+'.jpg' from Infertirity


declare @x int=1,@max int=(select MAX(line) from #tbl)
while @x<=@max
begin
	declare @Name nvarchar(1000)=@Path+(select AttachedName from #tbl where Line=@x)
 DECLARE @isExists INT
	exec master.dbo.xp_fileexist @Name,@isExists OUTPUT
	if @isExists=1
	delete #tbl where Line=@x
	select @x+=1
end




DECLARE @SQLIMG VARCHAR(MAX),
 @IMG_PATH VARBINARY(MAX),
 @AttachedName VARCHAR(MAX),
 @TIMESTAMP nVARCHAR(4000),
 @ObjectToken INT

DECLARE IMGPATH CURSOR FAST_FORWARD FOR 
 SELECT Image,cast(Id as nvarchar(100))+'.jpg' 
 from Infertirity 
 where cast(Id as nvarchar(100))+'.jpg' in(select AttachedName from #tbl)

OPEN IMGPATH 

FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName

WHILE @@FETCH_STATUS = 0
 BEGIN
 SET @TIMESTAMP = @Path+@AttachedName
 
 PRINT @TIMESTAMP
 PRINT @SQLIMG

 EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT
 EXEC sp_OASetProperty @ObjectToken, 'Type', 1
 EXEC sp_OAMethod @ObjectToken, 'Open'
 EXEC sp_OAMethod @ObjectToken, 'Write', NULL, @IMG_PATH
 EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, @TIMESTAMP, 2
 EXEC sp_OAMethod @ObjectToken, 'Close'
 EXEC sp_OADestroy @ObjectToken

 FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName
 END 

CLOSE IMGPATH
DEALLOCATE IMGPATH

drop table #tbl

SELECT Name,cast(Id as nvarchar(100))+'.jpg' AttachedName from Infertirity order by Id desc
GO
/****** Object:  StoredProcedure [dbo].[getInsMonthlyPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[getInsMonthlyPayment]
@StoreId int,
@Month int,
@Year int
as
select DayDate,
sum((case when Flag=13 then 1. else -1. end)*TotalAfterDiscount)TotalAfterDiscount,
sum((case when Flag=13 then 1. else -1. end)*TotalCount)TotalCount
from SalesMaster
where Flag in(13,14)
and (StoreId=@StoreId or @StoreId=0)
and month(DayDate)=@Month
and YEAR(DayDate)=@Year
group by DayDate
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentCustomerIsDelayed]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInstallmentCustomerIsDelayed]
@CustomerId bigint
as

select Tbl.*,Value-Payed Remaining,
isnull(C.Name,Inv.Name) Name,
isnull(C.Mobile,Inv.Mobile) Mobile,
isnull(C.Tel,Inv.Tel1) Tel,
isnull(C.Address,Inv.Address) Address,
(select Top 1 Name from CustomerInsures where CustomerId=ToId and Tbl.Flag=13)Insures_Name,
(select Top 1 Mobile from CustomerInsures where CustomerId=ToId and Tbl.Flag=13)Insures_Mobile,
St.Name StoreName,
P.Name P_Name
from (
	select *,(
		select isnull(SUM(TT.Value),0) 
		from InstallmentInvoicesDateilsPayments TT 
		where TT.Id=T.Id 
		and TT.Flag=T.Flag
		and TT.StoreId=T.StoreId
		and TT.ToId=T.ToId
		and TT.InvoiceNo=T.InvoiceNo
	) Payed 
	from InstallmentInvoicesDateils T 
	where T.ToId=@CustomerId
	and T.IsDelayed=1
	and T.MainDayDate<>T.DayDate
)Tbl
left join Customers C on(Tbl.ToId=C.Id and Tbl.Flag=13)
left join Investors Inv on(Tbl.ToId=Inv.Id and Tbl.Flag=35)
left join Stores St on(Tbl.StoreId=St.Id)
left join PaymentDays P on(Tbl.PaymentDay=P.Id)

order by DayDate,ToId
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentInvoicesDateils]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInstallmentInvoicesDateils]
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1',
@Ban int,
@PaymentDay int,
@IsDelayed int,
@All int,
@Flag int=0
as

select Tbl.*,Value-Payed Remaining,
isnull(C.Name,Inv.Name) Name,
isnull(C.Mobile,Inv.Mobile) Mobile,
isnull(C.Tel,Inv.Tel1) Tel,
isnull(C.Address,Inv.Address) Address,
(select Top 1 Name from CustomerInsures where CustomerId=ToId and Tbl.Flag=13)Insures_Name,
(select Top 1 Mobile from CustomerInsures where CustomerId=ToId and Tbl.Flag=13)Insures_Mobile,
St.Name StoreName,
P.Name P_Name
from (
	select T.*,M.InstallCount,M.AddedValue,M.AvgCost,M.DownPayment,M.NetValue,M.TotalValue,M.Commission,
	(
		select isnull(SUM(TT.Value),0) 
		from InstallmentInvoicesDateilsPayments TT 
		where TT.Id=T.Id 
		and TT.Flag=T.Flag
		and TT.StoreId=T.StoreId
		and TT.ToId=T.ToId
		and TT.InvoiceNo=T.InvoiceNo
		and ((@Flag=1 and TT.Id=0) or (@Flag=2 and TT.Id<>0) or (@Flag=3))
	) Payed ,
	(
		select MAX(ItemName) 
		from SalesDetails TT 
		where TT.Flag=T.Flag
		and TT.StoreId=T.StoreId
		and TT.InvoiceNo=T.InvoiceNo
	) ItemName
	from InstallmentInvoicesDateils T
	left join InstallmentInvoicesMaster M on(T.StoreId=M.StoreId and T.Flag=M.Flag and T.InvoiceNo=M.InvoiceNo) 
	where (T.PaymentDay=@PaymentDay or @PaymentDay=0)
	and T.IsCanceled=0
	and T.DayDate between @FromDate and @ToDate
	and ((@Flag=1 and T.Id=0) or (@Flag=2 and T.Id<>0) or (@Flag=3))
	--and T.Id>0
)Tbl
left join Customers C on(Tbl.ToId=C.Id and Tbl.Flag=13)
left join Investors Inv on(Tbl.ToId=Inv.Id and Tbl.Flag=35)
left join Stores St on(Tbl.StoreId=St.Id)
left join PaymentDays P on(Tbl.PaymentDay=P.Id)
where (@All=1 or Value>Payed)
and isnull(C.Ban,0)=@Ban
and (@IsDelayed=0 or (IsDelayed=1 and DayDate<>MainDayDate))
order by DayDate,ToId
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentInvoicesDateils2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInstallmentInvoicesDateils2]
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1',
@Ban int,
@PaymentDay int,
@IsDelayed int,
@All int,
@Flag int=0
as

select isnull(C.Ban,0)Ban,Tbl.MyId Id,isnull(sum(Value),0)Value,isnull(sum(Payed),0)Payed,sum(isnull(Value,0)-isnull(Payed,0)) Remaining
from (
	select (case when T.Id=0 then 0 else 1 end)MyId,ToId,Flag,IsDelayed,DayDate,MainDayDate,sum(Value)Value,
	(
		select isnull(SUM(TT.Value),0) 
		from InstallmentInvoicesDateilsPayments TT 
		where TT.Id=T.Id 
		and TT.Flag=T.Flag
		and TT.StoreId=T.StoreId
		and TT.ToId=T.ToId
		and TT.InvoiceNo=T.InvoiceNo
		and TT.DayDate between @FromDate and @ToDate
		and ((@Flag=1 and TT.Id=0) or (@Flag=2 and TT.Id<>0) or (@Flag=3))
	) Payed 
	from InstallmentInvoicesDateils T 
	where (T.PaymentDay=@PaymentDay or @PaymentDay=0)
	and T.DayDate between @FromDate and @ToDate
	and T.IsCanceled=0
	and ((@Flag=1 and T.Id=0) or (@Flag=2 and T.Id<>0) or (@Flag=3))
	group by (case when T.Id=0 then 0 else 1 end),ToId,Flag,IsDelayed,DayDate,MainDayDate,
	T.Id,T.Flag,T.StoreId,T.ToId,T.InvoiceNo
	--and T.Id>0
)Tbl
left join Customers C on(Tbl.ToId=C.Id and Tbl.Flag=13)
where (@All=1 or Value>Payed)
--and isnull(C.Ban,0)=@Ban
and (@IsDelayed=0 or (IsDelayed=1 and DayDate<>MainDayDate))
group by Tbl.MyId,isnull(C.Ban,0)
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentInvoicesDateilsPayments]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInstallmentInvoicesDateilsPayments]
@StoreId int=0,
@FromDate datetime='2000-1-1',
@ToDate datetime='2020-1-1'
as

select Tbl.*,
isnull(C.Name,Inv.Name) Name,
isnull(C.Mobile,Inv.Mobile) Mobile,
isnull(C.Tel,Inv.Tel1) Tel,
isnull(C.Address,Inv.Address) Address,
(select Top 1 Name from CustomerInsures where CustomerId=ToId and Tbl.Flag=13)Insures_Name,
(select Top 1 Mobile from CustomerInsures where CustomerId=ToId and Tbl.Flag=13)Insures_Mobile,
St.Name StoreName
from (
	select TT.*,T.TypeName,(case when TT.Id=0 then 0 else (M.NetValue-M.AvgCost)/M.InstallCount end) NetProfitPerInstallment
	from InstallmentInvoicesDateilsPayments TT 
	left join InstallmentInvoicesDateils T on(TT.Id=T.Id and TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.ToId=T.ToId and TT.InvoiceNo=T.InvoiceNo)
	left join InstallmentInvoicesMaster M on(M.Flag=T.Flag and M.StoreId=T.StoreId and M.InvoiceNo=T.InvoiceNo)
	where TT.DayDate between @FromDate and @ToDate
	and (TT.StoreId=@StoreId or @StoreId=0)
)Tbl
left join Customers C on(Tbl.ToId=C.Id and Tbl.Flag=13)
left join Investors Inv on(Tbl.ToId=Inv.Id and Tbl.Flag=35)
left join Stores St on(Tbl.StoreId=St.Id)
order by DayDate,ToId
GO
/****** Object:  StoredProcedure [dbo].[getInstallmentTest]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInstallmentTest]
@Value float,
@DownPayment float

as
select Cast(replace(Name,'#','') as float)Name,@Value Value,@DownPayment DownPayment,
Round(
(@Value - @DownPayment) * 
(1 + Perc*0.01) / 
Cast(Cast(replace(Name,'#','') as float) as float), 2) InstallValue
from InstallmentCounts
where ISNUMERIC(Name)=1
GO
/****** Object:  StoredProcedure [dbo].[GetInventory]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInventory]
(
@FromDate datetime,
@ToDate datetime,
@Shift int,
@StoreId int,
@FromInvoiceNo int,
@ToInvoiceNo int
)
--with encryption
as

select M.DayDate InvDate,M.Shift InvShift,SF.Name ShiftName,St.Name StoreName
,U.Name UserFullName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case D.UnitId when 0 then It.SalesPrice else It.SalesPriceSub end) SalesPrice
from InventoryMaster M
left join InventoryDetails D on(M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items It on(D.ItemId=It.Id)
cross join Statics S
left join Shifts SF on(M.Shift=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
GO
/****** Object:  StoredProcedure [dbo].[GetInventory2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[GetInventory2]
(
@FromDate datetime,
@ToDate datetime,
@StoreId int,
@FromInvoiceNo int,
@ToInvoiceNo int
)
--with encryption
as

select M.DayDate InvDate,M.Shift InvShift,SF.Name ShiftName,St.Name StoreName
,U.Name UserFullName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case D.UnitId when 0 then It.SalesPrice else It.SalesPriceSub end) SalesPrice
from Inventory2Master M
left join Inventory2Details D on(M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items It on(D.ItemId=It.Id)
cross join Statics S
left join Shifts SF on(M.Shift=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
GO
/****** Object:  StoredProcedure [dbo].[GetInvoices]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoices]
@InvoicesFlagId int,
@Year int,
@TypeId INT,
@BranchId INT, 
@MainNoAreaId INT, 
@AccusationId INT, 
@CirclId INT,
@FromDate datetime,
@ToDate datetime,
@SubNoId nvarchar(100),
@SubNoYear int,
@MainNoId nvarchar(100),
@AccusedId bigint
--with encryption
as


declare
@InvoicesFlagId0 int=@InvoicesFlagId,
@Year0 int=@Year,
@TypeId0 INT=@TypeId,
@BranchId0 INT=@BranchId, 
@MainNoAreaId0 INT=@MainNoAreaId, 
@AccusationId0 INT=@AccusationId, 
@CirclId0 INT=@CirclId,
@FromDate0 datetime=@FromDate,
@ToDate0 datetime=@ToDate,
@SubNoId0 nvarchar(100)=@SubNoId,
@SubNoYear0 int=@SubNoYear,
@MainNoId0 nvarchar(100)=@MainNoId,
@AccusedId0 bigint=@AccusedId

select T.*,
Ty.Name Type_Name,
--Mn.Name MainNo_Name,
--Sn.Name SubNo_Name,
Mr.Name MainNoArea_Name,
Sr.Name SubNoArea_Name,
Ad.Name Accused_Name,
Ac.Name Accusation_Name,
Cr.Name Circle_Name,
Br.Name Branch_Name

from Invoices T
left join InvoicesDt Dt on(T.InvoicesFlagId=Dt.InvoicesFlagId and T.Year=Dt.Year and T.InvoiceNo=Dt.InvoiceNo)
left join Types Ty on(Dt.TypeId=Ty.Id)
--left join MainNos Mn on(T.MainNoId=Mn.Id)
--left join SubNos Sn on(T.SubNoId=Sn.Id)
left join Areas Mr on(T.InvoicesFlagId=Mr.InvoicesFlagId and T.MainNoAreaId=Mr.Id)
left join Areas Sr on(T.InvoicesFlagId=Sr.InvoicesFlagId and T.SubNoAreaId=Sr.Id)
left join Accuseds Ad on(Dt.AccusedId=Ad.Id)
left join Accusations Ac on(T.InvoicesFlagId=Ac.InvoicesFlagId and T.AccusationId=Ac.Id)
left join Circles Cr on(T.CirclId=Cr.Id)
left join Branches Br on(T.InvoicesFlagId=Br.InvoicesFlagId and T.BranchId=Br.Id)



where T.DayDate between @FromDate0 and @ToDate0
AND (DT.TypeId=@TypeId0 OR @TypeId0=0)
AND (BranchId=@BranchId0 OR @BranchId0=0)
AND (MainNoAreaId=@MainNoAreaId0 OR @MainNoAreaId0=0)
AND (AccusationId=@AccusationId0 OR @AccusationId0=0)
AND (CirclId=@CirclId0 OR @CirclId0=0)
and (T.InvoicesFlagId=@InvoicesFlagId0 or @InvoicesFlagId0=0)
and (T.Year=@Year0 or @Year0=0)
and (T.SubNoId=@SubNoId0 or @SubNoId0='')
and (T.SubNoYear=@SubNoYear0 or @SubNoYear0=0)
and (T.MainNoId=@MainNoId0 or @MainNoId0='')
and (Dt.AccusedId=@AccusedId0 or @AccusedId0=0)
GO
/****** Object:  StoredProcedure [dbo].[getInvoices2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInvoices2]
@Invoices2FlagId int=0,
@Year int=0,
@AccusedId int=0,
@ProcedureId int=0,
@Procedure2Id int=0,
@OrderNo int,
@OrderNoYear int,
@DocNo int,
@DocNoYear int

as

Select *,
P.Name ProcedureName,
P2.Name Procedure2Name
From (


select T.*,
Dt.AccusedId,
Dt.Address,
Ad.Name Ad_Name,
(
	SELECT Name 
	FROM Accuseds
	where Id=(
				select Top 1 AccusedId 
				from Invoices2Dt2 Dt2
				where T.Invoices2FlagId=Dt2.Invoices2FlagId
				and T.Year=Dt2.Year
				and T.InvoiceNo=Dt2.InvoiceNo
				ORDER BY Dt2.Line
			)
)Ad2_Name,
(select Top 1 ProcedureId from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)ProcedureId,
(select Top 1 Procedure2Id from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Procedure2Id,
--(select Top 1 Data1 from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data1,
--(select Top 1 Data2 from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data2,
--(select Top 1 Data3 from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data3,
--(select Top 1 Data4 from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data4,
--(select Top 1 Data5 from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data5,
--(select Top 1 Data6 from Invoices2Dt3 Dt3 where T.Invoices2FlagId=Dt3.Invoices2FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data6,
F.Name F_Name
from Invoices2 T
left join Invoices2Dt1 Dt on(T.Invoices2FlagId=Dt.Invoices2FlagId and T.Year=Dt.Year and T.InvoiceNo=Dt.InvoiceNo)
left join Accuseds Ad on(Dt.AccusedId=Ad.Id) 
left join Invoices2Flags F on(F.Id=T.Invoices2FlagId)
where (T.Invoices2FlagId=@Invoices2FlagId or @Invoices2FlagId=0)
and (T.Year=@Year or @Year=0)
and (Dt.AccusedId=@AccusedId or @AccusedId=0)

and (T.OrderNo=@OrderNo or @OrderNo=0)
and (T.OrderNoYear=@OrderNoYear or @OrderNoYear=0)
and (T.DocNo=@DocNo or @DocNo=0)
and (T.DocNoYear=@DocNoYear or @DocNoYear=0)

)Tbl
left join Procedures P on(P.Id=ProcedureId)
left join Procedures2 P2 on(P2.Id=Procedure2Id)
where (ProcedureId=@ProcedureId or @ProcedureId=0)
and (Procedure2Id=@Procedure2Id or @Procedure2Id=0)
GO
/****** Object:  StoredProcedure [dbo].[GetInvoices2All]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoices2All]
@Invoices2FlagId int=2,
@Year int=2016
as
select T.InvoiceNo,'استئناف الاسكندرية' CourtName,'' CourtSubName,
DocNo,DocNoYear,OrderNo,OrderNoYear,isnull(Value,0)Value,

isnull((select top 1 Ad.Name from Invoices2Dt1 Dt left join Accuseds Ad on(Dt.AccusedId=Ad.Id) where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices2FlagId=T.Invoices2FlagId and Dt.Year=t.Year order by Line),'')Ad_Name,
isnull((select top 1 Dt.Address from Invoices2Dt1 Dt where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices2FlagId=T.Invoices2FlagId and Dt.Year=t.Year order by Line),'')Address,


isnull((select top 1 Dt.Data1 from Invoices2Dt3 Dt where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices2FlagId=T.Invoices2FlagId and Dt.Year=t.Year order by Line desc),'')Data1,
isnull((select top 1 Pr.Name from Invoices2Dt3 Dt left join Procedures Pr on(Dt.ProcedureId=Pr.Id) where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices2FlagId=T.Invoices2FlagId and Dt.Year=t.Year order by Line desc),'')Pr_Name,
isnull((select top 1 Dt.Data6 from Invoices2Dt3 Dt where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices2FlagId=T.Invoices2FlagId and Dt.Year=t.Year order by Line desc),'')Data6,

T.Notes
FROM Invoices2 T
where T.Invoices2FlagId=@Invoices2FlagId
and (T.Year=@Year or @Year=0)
order by Year,T.InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[getInvoices3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getInvoices3]
@Invoices3FlagId int='0',
@Year nvarchar(100)='0',
@AccusedId nvarchar(100)='0',
@Procedure0Id nvarchar(100)='0',
@ProcedureId nvarchar(100)='0',
@OrderNo nvarchar(100)='',
@OrderNoYear nvarchar(100)='',
@DocNo nvarchar(100)='',
@DocNoYear nvarchar(100)=''

as

Select *,
P0.Name Procedure0Name,
P.Name ProcedureName
From (


select T.*,
Dt.AccusedId,
Dt.Address,
Ad.Name Ad_Name,
(
	SELECT Top 1 Name 
	FROM AccusedsX
	where Id=(
				select Top 1 AccusedId 
				from Invoices3Dt2 Dt2
				where T.Invoices3FlagId=Dt2.Invoices3FlagId
				and T.Year=Dt2.Year
				and T.InvoiceNo=Dt2.InvoiceNo
				ORDER BY Dt2.Line
			)
)Ad2_Name,
(select Top 1 Procedure0Id from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Procedure0Id,
(select Top 1 ProcedureId from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)ProcedureId,
--(select Top 1 Data1 from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data1,
--(select Top 1 Data2 from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data2,
--(select Top 1 Data3 from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data3,
--(select Top 1 Data4 from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data4,
--(select Top 1 Data5 from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data5,
--(select Top 1 Data6 from Invoices3Dt3 Dt3 where T.Invoices3FlagId=Dt3.Invoices3FlagId and T.Year=Dt3.Year and T.InvoiceNo=Dt3.InvoiceNo ORDER BY Dt3.Line desc)Data6,
F.Name F_Name
from Invoices3 T
left join Invoices3Dt1 Dt on(T.Invoices3FlagId=Dt.Invoices3FlagId and T.Year=Dt.Year and T.InvoiceNo=Dt.InvoiceNo)
left join AccusedsX Ad on(Dt.AccusedId=Ad.Id) 
left join Invoices3Flags F on(F.Id=T.Invoices3FlagId)
where (T.Invoices3FlagId=@Invoices3FlagId or @Invoices3FlagId='0' or @Invoices3FlagId='')
and (T.Year=@Year or @Year='0' or @Year='')
and (Dt.AccusedId=@AccusedId or @AccusedId='0' or @AccusedId='')

and (T.OrderNo=@OrderNo or @OrderNo='0' or @OrderNo='')
and (T.OrderNoYear=@OrderNoYear or @OrderNoYear='0' or @OrderNoYear='')
and (T.DocNo=@DocNo or @DocNo='0' or @DocNo='')
and (T.DocNoYear=@DocNoYear or @DocNoYear='0' or @DocNoYear='')

)Tbl
left join ProceduresX P on(P.Id=ProcedureId)
left join Procedures P0 on(P0.Id=Procedure0Id)
where (Procedure0Id=@Procedure0Id or @Procedure0Id='0' or @Procedure0Id='')
and (ProcedureId=@ProcedureId or @ProcedureId='0' or @ProcedureId='')
GO
/****** Object:  StoredProcedure [dbo].[GetInvoices3All]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoices3All]
@Invoices3FlagId int=2,
@Year int=2019
as
select T.InvoiceNo,'استئناف الاسكندرية' CourtName,
DocNo,DocNoYear,OrderNo,OrderNoYear+'/'+CAST(CAST(OrderNoYear as int)+1 as nvarchar(10)),isnull(Value1,0)Value1,isnull(Value2,0)Value2,

isnull((select top 1 Ad.Name from Invoices3Dt1 Dt left join AccusedsX Ad on(Dt.AccusedId=Ad.Id) where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices3FlagId=T.Invoices3FlagId and Dt.Year=t.Year order by Line),'')Ad_Name,
isnull((select top 1 Dt.Address from Invoices3Dt1 Dt where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices3FlagId=T.Invoices3FlagId and Dt.Year=t.Year order by Line),'')Address,


isnull((select top 1 Pr.Name from Invoices3Dt3 Dt left join ProceduresX Pr on(Dt.ProcedureId=Pr.Id) where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices3FlagId=T.Invoices3FlagId and Dt.Year=t.Year order by Line desc),'')Pr_Name,
isnull((select top 1 Dt.Data6 from Invoices3Dt3 Dt where Dt.InvoiceNo=T.InvoiceNo and Dt.Invoices3FlagId=T.Invoices3FlagId and Dt.Year=t.Year order by Line desc),'')Data6,

T.Notes
FROM Invoices3 T
where T.Invoices3FlagId=@Invoices3FlagId
and (T.Year=@Year or @Year=0)
order by Year,T.InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesImages]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetInvoicesImages]
@MainId nvarchar(100)
--with encryption
as

declare @DB_NAME nvarchar(100)=DB_NAME()

declare @SQL nvarchar(1000)='select MainId,FileName,ImageData from '+@DB_NAME+'Images.dbo.Images where MainId='''+@MainId+''''
print @SQL

create table #tbl(MainId nvarchar(100),FileName nvarchar(100),ImageData image)
insert #tbl
exec(@SQL)
select * from #tbl
drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[GetInvoicesMain]
@IsReservations bigint,
@IsServices bigint,
@EmpId bigint,
@CaseId bigint,
@CsId bigint,
@UserId bigint,
@VisitingType bigint,
@ServiceGroupId bigint,
@ServiceTypeId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@SerialType bigint,
@FromSerialId bigint,
@ToSerialId bigint,
@Canceled bigint,
@Returned bigint,
@CompanyId bigint,
@DepartmentId bigint,
@FromHH int,
@FromMM int,
@ToHH int,
@ToMM int,
@ShowZeroValues int=0
--with encryption
as



declare @SerialTypeName1 nvarchar(100)=dbo.GetVisitingTypesSerialName(1)
declare @SerialTypeName2 nvarchar(100)=dbo.GetVisitingTypesSerialName(2)
declare @SerialTypeName3 nvarchar(100)=dbo.GetVisitingTypesSerialName(3)

select MyOrder,CancelFlag,SerialFlag,ReservationDate,ReservId,Tbl.EmpId,VisitingType,DayDate,SerialIdType,@SerialTypeName1 SerialTypeName1,@SerialTypeName2 SerialTypeName2,@SerialTypeName3 SerialTypeName3,
Value,'* '+isnull(Tbl.Notes,'-') Notes,Canceled,SerialId,Tbl.UserName,dbo.GetEmpArName(Tbl.UserName)UserNameName,Tbl.MyGetDate,EmpIdReservation,EmpIdReservationName,EmpIdRemaining,EmpIdCanceled,
EmpName,EmpDepartment,VisitingTypeName,CaseId,CaseArName,CaseEnName,
ROW_NUMBER()over (partition by MyOrder,EmpDepartment,EmpName order by MyOrder,EmpDepartment,EmpName,SerialIdType,SerialId,CancelFlag) ROWNUMBER,
MemberName,
dbo.GetRelationName(RelationId)RelationName,
dbo.GetBrokerCoName(BrokerCoId)BrokerCoName,
MembershipNo,
MyValue,MyPayed,MyRemaining,
C.CompanyId,
dbo.GetCompanyName1(C.CompanyId)CompanyName1,
dbo.GetCompanyName2(C.CompanyId)CompanyName2,
dbo.GetDegreeName(dbo.GetEmpDegreeId(DoctorId))DegreeName,
Time,InsertedDate
 from 
(


select 0 MyOrder,0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Payed Value,MyNotes Notes,Canceled,cast(SerialId as nvarchar(100))SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReservationDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdReservation=@UserId or @UserId=0)

union all

select 0 MyOrder,0 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,RemainingDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Remaining Value,MyNotes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,Remaining MyPayed,0 MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdRemaining=@UserId or @UserId=0)

union all--====================================================
select 0 MyOrder,1 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,CanceledDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Payed Value,MyNotes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)

union all

select 0 MyOrder,1 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,CanceledDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Remaining Value,MyNotes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,-Remaining MyPayed,0 MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)


union all--====================================================
select 0 MyOrder,1 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReturnedDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Payed Value,MyNotes,Returned,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdReturned,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)

union all

select 0 MyOrder,1 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReturnedDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Remaining Value,MyNotes,Returned,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdReturned,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,-Remaining MyPayed,0 MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)



--==================================================================================

union all 

--==================================================================================


select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Payed Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(DayDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdReservation=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,RemainingDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,Remaining MyPayed,0 MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdRemaining=@UserId or @UserId=0)

union all--=================================

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,CanceledDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,CanceledDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,-Remaining MyPayed,0 MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)

union all--=================================

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,ReturnedDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdReturned,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,ReturnedDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdReturned,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
0 MyValue,-Remaining MyPayed,0 MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)




--==================================================================================

union all 

--==================================================================================


select 1 MyOrder,0 CancelFlag,1 SerialFlag,SM.DayDate ReservationDate,
SM.InvoiceNo,0 ServiceGroupId,0 ServiceTypeId,SM.DayDate,3 SerialIdType,
(case when SM.Flag in(18,36,38,48) then -1. else 1. end)*SM.TotalAfterDiscount Value,
(Case when Notes='' then null else Notes end)Notes,0 Canceled,SM.DocNo SerialId,
SM.UserName,SM.MyGetDate,SM.UserName,dbo.GetEmpName(SM.UserName) 'EmpIdReservationName',0,0 EmpIdCanceled,
--'مستهلكات' 'ServiceTypeName',
--'مستهلكات' 'Service Group Name',
Sh.Name 'ServiceTypeName',
Sh.Name 'Service Group Name',
' - ' 'Service Type Name',
ToId,dbo.GetCaseArName(ToId) 'CaseArName',dbo.GetCaseEnName(ToId) 'CaseEnName',
SM.TotalAfterDiscount MyValue,SM.TotalAfterDiscount MyPayed,0 MyRemaining,left(CAST(MyGetDate as time),5),MyGetDate
from SalesMaster SM
left join SalesFlags Sh on(SM.Flag=Sh.Id)
where @IsServices=1
and @DepartmentId=0
and @EmpId=0
and SM.Flag in(17,18,37,38,47,48)
and (SM.ToId=@CaseId or @CaseId=0)
and (dbo.GetCaseCompanyId(SM.ToId)=@CompanyId or @CompanyId=0)
and cast(SM.DayDate as date) between @FromDate and @ToDate
and @ServiceGroupId=0
and @ServiceTypeId=0
and (SM.InvoiceNo>=@FromId or @FromId=0)
and (SM.InvoiceNo<=@ToId or @ToId=0)
and (3=@SerialType or @SerialType=0)

and cast(SM.DayDate as date) between @FromDate and @ToDate
and (SM.InvoiceNo>=@FromSerialId or @FromSerialId=0)
and (SM.InvoiceNo<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (SM.InsertUser=@UserId or @UserId=0)

union all--=================================

select 1 MyOrder,1 CancelFlag,1 SerialFlag,SM.DayDate ReservationDate,
SM.InvoiceNo,0 ServiceGroupId,0 ServiceTypeId,SM.DayDate,3 SerialIdType,
-(case when SM.Flag in(18,36,38,48) then -1. else 1. end)*SM.TotalAfterDiscount Value,Notes,1 Canceled,SM.DocNo,SM.UserName,SM.MyGetDate,SM.UserName,dbo.GetEmpName(SM.UserName) 'EmpIdReservationName',0,0EmpIdCanceled,
--'مستهلكات' 'ServiceTypeName',
--'مستهلكات' 'Service Group Name',
Sh.Name 'ServiceTypeName',
Sh.Name 'Service Group Name',
' - ' 'Service Type Name',
ToId,dbo.GetCaseArName(ToId) 'CaseArName',dbo.GetCaseEnName(ToId) 'CaseEnName',
-SM.TotalAfterDiscount MyValue,-0 MyPayed,-SM.TotalAfterDiscount MyRemaining,left(CAST(MyGetDate as time),5),MyGetDate
from SalesMaster SM
left join SalesFlags Sh on(SM.Flag=Sh.Id)
where @IsServices=1
and @DepartmentId=0
and @EmpId=0
and SM.Flag in(17,18,37,38,47,48)
and (SM.ToId=@CaseId or @CaseId=0)
and (dbo.GetCaseCompanyId(SM.ToId)=@CompanyId or @CompanyId=0)
and @ServiceGroupId=0
and @ServiceTypeId=0
and (SM.InvoiceNo>=@FromId or @FromId=0)
and (SM.InvoiceNo<=@ToId or @ToId=0)
and (3=@SerialType or @SerialType=0)

and cast(SM.DayDate as date) between @FromDate and @ToDate
and (SM.InvoiceNo>=@FromSerialId or @FromSerialId=0)
and (SM.InvoiceNo<=@ToSerialId or @ToSerialId=0)
and SM.Temp=1 
and @Canceled in(1,2)
and (SM.InsertUser=@UserId or @UserId=0)




--==================================================================================

union all --                 

--==================================================================================


select 1 MyOrder,0 CancelFlag,1 SerialFlag,InsertedDate ReservationDate,
Line,0 ServiceGroupId,0 ServiceTypeId,TT.DayDate,3 SerialIdType,
T.Value,
T.Notes,0 Canceled,Line SerialId,
UserNameId,T.MyGetDate,UserNameId,UserFullName,0,0 EmpIdCanceled,
'نقدي الداخلي' 'ServiceTypeName',
dbo.GetRoomName(T.RoomId) 'Service Group Name',
' - ' 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
T.Value,T.Value,0,left(CAST(T.InsertedDate as time),5),T.InsertedDate
from RoomsDataPayments T
left join RoomsData TT on(T.RoomId=TT.RoomId and T.Id=TT.Id and T.MyMainLine=TT.MyLine)
where @IsServices=1
and @DepartmentId=0
and @EmpId=0
and (TT.CaseId=@CaseId or @CaseId=0)
and (dbo.GetCaseCompanyId(TT.CaseId)=@CompanyId or @CompanyId=0)
and cast(T.InsertedDate as date) between @FromDate and @ToDate
and @ServiceGroupId=0
and @ServiceTypeId=0

and @Canceled in(0,2)
and @Returned in(0,2)
and (T.UserNameId=@UserId or @UserId=0)

--==================================================================================

union all --                 

--==================================================================================


select 1 MyOrder,0 CancelFlag,1 SerialFlag,InsertedDate ReservationDate,
MyLine,0 ServiceGroupId,0 ServiceTypeId,T.DayDate,3 SerialIdType,
T.Value,
T.Notes,0 Canceled,MyLine SerialId,
UserName,T.MyGetDate,UserName,dbo.GetEmpArName(UserName),0,0 EmpIdCanceled,
'حجز الداخلي' 'ServiceTypeName',
dbo.GetRoomName(T.RoomId) 'Service Group Name',
' - ' 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
T.Value,T.Value,0,left(CAST(T.InsertedDate as time),5),T.InsertedDate
from ReservationsRooms T
where @IsServices=1
and @DepartmentId=0
and @EmpId=0
and (T.CaseId=@CaseId or @CaseId=0)
and (dbo.GetCaseCompanyId(T.CaseId)=@CompanyId or @CompanyId=0)
and cast(T.InsertedDate as date) between @FromDate and @ToDate
and @ServiceGroupId=0
and @ServiceTypeId=0

and @Canceled in(0,2)
and @Returned in(0,2)
and (T.UserName=@UserId or @UserId=0)


)tbl
left join Cases C on(Tbl.CaseId=C.Id)
where (Value <> 0 or @ShowZeroValues=1)
and (InsertedDate >= DATEADD(MINUTE,@FromMM,DATEADD(hour,@FromHH,@FromDate)) or (@FromHH=0 and @FromMM=0))
and (InsertedDate <=DATEADD(MINUTE,@ToMM,DATEADD(hour,@ToHH,@ToDate)) or (@ToHH=0 and @ToMM=0))
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain1]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoicesMain1]
@IsReservations bigint,
@IsServices bigint,
@EmpId bigint,
@CaseId bigint,
@CsId bigint,
@UserId bigint,
@VisitingType bigint,
@ServiceGroupId bigint,
@ServiceTypeId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@SerialType bigint,
@FromSerialId bigint,
@ToSerialId bigint,
@Canceled bigint,
@Returned bigint,
@CompanyId bigint,
@DepartmentId bigint,
@All bigint,
@ShowZeroValues int=0
--with encryption
as



declare @SerialTypeName1 nvarchar(100)=dbo.GetVisitingTypesSerialName(1)
declare @SerialTypeName2 nvarchar(100)=dbo.GetVisitingTypesSerialName(2)
declare @SerialTypeName3 nvarchar(100)=dbo.GetVisitingTypesSerialName(3)

select MyOrder,CancelFlag,SerialFlag,ReservationDate,ReservId,Tbl.EmpId,VisitingType,DayDate,SerialIdType,@SerialTypeName1 SerialTypeName1,@SerialTypeName2 SerialTypeName2,@SerialTypeName3 SerialTypeName3,
Value,Tbl.Notes,Canceled,SerialId,Tbl.UserName,Tbl.MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
EmpName,EmpDepartment,VisitingTypeName,CaseId,CaseArName,CaseEnName,
ROW_NUMBER()over (partition by MyOrder,EmpDepartment,EmpName order by MyOrder,EmpDepartment,EmpName,SerialIdType,SerialId,CancelFlag) ROWNUMBER,
MemberName,
dbo.GetRelationName(RelationId)RelationName,
dbo.GetBrokerCoName(BrokerCoId)BrokerCoName,
MembershipNo,
MyValue,MyPayed,MyRemaining,
C.CompanyId,
dbo.GetCompanyName1(C.CompanyId)CompanyName1,
dbo.GetCompanyName2(C.CompanyId)CompanyName2,
dbo.GetDegreeName(dbo.GetEmpDegreeId(DoctorId))DegreeName,
Time,InsertedDate
 from 
(


select 0 MyOrder,0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Payed Value,MyNotes Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType)+' - '+
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId)) +' - '+
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReservationDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdReservation=@UserId or @UserId=0)

union all

select 0 MyOrder,0 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,RemainingDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Remaining Value,MyNotes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType)+' - '+
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId)) +' - '+
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdRemaining=@UserId or @UserId=0)

union all--====================================================
select 0 MyOrder,1 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,CanceledDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Payed Value,MyNotes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType)+' - '+
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId)) +' - '+
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)

union all

select 0 MyOrder,1 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,CanceledDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Remaining Value,MyNotes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType)+' - '+
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId)) +' - '+
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)


union all--====================================================
select 0 MyOrder,1 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReturnedDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Payed Value,MyNotes,Returned,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType)+' - '+
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId)) +' - '+
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)

union all

select 0 MyOrder,1 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReturnedDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Remaining Value,MyNotes,Returned,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType)+' - '+
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId)) +' - '+
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,Time,InsertedDate
from Reservations
where @IsReservations=1
and (dbo.GetEmpDepartmentId(EmpId)=@DepartmentId or @DepartmentId=0)
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)



--==================================================================================

union all 

--==================================================================================


select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Payed Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(DayDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdReservation=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,RemainingDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdRemaining=@UserId or @UserId=0)

union all--=================================

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,CanceledDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,CanceledDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)

union all--=================================

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,ReturnedDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,ReturnedDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
-Value MyValue,-Payed MyPayed,-Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate
from Services
where @IsServices=1
and (dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId)=@DepartmentId or @DepartmentId=0)
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (CompanyId=@CompanyId or @CompanyId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)




--==================================================================================

union all 

--==================================================================================


select 1 MyOrder,0 CancelFlag,1 SerialFlag,SM.DayDate ReservationDate,
SM.InvoiceNo,0 ServiceGroupId,0 ServiceTypeId,SM.DayDate,3 SerialIdType,
(case when SM.Flag in(18,36,38,48) then -1. else 1. end)*SM.TotalAfterDiscount Value,
(Case when Notes='' then null else Notes end)Notes,0 Canceled,SM.InvoiceNo SerialId,
SM.UserName,SM.MyGetDate,SM.UserName,0,0 EmpIdCanceled,
--'مستهلكات' 'ServiceTypeName',
--'مستهلكات' 'Service Group Name',
Sh.Name 'ServiceTypeName',
Sh.Name 'Service Group Name',
' - ' 'Service Type Name',
ToId,dbo.GetCaseArName(ToId) 'CaseArName',dbo.GetCaseEnName(ToId) 'CaseEnName',
SM.TotalAfterDiscount MyValue,0 MyPayed,SM.TotalAfterDiscount MyRemaining,left(CAST(MyGetDate as time),5),MyGetDate
from SalesMaster SM
left join SalesFlags Sh on(SM.Flag=Sh.Id)
where @IsServices=1
and @DepartmentId=0
and @EmpId=0
and SM.Flag in(17,18,37,38,47,48)
and (SM.ToId=@CaseId or @CaseId=0)
and (dbo.GetCaseCompanyId(SM.ToId)=@CompanyId or @CompanyId=0)
and cast(SM.DayDate as date) between @FromDate and @ToDate
and @ServiceGroupId=0
and @ServiceTypeId=0
and (SM.InvoiceNo>=@FromId or @FromId=0)
and (SM.InvoiceNo<=@ToId or @ToId=0)
and (3=@SerialType or @SerialType=0)

and cast(SM.DayDate as date) between @FromDate and @ToDate
and (SM.InvoiceNo>=@FromSerialId or @FromSerialId=0)
and (SM.InvoiceNo<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (SM.UserName=@UserId or @UserId=0)

union all--=================================

select 1 MyOrder,1 CancelFlag,1 SerialFlag,SM.DayDate ReservationDate,
SM.InvoiceNo,0 ServiceGroupId,0 ServiceTypeId,SM.DayDate,3 SerialIdType,
-(case when SM.Flag in(18,36,38,48) then -1. else 1. end)*SM.TotalAfterDiscount Value,Notes,1 Canceled,SM.InvoiceNo,SM.UserName,SM.MyGetDate,SM.UserName,0,0EmpIdCanceled,
--'مستهلكات' 'ServiceTypeName',
--'مستهلكات' 'Service Group Name',
Sh.Name 'ServiceTypeName',
Sh.Name 'Service Group Name',
' - ' 'Service Type Name',
ToId,dbo.GetCaseArName(ToId) 'CaseArName',dbo.GetCaseEnName(ToId) 'CaseEnName',
SM.TotalAfterDiscount MyValue,0 MyPayed,SM.TotalAfterDiscount MyRemaining,left(CAST(MyGetDate as time),5),MyGetDate
from SalesMaster SM
left join SalesFlags Sh on(SM.Flag=Sh.Id)
where @IsServices=1
and @DepartmentId=0
and @EmpId=0
and SM.Flag in(17,18,37,38,47,48)
and (SM.ToId=@CaseId or @CaseId=0)
and (dbo.GetCaseCompanyId(SM.ToId)=@CompanyId or @CompanyId=0)
and @ServiceGroupId=0
and @ServiceTypeId=0
and (SM.InvoiceNo>=@FromId or @FromId=0)
and (SM.InvoiceNo<=@ToId or @ToId=0)
and (3=@SerialType or @SerialType=0)

and cast(SM.DayDate as date) between @FromDate and @ToDate
and (SM.InvoiceNo>=@FromSerialId or @FromSerialId=0)
and (SM.InvoiceNo<=@ToSerialId or @ToSerialId=0)
and SM.Temp=1 
and @Canceled in(1,2)
and (SM.UserName=@UserId or @UserId=0)

)tbl
left join Cases C on(Tbl.CaseId=C.Id)
where CompanyId<>0
and (((Value <> 0 or @ShowZeroValues=1) and MyRemaining<>0) or @All=1)
AND Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoicesMain2]
@EmpId bigint,
@CaseId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select 0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,
Done,Payed,Remaining,Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,SerialId2,
dbo.GetEmpName(EmpId) 'EmpName',--dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and cast(ReservationDate as date) between @FromDate and @ToDate
and Canceled =0
and Returned =0

union all

select 0 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,RemainingDate DayDate,
Done,Payed,Remaining,Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,SerialId2,
dbo.GetEmpName(EmpId) 'EmpName',--dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and Canceled =0
and Returned =0

--==================================================================================

union all 

--==================================================================================


select 0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,DayDate,
Done,Payed,Remaining,Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,SerialId2,
isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where (DrId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and cast(DayDate as date) between @FromDate and @ToDate
and Canceled=0
and Returned=0

union all

select 0 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,RemainingDate DayDate,
Done,Payed,Remaining,Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,SerialId2,
isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') 'Service Group Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId)+' - '+dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where (DrId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and Canceled =0
and Returned =0

--==================================================================================

union all 

--==================================================================================


select 0 CancelFlag,1 SerialFlag,SM.DayDate ReservationDate,
SM.InvoiceNo,0 ServiceGroupId,0 ServiceTypeId,SM.DayDate,
0 Done,
(case when SM.Flag in(18,36,38,48) then -1. else 1. end)*TotalAfterDiscount Payed,
0 Remaining,
(case when SM.Flag in(18,36,38,48) then -1. else 1. end)*TotalAfterDiscount Value,
(Case when Notes='' then null else Notes end)Notes,0 Canceled,SM.InvoiceNo SerialId,SM.UserName,SM.MyGetDate,
SM.UserName EmpIdReservation,0 EmpIdRemaining,SM.UserName EmpIdCanceled,0 SerialId2,
Sh.Name ItemName,
dbo.GetEmpArName(ToId),
ToId,dbo.GetCaseArName(ToId),dbo.GetCaseEnName(ToId)
from SalesMaster SM
left join SalesFlags Sh on(SM.Flag=Sh.Id)
where @EmpId=0
and SM.Flag in(17,18,37,38,47,48)
and (SM.ToId=@CaseId or @CaseId=0)
and cast(SM.DayDate as date) between @FromDate and @ToDate
and SM.Temp=0
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMain3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoicesMain3]
@FromDate datetime,
@ToDate datetime
--with encryption
as

declare @EmpId bigint

select MyOrder,CancelFlag,SerialFlag,ReservationDate,ReservId,Tbl.EmpId,VisitingType,DayDate,SerialIdType,
'* '+isnull(Tbl.Notes,'-') Notes,
EmpName,VisitingTypeName,CaseId,CaseArName,CaseEnName,
ROW_NUMBER()over (partition by MyOrder order by MyOrder,SerialIdType,SerialId,CancelFlag) ROWNUMBER,
MyValue,MyPayed,MyRemaining,
C.CompanyId,
dbo.GetCompanyName1(C.CompanyId)CompanyName1,
dbo.GetDegreeName(dbo.GetEmpDegreeId(DoctorId))DegreeName,
Time,InsertedDate,
Perc,Total
 from 
(


select 0 MyOrder,0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Value,MyNotes Notes,Canceled,SerialId,R.UserName,R.MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,Time,InsertedDate,
(case when E.IsFreelancer=1 then E.Salary else 0 end)Perc,E.Name EmpName,
Value*(case when E.IsFreelancer=1 then E.Salary else 0 end)/100. Total
from Reservations R
left join Employees E on(R.EmpId=E.Id)
where EmpId>0
and (
		(CompanyId=0 and cast(ReservationDate as date) between @FromDate and @ToDate)
		or
		(CompanyId>0 and cast(ReservationDate as date) between dateadd(month,-1,@FromDate) and dateadd(day,-1,@FromDate))
	)

and Canceled=0
and Returned=0


--==================================================================================

union all 

--==================================================================================


select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,DrId,S.ServiceTypeId,DayDate,dbo.GetServiceGroupSerialId(S.ServiceGroupId) SerialIdType,
Value,(Case when S.Notes='' then null else S.Notes end)Notes,Canceled,SerialId,S.UserName,S.MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
isnull(dbo.GetServiceGroupName(S.ServiceGroupId)+' - '+dbo.GetServiceTypeName(S.ServiceGroupId,S.ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,S.Payed MyPayed,S.Remaining MyRemaining,left(CAST(S.MyGetDate as time),5),InsertedDate,
0 Perc,E.Name EmpName,
(case when S.CompanyId=0 then ST.DrValue else SC.DrValue end) Total
from Services S
left join Employees E on(S.DrId=E.Id)
left join ServiceTypes ST on(ST.ServiceGroupId=S.ServiceGroupId and ST.Id=S.ServiceTypeId)
left join ServiceCompanies SC on(SC.ServiceGroupId=S.ServiceGroupId and SC.Id=S.ServiceTypeId and SC.CompanyId=S.CompanyId)
where DrId>0
and (
		(S.CompanyId=0 and cast(DayDate as date) between @FromDate and @ToDate)
		or
		(S.CompanyId>0 and cast(DayDate as date) between dateadd(month,-1,@FromDate) and dateadd(day,-1,@FromDate))
	)
and Canceled=0
and Returned=0


--==================================================================================

union all 

--==================================================================================
Select 0 MyOrder,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,DrId1,0,DayDate,0,
Dr1Value,(Case when T.Notes='' then null else T.Notes end)Notes,Canceled,SerialId,T.UserName,T.MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(select top 1 dbo.GetOperationTypesName(TT.OperationTypeId) from OperationMotionsOperationTypes TT where T.InvoiceNo=TT.InvoiceNo order by TT.Line),
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Dr1Value MyValue,Dr1Value MyPayed,Remaining MyRemaining,left(CAST(T.MyGetDate as time),5),null,
T.Dr1Perc,E.Name EmpName,
Dr1Value*T.Dr1Perc/100. Total
From OperationMotions T 
left join Employees E on(T.DrId1=E.Id)
where DrId1>0 
and (
		(CompanyId=0 and DayDate between @FromDate and @ToDate)
		or
		(CompanyId>0 and DayDate between dateadd(month,-1,@FromDate) and dateadd(day,-1,@FromDate))
	)
		
)tbl
left join Cases C on(Tbl.CaseId=C.Id)
order by Daydate,ReservId
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMainExternalDoctors]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoicesMainExternalDoctors]
@EmpId bigint,
@InEmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as



declare @SerialTypeName1 nvarchar(100)=dbo.GetVisitingTypesSerialName(1)
declare @SerialTypeName2 nvarchar(100)=dbo.GetVisitingTypesSerialName(2)
declare @SerialTypeName3 nvarchar(100)=dbo.GetVisitingTypesSerialName(3)

select MyOrder,CancelFlag,SerialFlag,ReservationDate,ReservId,Tbl.EmpId,VisitingType,DayDate,SerialIdType,@SerialTypeName1 SerialTypeName1,@SerialTypeName2 SerialTypeName2,@SerialTypeName3 SerialTypeName3,
Value,'* '+isnull(Tbl.Notes,'-') Notes,Canceled,SerialId,Tbl.UserName,dbo.GetEmpArName(Tbl.UserName)UserNameName,Tbl.MyGetDate,EmpIdReservation,EmpIdReservationName,EmpIdRemaining,EmpIdCanceled,
EmpName,EmpDepartment,VisitingTypeName,CaseId,CaseArName,CaseEnName,
ROW_NUMBER()over (partition by MyOrder,EmpDepartment,EmpName order by MyOrder,EmpDepartment,EmpName,SerialIdType,SerialId,CancelFlag) ROWNUMBER,
MemberName,
dbo.GetRelationName(RelationId)RelationName,
dbo.GetBrokerCoName(BrokerCoId)BrokerCoName,
MembershipNo,
MyValue,MyPayed,MyRemaining,
C.CompanyId,
dbo.GetCompanyName1(C.CompanyId)CompanyName1,
dbo.GetCompanyName2(C.CompanyId)CompanyName2,
dbo.GetDegreeName(dbo.GetEmpDegreeId(DoctorId))DegreeName,
Time,InsertedDate,
Edr.Name Edr_Name,Edr.DescPerc Edr_DescPerc,Edr.Type Edr_Type,
(case when Edr.Type=0 then 'خصم' when Edr.Type=1 then 'عمولة' else '' end)Edr_Type_Name
 from 
(


select 0 MyOrder,0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Payed Value,MyNotes Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,Time,InsertedDate,
RefereId
from Reservations
where (RefereId=@EmpId or @EmpId=0)
and cast(ReservationDate as date) between @FromDate and @ToDate
and Canceled=0
and Returned=0
and RefereId<>0

union all 
 
select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Payed Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,dbo.GetEmpName(EmpIdReservation) 'EmpIdReservationName',EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else dbo.GetDepartmentName(dbo.GetServiceTypeDepartmentId(ServiceGroupId,ServiceTypeId))/*isnull(dbo.GetServiceGroupName(ServiceGroupId),'-')*/ end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName',
Value MyValue,Payed MyPayed,Remaining MyRemaining,left(CAST(MyGetDate as time),5),InsertedDate,
RefereId
from Services
where (RefereId=@EmpId or @EmpId=0)
and cast(DayDate as date) between @FromDate and @ToDate
and Canceled=0
and Returned=0
and RefereId<>0

)tbl
left join Cases C on(Tbl.CaseId=C.Id)
left join ExternalDoctors Edr on(Edr.Id=tbl.RefereId)
where (Edr.EmpId=@InEmpId or @InEmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesMainOLD]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoicesMainOLD]
@IsReservations int,
@IsServices int,
@EmpId int,
@CaseId int,
@CsId int,
@UserId int,
@VisitingType int,
@ServiceGroupId int,
@ServiceTypeId int,
@FromDate datetime,
@ToDate datetime,
@FromId int,
@ToId int,
@SerialType int,
@FromSerialId int,
@ToSerialId int,
@Canceled int,
@Returned int
--with encryption
as


select MyOrder,CancelFlag,SerialFlag,ReservationDate,ReservId,EmpId,VisitingType,DayDate,SerialIdType,
Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
EmpName,EmpDepartment,VisitingTypeName,CaseId,CaseArName,CaseEnName,
ROW_NUMBER()over (partition by MyOrder,EmpDepartment,EmpName order by MyOrder,EmpDepartment,EmpName,SerialIdType,SerialId,CancelFlag) ROWNUMBER
 from 
(


select 0 MyOrder,0 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReservationDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where @IsReservations=1
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReservationDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdReservation=@UserId or @UserId=0)

union all

select 0 MyOrder,0 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,RemainingDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where @IsReservations=1
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdRemaining=@UserId or @UserId=0)

union all--====================================================
select 0 MyOrder,1 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,CanceledDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where @IsReservations=1
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)

union all

select 0 MyOrder,1 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,CanceledDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where @IsReservations=1
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)


union all--====================================================
select 0 MyOrder,1 CancelFlag,1 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReturnedDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Payed Value,Notes,Returned,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where @IsReservations=1
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)

union all

select 0 MyOrder,1 CancelFlag,2 SerialFlag,ReservationDate,
ReservId,EmpId,VisitingType,ReturnedDate DayDate,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
-Remaining Value,Notes,Returned,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
dbo.GetEmpName(EmpId) 'EmpName',dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Reservations
where @IsReservations=1
and (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)



--==================================================================================

union all 

--==================================================================================


select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Payed Value,(Case when Notes='' then null else Notes end)Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else  /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else  isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where @IsServices=1
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(DayDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdReservation=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,0 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,RemainingDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else  /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else  isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where @IsServices=1
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and @Canceled in(0,2)
and @Returned in(0,2)
and (EmpIdRemaining=@UserId or @UserId=0)

union all--=================================

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,CanceledDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else  /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else  isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where @IsServices=1
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,CanceledDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdCanceled,
(case when DrId<>0 then dbo.GetEmpName(DrId) else  /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else  isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where @IsServices=1
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=1 
and @Canceled in(1,2)
and (EmpIdCanceled=@UserId or @UserId=0)

union all--=================================

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,1 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,ReturnedDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Payed Value,Notes,Canceled,SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
(case when DrId<>0 then dbo.GetEmpName(DrId) else  /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else  isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where @IsServices=1
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)


union all

select (Case when DrId<>0 then 0 else 1 end) MyOrder,1 CancelFlag,2 SerialFlag,DayDate ReservationDate,
InvoiceNo,ServiceGroupId,ServiceTypeId,ReturnedDate DayDate,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
-Remaining Value,Notes,Canceled,SerialId2 SerialId,UserName,MyGetDate,EmpIdReservation,EmpIdRemaining,EmpIdReturned,
(case when DrId<>0 then dbo.GetEmpName(DrId) else  /*dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId)*/ '-' end) 'ServiceTypeName',
(case when DrId<>0 then dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) else  isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') end) 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+(case when DrId=0 then '' else ' - '+dbo.GetEmpArName(DrId) end)+(case when CsId=0 then '' else ' - '+dbo.GetEmpArName(CsId) end) 'Service Type Name',
CaseId,dbo.GetCaseArName(CaseId) 'CaseArName',dbo.GetCaseEnName(CaseId) 'CaseEnName'
from Services
where @IsServices=1
and (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromId or @FromId=0)
and (InvoiceNo<=@ToId or @ToId=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Returned=1 
and @Returned in(1,2)
and (EmpIdReturned=@UserId or @UserId=0)


)tbl
GO
/****** Object:  StoredProcedure [dbo].[GetInvoicesOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetInvoicesOne]
@InvoicesFlagId int,
@Year int,
@InvoiceNo int
--with encryption
as

select T.*,
Ty.Name Type_Name,
--Mn.Name MainNo_Name,
--Sn.Name SubNo_Name,
Mr.Name MainNoArea_Name,
Sr.Name SubNoArea_Name,
Ad.Name Accused_Name,
Ac.Name Accusation_Name,
Cr.Name Circle_Name,
Br.Name Branch_Name

from Invoices T
left join InvoicesDt Dt on(T.InvoicesFlagId=Dt.InvoicesFlagId and T.Year=Dt.Year and T.InvoiceNo=Dt.InvoiceNo)
left join Types Ty on(Dt.TypeId=Ty.Id)
--left join MainNos Mn on(T.MainNoId=Mn.Id)
--left join SubNos Sn on(T.SubNoId=Sn.Id)
left join Areas Mr on(T.MainNoAreaId=Mr.Id)
left join Areas Sr on(T.SubNoAreaId=Sr.Id)
left join Accuseds Ad on(Dt.AccusedId=Ad.Id)
left join Accusations Ac on(T.AccusationId=Ac.Id)
left join Circles Cr on(T.CirclId=Cr.Id)
left join Branches Br on(T.BranchId=Br.Id)

where T.InvoiceNo=@InvoiceNo
and T.InvoicesFlagId=@InvoicesFlagId 
and T.Year=@Year
GO
/****** Object:  StoredProcedure [dbo].[GetItemCard]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCard]
(
@StoreId bigint,
@ItemId bigint,
@ItemSerialNo nvarchar(100),
@ColorId bigint,
@SizeId bigint,
@ToDate datetime
)
--with encryption
as

--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

select 1 MainTableIndex,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,It.Name ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,M.InventoryInvoiceNo,
CS.Name CostCenterName,
D.SalesReturnStateId,
SRS.Name SRS_Name,
D.SalesReturnStateReason,D.ItemSerialNo
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)
left join Items_View It on(D.ItemId=It.Id)
left join SalesReturnStates SRS on(D.SalesReturnStateId=SRS.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
and (D.ItemSerialNo=@ItemSerialNo or @ItemSerialNo='')

union all

select 2 MainTableIndex,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,M.InventoryInvoiceNo,
CS.Name CostCenterName,
0,'-','-','-'
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items It on(It.Id=D.ItemId)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
and @ItemSerialNo=''

union all

select 3 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name ArName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,0 InventoryInvoiceNo,
'' CostCenterName,
0,'-','-','-'
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)

where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Canceled=0
and @ItemSerialNo=''

union all

select 4 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,SF.Id Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
sf.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,0 InventoryInvoiceNo,
'' CostCenterName,
0,'-','-','-'
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
left join Items_View It on(TTT.ItemId=It.Id)

where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1
and @ItemSerialNo=''


union all

select 5 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,0 InventoryInvoiceNo,
'' CostCenterName,
0,'-','-','-'
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and @ItemSerialNo=''


union all

select 6 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,0 InventoryInvoiceNo,
'' CostCenterName,
0,'-','-','-'
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1
and @ItemSerialNo=''


union all

select 5 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,it.Name ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,0 InventoryInvoiceNo,
'' CostCenterName,
0,'-','-','-'
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(TT.ItemId=It.Id)
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
and @ItemSerialNo=''


union all

select 6 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,it.Name ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,0 InventoryInvoiceNo,
'' CostCenterName,
0,'-','-','-'
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
and @ItemSerialNo=''
GO
/****** Object:  StoredProcedure [dbo].[GetItemCard2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCard2]
(
@OrderTypeId int,
@Id int,
@StoreId bigint,
@ItemId bigint,
@ColorId bigint,
@SizeId bigint,
@ToDate datetime
)
--with encryption
as

--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

select Tbl.*
from(

select 1 TableIndex,D.Line,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,It.Name ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,
CS.Name CostCenterName,D.ItemSerialNo
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)
left join Items_View It on(D.ItemId=It.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))

union all

select 2 TableIndex,D.Line,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
CS.Name CostCenterName,'-'
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items It on(It.Id=D.ItemId)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))

union all

select 3 TableIndex,D.Line,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name ArName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
'' CostCenterName,'-'
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)

where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Canceled=0

union all

select 4 TableIndex,TTT.Line,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,SF.Id Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
sf.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,TTT.ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1


union all

select 5 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0


union all

select 6 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1


union all

select 5 TableIndex,0 Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,dbo.GetItemName(TT.ItemId) ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40


union all

select 6 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40

)Tbl
left join FIFO F on(Tbl.TableIndex=F.TableIndex and Tbl.Line=F.TblLine)
left join FIFO FMain on(FMain.TableIndex=F.MainTableIndex and FMain.TblLine=F.MainLine)
left join ImportMessagesDetails I on(I.InvoiceNo=FMain.MainInvoiceNo)
where FMain.MainTableIndex=4
and I.OrderTypeId=@OrderTypeId
and I.Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetItemCard3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCard3]
(
@StoreId bigint,
@ItemId bigint,
@ColorId bigint,
@SizeId bigint,
@ToDate datetime
)
--with encryption
as

--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo

declare @IgnoreSalesAndPurchaseFromItemBal int=isnull((Select IgnoreSalesAndPurchaseFromItemBal from Statics),0)

select 1 MainTableIndex,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,It.Name ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,
CS.Name CostCenterName,D.ItemSerialNo
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)
left join Items_View It on(D.ItemId=It.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
and SF.Id not in(29,30,33,34)

union all

select 2 MainTableIndex,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,D.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
CS.Name CostCenterName,'-'
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items It on(It.Id=D.ItemId)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (@IgnoreSalesAndPurchaseFromItemBal=0 or M.Flag not in(9,10,13,14,29,30))
and SF.Id not in(29,30,33,34)

union all

select 3 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name ArName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
'' CostCenterName,'-'
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)

where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate<=@ToDate
and M.Canceled=0

union all

select 4 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,SF.Id Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
sf.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,TTT.ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate<=@ToDate
and t.IsDelivered=1


union all

select 5 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0


union all

select 6 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2<=@ToDate
and TT.Temp=0
and TT.Done=1


union all

select 5 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,
0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,dbo.GetItemName(TT.ItemId) ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40


union all

select 6 MainTableIndex,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,
'' CostCenterName,'-'
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate<=@ToDate
and TT.Temp=0
and TT.Flag>40
GO
/****** Object:  StoredProcedure [dbo].[GetItemCardWindow]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCardWindow]
@StoreId int=1,
@FromDate datetime='2014-1-1',
@ToDate datetime='2020-1-1'
--with encryption
as

CREATE TABLE #Items(
	GroupId nvarchar(1000) ,
	GroupName nvarchar(1000) ,
	TypeId nvarchar(1000) ,
	TypeName nvarchar(1000) ,
	Id nvarchar(1000) ,
	Name nvarchar(1000) ,
	Bal float,
	Unit nvarchar(1000) ,
	ItemType nvarchar(1000),
)
insert #Items
select GroupId,dbo.GetGroupName(GroupId),TypeId,dbo.GetTypeName(GroupId,TypeId),Id,Name,0,Unit,ItemType from Items
where ItemType<>3

declare @sql nvarchar(4000)

exec('alter table #Items add Bal0 float')
select @sql='
--update #Items set Bal0 =
--dbo.GetStoreItemBal('+cast(@StoreId as nvarchar(100))+',Id,'''',0,0,'''+dbo.ToStrDate(@FromDate-1)+''')

update It
set Bal0=fn.Qty
from #Items It
left join (
	select ItemId,isnull(sum(Qty),0)Qty
	from dbo.Fn_AllItemMotion('+cast(@StoreId as nvarchar(100))+',0,'''+dbo.ToStrDate(@FromDate-1)+''')
	Group by ItemId
) fn on(It.Id=Fn.ItemId)
'
exec(@sql)

declare @tbl table(Flag int,Line int identity(1,1))
insert @tbl select -1 --فك وتركيب
insert @tbl select distinct Flag from SalesMaster where Flag not in(20,26,27,31)

declare @x int=1,@max int=(select MAX(Line) from @tbl)
while @x<=@max
begin
	declare @Flag int=(select Flag from @tbl where Line=@x)
	declare @FlagName nvarchar(100)=(select Name from SalesFlags where Id=@Flag)
	if @Flag=-1 begin
		exec('alter table #Items add [صادر] float')
		exec('alter table #Items add [وارد] float')
		select @sql=
		'update #Items set [صادر]=(
		select isnull(sum(T.Qty),0)
		from ItemCollectionMotionDetailsFrom T
		left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
		where T.StoreId='+cast(@StoreId as nvarchar(100))+'
		and TT.DayDate between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and #Items.Id=T.ItemId
		)
		update #Items set [وارد]=(
		select isnull(sum(T.Qty),0)
		from ItemCollectionMotionDetailsTo T
		left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
		where T.StoreId='+cast(@StoreId as nvarchar(100))+'
		and TT.DayDate2 between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and TT.Done=1
		and #Items.Id=T.ItemId
		)'
	end
	else if @Flag=8 begin
		exec('alter table #Items add [تحويلات صادرة] float')
		exec('alter table #Items add [تحويلات واردة] float')
		select @sql=
		'update #Items set [تحويلات صادرة]=(
		select isnull(sum(D.Qty*D.UnitQty),0)
		from SalesDetails D
		left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
		where M.StoreId='+cast(@StoreId as nvarchar(100))+'
		and D.Flag='+cast(@Flag as nvarchar(100))+'
		and M.DayDate between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and M.Temp=0
		and #Items.Id=D.ItemId
		)
		update #Items set [تحويلات واردة]=(
		select isnull(sum(D.Qty*D.UnitQty),0)
		from SalesDetails D
		left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
		where M.ToId='+cast(@StoreId as nvarchar(100))+'
		and D.Flag='+cast(@Flag as nvarchar(100))+'
		and M.DayDate between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and M.Temp=0
		and #Items.Id=D.ItemId
		)'
	end
	else begin
		exec('alter table #Items add ['+@FlagName+'] float')
		select @sql=
		'update #Items set ['+@FlagName+']=(
		select isnull(sum(D.Qty*D.UnitQty),0)
		from SalesDetails D
		left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
		where M.StoreId='+cast(@StoreId as nvarchar(100))+'
		and D.Flag='+cast(@Flag as nvarchar(100))+'
		and M.DayDate between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and M.Temp=0
		and M.Flag not in(19,20,26,27,31)

		and #Items.Id=D.ItemId
		)
		+(
		select isnull(sum(IC.Qty),0)
		from SalesDetails D
		left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
		left join SalesDetailsComponants IC on(IC.Flag=M.Flag and IC.StoreId=M.StoreId and IC.InvoiceNo=M.InvoiceNo and IC.MainItemId=D.ItemId)
		left join Items It on(It.Id=D.ItemId)
		where M.StoreId='+cast(@StoreId as nvarchar(100))+'
		and D.Flag='+cast(@Flag as nvarchar(100))+'
		and M.DayDate between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and M.Temp=0
		and M.Flag not in(19,20,26,27,31)

		and #Items.Id=IC.ItemId
		and It.ItemType=3
		)
		+(
		SELeCT isnull(sum(ttt.Qty),0)
		from ImportMessages T
		left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
		left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
		where ttt.StoreId='+cast(@StoreId as nvarchar(100))+'
		and ttt.ItemId=#Items.Id
		and 19='+cast(@Flag as nvarchar(100))+'
		and t.DeliveredDate between '''+dbo.ToStrDate(@FromDate)+''' and '''+dbo.ToStrDate(@ToDate)+'''
		and t.IsDelivered=1
		)
		'
	end
		
	exec(@sql)
	print @sql
	
	set @x+=1
end

select @sql='
--update #Items set Bal =round(dbo.GetStoreItemBal('+cast(@StoreId as nvarchar(100))+',Id,'''',0,0,'''+dbo.ToStrDate(@ToDate)+'''),2)

update It
set Bal=fn.Qty
from #Items It
left join (
	select ItemId,isnull(sum(Qty),0)Qty
	from dbo.Fn_AllItemMotion('+cast(@StoreId as nvarchar(100))+',0,'''+dbo.ToStrDate(@ToDate)+''')
	Group by ItemId
) fn on(It.Id=Fn.ItemId)
'
exec(@sql)

select * from #Items

drop table #Items
GO
/****** Object:  StoredProcedure [dbo].[GetItemCardWindowSub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCardWindowSub]
@StoreId bigint,
@ItemId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select distinct dbo.ToStrDate(M.DayDate) 'تاريخ الحركة',SF.Name 'نوع الحركة',M.StoreId,dbo.GetStoreName(M.StoreId)'المخزن',M.Flag,M.InvoiceNo 'المسلسل',
SF.Title,M.ToId,
(case 

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) 'الجهة'
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate between @FromDate and @ToDate 
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select distinct dbo.ToStrDate(M.DayDate),SF.Name SF_Name,M.StoreId,dbo.GetStoreName(M.StoreId)StoreName,M.Flag,M.InvoiceNo,
SF.Title,M.ToId,
(case 

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName
from SalesMaster M
left join SalesDetails D on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join SalesDetailsComponants IC on(IC.Flag=M.Flag and IC.StoreId=M.StoreId and IC.InvoiceNo=M.InvoiceNo and IC.MainItemId=D.ItemId)
left join Items It on(It.Id=D.ItemId)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and IC.ItemId=@ItemId
and It.ItemType=3
and M.DayDate between @FromDate and @ToDate 
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select distinct dbo.ToStrDate(t.DeliveredDate) 'تاريخ الحركة',
		'استلام رسائل - '+OT.Name+' - رسالة '+cast(T.Id as nvarchar(100)) 'نوع الحركة',
		TT.StoreId,dbo.GetStoreName(TT.StoreId)'المخزن',19,TT.InvoiceNo 'المسلسل',
		null,null,dbo.GetSubAccNameLink(11,T.OrderTypeId)
		from ImportMessages T
		left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
		left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
		left join OrderTypes OT on(T.OrderTypeId=OT.Id)
		where ttt.StoreId=@StoreId
		and ttt.ItemId=@ItemId
		and t.DeliveredDate between @FromDate and @ToDate 
		and t.IsDelivered=1

union all

select distinct dbo.ToStrDate(M.DayDate) 'تاريخ الحركة',
(case when M.MotionTypeId=0 then 'فك' else 'تركيب' end) 'نوع الحركة',
M.StoreId,dbo.GetStoreName(M.StoreId)'المخزن',-1,M.InvoiceNo 'المسلسل',
null,null,null
from ItemCollectionMotionMaster M
left join ItemCollectionMotionDetailsFrom D on(M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Stores St on(M.StoreId=St.Id)
where M.StoreId=@StoreId	
and D.ItemId=@ItemId
and M.DayDate between @FromDate and @ToDate 
and M.Temp=0

union all

select distinct dbo.ToStrDate(M.DayDate2) 'تاريخ الحركة',
(case when M.MotionTypeId=0 then 'فك' else 'تركيب' end) 'نوع الحركة',
M.StoreId,dbo.GetStoreName(M.StoreId)'المخزن',-1,M.InvoiceNo 'المسلسل',
null,null,null
from ItemCollectionMotionMaster M
left join ItemCollectionMotionDetailsTo D on(M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Stores St on(M.StoreId=St.Id)
where M.StoreId=@StoreId
and D.ItemId=@ItemId
and M.DayDate2 between @FromDate and @ToDate 
and M.Temp=0
and M.Done=1


order by 'تاريخ الحركة','نوع الحركة','المسلسل'
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMaintenance]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCollectionMaintenance]
(
@StoreId bigint,
@InvoiceNo bigint,
@Rpt int
)
--with encryption
as


select 1 MyFlag,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'أصناف للصيانة' FlagName,
T.*,
TT.MotionTypeId,
TT.Temp,
TT.Done,
TT.ItemId MainItemId,
dbo.GetItemName(TT.ItemId)MainItemName,
TT.ToId,
dbo.GetSubAccNameLink(1,TT.ToId)ToName
from ItemCollectionMaintenanceDetails T
left join ItemCollectionMaintenanceMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where T.StoreId=@StoreId
and T.InvoiceNo=@InvoiceNo
and @Rpt in(1,4)

union all

select 2 MyFlag,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'صرف أصناف' FlagName,
T.*,
TT.MotionTypeId,
TT.Temp,
TT.Done,
TT.ItemId MainItemId,
dbo.GetItemName(TT.ItemId)MainItemName,
TT.ToId,
dbo.GetSubAccNameLink(1,TT.ToId)ToName
from ItemCollectionMaintenanceDetailsFrom T
left join ItemCollectionMaintenanceMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where T.StoreId=@StoreId
and T.InvoiceNo=@InvoiceNo
and @Rpt in(2,3)

union all

select 3 MyFlag,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'إضافة أصناف' FlagName,
T.*,
TT.MotionTypeId,
TT.Temp,
TT.Done,
TT.ItemId MainItemId,
dbo.GetItemName(TT.ItemId)MainItemName,
TT.ToId,
dbo.GetSubAccNameLink(1,TT.ToId)ToName
from ItemCollectionMaintenanceDetailsTo T
left join ItemCollectionMaintenanceMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where T.StoreId=@StoreId
and T.InvoiceNo=@InvoiceNo
and @Rpt in(2)
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMaintenanceAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCollectionMaintenanceAll]

--with encryption
as


select *,
St.Name MyStoreName,
dbo.GetItemName(TT.ItemId)MainItemName,
dbo.GetSubAccNameLink(1,TT.ToId)ToName
from ItemCollectionMaintenanceMaster TT 
left join Stores St on(TT.StoreId=St.Id)
where TT.Done=0
and Tt.Temp=0
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCollectionMotion]
(
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as


select 0 MyFlag,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'صرف أصناف' FlagName,
T.*,
TT.MotionTypeId,
'كود الصنف الوارد' Title1,
'كود الصنف الصادر' Title2,
TT.Temp,
TT.Done,TT.DayDate,TT.DayDate2,
TT.Notes
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where T.StoreId=@StoreId
and T.InvoiceNo=@InvoiceNo


union all

select 1 MyFlag,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'إضافة أصناف' FlagName,
T.*,
TT.MotionTypeId,
'كود الصنف الصادر' Title1,
'كود الصنف الوارد' Title2,
TT.Temp,
TT.Done,TT.DayDate,TT.DayDate2,
TT.Notes
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where T.StoreId=@StoreId
and T.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetItemCollectionMotionRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCollectionMotionRpt]
(
@StoreId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as


select TT.StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'صرف أصناف' FlagName,
T.*,
TT.MotionTypeId,
'كود الصنف الوارد' Title1,
'كود الصنف الصادر' Title2,
TT.Temp,
TT.Notes
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where (TT.StoreId=@StoreId or @StoreId=0)
and (TT.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (TT.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (TT.DayDate between @FromDate and @ToDate or @FromInvoiceNo<>0)

union all

select TT.StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'إضافة أصناف' FlagName,
T.*,
TT.MotionTypeId,
'كود الصنف الصادر' Title1,
'كود الصنف الوارد' Title2,
TT.Temp,
TT.Notes
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
where (TT.StoreId=@StoreId or @StoreId=0)
and (TT.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (TT.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (TT.DayDate2 between @FromDate and @ToDate or @FromInvoiceNo<>0)
and TT.Done=1
GO
/****** Object:  StoredProcedure [dbo].[GetItemComponants]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemComponants]
(
@ItemId bigint
)
--with encryption
as


select M.*,It.Name MainItemName,dbo.GetItemUnitName(M.ItemId,M.UnitId)UnitName
from ItemComponants M
left join Items It on(It.Id=M.MainItemId)
where (M.MainItemId=@ItemId or @ItemId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetItemCurrentBal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemCurrentBal]
(
@ItemId bigint
)
--with encryption
as
select * from 
(
select St.Id 'كود المخزن',St.Name 'المخزن',
isnull(Z.Id,0) 'كود المقاس',D.Name 'المقاس',
isnull(CC.Id,0) 'كود اللون',ISNULL(cast(CC.Name as varchar(100)),'')'اللون',
dbo.GetStoreItemBal(St.Id,it.Id,'',isnull(CC.Id,0),isnull(Z.Id,0),GETDATE()) 'الرصيد'

from Items_View It
left join ItemSizes Z on(It.Id=z.ItemId)
left join SizesDetails D on(D.SizeId=It.SizeId and D.Id=Z.Id)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id)
cross join Stores St
where It.Id=@ItemId
and It.ItemType<>3
)Tbl where [الرصيد]>0
GO
/****** Object:  StoredProcedure [dbo].[GetItemCurrentBal2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetItemCurrentBal2]
(
@ItemId bigint
)
--with encryption
as
select * from 
(
select St.Id 'كود المخزن',St.Name 'المخزن',
dbo.GetStoreItemBal(St.Id,it.Id,'',0,0,GETDATE()) 'الرصيد'

from Items_View It
cross join Stores St
where It.Id=@ItemId
and It.ItemType<>3
)Tbl -- where [الرصيد]>0
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemMotion]
(
@StoreId bigint,
@ItemId bigint,
@ItemSerialNo nvarchar(100),
@ColorId bigint,
@SizeId bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
'-' MyStoreName,
@FromDate-1 M_DayDate,0 M_Shift,0 InvoiceNo,1 Flag,0 ToId,
dbo.GetItemUnitName(It.Id,0)MainUnitName,
dbo.GetItemUnitName(It.Id,0)UnitName,
'-' ToName,
'' SizeName,
'' ColorName,
'رصيد أول المدة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
It.Id,It.Name,0 UnitId,1 UnitQty,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1) M_Qty,0. Qty2,0 Qty3,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1)*dbo.GetItemAvgCost(It.Id,@FromDate-1) M_AvgCost,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1)*dbo.GetItemAvgCost(It.Id,@FromDate-1) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'-' CostCenterName
from Stores St 
cross join Items_View It
left join SalesFlags SF on(1=SF.Id)

where (St.Id=@StoreId)
and (It.Id=@ItemId or @ItemId=0)

union all

select It.Id ItemId,It.Name ItemName,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
ISNULL(cast(DD.Name as varchar(100)),'')SizeName,
ISNULL(cast(CC.Name as varchar(100)),'')ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
left join SizesDetails DD on(DD.SizeId=It.SizeId and DD.Id=D.Size)
left join ItemSizes Z on(z.ItemId=It.Id and z.Id=D.Size)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id and CC.Id=D.Color)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (D.ItemSerialNo=@ItemSerialNo or @ItemSerialNo='')

union all


select It.Id ItemId,It.Name ItemName,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and @ItemSerialNo=''

union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name,
'' SizeName,
'' ColorName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.AvgCost end) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)
left join Items_View It on(D.ItemId=It.Id)
where @StoreId=(select KidneysWashStoreId from Statics)
and (D.ItemId=@ItemId or @ItemId=0)
and M.DayDate between @FromDate and @ToDate
and M.Canceled=0
and @ItemSerialNo=''

union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,0 Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,TTT.ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,
TTT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
left join Items_View It on(TTT.ItemId=It.Id)
where ttt.StoreId=@StoreId
and (ttt.ItemId=@ItemId or @ItemId=0)
and t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1
and @ItemSerialNo=''

union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and @ItemSerialNo=''


union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
and TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1
and @ItemSerialNo=''


union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,
TT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(TT.ItemId=It.Id)
where TT.StoreId=@StoreId
and (TT.ItemId=@ItemId or @ItemId=0)
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40
and @ItemSerialNo=''


union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where TT.OreStoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40
and @ItemSerialNo=''
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemMotion2]
(
@StoreId bigint,
@ItemId bigint,
@ItemSerialNo nvarchar(100),
@ColorId bigint,
@SizeId bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as

select St.Id MyStoreId,
St.Name MyStoreName,
@FromDate-1 M_DayDate,0 M_Shift,0 InvoiceNo,1 Flag,0 ToId,
dbo.GetItemUnitName(It.Id,0)MainUnitName,
dbo.GetItemUnitName(It.Id,0)UnitName,
'-' ToName,
'-'SizeName,
'-'ColorName,
'رصيد أول المدة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
It.Id,It.Name,0 UnitId,1 UnitQty,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1) M_Qty,0. Qty2,0 Qty3,
dbo.GetStoreItemBalAvgCost(St.Id,it.Id,0,0,@FromDate-1) M_AvgCost,
dbo.GetStoreItemBalAvgCost(St.Id,it.Id,0,0,@FromDate-1) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'-' CostCenterName
from Stores St 
cross join Items_View It
left join SalesFlags SF on(1=SF.Id)

where (St.Id=@StoreId)
and (It.Id=@ItemId or @ItemId=0)

union all

select (case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
ISNULL(cast(DD.Name as varchar(100)),'')SizeName,
ISNULL(cast(CC.Name as varchar(100)),'')ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,It.Name ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
left join SizesDetails DD on(DD.SizeId=It.SizeId and DD.Id=D.Size)
left join ItemSizes Z on(z.ItemId=It.Id and z.Id=D.Size)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id and CC.Id=D.Color)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all


select (case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and D.ItemId=@ItemId
and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select @StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name,
'' SizeName,
'' ColorName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.AvgCost end) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)
left join Items_View It on(D.ItemId=It.Id)
where @StoreId=(select KidneysWashStoreId from Statics)
and D.ItemId=@ItemId
and M.DayDate between @FromDate and @ToDate
and M.Canceled=0

union all

select @StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,0 Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,TTT.ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,
TTT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
left join Items_View It on(TTT.ItemId=It.Id)
where ttt.StoreId=@StoreId
and ttt.ItemId=@ItemId
and t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1

union all

select @StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0


union all

select @StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1


union all

select @StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,
TT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(TT.ItemId=It.Id)
where TT.StoreId=@StoreId
and TT.ItemId=@ItemId
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40


union all

select @StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where TT.OreStoreId=@StoreId
and T.ItemId=@ItemId
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion2Fifo]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemMotion2Fifo]
(
@OrderTypeId int,
@Id int,
@StoreId bigint,
@ItemId bigint
)
--with encryption
as


--==================MainTableIndex=====================
--1 SalesDetails
--2 SalesDetailsComponants
--3 KidneysWashMotionDetails
--4 ImportMessagesDetailsSub2
--5 ItemCollectionMotionDetailsFrom
--6 ItemCollectionMotionDetailsTo

select F.Price F_Price,sum(F.Qty) F_Qty,

Tbl.TableIndex,Tbl.Line,Tbl.MyStoreId,
Tbl.MyStoreName,
Tbl.M_DayDate,Tbl.M_Shift,Tbl.InvoiceNo,Tbl.Flag,Tbl.ToId,
Tbl.MainUnitName,
Tbl.UnitName,
Tbl.ToName,
Tbl.SizeName,
Tbl.ColorName,
Tbl.FlagName,
Tbl.FlagTitle,
Tbl.FlagCashier,
Tbl.FlagItemInOut,
Tbl.FlagItemIn,
Tbl.FlagItemOut,
Tbl.FlagFlagValue,
Tbl.ItemId,Tbl.ItemName,Tbl.UnitId,Tbl.UnitQty,
Tbl.M_Qty,Tbl.Qty2,Tbl.Qty3,
Tbl.M_AvgCost,
Tbl.RealCost,
Tbl.SalesValue,
Tbl.StoreUnitId,Tbl.UnitCount,Tbl.UnitCount2,Tbl.Unit,Tbl.UnitSub,Tbl.UnitSub2

from(

select 1 TableIndex,D.Line,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
ISNULL(cast(DD.Name as varchar(100)),'')SizeName,
ISNULL(cast(CC.Name as varchar(100)),'')ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,It.Name ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
left join SizesDetails DD on(DD.SizeId=It.SizeId and DD.Id=D.Size)
left join ItemSizes Z on(z.ItemId=It.Id and z.Id=D.Size)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id and CC.Id=D.Color)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
--and (D.Color=@ColorId or @ColorId=0)
--and (D.Size=@SizeId or @SizeId=0)
--and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all


select 2 TableIndex,D.Line,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
--and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)

union all

select 3 TableIndex,D.Line,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name,
'' SizeName,
'' ColorName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.AvgCost end) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)
left join Items_View It on(D.ItemId=It.Id)
where @StoreId=(select KidneysWashStoreId from Statics)
and (D.ItemId=@ItemId or @ItemId=0)
--and M.DayDate between @FromDate and @ToDate
and M.Canceled=0

union all

select 4 TableIndex,TTT.Line,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,0 Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,TTT.ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,
TTT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
left join Items_View It on(TTT.ItemId=It.Id)
where ttt.StoreId=@StoreId
and (ttt.ItemId=@ItemId or @ItemId=0)
--and t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1

union all

select 5 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
--and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0


union all

select 6 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
--and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1


union all

select 5 TableIndex,0 Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,
TT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(TT.ItemId=It.Id)
where TT.StoreId=@StoreId
and (TT.ItemId=@ItemId or @ItemId=0)
--and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40


union all

select 6 TableIndex,T.Line,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where TT.OreStoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
--and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40

)Tbl
left join FIFO F on(Tbl.TableIndex=F.TableIndex and Tbl.Line=F.TblLine)
left join FIFO FMain on(FMain.TableIndex=F.MainTableIndex and FMain.TblLine=F.MainLine)
left join ImportMessagesDetails I on(I.InvoiceNo=FMain.MainInvoiceNo)
where FMain.MainTableIndex=4
and I.OrderTypeId=@OrderTypeId
and I.Id=@Id
and F.StoreId=@StoreId

group by F.Price,

Tbl.TableIndex,Tbl.Line,Tbl.MyStoreId,
Tbl.MyStoreName,
Tbl.M_DayDate,Tbl.M_Shift,Tbl.InvoiceNo,Tbl.Flag,Tbl.ToId,
Tbl.MainUnitName,
Tbl.UnitName,
Tbl.ToName,
Tbl.SizeName,
Tbl.ColorName,
Tbl.FlagName,
Tbl.FlagTitle,
Tbl.FlagCashier,
Tbl.FlagItemInOut,
Tbl.FlagItemIn,
Tbl.FlagItemOut,
Tbl.FlagFlagValue,
Tbl.ItemId,Tbl.ItemName,Tbl.UnitId,Tbl.UnitQty,
Tbl.M_Qty,Tbl.Qty2,Tbl.Qty3,
Tbl.M_AvgCost,
Tbl.RealCost,
Tbl.SalesValue,
Tbl.StoreUnitId,Tbl.UnitCount,Tbl.UnitCount2,Tbl.Unit,Tbl.UnitSub,Tbl.UnitSub2
GO
/****** Object:  StoredProcedure [dbo].[GetItemMotion3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemMotion3]
(
@StoreId bigint,
@CountryId bigint,
@GroupId bigint,
@TypeId bigint,
@ItemId bigint,
@ItemSerialNo nvarchar(100),
@ColorId bigint,
@SizeId bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
'-' MyStoreName,
@FromDate-1 M_DayDate,0 M_Shift,0 InvoiceNo,1 Flag,0 ToId,
dbo.GetItemUnitName(It.Id,0)MainUnitName,
dbo.GetItemUnitName(It.Id,0)UnitName,
'-' ToName,
'' SizeName,
'' ColorName,
'رصيد أول المدة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
It.Id,It.Name,0 UnitId,1 UnitQty,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1) M_Qty,0. Qty2,0 Qty3,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1)*dbo.GetItemAvgCost(It.Id,@FromDate-1) M_AvgCost,
dbo.GetStoreItemBal(St.Id,it.Id,@ItemSerialNo,0,0,@FromDate-1)*dbo.GetItemAvgCost(It.Id,@FromDate-1) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'-' CostCenterName
from Stores St 
cross join Items_View It
left join SalesFlags SF on(1=SF.Id)

where (St.Id=@StoreId)
and (It.Id=@ItemId or @ItemId=0)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)

union all

select It.Id ItemId,It.Name ItemName,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
ISNULL(cast(DD.Name as varchar(100)),'')SizeName,
ISNULL(cast(CC.Name as varchar(100)),'')ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,D.UnitId,D.UnitQty,
D.Qty M_Qty,D.Qty2,D.Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
left join SizesDetails DD on(DD.SizeId=It.SizeId and DD.Id=D.Size)
left join ItemSizes Z on(z.ItemId=It.Id and z.Id=D.Size)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id and CC.Id=D.Color)

where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
and (D.Color=@ColorId or @ColorId=0)
and (D.Size=@SizeId or @SizeId=0)
and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)

union all


select It.Id ItemId,It.Name ItemName,(case when M.StoreId=@StoreId then M.StoreId else M.ToId end) MyStoreId,
(case when M.StoreId=@StoreId then St.Name else tost.Name end) MyStoreName,
M.DayDate M_DayDate,M.Shift M_Shift,D.InvoiceNo,M.Flag,M.ToId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
(case 

when M.Flag IN(8) then (case when M.ToId=@StoreId then St.Name else ToSt.Name end)
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name
else '-' end) ToName,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.Value end) RealCost,
(case when SF.Id=13 then D.Value when SF.Id=14 then -D.Value else 0 end) SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
CS.Name CostCenterName
from SalesDetailsComponants D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Items_View It on(D.ItemId=It.Id)
where (M.StoreId=@StoreId or (M.ToId=@StoreId and M.Flag=8))
and (D.ItemId=@ItemId or @ItemId=0)
and M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag not in(19,20,26,27,31)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)

union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
M.DayDate M_DayDate,0 M_Shift,
M.InvoiceNo,0 Flag,
M.CaseId,
dbo.GetItemUnitName(D.ItemId,0)MainUnitName,
dbo.GetItemUnitName(D.ItemId,0)UnitName,
ToCases.Name,
'' SizeName,
'' ColorName,
'غسيل كلى' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
D.ItemId,D.ItemName,0 UnitId,1. UnitQty,
D.Qty M_Qty,1. Qty2,D.Qty Qty3,
D.AvgCost M_AvgCost,
(case when SF.ItemIn=1 then D.AvgCost else D.AvgCost end) RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from KidneysWashMotionDetails D
left join KidneysWashMotion M on(D.InvoiceNo=M.InvoiceNo)
left join SalesFlags SF on(4=SF.Id)
left join Stores St on(@StoreId=St.Id)
left join Cases ToCases on(M.CaseId=ToCases.Id)
left join Items_View It on(D.ItemId=It.Id)
where @StoreId=(select KidneysWashStoreId from Statics)
and (D.ItemId=@ItemId or @ItemId=0)
and M.DayDate between @FromDate and @ToDate
and M.Canceled=0
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)

union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
t.DeliveredDate M_DayDate,0 M_Shift,
TTT.SerialNo InvoiceNo,0 Flag,
TT.SupplierId,
dbo.GetItemUnitName(ttt.ItemId,0)MainUnitName,
dbo.GetItemUnitName(ttt.ItemId,0)UnitName,
ToSp.Name,
'' SizeName,
'' ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TTT.ItemId,TTT.ItemName,0 UnitId,1. UnitQty,
TTT.Qty M_Qty,TTT.Qty2,TTT.Qty3,
TTT.AvgCost M_AvgCost,
TTT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ImportMessages T
left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(19=SF.Id)
left join Suppliers ToSp on(TT.SupplierId=ToSp.Id)
left join Items_View It on(TTT.ItemId=It.Id)
where ttt.StoreId=@StoreId
and (ttt.ItemId=@ItemId or @ItemId=0)
and t.DeliveredDate between @FromDate and @ToDate
and t.IsDelivered=1
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)

union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - صرف' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsFrom T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)


union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate2 M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر فك' else 'أمر تركيب' end)+' - إضافة' FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.Qty M_Qty,1. Qty2,T.Qty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ItemCollectionMotionDetailsTo T
left join ItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where T.StoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
and TT.DayDate2 between @FromDate and @ToDate
and TT.Temp=0
and TT.Done=1
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)


union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(TT.ItemId,0)MainUnitName,
dbo.GetItemUnitName(TT.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
TT.ItemId,It.Name ItemName,0 UnitId,1. UnitQty,
TT.Qty M_Qty,1. Qty2,TT.Qty Qty3,
TT.AvgCost M_AvgCost,
TT.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionMaster TT 
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(2=SF.Id)
left join Items_View It on(TT.ItemId=It.Id)
where TT.StoreId=@StoreId
and (TT.ItemId=@ItemId or @ItemId=0)
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)


union all

select It.Id ItemId,It.Name ItemName,@StoreId MyStoreId,
St.Name MyStoreName,
TT.DayDate M_DayDate,0 M_Shift,
TT.InvoiceNo,0 Flag,

0,
dbo.GetItemUnitName(T.ItemId,0)MainUnitName,
dbo.GetItemUnitName(T.ItemId,0)UnitName,
'-',
'' SizeName,
'' ColorName,
(case when TT.MotionTypeId=0 then 'أمر انتاج' else 'أمر انتاج' end) FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
T.ItemId,T.ItemName,0 UnitId,1. UnitQty,
T.TotalQty M_Qty,1. Qty2,T.TotalQty Qty3,
T.AvgCost M_AvgCost,
T.AvgCost RealCost,
0 SalesValue,
St.StoreUnitId,It.UnitCount,It.UnitCount2,It.Unit,It.UnitSub,It.UnitSub2,
'' CostCenterName
from ProductionItemCollectionMotionDetailsTo T
left join ProductionItemCollectionMotionMaster TT on(T.StoreId=TT.StoreId and T.InvoiceNo=TT.InvoiceNo)
left join Stores St on(@StoreId=St.Id)
left join SalesFlags SF on(4=SF.Id)
left join Items_View It on(T.ItemId=It.Id)
where TT.OreStoreId=@StoreId
and (T.ItemId=@ItemId or @ItemId=0)
and TT.DayDate between @FromDate and @ToDate
and TT.Temp=0
and TT.Flag>40
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetItems]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItems]
@GroupId bigint,
@TypeId bigint,
@FromId bigint,
@ToId bigint
--with encryption
as
select *,
G.Name GroupName,
T.Name TypeName
from Items It
left join Groups G on(G.Id=It.GroupId)
left join Types T on(T.GroupId=It.GroupId and T.Id=It.TypeId)
where (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.Id>=@FromId or @FromId=0)
and (It.Id<=@ToId or @ToId=0)
and It.IsStopped=0
GO
/****** Object:  StoredProcedure [dbo].[GetItemsFromPurchaseOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsFromPurchaseOrder]
@StoreId int,
@PurchaseOrder int
--with encryption
as

select * from(
select T.ItemId,T.Qty-isnull(Tbl.Qty,0)Qty
from SalesDetails T
left join(
		select ItemId,SUM(Qty)Qty
		from SalesDetails SD
		left join SalesMaster SM on(SD.StoreId=SM.StoreId and SD.Flag=SM.Flag and SD.InvoiceNo=SM.InvoiceNo)
		where SM.StoreId=@StoreId
		and SM.Flag=9
		and SM.PurchaseOrder=@PurchaseOrder
		group by ItemId
)Tbl on(Tbl.ItemId=T.ItemId)
left join Items It on(T.ItemId=It.Id) 
where T.StoreId=@StoreId
and T.Flag=27
and T.InvoiceNo=@PurchaseOrder
)MyTbl
where Qty>0
GO
/****** Object:  StoredProcedure [dbo].[GetItemsProfit]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsProfit]
@GroupId bigint,
@TypeId bigint,
@FromId bigint,
@ToId bigint
--with encryption
as
declare @DayDate datetime=GETDATE()

select It.*,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,It.TypeId)TypeName,
dbo.GetItemLastCost(It.Id,@DayDate,0,0,0)ItemLastCost,
dbo.GetItemProfit_TeacherPrifit(It.Id,@DayDate)TeacherPrifit
from Items_View It
where (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.Id>=@FromId or @FromId=0)
and (It.Id<=@ToId or @ToId=0)
and It.IsStopped=0
GO
/****** Object:  StoredProcedure [dbo].[GetItemsQty2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsQty2]
@GroupId bigint,
@TypeId bigint,
@FromId bigint,
@ToId bigint
--with encryption
as
select Tbl.*,It.Name from (
select distinct * from 
(
	select ItemId,Qty2
	from SalesDetails D 
	left join SalesMaster M on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo) 
	where M.Flag=9
	and M.DayDate>'2015-12-31'

	union all

	select ItemId,Qty2 
	from ImportMessages T
	left join ImportMessagesDetails TT on(T.OrderTypeId=TT.OrderTypeId and T.Id=TT.Id)
	left join ImportMessagesDetailsSub2 TTT on(T.OrderTypeId=TTT.OrderTypeId and T.Id=TTT.Id and TT.InvoiceNo=TTT.InvoiceNo)
	where T.DayDate>'2015-12-31'
)T 
)Tbl
left join Items_View It on(Tbl.ItemId=It.Id)
where (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.Id>=@FromId or @FromId=0)
and (It.Id<=@ToId or @ToId=0)
order by It.Id
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsSales]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@SaveId bigint=0,
@RPTFlag1 bigint=0,
@ToId bigint=0
)
--with encryption
as

declare @FnItemsSalesTemp float=dbo.FnItemsSales(@FromDate,@ToDate,@Shift,@Flag,@StoreId,@ItemId,@GroupId,@TypeId)
declare @SaveBal float=(select dbo.Bal0(AccNo,Id,GETDATE(),0,0,0) from Saves where Id=@SaveId)

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.EnName WaiterName
,U.EnName UserFullName,C.EnName CashierName,
(case 
when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
@FnItemsSalesTemp FnItemsSalesTemp,
@SaveBal SaveBal,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
null _ItemId,
null _ItemName,
null _Qty,
It.Name It_ItemName,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Employees W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
left join CostCenters Cs on(M.CostCenterId=Cs.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.ToId=@ToId or @ToId=0)
and (
		((M.Flag between 11 and 18 or M.Flag between 21 and 24 or M.Flag between 37 and 38 or M.Flag between 47 and 48 or M.Flag between 33 and 34) and @Flag=0)
	or 
		M.Flag=@Flag
	)
and (D.ItemId=@ItemId or @ItemId=0)
and M.Temp=0
and M.Flag not in(26,27,31)
and It.ItemType<>3

and (
	(@RPTFlag1=8 and M.Flag in(33,34))or
	(not @RPTFlag1=8 and not M.Flag in(33,34))
	)
	
union all

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.EnName WaiterName
,U.EnName UserFullName,C.EnName CashierName,
(case 
when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
@FnItemsSalesTemp FnItemsSalesTemp,
@SaveBal SaveBal,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
DC.ItemId _ItemId,
DC.ItemName _ItemName,
DC.Qty _Qty,
It.Name It_ItemName,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesDetailsComponants DC on(M.Flag=DC.Flag and M.StoreId=DC.StoreId and M.InvoiceNo=DC.InvoiceNo and D.ItemId=DC.MainItemId)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Employees W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
left join CostCenters Cs on(M.CostCenterId=Cs.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.ToId=@ToId or @ToId=0)
and (
		((M.Flag between 11 and 18 or M.Flag between 21 and 24 or M.Flag between 37 and 38 or M.Flag between 47 and 48 or M.Flag between 33 and 34) and @Flag=0)
	or 
		M.Flag=@Flag
	)
and (D.ItemId=@ItemId or @ItemId=0)
and M.Temp=0
and M.Flag not in(26,27,31)
and It.ItemType=3

and (
	(@RPTFlag1=8 and M.Flag in(33,34))or
	(not @RPTFlag1=8 and not M.Flag in(33,34))
	)
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales25]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsSales25]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@SaveId bigint=0,
@RPTFlag1 bigint=0,
@ToId bigint=0
)
--with encryption
as


select *,
G.Name GroupName,
T.Name TypeName
from Items It
left join Groups G on(G.Id=It.GroupId)
left join Types T on(T.GroupId=It.GroupId and T.Id=It.TypeId)
where It.IsStopped=0
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and It.Id not in(
	select distinct D.ItemId
	from SalesMaster M
	left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
	left join Items_View It on(D.ItemId=It.Id)
	where M.DayDate between @FromDate and @ToDate
	and (M.Shift=@Shift or @Shift=0)
	and (M.StoreId=@StoreId or @StoreId=0)
	and (M.ToId=@ToId or @ToId=0)
	and M.Flag=13
	and (D.ItemId=@ItemId or @ItemId=0)
	and M.Temp=0
	and It.ItemType<>3
)
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales40]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsSales40]
(
@FromDate datetime,
@ToDate datetime,
@Shift int,
@Flag int,
@StoreId int,
@FromInvoiceNo int,
@ToInvoiceNo int,
@ItemId int=0,
@GroupId int=0,
@TypeId int=0,
@Mobile varchar(1000),
@CarNo varchar(1000)
)
--with encryption
as

select M.DayDate InvDate,M.Shift InvShift,SF.Name ShiftName,St.Name StoreName,W.Name WaiterName
,U.ArName UserFullName,C.ArName CashierName,
(case 

when M.Flag IN(8) then ToSt.Name
when M.Flag IN(9,10,18) then ToSp.Name
when M.Flag IN(19,20) then ToPA.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(15,16,17) then ToCs.Name end) ToName,'' TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items It on(D.ItemId=It.Id)
left join Shifts SF on(M.Shift=SF.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join PersonalAccounts ToPA on(M.ToId=ToPA.Id)
left join Investors Inv on(M.ToId=Inv.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.Flag between 11 and 18 or M.Flag=@Flag)
and (D.ItemId=@ItemId or @ItemId=0)
and (M.Mobile=@Mobile or @Mobile='')
and (M.CarNo=@CarNo or @CarNo='')
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSales42]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE  proc [dbo].[GetItemsSales42]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@SaveId bigint=0,
@ToId bigint=0
)
--with encryption
as

select M.StoreId,St.Name StoreName,
D.ItemId,D.ItemName,sum(D.Qty*SF.FlagValue)Qty,Sum(D.Value*SF.FlagValue)Value,fn.Bal
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Stores St on(M.StoreId=St.Id)
left join (
			select StoreId,ItemId,isnull(sum(Qty),0)Bal
			from dbo.Fn_AllItemMotion(0,0,@ToDate)
			where (StoreId=@StoreId or @StoreId=0)
			Group by StoreId,ItemId
		)fn on(fn.StoreId=M.StoreId and fn.ItemId=D.ItemId)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.ToId=@ToId or @ToId=0)
and M.Flag between 11 and 18

and (D.ItemId=@ItemId or @ItemId=0)
and M.Temp=0

group by M.StoreId,St.Name,
D.ItemId,D.ItemName,fn.Bal
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSalesPre]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsSalesPre]
(
@Flag int,
@StoreId int,
@InvoiceNo int
)
--with encryption
as


update D
set AvgCost=isnull(AvgCost,Qty*(case when D.UnitId=0 then It.PurchasePrice else It.PurchasePriceSub end))
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items It on(D.ItemId=It.Id)
where M.InvoiceNo=@InvoiceNo
and (M.StoreId=@StoreId or @StoreId=0)
and M.Flag=@Flag
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSalesTotal]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetItemsSalesTotal]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@SaveId bigint=0,
@RPTFlag1 bigint=0,
@ToId bigint=0
)
--with encryption
as

select 
ToId,ToName,
MAX(DayDate)DayDate,
sum(TotalAfterDiscount)TotalAfterDiscount,
sum(AvgCost)Sum_AvgCost,
sum(Value)Sum_Value
from
(
select 
ToCs.Name ToName,
M.ToId,
M.TotalAfterDiscount*SF.FlagValue TotalAfterDiscount,
M.DayDate,
sum(D.AvgCost*SF.FlagValue)AvgCost,
sum(D.Value*SF.FlagValue)Value
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.ToId=@ToId or @ToId=0)
and (
		((M.Flag between 11 and 18 or M.Flag between 21 and 24 or M.Flag between 37 and 38 or M.Flag between 47 and 48 or M.Flag between 33 and 34) and @Flag=0)
	or 
		M.Flag=@Flag
	)
and (D.ItemId=@ItemId or @ItemId=0)
and M.Temp=0
and M.Flag not in(26,27,31)

and (
	(@RPTFlag1=8 and M.Flag in(33,34))or
	(not @RPTFlag1=8 and not M.Flag in(33,34))
	)
	
group by ToCs.Name,M.ToId,M.TotalAfterDiscount,M.DayDate,SF.FlagValue

)Tbl

group by ToId,ToName
GO
/****** Object:  StoredProcedure [dbo].[GetItemsSalesTotal80]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetItemsSalesTotal80]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@SaveId bigint=0,
@RPTFlag1 bigint=0,
@ToId bigint=0
)
--with encryption
as
 
select 
C.Id ToId,C.Name ToName,
(select MAX(DayDate) from SalesMaster where Flag=13 and ToId=C.Id)DayDate,
(select top 1 TotalAfterDiscount from SalesMaster where Flag=13 and ToId=C.Id order by DayDate desc)TotalAfterDiscount,
T.MainBal0
from Customers C
left join (
	select Id,Name,
	isnull(MainBal0,0)+((isnull(SUM(Db),0)-isnull(SUM(Cr),0)))MainBal0
	from Customers C
	left join dbo.Fn_AllEntry('',0,@FromDate,@ToDate,0,0,0)  Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
	group by Id,Name,MainBal0
) T on(C.Id=T.Id)
where T.MainBal0>0
and C.Id not in
(
select M.ToId
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
where M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)
and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.ToId=@ToId or @ToId=0)
and M.Flag=13
and (D.ItemId=@ItemId or @ItemId=0)
and M.Temp=0 
)
 
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetKidneysWashMotion]
@CaseId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select T.*,
C.Name ArName,
P.Name CasePaymentTypeName
from KidneysWashMotion T
left join CasePaymentTypes P on(T.CasePaymentTypeId=P.Id)
left join Cases2 C on(T.CaseId=C.Id)
where (CaseId=@CaseId or @CaseId=0)
and DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotion1]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetKidneysWashMotion1]
@Month int,
@Year int
--with encryption
as

declare @Count int
select @Count=count(distinct C.Id)
from Cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where isnull(C.Stopped,0)=0
and K.CasePaymentTypeId=1
and K.MM=@Month 
and K.YY=@Year
 
 
 
select C.Id,C.Name ArName,C.DisionNo,C.DisionDate,
C.FileNo,C.FileYear,C.DisionYear,
dbo.GetArMonthName(@Month)ArMonthName,
@Count Count,
SUM(K.Value)+dbo.GetCase2TotalValue(C.Id,@Month,@Year) Total,
dbo.KidneysWashMonths(C.Id,@Month,@Year)KidneysWashMonths
from Cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where isnull(C.Stopped,0)=0
and K.CasePaymentTypeId=1
and K.MM=@Month 
and K.YY=@Year

group by C.Id,C.Name,C.DisionNo,C.DisionDate,
C.FileNo,C.FileYear,C.DisionYear,
C.DoseValue
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotion2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetKidneysWashMotion2]
@Case2TypeId int,
@Month int,
@Year int
--with encryption
as


select Id,Name ArName,Value,ArMonthName, 
min(d1)d1,min(d2)d2,min(d3)d3,min(d4)d4,min(d5)d5,min(d6)d6,min(d7)d7,
min(d8)d8,min(d9)d9,min(d10)d10,min(d11)d11,min(d12)d12,min(d13)d13,min(d14)d14,
(case when min(d1) is null then 0 else 1 end)+
(case when min(d2) is null then 0 else 1 end)+
(case when min(d3) is null then 0 else 1 end)+
(case when min(d4) is null then 0 else 1 end)+
(case when min(d5) is null then 0 else 1 end)+
(case when min(d6) is null then 0 else 1 end)+
(case when min(d7) is null then 0 else 1 end)+
(case when min(d8) is null then 0 else 1 end)+
(case when min(d9) is null then 0 else 1 end)+
(case when min(d10) is null then 0 else 1 end)+
(case when min(d11) is null then 0 else 1 end)+
(case when min(d12) is null then 0 else 1 end)+
(case when min(d13) is null then 0 else 1 end)+
(case when min(d14) is null then 0 else 1 end)Count

from(
select Id,Name,Value,ArMonthName,
(Case when ROWNUMBER=1 then DayDate else null end) d1,
(Case when ROWNUMBER=2 then DayDate else null end) d2,
(Case when ROWNUMBER=3 then DayDate else null end) d3,
(Case when ROWNUMBER=4 then DayDate else null end) d4,
(Case when ROWNUMBER=5 then DayDate else null end) d5,
(Case when ROWNUMBER=6 then DayDate else null end) d6,
(Case when ROWNUMBER=7 then DayDate else null end) d7,
(Case when ROWNUMBER=8 then DayDate else null end) d8,
(Case when ROWNUMBER=9 then DayDate else null end) d9,
(Case when ROWNUMBER=10 then DayDate else null end) d10,
(Case when ROWNUMBER=11 then DayDate else null end) d11,
(Case when ROWNUMBER=12 then DayDate else null end) d12,
(Case when ROWNUMBER=13 then DayDate else null end) d13,
(Case when ROWNUMBER=14 then DayDate else null end) d14
from 
(

select C.Id,C.Name,C.Value,K.DayDate,
dbo.GetArMonthName(@Month)ArMonthName,
ROW_NUMBER()over(partition by C.Id order by K.Daydate) ROWNUMBER
from Cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where isnull(C.Stopped,0)=0
and K.CasePaymentTypeId=2
and C.Case2TypeId=@Case2TypeId
and K.MM=@Month 
and K.YY=@Year

)tbl
) tbl
group by Id,Name,Value,ArMonthName
GO
/****** Object:  StoredProcedure [dbo].[GetKidneysWashMotionCase]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetKidneysWashMotionCase]
@Month int,
@Year int
--with encryption
as

select C.Id,C.Name ArName,C.DisionNo,C.DisionDate,
C.FileNo,C.FileYear,C.DisionYear,
C.Value C_Value,
dbo.GetArMonthName(@Month)ArMonthName,
dbo.KidneysWashMonths(C.Id,@Month,@Year)KidneysWashMonths,
dbo.GetCase2TotalValue(C.Id,@Month,@Year) Case2TotalValue,
K.*
from Cases2 C
left join KidneysWashMotion K on(C.Id=K.CaseId)
where isnull(C.Stopped,0)=0
and K.CasePaymentTypeId=1
and K.MM=@Month 
and K.YY=@Year
GO
/****** Object:  StoredProcedure [dbo].[GetLabService]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLabService]
@InvoiceNo bigint,
@SerialId bigint
--with encryption
as

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

SELECT CaseId,Value FROM Services
where ((@SerialId=SerialId and DayDate>=@GetYearStartingDate) or (@SerialId=SerialId2 and RemainingDate>=@GetYearStartingDate))

and Returned=0
and Canceled=0
and Payed+(case when Done=1 then Remaining else 0 end)=Value
and ServiceGroupId=(select top 1 LabServiceGroupId from Statics)
and Not exists
(
select * from LabTests where InvoiceNo<>@InvoiceNo and RInvoiceNo=@SerialId and year(DayDate)=year(GETDATE()) 
)
GO
/****** Object:  StoredProcedure [dbo].[GetLabTests]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLabTests] 
@InvoiceNo bigint
--with encryption
as
select D.*,dt.*,
C.Name CaseArName,C.EnName CaseEnName,G.Name Gender,C.DateOfBirth,
dbo.GetAge(C.DateOfBirth,D.DayDate) Age,
dbo.GetLaboratoryTestTypesName(DT.TestId)LaboratoryTestTypesName,
dbo.GetLaboratoryTestsName(DT.TestId,DT.SubTestId)LaboratoryTestsName,
it.Name LabTestItemName,

(Case when IT.RefrenceRange=1 then dbo.GetALlNormalValue(It.TestId,It.SubTestId,It.Id) else Dt.NormalValue end) RefrenceRange,
it.Unit
from LabTests D
left join LabTestsDt DT on(D.InvoiceNo=dt.InvoiceNo)
left join Cases C on(D.CaseId=C.Id)
left join Gender G on(C.Gender=G.Id)
left join LabTestItems It on(dt.TestId=it.TestId and dt.SubTestId=it.SubTestId and dt.Id=it.Id)
where D.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetLabTests2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLabTests2] 
@CaseId bigint
--with encryption
as
select D.*,dt.*,
C.Name CaseArName,C.EnName CaseEnName,G.Name Gender,C.DateOfBirth,D.DayDate-C.DateOfBirth Age,
dbo.GetLaboratoryTestTypesName(DT.TestId)LaboratoryTestTypesName,
dbo.GetLaboratoryTestsName(DT.TestId,DT.SubTestId)LaboratoryTestsName,
it.Name LabTestItemName,

(Case when IT.RefrenceRange=1 then dbo.GetALlNormalValue(It.TestId,It.SubTestId,It.Id) else Dt.NormalValue end) RefrenceRange,
it.Unit
from LabTests D
left join LabTestsDt DT on(D.InvoiceNo=dt.InvoiceNo)
left join Cases C on(D.CaseId=C.Id)
left join Gender G on(C.Gender=G.Id)
left join LabTestItems It on(dt.TestId=it.TestId and dt.SubTestId=it.SubTestId and dt.Id=it.Id)
where D.CaseId=@CaseId
GO
/****** Object:  StoredProcedure [dbo].[GetLabTestsRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLabTestsRPT] 
@TestId bigint,
@SubTestId bigint,
@Id bigint,
@CaseId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select D.*,dt.*,
C.Name CaseArName,C.EnName CaseEnName,G.Name Gender,C.DateOfBirth,D.DayDate-C.DateOfBirth Age,
dbo.GetLaboratoryTestTypesName(DT.TestId)LaboratoryTestTypesName,
dbo.GetLaboratoryTestsName(DT.TestId,DT.SubTestId)LaboratoryTestsName,
it.Name LabTestItemName,

(Case when IT.RefrenceRange=1 then dbo.GetALlNormalValue(It.TestId,It.SubTestId,It.Id) else Dt.NormalValue end) RefrenceRange,
it.Unit
from LabTests D
left join LabTestsDt DT on(D.InvoiceNo=dt.InvoiceNo)
left join Cases C on(D.CaseId=C.Id)
left join Gender G on(C.Gender=G.Id)
left join LabTestItems It on(dt.TestId=it.TestId and dt.SubTestId=it.SubTestId and dt.Id=it.Id)
where (Dt.TestId=@TestId or @TestId=0)
and (Dt.SubTestId=@SubTestId or @SubTestId=0)
and (Dt.Id=@Id or @Id=0)
and (D.CaseId=@CaseId or @CaseId=0)
and D.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetLeaveRequests]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLeaveRequests]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName
from LeaveRequests
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetLeaveRequests2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLeaveRequests2]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName,
(case LeaveType when 0 then '-' when 1 then 'سنوية' when 2 then 'عارضة' when 3 then 'مرضى' 
when 4 then 'بدون مرتب' when 5 then 'مأمورية' else '' end) LeaveTypeName
from LeaveRequests2
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetLoans]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLoans]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName
from Loans
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetLoansStatus]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetLoansStatus]
@EmpId bigint
--with encryption
as
select L.*,dbo.GetEmpArName(L.EmpId)EmpArName,
dbo.GetEmpSumLoanValue(L.EmpId) SumLoanValue
from Loans L
where (L.EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetMachinesMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMachinesMotion]
@Daydate datetime
--with encryption
as

select M.Id,M.Name,isnull(T.Value,0)Value
from Machines M
left join MachinesMotion T on(M.Id=T.MachineId and T.DayDate=@Daydate)
GO
/****** Object:  StoredProcedure [dbo].[GetMachinesMotionRpt]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMachinesMotionRpt]
@MachineId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select M.Id,M.Name,
MM.Daydate,MM.Value MM_Value,
MOut.MachinesOutcomeTypeId,dbo.GetMachinesOutcomeTypeName(MOut.MachinesOutcomeTypeId) MachinesOutcomeTypeName,
MOut.Qty MOut_Qty,
MOut.Price MOut_Price,
MOut.Value MOut_Value,
MOut.Notes MOut_Notes
from Machines M
left join MachinesMotion MM on(M.Id=MM.MachineId)
left join MachinesOutcomeMotion MOut on(M.Id=MOut.MachineId and MM.Daydate=MOut.Daydate)
where MM.Daydate between @FromDate and @ToDate
and (M.Id=@MachineId or @MachineId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetMachinesOutcomeMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMachinesOutcomeMotion]
@Daydate datetime,
@MachineId int
--with encryption
as

select MachinesOutcomeTypeId,Value
from MachinesOutcomeMotion
where DayDate=@Daydate
and MachineId=@MachineId
GO
/****** Object:  StoredProcedure [dbo].[GetMaxSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMaxSerialId]
(
@SerialType bigint
)
--with encryption
as

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

declare @NewSerialId bigint

select @NewSerialId=max(SerialId) from 
(

select max(SerialId) SerialId from Reservations where dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType and ReservationDate>=@GetYearStartingDate
union all
select max(SerialId) SerialId from Services where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType and DayDate>=@GetYearStartingDate

union all

select max(SerialId2) SerialId from Reservations where dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType and RemainingDate>=@GetYearStartingDate
union all
select max(SerialId2) SerialId from Services where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType and RemainingDate>=@GetYearStartingDate

)tbl

select @NewSerialId=ISNULL(@NewSerialId,0)+1

select @NewSerialId
GO
/****** Object:  StoredProcedure [dbo].[GetMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMessages]
(
@Emp bigint,
@Emp2 bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as
select FromUser,dbo.GetEmpName(FromUser) 'FromUserName',
ToUser,dbo.GetEmpName(ToUser) 'ToUserName',
Details,Daydate,
(case when FromUser>ToUser then FromUser else ToUser end) 'GroupBy',
(case when FromUser>ToUser then ToUser else FromUser end) 'GroupBy2'
from Messages
where (FromUser=@Emp or @Emp=0)
and (ToUser=@Emp2 or @Emp2=0)
and Daydate between @FromDate and @ToDate+1
order by Daydate
GO
/****** Object:  StoredProcedure [dbo].[getMonthlyPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getMonthlyPayment]
@Year int=2019,
@Month int=12,
@Day int=0,
@Day2 int=0,
@IsDelayOnly int=0,
@AccNo bigint=0,
@Ban2 int,
@Ban3 int
as

declare @date nvarchar(10)=cast(@year as nvarchar(10))+'-'+cast(@month as nvarchar(10))+'-'+cast((case when @Day2=0 then 30 else @Day2 end) as nvarchar(10))

select *,
dbo.getCustomerLastPayment(Id)CustomerLastPayment,
dbo.getCustomerLastPaymentValue(Id)CustomerLastPaymentValue
from(

	select C.Id,C.Name,C.Mobile,C.Tel,C.MonthlyPayment,C.MonthlyPaymentDay,C.AccNo,Ch.Name Ch_Name,dbo.getCustomerMonthPayment(@Year,@Month,C.Id) Value,C.Notes,
	isnull(C.MainBal0,0)+isnull(Fn.Bal,0) CurrentBal,C.Person
	from Customers C
	left join CHART Ch on(C.AccNo=Ch.Id)
	left join (
				select fn.MyMainAccNo,fn.MySubAccNo,sum(isnull(Fn.Db,0)-isnull(Fn.Cr,0)) Bal
				from dbo.Fn_AllEntry('',0,'1900-1-1',@date,0,0,0) fn 
				group by MyMainAccNo,MySubAccNo
				)fn on(fn.MyMainAccNo=C.AccNo and fn.MySubAccNo=C.Id) 
	where C.MonthlyPayment>0
	and (C.MonthlyPaymentDay>=@Day or @Day=0)
	and (C.MonthlyPaymentDay<=@Day2 or @Day2=0)
	and (C.AccNo=@AccNo or @AccNo=0)
	and (Ban2=@Ban2 or @Ban2=2)
	and (Ban3=@Ban3 or @Ban3=2)
	group by C.Id,C.Name,C.Mobile,C.Tel,C.MonthlyPayment,C.MonthlyPaymentDay,C.AccNo,Ch.Name,C.Notes,C.MainBal0,Fn.Bal,C.Person
)Tbl
where(Value<MonthlyPayment or @IsDelayOnly=0)
and CurrentBal>0
order by Name
GO
/****** Object:  StoredProcedure [dbo].[getMonthlySales]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc [dbo].[getMonthlySales]
@StoreId int,
@Month int,
@Year int
as

declare @Min int=(select MIN(DATENAME(WEEK,Line)) from dbo.MonthDays(3,2021))

select D.Line,
isnull(sum((case when Flag=13 then 1. else -1. end)*TotalAfterDiscount),0)TotalAfterDiscount,
isnull(count((case when Flag=13 then 1. else -1. end)*InvoiceNo),0)TotalCount,
DATENAME(WEEKDAY,D.Line)WEEKDAY,DATENAME(WEEK,D.Line)-@Min+1 WEEK
from dbo.MonthDays(@Month,@Year) D
left join SalesMaster M on (M.DayDate=D.Line and Flag in(13,14) and (StoreId=0 or 0=0))
and (StoreId=@StoreId or @StoreId=0)
group by D.Line

GO
/****** Object:  StoredProcedure [dbo].[getMonthlySales2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc [dbo].[getMonthlySales2]
@StoreId int,
@Month int,
@Year int
as

set DATEFIRST 6

declare @Min int=(select MIN(DATENAME(WEEK,Line)) from dbo.MonthDays(@Month,@Year))

select 
sum(Case when WEEKDAY='Saturday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Saturday1',
sum(Case when WEEKDAY='Sunday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Sunday1',
sum(Case when WEEKDAY='Monday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Monday1',
sum(Case when WEEKDAY='Tuesday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Tuesday1',
sum(Case when WEEKDAY='Wednesday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Wednesday1',
sum(Case when WEEKDAY='Thursday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Thursday1',
sum(Case when WEEKDAY='Friday' and WEEK=1 then TotalAfterDiscount else 0 end) 'Friday1',
sum(Case when WEEKDAY='Saturday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Saturday2',
sum(Case when WEEKDAY='Sunday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Sunday2',
sum(Case when WEEKDAY='Monday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Monday2',
sum(Case when WEEKDAY='Tuesday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Tuesday2',
sum(Case when WEEKDAY='Wednesday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Wednesday2',
sum(Case when WEEKDAY='Thursday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Thursday2',
sum(Case when WEEKDAY='Friday' and WEEK=2 then TotalAfterDiscount else 0 end) 'Friday2',
sum(Case when WEEKDAY='Saturday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Saturday3',
sum(Case when WEEKDAY='Sunday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Sunday3',
sum(Case when WEEKDAY='Monday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Monday3',
sum(Case when WEEKDAY='Tuesday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Tuesday3',
sum(Case when WEEKDAY='Wednesday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Wednesday3',
sum(Case when WEEKDAY='Thursday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Thursday3',
sum(Case when WEEKDAY='Friday' and WEEK=3 then TotalAfterDiscount else 0 end) 'Friday3',
sum(Case when WEEKDAY='Saturday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Saturday4',
sum(Case when WEEKDAY='Sunday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Sunday4',
sum(Case when WEEKDAY='Monday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Monday4',
sum(Case when WEEKDAY='Tuesday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Tuesday4',
sum(Case when WEEKDAY='Wednesday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Wednesday4',
sum(Case when WEEKDAY='Thursday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Thursday4',
sum(Case when WEEKDAY='Friday' and WEEK=4 then TotalAfterDiscount else 0 end) 'Friday4',
sum(Case when WEEKDAY='Saturday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Saturday5',
sum(Case when WEEKDAY='Sunday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Sunday5',
sum(Case when WEEKDAY='Monday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Monday5',
sum(Case when WEEKDAY='Tuesday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Tuesday5',
sum(Case when WEEKDAY='Wednesday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Wednesday5',
sum(Case when WEEKDAY='Thursday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Thursday5',
sum(Case when WEEKDAY='Friday' and WEEK=5 then TotalAfterDiscount else 0 end) 'Friday5',
sum(Case when WEEKDAY='Saturday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Saturday6',
sum(Case when WEEKDAY='Sunday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Sunday6',
sum(Case when WEEKDAY='Monday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Monday6',
sum(Case when WEEKDAY='Tuesday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Tuesday6',
sum(Case when WEEKDAY='Wednesday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Wednesday6',
sum(Case when WEEKDAY='Thursday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Thursday6',
sum(Case when WEEKDAY='Friday' and WEEK=6 then TotalAfterDiscount else 0 end) 'Friday6',


sum(Case when WEEKDAY='Saturday' and WEEK=1 then TotalCount else 0 end) 'Saturday1C',
sum(Case when WEEKDAY='Sunday' and WEEK=1 then TotalCount else 0 end) 'Sunday1C',
sum(Case when WEEKDAY='Monday' and WEEK=1 then TotalCount else 0 end) 'Monday1C',
sum(Case when WEEKDAY='Tuesday' and WEEK=1 then TotalCount else 0 end) 'Tuesday1C',
sum(Case when WEEKDAY='Wednesday' and WEEK=1 then TotalCount else 0 end) 'Wednesday1C',
sum(Case when WEEKDAY='Thursday' and WEEK=1 then TotalCount else 0 end) 'Thursday1C',
sum(Case when WEEKDAY='Friday' and WEEK=1 then TotalCount else 0 end) 'Friday1C',
sum(Case when WEEKDAY='Saturday' and WEEK=2 then TotalCount else 0 end) 'Saturday2C',
sum(Case when WEEKDAY='Sunday' and WEEK=2 then TotalCount else 0 end) 'Sunday2C',
sum(Case when WEEKDAY='Monday' and WEEK=2 then TotalCount else 0 end) 'Monday2C',
sum(Case when WEEKDAY='Tuesday' and WEEK=2 then TotalCount else 0 end) 'Tuesday2C',
sum(Case when WEEKDAY='Wednesday' and WEEK=2 then TotalCount else 0 end) 'Wednesday2C',
sum(Case when WEEKDAY='Thursday' and WEEK=2 then TotalCount else 0 end) 'Thursday2C',
sum(Case when WEEKDAY='Friday' and WEEK=2 then TotalCount else 0 end) 'Friday2C',
sum(Case when WEEKDAY='Saturday' and WEEK=3 then TotalCount else 0 end) 'Saturday3C',
sum(Case when WEEKDAY='Sunday' and WEEK=3 then TotalCount else 0 end) 'Sunday3C',
sum(Case when WEEKDAY='Monday' and WEEK=3 then TotalCount else 0 end) 'Monday3C',
sum(Case when WEEKDAY='Tuesday' and WEEK=3 then TotalCount else 0 end) 'Tuesday3C',
sum(Case when WEEKDAY='Wednesday' and WEEK=3 then TotalCount else 0 end) 'Wednesday3C',
sum(Case when WEEKDAY='Thursday' and WEEK=3 then TotalCount else 0 end) 'Thursday3C',
sum(Case when WEEKDAY='Friday' and WEEK=3 then TotalCount else 0 end) 'Friday3C',
sum(Case when WEEKDAY='Saturday' and WEEK=4 then TotalCount else 0 end) 'Saturday4C',
sum(Case when WEEKDAY='Sunday' and WEEK=4 then TotalCount else 0 end) 'Sunday4C',
sum(Case when WEEKDAY='Monday' and WEEK=4 then TotalCount else 0 end) 'Monday4C',
sum(Case when WEEKDAY='Tuesday' and WEEK=4 then TotalCount else 0 end) 'Tuesday4C',
sum(Case when WEEKDAY='Wednesday' and WEEK=4 then TotalCount else 0 end) 'Wednesday4C',
sum(Case when WEEKDAY='Thursday' and WEEK=4 then TotalCount else 0 end) 'Thursday4C',
sum(Case when WEEKDAY='Friday' and WEEK=4 then TotalCount else 0 end) 'Friday4C',
sum(Case when WEEKDAY='Saturday' and WEEK=5 then TotalCount else 0 end) 'Saturday5C',
sum(Case when WEEKDAY='Sunday' and WEEK=5 then TotalCount else 0 end) 'Sunday5C',
sum(Case when WEEKDAY='Monday' and WEEK=5 then TotalCount else 0 end) 'Monday5C',
sum(Case when WEEKDAY='Tuesday' and WEEK=5 then TotalCount else 0 end) 'Tuesday5C',
sum(Case when WEEKDAY='Wednesday' and WEEK=5 then TotalCount else 0 end) 'Wednesday5C',
sum(Case when WEEKDAY='Thursday' and WEEK=5 then TotalCount else 0 end) 'Thursday5C',
sum(Case when WEEKDAY='Friday' and WEEK=5 then TotalCount else 0 end) 'Friday5C',
sum(Case when WEEKDAY='Saturday' and WEEK=6 then TotalCount else 0 end) 'Saturday6C',
sum(Case when WEEKDAY='Sunday' and WEEK=6 then TotalCount else 0 end) 'Sunday6C',
sum(Case when WEEKDAY='Monday' and WEEK=6 then TotalCount else 0 end) 'Monday6C',
sum(Case when WEEKDAY='Tuesday' and WEEK=6 then TotalCount else 0 end) 'Tuesday6C',
sum(Case when WEEKDAY='Wednesday' and WEEK=6 then TotalCount else 0 end) 'Wednesday6C',
sum(Case when WEEKDAY='Thursday' and WEEK=6 then TotalCount else 0 end) 'Thursday6C',
sum(Case when WEEKDAY='Friday' and WEEK=6 then TotalCount else 0 end) 'Friday6C',


sum(Case when WEEKDAY='Saturday' and WEEK=1 then DAY(Line) else 0 end) 'Saturday1N',
sum(Case when WEEKDAY='Sunday' and WEEK=1 then DAY(Line) else 0 end) 'Sunday1N',
sum(Case when WEEKDAY='Monday' and WEEK=1 then DAY(Line) else 0 end) 'Monday1N',
sum(Case when WEEKDAY='Tuesday' and WEEK=1 then DAY(Line) else 0 end) 'Tuesday1N',
sum(Case when WEEKDAY='Wednesday' and WEEK=1 then DAY(Line) else 0 end) 'Wednesday1N',
sum(Case when WEEKDAY='Thursday' and WEEK=1 then DAY(Line) else 0 end) 'Thursday1N',
sum(Case when WEEKDAY='Friday' and WEEK=1 then DAY(Line) else 0 end) 'Friday1N',
sum(Case when WEEKDAY='Saturday' and WEEK=2 then DAY(Line) else 0 end) 'Saturday2N',
sum(Case when WEEKDAY='Sunday' and WEEK=2 then DAY(Line) else 0 end) 'Sunday2N',
sum(Case when WEEKDAY='Monday' and WEEK=2 then DAY(Line) else 0 end) 'Monday2N',
sum(Case when WEEKDAY='Tuesday' and WEEK=2 then DAY(Line) else 0 end) 'Tuesday2N',
sum(Case when WEEKDAY='Wednesday' and WEEK=2 then DAY(Line) else 0 end) 'Wednesday2N',
sum(Case when WEEKDAY='Thursday' and WEEK=2 then DAY(Line) else 0 end) 'Thursday2N',
sum(Case when WEEKDAY='Friday' and WEEK=2 then DAY(Line) else 0 end) 'Friday2N',
sum(Case when WEEKDAY='Saturday' and WEEK=3 then DAY(Line) else 0 end) 'Saturday3N',
sum(Case when WEEKDAY='Sunday' and WEEK=3 then DAY(Line) else 0 end) 'Sunday3N',
sum(Case when WEEKDAY='Monday' and WEEK=3 then DAY(Line) else 0 end) 'Monday3N',
sum(Case when WEEKDAY='Tuesday' and WEEK=3 then DAY(Line) else 0 end) 'Tuesday3N',
sum(Case when WEEKDAY='Wednesday' and WEEK=3 then DAY(Line) else 0 end) 'Wednesday3N',
sum(Case when WEEKDAY='Thursday' and WEEK=3 then DAY(Line) else 0 end) 'Thursday3N',
sum(Case when WEEKDAY='Friday' and WEEK=3 then DAY(Line) else 0 end) 'Friday3N',
sum(Case when WEEKDAY='Saturday' and WEEK=4 then DAY(Line) else 0 end) 'Saturday4N',
sum(Case when WEEKDAY='Sunday' and WEEK=4 then DAY(Line) else 0 end) 'Sunday4N',
sum(Case when WEEKDAY='Monday' and WEEK=4 then DAY(Line) else 0 end) 'Monday4N',
sum(Case when WEEKDAY='Tuesday' and WEEK=4 then DAY(Line) else 0 end) 'Tuesday4N',
sum(Case when WEEKDAY='Wednesday' and WEEK=4 then DAY(Line) else 0 end) 'Wednesday4N',
sum(Case when WEEKDAY='Thursday' and WEEK=4 then DAY(Line) else 0 end) 'Thursday4N',
sum(Case when WEEKDAY='Friday' and WEEK=4 then DAY(Line) else 0 end) 'Friday4N',
sum(Case when WEEKDAY='Saturday' and WEEK=5 then DAY(Line) else 0 end) 'Saturday5N',
sum(Case when WEEKDAY='Sunday' and WEEK=5 then DAY(Line) else 0 end) 'Sunday5N',
sum(Case when WEEKDAY='Monday' and WEEK=5 then DAY(Line) else 0 end) 'Monday5N',
sum(Case when WEEKDAY='Tuesday' and WEEK=5 then DAY(Line) else 0 end) 'Tuesday5N',
sum(Case when WEEKDAY='Wednesday' and WEEK=5 then DAY(Line) else 0 end) 'Wednesday5N',
sum(Case when WEEKDAY='Thursday' and WEEK=5 then DAY(Line) else 0 end) 'Thursday5N',
sum(Case when WEEKDAY='Friday' and WEEK=5 then DAY(Line) else 0 end) 'Friday5N',
sum(Case when WEEKDAY='Saturday' and WEEK=6 then DAY(Line) else 0 end) 'Saturday6N',
sum(Case when WEEKDAY='Sunday' and WEEK=6 then DAY(Line) else 0 end) 'Sunday6N',
sum(Case when WEEKDAY='Monday' and WEEK=6 then DAY(Line) else 0 end) 'Monday6N',
sum(Case when WEEKDAY='Tuesday' and WEEK=6 then DAY(Line) else 0 end) 'Tuesday6N',
sum(Case when WEEKDAY='Wednesday' and WEEK=6 then DAY(Line) else 0 end) 'Wednesday6N',
sum(Case when WEEKDAY='Thursday' and WEEK=6 then DAY(Line) else 0 end) 'Thursday6N',
sum(Case when WEEKDAY='Friday' and WEEK=6 then DAY(Line) else 0 end) 'Friday6N'

from(
	select D.Line,
	isnull(sum((Case when Flag=13 then 1. else -1. end)*TotalAfterDiscount),0)TotalAfterDiscount,
	isnull(sum((Case when Flag=13 then 1. else -1. end)*TotalCount),0)TotalCount,
	DATENAME(WEEKDAY,D.Line)WEEKDAY,DATENAME(WEEK,D.Line)-@Min+1 WEEK
	from dbo.MonthDays(@Month,@Year) D
	left join SalesMaster M on (M.DayDate=D.Line and Flag in(13,14) and (StoreId=0 or 0=0))
	and (StoreId=@StoreId or @StoreId=0)
	group by D.Line
)Tbl
GO
/****** Object:  StoredProcedure [dbo].[GetMSG]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMSG]
@ToUser bigint
--with encryption
as
update Employees set LastConnect=GETDATE() where Id=@ToUser

declare @tbl table(Line bigint)
insert into @tbl 
select Line from Messages 
where ToUser=@ToUser and Done=0
order by Daydate

update Messages set Done=1 where Line in (select t.Line from @tbl t)

select FromUser,ToUser,Details,Daydate 
from Messages
where ToUser=@ToUser 
and Line in (select t.Line from @tbl t)
order by Daydate
GO
/****** Object:  StoredProcedure [dbo].[GetMsgs]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMsgs]
(
@UserName bigint
)
--with encryption
as


declare @DefaultStore int=(select DefaultStore from Employees where Id=@UserName)


select 
cast(@UserName AS nvarchar(100))+';'+
cast(StoreId AS nvarchar(100))+';'+
cast(Flag AS nvarchar(100))+';'+
cast(InvoiceNo AS nvarchar(100))
Msg
from SalesMaster
where 
(
	(Flag=8 and ToId=@DefaultStore)
	or
	(Flag=14 and StoreId=@DefaultStore)
)
and 
cast(@UserName AS nvarchar(100))+';'+
cast(StoreId AS nvarchar(100))+';'+
cast(Flag AS nvarchar(100))+';'+
cast(InvoiceNo AS nvarchar(100))
not in(select Msg from MsgTbl)
GO
/****** Object:  StoredProcedure [dbo].[GetMyImages]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetMyImages]
(
@k1 nvarchar(100),
@k2 nvarchar(100),
@k3 nvarchar(100)
)
--with encryption
as
select I.*,C.Name ArName,C.EnName,year(GETDATE())-year(C.DateOfBirth) Age
from MyImages I
left join Cases C on(I.k1=C.Id)
where k1=@k1
and k2=@k2
and k3=@k3
GO
/****** Object:  StoredProcedure [dbo].[GetNewChat]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[GetNewChat]
@UserFromId bigint

as
select count(C.IsDelivered)
from Chat C
where C.UserToId=@UserFromId
and IsDelivered=0
GO
/****** Object:  StoredProcedure [dbo].[GetNewHefz]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetNewHefz]
--declare
@Flag int
as


declare @MaxCount int=30
declare @Count int=2
if @Flag=1 select @Count=4


declare @Date datetime=cast(getdate() as date)
declare @exists int=0
while @exists=0
begin

	if DATENAME(DW,@Date)='Friday'
	begin
		select @Date+=1
		continue
	end
	if exists(select Id from CriminalOfficialHolidays where @Date between FromDate and ToDate)
	begin
		select @Date+=1
		continue
	end

	if(@Count>0)
	begin
		select @Count-=1
		select @Date+=1
		continue
	end
	
	if exists(
		select count(InvoiceNo)
		from Hefz
		where DateNext=@Date
		having count(InvoiceNo)>=@MaxCount
	)
	begin
		select @Date+=1
		continue
	end
	
	select @exists=1
	select @Date
end
GO
/****** Object:  StoredProcedure [dbo].[GetNolonRemaining]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetNolonRemaining]
@DueDate datetime
--with encryption
as

select InvoiceNo,dbo.GetDriverName(DriverId)Drivername,Value,Payed,Remaining,Notes,cast(0 as bit) Done
from Nolon
where Remaining<>0 and Done=0 and DueDate=@DueDate
GO
/****** Object:  StoredProcedure [dbo].[GetNolonRemainingRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetNolonRemainingRPT]
@DueDate datetime
--with encryption
as

select *,dbo.GetDriverName(DriverId)Drivername
from Nolon
where Remaining<>0 and Done=0 and DueDate=@DueDate
GO
/****** Object:  StoredProcedure [dbo].[GetNonRecievedImportMessages]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetNonRecievedImportMessages]
--with encryption
as
select T.OrderTypeId,T.Id,T.InvoiceNo,T.ItemId,T.Price,T.NetQty,T2.* from ImportMessagesDetailsSub T
left join ImportMessagesDetailsSub2 T2 on T.InvoiceNo=T2.InvoiceNo and T.ItemId=T2.ItemId and T.Price=T2.Price
where T.NetQty<>T2.NetQty
order by T.OrderTypeId,T.Id
GO
/****** Object:  StoredProcedure [dbo].[GetNurseShiftSummary]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetNurseShiftSummary]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,dbo.GetEmpArName(EmpId)EmpArName
from NurseShiftSummary
where DayDate between @FromDate and @ToDate 
and (EmpId=@EmpId or @EmpId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetOccasionDisc]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOccasionDisc]
(
@ItemId bigint
)
--with encryption
as
SELECT OD.DiscPerc,OD.Discvalue
FROM Occasion O
left join OccasionDt OD on(O.InvoiceNo=OD.InvoiceNo)
where GETDATE() between 
DATEADD(MINUTE,FromMinute,DATEADD(HOUR,FromHour,FromDate)) 
and
DATEADD(MINUTE,ToMinute,DATEADD(HOUR,ToHour,ToDate))
and OD.ItemId=@ItemId
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomsAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOperationsRoomsAll]
--with encryption
as
select dbo.GetOperationRoomName(OperationsRoomId)OperationsRoomName,
dbo.GetCaseArName(CaseId)CaseArName,
dbo.GetOperationTypesName(OperationType)
+(case when OperationType2=0 then '' else ' - '+dbo.GetOperationTypesName(OperationType2) end)
+(case when OperationType3=0 then '' else ' - '+dbo.GetOperationTypesName(OperationType3) end)OperationTypesName,
dbo.GetEmpArName(SurgeonId)
+(case when SurgeonId2=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId2) end)
+(case when SurgeonId3=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId3) end)SurgeonName,
*
from ReservationsOperations
where DayDate>=CAST(GETDATE() as date)
and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomsAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOperationsRoomsAll2]
@CaseId bigint,
@OperationType int,
@SurgeonId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select dbo.GetOperationRoomName(OperationsRoomId)OperationsRoomName,
dbo.GetCaseArName(CaseId)CaseArName,
dbo.GetOperationTypesName(OperationType)
+(case when OperationType2=0 then '' else ' - '+dbo.GetOperationTypesName(OperationType2) end)
+(case when OperationType3=0 then '' else ' - '+dbo.GetOperationTypesName(OperationType3) end)OperationTypesName,
dbo.GetEmpArName(SurgeonId)
+(case when SurgeonId2=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId2) end)
+(case when SurgeonId3=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId3) end)
+(case when AnesthetistId=0 then '' else ' - تخدير: '+dbo.GetEmpArName(AnesthetistId) end)SurgeonName,
*
from ReservationsOperations
where DayDate between @FromDate and @ToDate
and Canceled=0
and (CaseId=@CaseId or @CaseId=0)
and (@OperationType in (OperationType,OperationType2,OperationType3) or @OperationType=0)
and (@SurgeonId in (SurgeonId,SurgeonId2,SurgeonId3,AnesthetistId) or @SurgeonId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomsAllPre]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOperationsRoomsAllPre]
--with encryption
as
select dbo.GetRoomName(RoomId)RoomName,
dbo.GetCaseArName(CaseId)CaseArName,
dbo.GetOperationTypesName(OperationType)
+(case when OperationType2=0 then '' else ' - '+dbo.GetOperationTypesName(OperationType2) end)
+(case when OperationType3=0 then '' else ' - '+dbo.GetOperationTypesName(OperationType3) end)OperationTypesName,
dbo.GetEmpArName(SurgeonId)
+(case when SurgeonId2=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId2) end)
+(case when SurgeonId3=0 then '' else ' - '+dbo.GetEmpArName(SurgeonId3) end)SurgeonName,
*
from ReservationsRooms
where DayDate>=CAST(GETDATE() as date)
and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[GetOperationsRoomschedule]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOperationsRoomschedule]
@OperationsRoomId bigint
--with encryption
as



select Id,Name,'السبت' day,(case when hh>12 then hh-12 else hh end)hh,(case when hh>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm,2)mm from OperationsRooms where Id=@OperationsRoomId and Saturday=1 union all
select Id,Name,'الأحد',(case when hh2>12 then hh2-12 else hh2 end)hh,(case when hh2>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm2,2) from OperationsRooms where Id=@OperationsRoomId and Sunday=1 union all
select Id,Name,'الإثنين',(case when hh3>12 then hh3-12 else hh3 end)hh,(case when hh3>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm3,2) from OperationsRooms where Id=@OperationsRoomId and Monday=1 union all
select Id,Name,'الثلاثاء',(case when hh4>12 then hh4-12 else hh4 end)hh,(case when hh4>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm4,2) from OperationsRooms where Id=@OperationsRoomId and Tuesday=1 union all
select Id,Name,'الأربعاء',(case when hh5>12 then hh5-12 else hh5 end)hh,(case when hh5>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm5,2) from OperationsRooms where Id=@OperationsRoomId and Wednesday=1 union all
select Id,Name,'الخميس',(case when hh6>12 then hh6-12 else hh6 end)hh,(case when hh6>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm6,2) from OperationsRooms where Id=@OperationsRoomId and Thursday=1 union all
select Id,Name,'الجمعة',(case when hh7>12 then hh7-12 else hh7 end)hh,(case when hh7>=12 then 'مساء' else 'صباحا' end)m,dbo.FillZero(mm7,2) from OperationsRooms where Id=@OperationsRoomId and Friday=1
GO
/****** Object:  StoredProcedure [dbo].[GetOutcomeDetailed]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOutcomeDetailed]
@LinkFile bigint,
@MainAccNo varchar(100),
@SubAccNo bigint,
@CostTypeId int,
@PurchaseAccNo int,
@ImportMessageId int,
@StoreId int,
@StoreInvoiceNo int,
@FromDate datetime,
@ToDate datetime
--with encryption
as

select dbo.GetSubAccNameLink(LinkFile,SubAccNo)SubAccName2,
InvoiceNo,DayDate,
(Case when Flag=1 then dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) else MainValue2 end) Db,
(Case when Flag=1 then MainValue2 else dbo.GetCheckPartialCollected(CheckNo,CheckTypeId,DayDate) end) Cr,
0 Cash,
'* '+
(case when CostTypeId<>1 then '' else ' - مصاريف إدارية' end)+
(case when PurchaseAccNo=0 then '' else dbo.GetOrderTypes(PurchaseAccNo)+' - ' end) +
(case when ImportMessageId='' then '' else 'رسالة: '+CAST(ImportMessageId as nvarchar(100))+' - ' end) +
(case when StoreId='' then '' else dbo.GetStoreName(StoreId)+' - ' end) +
(case when StoreInvoiceNo='' then '' else 'فاتورة: '+cast(StoreInvoiceNo as nvarchar(100))+' - ' end) 
SheekNo,
'' SheekPerson,null SheekDate,
'* '+Notes Notes,
(Case Flag 
	when 1 then 'مقبوضات' 
	when 2 then 'مدفوعات' end)'Rem',
cast(MainLinkFile as bigint),dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName
from BankCash_G2 T
where DayDate between @FromDate and @ToDate 
and Canceled=0
and (LinkFile=@LinkFile or @LinkFile=0)
and (SubAccNo=@SubAccNo or @SubAccNo=0)
and (CostTypeId=@CostTypeId or @CostTypeId=0)
and (PurchaseAccNo=@PurchaseAccNo or @PurchaseAccNo=0)
and (ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (StoreId=@StoreId or @StoreId=0)
and (StoreInvoiceNo=@StoreInvoiceNo or @StoreInvoiceNo=0)

union all

select dbo.GetSubAccName(MainAccNo,SubAccNo)SubAccName,
ED.InvoiceNo,E.DayDate,
ED.Debit Db,
ED.Credit Cr,
'',
'* '+
(case when CostTypeId<>1 then '' else ' - مصاريف إدارية' end)+
(case when PurchaseAccNo=0 then '' else dbo.GetOrderTypes(PurchaseAccNo)+' - ' end) +
(case when ImportMessageId='' then '' else 'رسالة: '+CAST(ImportMessageId as nvarchar(100))+' - ' end) +
(case when StoreId='' then '' else dbo.GetStoreName(StoreId)+' - ' end) +
(case when StoreInvoiceNo='' then '' else 'فاتورة: '+cast(StoreInvoiceNo as nvarchar(100))+' - ' end) 
,'','','* '+ED.Notes Notes,
dbo.getEntryTblName() 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and ED.InvoiceNo=E.InvoiceNo)
where E.DayDate between @FromDate and @ToDate 
and (MainAccNo=@MainAccNo or @MainAccNo='')
and (SubAccNo=@SubAccNo or @SubAccNo=0)
and (CostTypeId=@CostTypeId or @CostTypeId=0)
and (PurchaseAccNo=@PurchaseAccNo or @PurchaseAccNo=0)
and (ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (StoreId=@StoreId or @StoreId=0)
and (StoreInvoiceNo=@StoreInvoiceNo or @StoreInvoiceNo=0)

union all

select dbo.GetSubAccName(MainAccNo1,SubAccNo1)SubAccName,
InvoiceNo,DayDate,
Value Db,
0 Cr,
'',
'* '+
(case when CostTypeId<>1 then '' else ' - مصاريف إدارية' end)+
(case when PurchaseAccNo=0 then '' else dbo.GetOrderTypes(PurchaseAccNo)+' - ' end) +
(case when ImportMessageId='' then '' else 'رسالة: '+CAST(ImportMessageId as nvarchar(100))+' - ' end) +
(case when StoreId='' then '' else dbo.GetStoreName(StoreId)+' - ' end) +
(case when StoreInvoiceNo='' then '' else 'فاتورة: '+cast(StoreInvoiceNo as nvarchar(100))+' - ' end) 
,'','','* '+Notes Notes,
'تسويات نقدية' 'Rem',
MainAccNo2,dbo.GetMainAccName(MainAccNo2)MainAccName,SubAccNo2,dbo.GetSubAccName(MainAccNo2,SubAccNo2) SubAccName
from Entry2 T
where DayDate between @FromDate and @ToDate 
and IsCost1=1
and (MainAccNo1=@MainAccNo or @MainAccNo='') 
and (SubAccNo1=@SubAccNo or @SubAccNo=0)
and Canceled=0
and (CostTypeId=@CostTypeId or @CostTypeId=0)
and (PurchaseAccNo=@PurchaseAccNo or @PurchaseAccNo=0)
and (ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (StoreId=@StoreId or @StoreId=0)
and (StoreInvoiceNo=@StoreInvoiceNo or @StoreInvoiceNo=0)


union all

select dbo.GetSubAccName(MainAccNo2,SubAccNo2)SubAccName,
InvoiceNo,DayDate,
0 Db,
Value Cr,
'',
'* '+
(case when CostTypeId<>1 then '' else ' - مصاريف إدارية' end)+
(case when PurchaseAccNo=0 then '' else dbo.GetOrderTypes(PurchaseAccNo)+' - ' end) +
(case when ImportMessageId='' then '' else 'رسالة: '+CAST(ImportMessageId as nvarchar(100))+' - ' end) +
(case when StoreId='' then '' else dbo.GetStoreName(StoreId)+' - ' end) +
(case when StoreInvoiceNo='' then '' else 'فاتورة: '+cast(StoreInvoiceNo as nvarchar(100))+' - ' end) 
,'','','* '+Notes Notes,
'تسويات نقدية' 'Rem',
MainAccNo2,dbo.GetMainAccName(MainAccNo2)MainAccName,SubAccNo2,dbo.GetSubAccName(MainAccNo2,SubAccNo2) SubAccName
from Entry2 T
where DayDate between @FromDate and @ToDate 
and IsCost2=1
and (MainAccNo2=@MainAccNo or @MainAccNo='') 
and (SubAccNo2=@SubAccNo or @SubAccNo=0)
and Canceled=0
and (CostTypeId=@CostTypeId or @CostTypeId=0)
and (PurchaseAccNo=@PurchaseAccNo or @PurchaseAccNo=0)
and (ImportMessageId=@ImportMessageId or @ImportMessageId=0)
and (StoreId=@StoreId or @StoreId=0)
and (StoreInvoiceNo=@StoreInvoiceNo or @StoreInvoiceNo=0)
GO
/****** Object:  StoredProcedure [dbo].[GetOutcomeRPT]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetOutcomeRPT]
(
@FromDate datetime,
@ToDate datetime,
@MainAccNo varchar(100),
@SubAccNo bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint
)
--with encryption
as

select M.*,
dbo.GetMainAccName(M.MainAccNo) MainAccName,
isnull(dbo.GetSubAccName(M.MainAccNo,M.SubAccNo),'-') SubAccName
from OutCome M
where 
M.DayDate between @FromDate and @ToDate
and (M.MainAccNo=@MainAccNo or @MainAccNo='')
and (M.SubAccNo=@SubAccNo or @SubAccNo=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and Canceled=0
GO
/****** Object:  StoredProcedure [dbo].[getPL_CheckInOut]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getPL_CheckInOut]
@ConferenceId bigint
as

select T2.CustomerId,C.Code,C.Name,C.MobileNumber,C.WhatsappNumber,sum(Period)/60. PeriodInHours
from(
select T.ConferenceId,CustomerId,
datediff(minute,DayDate,
(
select isnull(min(TT.DayDate),20) 
from PL_CheckInOut TT
where TT.ConferenceId=T.ConferenceId  
and TT.CustomerId=T.CustomerId
and TT.Flag=2  
and TT.DayDate>T.DayDate  
and cast(TT.DayDate as DATE)=cast(T.DayDate as date)
))Period
from PL_CheckInOut T
where T.ConferenceId=@ConferenceId
and (T.Flag=1 or T.Flag is null)
)Tbl
left join PrintIDsHistory T2 on(T2.ConferenceId=Tbl.ConferenceId and T2.CustomerId=Tbl.CustomerId)
left join Customers C on (T2.CustomerId=C.Id)
group by T2.CustomerId,C.Code,C.Name,C.MobileNumber,C.WhatsappNumber
GO
/****** Object:  StoredProcedure [dbo].[getPL_CheckInOut2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getPL_CheckInOut2]
@ConferenceId bigint=1
as
select T.ConferenceId,T.CustomerId,C.code,C.Name CustomerName,C.MobileNumber,C.WhatsappNumber,T.DayDate CheckIn,
(
	select min(TT.DayDate) 
	from PL_CheckInOut TT
	where T.ConferenceId=TT.ConferenceId
	and T.CustomerId=TT.CustomerId
	and TT.Flag=2
	and TT.DayDate>T.DayDate
	and cast(TT.DayDate as DATE)=cast(T.DayDate as date)
) CheckOut
from PL_CheckInOut T
right join PrintIDsHistory T2 on(T2.ConferenceId=T.ConferenceId and T2.CustomerId=T.CustomerId)
left join Customers C on(C.Id=T.CustomerId)
where T2.ConferenceId=@ConferenceId
and (T.Flag=1 or T.Flag is null)
GO
/****** Object:  StoredProcedure [dbo].[getPLCustomers]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[getPLCustomers]
@CityId bigint,
@CountryId bigint,
@DegreeId bigint,
@SpecialtyId bigint,
@SponsorId bigint,
@SubSpecialtyId bigint,
@TitleId bigint,
@UniversityId bigint
as

select C.Id,C.Code,C.Name,C.MobileNumber,C.WhatsappNumber,C.Email,S.Name S_Name
from Customers C
left join Sponsors S on (C.SponsorId=S.Id)
where (CityId=@CityId or @CityId=0)
and (CountryId=@CountryId or @CountryId=0)
and (DegreeId=@DegreeId or @DegreeId=0)
and (SpecialtyId=@SpecialtyId or @SpecialtyId=0)
and (SponsorId=@SponsorId or @SponsorId=0)
and (SubSpecialtyId=@SubSpecialtyId or @SubSpecialtyId=0)
and (SubSpecialtyId=@SubSpecialtyId or @SubSpecialtyId=0)
and (TitleId=@TitleId or @TitleId=0)
and (UniversityId=@UniversityId or @UniversityId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetPregnancy]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetPregnancy]
as



declare @Path nvarchar(1000)='D:\ftp\Pregnancy\'

EXEC ('EXEC sp_configure ''show advanced options'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''Ole Automation Procedures'',1; ')
EXEC ('EXEC sp_configure ''xp_cmdshell'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''show advanced options'', 0; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')

declare @dir nvarchar(1000)='MD '+@Path
exec master.dbo.xp_cmdshell @dir,NO_OUTPUT

create table #tbl(AttachedName nvarchar(100),Line int identity)
insert #tbl(AttachedName)
SELECT cast(Id as nvarchar(100))+'.jpg' from Pregnancy


declare @x int=1,@max int=(select MAX(line) from #tbl)
while @x<=@max
begin
	declare @Name nvarchar(1000)=@Path+(select AttachedName from #tbl where Line=@x)
 DECLARE @isExists INT
	exec master.dbo.xp_fileexist @Name,@isExists OUTPUT
	if @isExists=1
	delete #tbl where Line=@x
	select @x+=1
end




DECLARE @SQLIMG VARCHAR(MAX),
 @IMG_PATH VARBINARY(MAX),
 @AttachedName VARCHAR(MAX),
 @TIMESTAMP nVARCHAR(4000),
 @ObjectToken INT

DECLARE IMGPATH CURSOR FAST_FORWARD FOR 
 SELECT Image,cast(Id as nvarchar(100))+'.jpg' 
 from Pregnancy 
 where cast(Id as nvarchar(100))+'.jpg' in(select AttachedName from #tbl)

OPEN IMGPATH 

FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName

WHILE @@FETCH_STATUS = 0
 BEGIN
 SET @TIMESTAMP = @Path+@AttachedName
 
 PRINT @TIMESTAMP
 PRINT @SQLIMG

 EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT
 EXEC sp_OASetProperty @ObjectToken, 'Type', 1
 EXEC sp_OAMethod @ObjectToken, 'Open'
 EXEC sp_OAMethod @ObjectToken, 'Write', NULL, @IMG_PATH
 EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, @TIMESTAMP, 2
 EXEC sp_OAMethod @ObjectToken, 'Close'
 EXEC sp_OADestroy @ObjectToken

 FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName
 END 

CLOSE IMGPATH
DEALLOCATE IMGPATH

drop table #tbl

SELECT Id,Name,cast(Id as nvarchar(100))+'.jpg' AttachedName from Pregnancy order by Id desc
GO
/****** Object:  StoredProcedure [dbo].[GetPreProductionOrder]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetPreProductionOrder]
@Flag int,
@FlagFlag int
--with encryption
as
select cast(ROW_NUMBER()over(order by T.Flag,T.InvoiceNo)as nvarchar(100))'م',
cast(T.Flag as nvarchar(100)) Flag,F.Name 'النوع',cast(T.StoreId as nvarchar(100)) StoreId,
cast(T.InvoiceNo as nvarchar(100)) 'المسلسل',dbo.ToStrDate(T.DayDate) 'التاريخ',
T.ItemId 'كود الصنف',It.Name 'اسم الصنف',cast(T.Qty as nvarchar(100)) 'الكمية',
T.Notes 'ملاحظات',
IsType1,IsType2
from ProductionItemCollectionMotionMaster T
left join ProductionItemCollectionMotionFlags F on(T.Flag=F.Id)
left join Items It on(T.ItemId=It.Id)
where NewInvoiceNo=0
and Temp=0
and (T.Flag=@Flag or @Flag=0)
and (F.Flag=@FlagFlag)
order by Flag,StoreId,InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[GetPrintCertificatesHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetPrintCertificatesHistory]
@ConferenceId bigint,
@SponsorId bigint
as

select T.*,C.Code,C.Name,C.MobileNumber,C.WhatsappNumber
from PrintCertificatesHistory T
left join Customers C on (T.CustomerId=C.Id)
where T.ConferenceId=@ConferenceId
and (C.SponsorId=@SponsorId or @SponsorId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetPrintIDsHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetPrintIDsHistory]
@ConferenceId bigint,
@SponsorId bigint
as

select T.ConferenceId,T.CustomerId,C.Code,C.Name,C.Email,C.MobileNumber,C.WhatsappNumber,max(T.Mygetdate)Mygetdate
from PrintIDsHistory T
left join Customers C on (T.CustomerId=C.Id)
where T.ConferenceId=@ConferenceId
and (C.SponsorId=@SponsorId or @SponsorId=0)
group by T.ConferenceId,T.CustomerId,C.Code,C.Name,C.Email,C.MobileNumber,C.WhatsappNumber
GO
/****** Object:  StoredProcedure [dbo].[GetProductionItemCollectionMotion]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetProductionItemCollectionMotion]
(
@MainFlag bigint,
@Flag bigint,
@StoreId nvarchar(100),
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@ItemId nvarchar(100),
@TypeId bigint,
@GroupId bigint,
@MachineId bigint,
@FromDate datetime,
@ToDate datetime
)
--with encryption
as


select M.StoreId MyStoreId,
dbo.GetStoreName(M.StoreId) MyStoreName,
M.DayDate M_DayDate,M.Flag MyFlag,M.InvoiceNo MyInvoiceNo,
M.ItemId MainItemId,
dbo.GetItemName(M.ItemId)MainItemName,
T.ItemId SubItemId,
M.Qty MainQty,
isnull(It.SalesPrice,0)SPrice,
M.Qty*isnull(It.SalesPrice,0)SValue,
isnull(dbo.GetItemProfit_TeacherPrifit(M.ItemId,M.DayDate)*M.Qty,0)TeacherPrifitTotal,
isnull(dbo.GetItemProfit_CompanyPrifit(M.ItemId,M.DayDate)*M.Qty,0)CompanyPrifitTotal,
M.MotionTypeId,
M.Temp,
M.Notes M_Notes,
T.*,
M.EmpId1,dbo.GetEmpArName(M.EmpId1)EmpName1,
M.EmpId2,dbo.GetEmpArName(M.EmpId2)EmpName2,
M.EmpId3,dbo.GetEmpArName(M.EmpId3)EmpName3,
M.EntryUser,dbo.GetEmpArName(M.EntryUser)EntryUserName,M.EntryDate,
M.SystemUser,dbo.GetEmpArName(M.SystemUser)SystemUserName,M.UpdateDate,
F.Name Flagname,
M.MachineId,
Mc.Name Mc_Name,
M.IsType1,M.IsType2,
t.TotalQty*dbo.GetItemLastCost(T.ItemId,M.DayDate,0,0,0)ItemLastCost0,
m.Qty*dbo.GetItemLastCost(M.ItemId,M.DayDate,0,0,0)ItemLastCost
from ProductionItemCollectionMotionMaster M
left join ProductionItemCollectionMotionDetailsTo T on(T.Flag=M.Flag and T.StoreId=M.StoreId and T.InvoiceNo=M.InvoiceNo)
left join ProductionItemCollectionMotionFlags F on(M.Flag=F.Id)
left join Items It on(It.Id=M.ItemId)
left join Machines Mc on(Mc.Id=M.MachineId)
where (F.Flag=@MainFlag or @MainFlag=0)
and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and M.DayDate between @FromDate and @ToDate
and (M.ItemId=@ItemId or @ItemId='')
and (It.TypeId=@TypeId or @TypeId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (M.MachineId=@MachineId or @MachineId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetProductionItemCollectionMotion2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetProductionItemCollectionMotion2]
(
@Flag bigint,
@FromDate datetime,
@ToDate datetime
)
as


select M.StoreId MyStoreId,
dbo.GetStoreName(M.StoreId) MyStoreName,
M.DayDate M_DayDate,M.Flag MyFlag,MM.InvoiceNo MyInvoiceNo,MM2.InvoiceNo MyInvoiceNo2,
M.ItemId MainItemId,
dbo.GetItemName(M.ItemId)MainItemName,
M.Qty MainQty,
isnull(It.SalesPrice,0)SPrice,
M.Qty *isnull(It.SalesPrice,0)SValue,
M.MotionTypeId,
M.InvoiceNo NewInvoiceNo,
M.Notes M_Notes,
F.Name Flagname
from ProductionItemCollectionMotionMaster M
left join ProductionItemCollectionMotionMaster MM on(M.Flag=MM.Flag+10 and M.StoreId=MM.StoreId and M.InvoiceNo=MM.NewInvoiceNo)
left join ProductionItemCollectionMotionMaster MM2 on(MM.Flag=MM2.Flag+30 and MM.StoreId=MM2.StoreId and MM.InvoiceNo=MM2.NewInvoiceNo)
left join ProductionItemCollectionMotionFlags F on(M.Flag=F.Id)
left join Items It on(It.Id=M.ItemId)
where M.Flag>=11
and M.Temp=0
and (M.Flag=@Flag or @Flag=0)
and M.DayDate between @FromDate and @ToDate
and MM2.InvoiceNo is not null
GO
/****** Object:  StoredProcedure [dbo].[GetProductionPlan]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetProductionPlan]
@InvoiceNo bigint
--with encryption
as

select M.InvoiceNo,M.FromDate,M.ToDate,M.Notes,
T.ItemId,T.ItemName,T.Qty,T.Line,isnull(Sum(TM.Qty),0)ActualQty,
T.Priority
from ProductionPlanMaster M
left join ProductionPlanDetails T on(T.InvoiceNo=M.InvoiceNo)
left join ProductionItemCollectionMotionMaster TM on(TM.Flag>40 and T.ItemId=TM.ItemId and TM.DayDate between M.FromDate and M.ToDate)
where M.InvoiceNo=@InvoiceNo
group by M.InvoiceNo,M.FromDate,M.ToDate,M.Notes,
T.ItemId,T.ItemName,T.Qty,T.Line,T.Priority
order by T.Line
GO
/****** Object:  StoredProcedure [dbo].[GetProfitRatio]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetProfitRatio]
@str nvarchar(4000)='',
@DateStr nvarchar(4000)=''
--with encryption
as

--declare @sql nvarchar(4000)='SELECT * FROM ProfitRatioDetails where ItemId in('''''+@str+')'
declare @sql nvarchar(4000)='SELECT * FROM dbo.Fn_ProfitRatioDetails('''+@DateStr+''') where ItemId in('''''+@str+')'
exec (@sql)
GO
/****** Object:  StoredProcedure [dbo].[GetProfitRatioDetails]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetProfitRatioDetails]
@FromDate datetime,
@ToDate datetime,
@ItemId nvarchar(100),
@TypeId bigint,
@GroupId bigint
--with encryption
as

select *,
isnull(TeacherPrifit*Qty,0)TeacherPrifitTotal,
isnull(CompanyPrifit*Qty,0)CompanyPrifitTotal,
isnull(TotalPrifit0*Qty,0)TotalPrifit
from
(
SELECT T.DayDate,TT.InvoiceNo,TT.ItemId,
(case when TT.Flag=13 then 1. else -1. end)*TT.Qty Qty,
TT.Price,
TT.Flag,
(case when TT.Flag=13 then 1. else -1. end)*TT.Value Value,
It.Id,It.Name ItemName,
dbo.GetItemProfit_TeacherPrifit(TT.ItemId,T.DayDate)TeacherPrifit,
dbo.GetItemProfit_CompanyPrifit(TT.ItemId,T.DayDate)CompanyPrifit,
dbo.GetItemProfit_TotalPrifit(TT.ItemId,T.DayDate)TotalPrifit0
FROM SalesDetails TT
left join SalesMaster T on(TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.InvoiceNo=T.InvoiceNo)
left join Items It on(TT.ItemId=It.Id)
where T.DayDate between @FromDate and @ToDate
and (TT.ItemId=@ItemId or @ItemId='')
and (It.TypeId=@TypeId or @TypeId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and TT.Flag in(13,14)
and T.Temp=0
)Tbl
GO
/****** Object:  StoredProcedure [dbo].[GetProfitRatioPayments]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetProfitRatioPayments]
@FromDate datetime,
@ToDate datetime,
@TypeId bigint,
@GroupId bigint
--with encryption
as

select Tbl.GroupId,dbo.GetGroupName(Tbl.GroupId)GroupName,
Tbl.TypeId,dbo.GetTypeName(Tbl.GroupId,Tbl.TypeId)TypeName,
Tbl.TeacherPrifitTotal,isnull(sum(TP.Value),0)Payed from
(
SELECT It.GroupId,It.TypeId,sum(isnull((case when TT.Flag=13 then 1. else -1. end)
*dbo.GetItemProfit_TeacherPrifit(TT.ItemId,T.DayDate)
*TT.Qty,0))TeacherPrifitTotal
FROM SalesDetails TT
left join SalesMaster T on(TT.Flag=T.Flag and TT.StoreId=T.StoreId and TT.InvoiceNo=T.InvoiceNo)
left join Items It on(TT.ItemId=It.Id)
where T.DayDate between @FromDate and @ToDate
and (It.TypeId=@TypeId or @TypeId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and TT.Flag in(13,14)
and T.Temp=0
and dbo.GetGroupName(It.GroupId) like '%Teachers%'
group by It.GroupId,It.TypeId
)Tbl
left join TeachersPayments TP on(TP.GroupId=Tbl.GroupId and TP.TypeId=Tbl.TypeId and TP.DayDate between @FromDate and @ToDate)
group by Tbl.GroupId,Tbl.TypeId,Tbl.TeacherPrifitTotal
GO
/****** Object:  StoredProcedure [dbo].[GetRefundSerialId]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRefundSerialId]
(
@Year bigint,
@SerialType bigint,
@SerialId bigint
)
--with encryption
as


select Returned from Reservations
where (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)
and ((@SerialId=SerialId and year(ReservationDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))
--and cast(ReservationDate as date)<>dbo.MyGetDate()
union all
select Returned from Services
where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType 
and ((@SerialId=SerialId and year(DayDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))
--and DayDate<>dbo.MyGetDate()
GO
/****** Object:  StoredProcedure [dbo].[getReplacement]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getReplacement]
@StoreId int,
@FromDate datetime,
@ToDate datetime
as

select ItemId,sum(Qty)Qty 
from(

	select ItemId,(Qty*UnitQty) Qty 
	from SalesDetails D 
	left join SalesFlags F on(D.Flag=F.Id) 
	where StoreId=@StoreId
	and F.ItemOut=1 
	and MyGetDate between @FromDate and @ToDate

	union All

	select ItemId,ConsumptionRemainingQty
	from SalesDetails D
	left join SalesMaster M on(M.StoreId=D.StoreId and M.Flag=D.Flag and M.InvoiceNo=D.InvoiceNo)
	where M.ToId=@StoreId
	and M.Flag=8
	and M.InvoiceNo=(select MAX(InvoiceNo) from SalesMaster where ToId=@StoreId and Flag=8)
	
)Tbl
group by ItemId
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo1]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationCbo1]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@All bigint
--with encryption
as
select *
from ReservationCbo1
where (EmpId=@EmpId or @EmpId=0)
and (@All=1 or
		(	
			DayDate between @FromDate and @ToDate
			and (ReservId>=@FromId or @FromId=0)
			and (ReservId<=@ToId or @ToId=0)
		)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationCbo2]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@All bigint
--with encryption
as
select *
from ReservationCbo2
where (EmpId=@EmpId or @EmpId=0)
and (@All=1 or
		(	
			DayDate between @FromDate and @ToDate
			and (ReservId>=@FromId or @FromId=0)
			and (ReservId<=@ToId or @ToId=0)
		)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo3]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationCbo3]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@CaseId bigint,
@All bigint
--with encryption
as
select *
from ReservationCbo3
where (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (@All=1 or
		(	
			DayDate between @FromDate and @ToDate
			and (ReservId>=@FromId or @FromId=0)
			and (ReservId<=@ToId or @ToId=0)
		)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo3Data]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationCbo3Data]
@CaseId int

as

select ReservId,dbo.ToStrDate(DayDate) DayDate,Notes1,Notes2 
from
(
select ReservId,DayDate,Notes1,Notes2 
from ReservationCbo3 
where EmpId=1
and CaseId=@CaseId

union 

select Id,cast(MyGetDate as DATE),Notes1,Notes2 
from CasesComplaintDt 
where CaseId=@CaseId
)Tbl
order by DayDate desc,ReservId
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo3Data_Distinct]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationCbo3Data_Distinct]
@CaseId int

as

select distinct dbo.ToStrDate(DayDate) DayDate
from
(
select ReservId,DayDate,Notes1,Notes2 
from ReservationCbo3 
where EmpId=1
and CaseId=@CaseId

union 

select Id,cast(MyGetDate as DATE),Notes1,Notes2 
from CasesComplaintDt 
where CaseId=@CaseId
)Tbl
order by dbo.ToStrDate(DayDate) desc
GO
/****** Object:  StoredProcedure [dbo].[GetReservationCbo4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationCbo4]
@CaseId int,
@Mykey int,
@MyFlag nvarchar(100),
@Id int
--with encryption
as
select *
from CasesComplaintDt
where CaseId=@CaseId
and Mykey=@Mykey
and MyFlag=@MyFlag
and Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetReservationONE]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationONE]
@EmpId bigint,
@Date datetime,
@Id bigint
--with encryption
as
select R.*,
dbo.GetEmpArName(EmpId) 'EmpName',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId))DepartmentName,
dbo.GetDegreeName(dbo.GetEmpDegreeId(EmpId))DegreeName,
dbo.GetCompanyName1(CompanyId)CompanyName,
st.PoneHeader,st.PoneComment
from Reservations R
cross join Statics st
where EmpId=@EmpId
and DayDate=@Date
and ReservId=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetReservationRays]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationRays]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@All bigint
--with encryption
as
select *
from ReservationRays
where (EmpId=@EmpId or @EmpId=0)
and (@All=1 or
		(	
			DayDate between @FromDate and @ToDate
			and (ReservId>=@FromId or @FromId=0)
			and (ReservId<=@ToId or @ToId=0)
		)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetReservations]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservations]
@EmpId bigint,
@CaseId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@All bigint
--with encryption
as
select *,dbo.GetEmpArName(EmpId) 'EmpName',dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName'
from Reservations
where (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (@All=1 or
		(	
			DayDate between @FromDate and @ToDate
			and (ReservId>=@FromId or @FromId=0)
			and (ReservId<=@ToId or @ToId=0)
		)
	)
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsClinicsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsClinicsONE]
@ClinicId bigint,
@Date datetime,
@Id bigint
--with encryption
as
select *,dbo.GetClinicName(ClinicId) 'ClinicName',dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName'
from ReservationsClinics
where ClinicId=@ClinicId
and DayDate=@Date
and ReservId=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsDepartments]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsDepartments]
(
@FromDate datetime,
@ToDate datetime,
@Canceled bigint,
@Returned bigint
)
--with encryption
as
select DayDate,dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName' ,SUM(Value) 'Value'
from Reservations
where DayDate between @FromDate and @ToDate
and @Canceled in(0,2)
and @Returned in(0,2)
group by DayDate,EmpId

union all

select CanceledDate DayDate,dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName' ,SUM(Value) 'Value'
from Reservations
where CanceledDate between @FromDate and @ToDate
and Canceled=1 
and @Canceled in(1,2)
group by CanceledDate,EmpId

union all

select ReturnedDate DayDate,dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName' ,SUM(Value) 'Value'
from Reservations
where ReturnedDate between @FromDate and @ToDate
and Returned=1 
and @Returned in(1,2)

group by ReturnedDate,EmpId
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsDoctors]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsDoctors]
@FromDate datetime,
@ToDate datetime,
@Canceled bigint,
@Returned bigint
--with encryption
as

select CancelFlag,SerialFlag,SerialIdType,ReservId,DayDate,Value,SerialId,EmpDepartment,EmpName,
ROW_NUMBER()over (partition by EmpName order by SerialIdType,SerialId,CancelFlag) ROWNUMBER
 from 
(
select 0 CancelFlag,1 SerialFlag,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
ReservId,ReservationDate DayDate,
Payed Value,SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetEmpArName(EmpId) 'EmpName'
from Reservations
where cast(ReservationDate as date) between @FromDate and @ToDate
and @Canceled in(0,2)
and @Returned in(0,2)

union all

select 0 CancelFlag,2 SerialFlag,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
ReservId,RemainingDate DayDate,
Remaining Value,SerialId2 SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetEmpArName(EmpId) 'EmpName'
from Reservations
where Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and @Canceled in(0,2)
and @Returned in(0,2)

union all--===========

select 1 CancelFlag,1 SerialFlag,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
ReservId,CanceledDate DayDate,
-Payed Value,SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetEmpArName(EmpId) 'EmpName'
from Reservations
where cast(CanceledDate as date) between @FromDate and @ToDate
and Canceled=1 
and @Canceled in(1,2)

union all

select 1 CancelFlag,2 SerialFlag,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
ReservId,CanceledDate DayDate,
-Remaining Value,SerialId2 SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetEmpArName(EmpId) 'EmpName'
from Reservations
where Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and Canceled=1 
and @Canceled in(1,2)

union all--===========

select 1 CancelFlag,1 SerialFlag,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
ReservId,ReturnedDate DayDate,
-Payed Value,SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetEmpArName(EmpId) 'EmpName'
from Reservations
where cast(ReturnedDate as date) between @FromDate and @ToDate
and Returned=1 
and @Returned in(1,2)

union all

select 1 CancelFlag,2 SerialFlag,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,
ReservId,ReturnedDate DayDate,
-Remaining Value,SerialId2 SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment',
dbo.GetEmpArName(EmpId) 'EmpName'
from Reservations
where Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and Returned=1 
and @Returned in(1,2)


--==================================================================================

union all 

--==================================================================================


select 0 CancelFlag,1 SerialFlag,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
InvoiceNo,DayDate,
Payed Value,SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) 'EmpDepartment',
dbo.GetEmpArName(DrId) 'EmpName'
from Services
where cast(DayDate as date) between @FromDate and @ToDate
and DrId<>0
and @Canceled in(0,2)
and @Returned in(0,2)

union all

select 0 CancelFlag,2 SerialFlag,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
InvoiceNo,RemainingDate DayDate,
Remaining Value,SerialId2 SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) 'EmpDepartment',
dbo.GetEmpArName(DrId) 'EmpName'
from Services
where Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and DrId<>0
and @Canceled in(0,2)
and @Returned in(0,2)

union all--=================

select 1 CancelFlag,1 SerialFlag,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
InvoiceNo,CanceledDate DayDate,
-Payed Value,SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) 'EmpDepartment',
dbo.GetEmpArName(DrId) 'EmpName'
from Services
where cast(CanceledDate as date) between @FromDate and @ToDate
and DrId<>0
and Canceled=1 
and @Canceled in(1,2)

union all

select 1 CancelFlag,2 SerialFlag,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
InvoiceNo,CanceledDate DayDate,
-Remaining Value,SerialId2 SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) 'EmpDepartment',
dbo.GetEmpArName(DrId) 'EmpName'
from Services
where Done=1
and cast(CanceledDate as date) between @FromDate and @ToDate
and DrId<>0
and Canceled=1 
and @Canceled in(1,2)

union all--=================

select 1 CancelFlag,1 SerialFlag,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
InvoiceNo,ReturnedDate DayDate,
-Payed Value,SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) 'EmpDepartment',
dbo.GetEmpArName(DrId) 'EmpName'
from Services
where cast(ReturnedDate as date) between @FromDate and @ToDate
and DrId<>0
and Returned=1 
and @Returned in(1,2)

union all

select 1 CancelFlag,2 SerialFlag,dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,
InvoiceNo,ReturnedDate DayDate,
-Remaining Value,SerialId2 SerialId,
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId)) 'EmpDepartment',
dbo.GetEmpArName(DrId) 'EmpName'
from Services
where Done=1
and cast(ReturnedDate as date) between @FromDate and @ToDate
and DrId<>0
and Returned=1 
and @Returned in(1,2)

)tbl
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsHistory]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsHistory]
@CaseId bigint
as

declare @EmpId int=1

select * from
(
select dbo.ToStrdate(DayDate)DayDate,ReservId,dbo.getVisitingTypesName(VisitingType)VisitingType,Value
from Reservations
where EmpId=@EmpId
and CaseId=@CaseId
)Tbl
order by DayDate desc,ReservId desc
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsMain]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsMain]
@EmpId bigint,
@CaseId bigint,
@UserId bigint,
@VisitingType bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@SerialType bigint,
@FromSerialId bigint,
@ToSerialId bigint
--with encryption
as
select 0 CancelFlag,1 SerialFlag,*,
dbo.GetEmpArName(EmpId) 'EmpName',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment'
from Reservations
where (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and cast(ReservationDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=0
and Returned=0
and (EmpIdReservation=@UserId or @UserId=0)

union all

select 0 CancelFlag,2 SerialFlag,*,
dbo.GetEmpArName(EmpId) 'EmpName',
dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'EmpDepartment'
from Reservations
where (EmpId=@EmpId or @EmpId=0)
and (CaseId=@CaseId or @CaseId=0)
and (VisitingType=@VisitingType or @VisitingType=0)
and (ReservId>=@FromId or @FromId=0)
and (ReservId<=@ToId or @ToId=0)
and (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=0
and Returned=0
and (EmpIdRemaining=@UserId or @UserId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsOperationsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsOperationsONE]
@OperationsRoomId bigint,
@Date datetime,
@Id bigint
--with encryption
as
select *,dbo.GetOperationRoomName(OperationsRoomId) 'OperationRoomName',
dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3) 'OperationTypeName'
from ReservationsOperations
where OperationsRoomId=@OperationsRoomId
and DayDate=@Date
and ReservId=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsDataAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsRoomsDataAll]
@FromDate datetime,
@ToDate datetime
--with encryption
as
select R.Name,D.*,
dbo.GetEmpArName(D.UserName)UserNameArName,
dbo.GetEmpArName(D.SurgeonId)DrArName,
dbo.GetRoomName(RoomId) 'RoomName',
dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3) 'OperationTypeName',
cast(D.HH1 as nvarchar(10))+':'+cast(D.MM1 as nvarchar(10))+(case when Index1=0 then ' AM' else ' PM' end) FromTime,
cast(D.HH2 as nvarchar(10))+':'+cast(D.MM2 as nvarchar(10))+(case when Index2=0 then ' AM' else ' PM' end) ToTime
from ReservationsRooms D
left join Rooms R on(D.RoomId=R.Id)
where D.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsDataAll2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsRoomsDataAll2]
--with encryption
as
select R.Name,D.*,
dbo.GetEmpArName(D.UserName)UserNameArName,
dbo.GetEmpArName(D.SurgeonId)DrArName,
dbo.GetRoomName(RoomId) 'RoomName',
dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3) 'OperationTypeName',
cast(D.HH1 as nvarchar(10))+':'+cast(D.MM1 as nvarchar(10))+(case when Index1=0 then ' AM' else ' PM' end) FromTime,
cast(D.HH2 as nvarchar(10))+':'+cast(D.MM2 as nvarchar(10))+(case when Index2=0 then ' AM' else ' PM' end) ToTime
from ReservationsRooms D
left join Rooms R on(D.RoomId=R.Id)
where DATEADD(HOUR,HH1+(case when Index1=1 and HH1<12 then 12 else 0 end),DATEADD(MINUTE,MM1,DayDate))>GETDATE()
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsDataAllCanceled]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsRoomsDataAllCanceled]
@FromDate datetime,
@ToDate datetime
--with encryption
as
select R.Name,D.*,
dbo.GetEmpArName(D.UserName)UserNameArName,
dbo.GetEmpArName(D.EmpIdCanceled)EmpIdCanceledArName,
dbo.GetEmpArName(D.SurgeonId)DrArName,
dbo.GetRoomName(RoomId) 'RoomName',
dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3) 'OperationTypeName',
cast(D.HH1 as nvarchar(10))+':'+cast(D.MM1 as nvarchar(10))+(case when Index1=0 then ' AM' else ' PM' end) FromTime,
cast(D.HH2 as nvarchar(10))+':'+cast(D.MM2 as nvarchar(10))+(case when Index2=0 then ' AM' else ' PM' end) ToTime
from ReservationsRoomsCanceled D
left join Rooms R on(D.RoomId=R.Id)
where D.CanceledDate between @FromDate and @ToDate+1
GO
/****** Object:  StoredProcedure [dbo].[GetReservationsRoomsONE]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationsRoomsONE]
@RoomId bigint,
@Date datetime,
@Id bigint
--with encryption
as
select *,dbo.GetRoomName(RoomId) 'RoomName',
dbo.GetOperationTypesName(OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3) 'OperationTypeName',
cast(HH1 as nvarchar(10))+':'+cast(MM1 as nvarchar(10))+(case when Index1=0 then ' AM' else ' PM' end) FromTime,
cast(HH2 as nvarchar(10))+':'+cast(MM2 as nvarchar(10))+(case when Index2=0 then ' AM' else ' PM' end) ToTime,
dbo.GetEmpArName(SurgeonId)SurgeonName
from ReservationsRooms
where RoomId=@RoomId
and DayDate=@Date
and ReservId=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetReservationTests]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetReservationTests]
@EmpId bigint,
@FromDate datetime,
@ToDate datetime,
@FromId bigint,
@ToId bigint,
@All bigint
--with encryption
as
select *
from ReservationTests
where (EmpId=@EmpId or @EmpId=0)
and (@All=1 or
		(	
			DayDate between @FromDate and @ToDate
			and (ReservId>=@FromId or @FromId=0)
			and (ReservId<=@ToId or @ToId=0)
		)
	)
order by Notes1,Notes2
GO
/****** Object:  StoredProcedure [dbo].[GetResetAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetResetAll]
@FromDate datetime,
@ToDate datetime
--with encryption
as

select Daydate,
sum (case when Flag=1 then 1 else 0 end)Flag1,
sum (case when Flag=2 then 1 else 0 end)Flag2,
sum (case when Flag=3 then 1 else 0 end)Flag3,
sum (case when Flag=4 then 1 else 0 end)Flag4,
sum (case when Flag=5 then 1 else 0 end)Flag5
from ResetData
where Daydate between @FromDate and @ToDate
group by Daydate
GO
/****** Object:  StoredProcedure [dbo].[GetRooms]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRooms]
--with encryption
as
select T.*,F.Id FloorId,F.Name FloorName 
from Rooms T
right join Floors F on(T.FloorId=F.Id)
order by F.Id ,T.Id
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRoomsDataAll]
--with encryption
as
select R.Name,D.*,
dbo.GetEmpArName(D.SurgeonId)DrArName,
dbo.GetOperationTypesName((select top 1 OperationId from CasesDetails T where T.CaseId=D.CaseId and T.TypeId>0 and T.DoctorId>0 and T.OperationId>0 order by Line desc))OperationTypesName,
dbo.GetCaseTypeName((select top 1 TypeId from CasesDetails T where T.CaseId=D.CaseId and T.TypeId>0 and T.DoctorId>0 and T.OperationId>0 order by Line desc))CaseTypeName,
I.Name InpatientDepartmentName,
ISS.name InpatientDepartmentsSubName,
RT.Name RT_Name,
(select SUM(Value) from RoomsDataPayments T where T.RoomId=D.RoomId and T.Id=D.Id and T.IsCurrent=1)Payment
from RoomsData D
left join Rooms R on(D.RoomId=R.Id)
left join RoomTypes RT on(RT.Id=R.RoomTypeId)
left join InpatientDepartments I on(I.Id=R.InpatientDepartmentId)
left join InpatientDepartmentsSub ISS on(ISS.InpatientDepartmentId=R.InpatientDepartmentId and ISS.Id=R.InpatientDepartmentsSubId)
where D.IsCurrent=1
and isnull(RoomId,0)>0
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataAllAll]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRoomsDataAllAll]
@FromDate datetime,
@ToDate datetime
--with encryption
as
select R.Name,D.*,
dbo.GetEmpArName(D.SurgeonId)DrArName,
dbo.GetEmpArName(D.UserName)UserNameArName,
dbo.GetEmpArName(D.ExitUserName)ExitUserNameArName,
dbo.GetOperationTypesName((select top 1 OperationId from CasesDetails T where T.CaseId=D.CaseId and T.TypeId>0 and T.DoctorId>0 and T.OperationId>0 order by Line desc))OperationTypesName,
dbo.GetCaseTypeName((select top 1 TypeId from CasesDetails T where T.CaseId=D.CaseId and T.TypeId>0 and T.DoctorId>0 and T.OperationId>0 order by Line desc))CaseTypeName
from RoomsData D
left join Rooms R on(D.RoomId=R.Id)
where D.DayDate between @FromDate and @ToDate
and isnull(RoomId,0)>0
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataOne]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRoomsDataOne]
@RoomId bigint,
@Id bigint
--with encryption
as
select *,
dbo.GetEmpName(SurgeonId)SurgeonName,
dbo.GetRoomName(RoomId)RoomName
from RoomsData 
where RoomId=@RoomId 
and Id=@Id 
and IsCurrent=1
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataPayment]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRoomsDataPayment]
@RoomId bigint,
@Id bigint,
@CurrentShift bigint,
@UserNameId int
--with encryption
as
select T.*,
dbo.GetEmpName(SurgeonId)SurgeonName,
dbo.GetRoomName(T.RoomId)RoomName,
P.MyMainLine,
P.Notes P_Notes,
P.Value P_Value,
P.Line P_Line
from RoomsData T
left join RoomsDataPayments P on(T.RoomId=P.RoomId and T.Id=P.Id and T.MyLine=P.MyMainLine)
where T.RoomId=@RoomId 
and T.Id=@Id 
and T.IsCurrent=1
and P.CurrentShift=@CurrentShift
and P.UserNameId=@UserNameId
and P.MyGetDate>DATEADD(second,-10,GETDATE())
GO
/****** Object:  StoredProcedure [dbo].[GetRoomsDataPayment4]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRoomsDataPayment4]
@Line bigint
--with encryption
as
select T.*,
dbo.GetEmpName(SurgeonId)SurgeonName,
dbo.GetRoomName(T.RoomId)RoomName,
P.MyMainLine,
P.Notes P_Notes,
P.Value P_Value,
P.Line P_Line
from RoomsData T
left join RoomsDataPayments P on(T.RoomId=P.RoomId and T.Id=P.Id and T.MyLine=P.MyMainLine)
where P.Line=@Line
GO
/****** Object:  StoredProcedure [dbo].[GetRoomTable]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetRoomTable]
@StoreId int,
@TblWeekDayId int
as

select (case when T.InvoiceNo is null then 0 else 1 end) IsExists,T.Flag,T.InvoiceNo,Tch.Name Tch_Name,
T.Notes,R.Id RoomId,W.Id W_Id,W.Name W_Name,OHFrom.Id OHFrom_Id,OHFrom.Name OHFrom_Name,TFrom.Id TFrom_Id,TFrom.Name TFrom_Name,TTo.Name TTo_Name 
from CenterRooms R 
cross join OpenningHours OHFrom
left join TblWeekDays W on(W.Id=@TblWeekDayId)
left join Stores St on(St.Id=@StoreId)
left join BankCash62 T on(OHFrom.Id>=T.OpenningHoursFrom and OHFrom.Id<T.OpenningHoursTo and T.StoreId=St.Id and T.RoomId=R.Id and W.Id=T.TblWeekDayId) 
left join OpenningHours TFrom on(TFrom.Id=T.OpenningHoursFrom) 
left join OpenningHours TTo on(TTo.Id=T.OpenningHoursTo) 
left join Teachers Tch on(Tch.Id=T.TeacherId)

where R.StoreId=@StoreId

order by W.Id,TFrom.Id
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as

select * ,
dbo.GetMandateTypesName(MandateTypeId)MandateTypeName,
dbo.GetEmpBanksName(EmpBankId)EmpBankName,
dbo.GetJobTypeName(JobTypeId)JobTypeName,
BasicSalary+
(
	select SUM(TotalValue*(CASE WHEN TypeId=2 THEN -1. ELSE 1. END)) 
	FROM Employees2TypeItemsSalary M 
	WHERE m.Emp2Id=t.Id
	and M.Month=T.Month
	and M.YEAR=T.Year
	--and ((M.TypeId=1 and M.MyType1Id in(1,4)) or @SummaryMonths=0)
	and 
	(
	(M.MainId=0 AND @SummaryMonths=0) or
	(M.MainId =1 and M.TypeId=1 and M.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
	(M.MainId =1 and M.TypeId=2 and M.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
	(M.MainId =2 and M.TypeId=1 and M.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
	(M.MainId =2 and M.TypeId=2 and M.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
	)

)
--+isnull((
--select SUM(Value)
--from Employees2AddingSalary M
--WHERE m.EmpId=t.Id
--and M.Month=T.Month
--and M.YEAR=T.Year
--group by EmpId
--),0)
---isnull((
--select SUM(Value)
--from Employees2DeductionOfAddingSalary M
--WHERE m.EmpId=t.Id
--and M.Month=T.Month
--and M.YEAR=T.Year
--group by EmpId
--),0)
VAL
from Employees2Salary T 
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE PROC [dbo].[GetSalaryEmp2Sub]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select T.* ,dbo.GetMyType2Name(T.MyType2Id)+T.Notes MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name
from Employees2TypeItemsSalary T
left join Employees2Salary E on(T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(T.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and T.Month=@Month
and T.YEAR=@Year
and (dbo.GetEmpIsAdvisor(T.Emp2Id)=1 or @SummaryMonths=0)
--and ((TypeId=1 and MyType1Id in(1,4)) or @SummaryMonths=0)
and T.TotalValue<>0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

union all

select @Month,@Year,Id,1,1,0,'الأجر الأساسى' ,1,BasicSalary,BasicSalary,3,null,null,'',dbo.GetMyType2Name(3)MyType2Name,
Name Emp2Name
from Employees2Salary
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(EmpBankId=@EmpBankId or @EmpBankId=0)
and(SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and Month=@Month
and YEAR=@Year
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)

union all

--select @Month,@Year,EmpId,0,1,90,GroupName+' - '+TypeName+' - '+Name,1,Value,Value,5,null,null,'',dbo.GetMyType2Name(5)MyType2Name,
--dbo.GetEmp2ArName(EmpId) Emp2Name
--from Employees2AddingSalary
--where(EmpId>=@FromEmpId or @FromEmpId=0)
--and(EmpId<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)

--union all

--select @Month,@Year,EmpId,0,1,91,'جملة الإضافي' ,1,SUM(Value),SUM(Value),5,null,null,'',dbo.GetMyType2Name(5)MyType2Name,
--dbo.GetEmp2ArName(EmpId) Emp2Name
--from Employees2AddingSalary
--where(EmpId>=@FromEmpId or @FromEmpId=0)
--and(EmpId<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)
--group by EmpId

--union all

--select @Month,@Year,EmpId,0,1,92,GroupName+' - '+TypeName+' - '+Name,1,-Value,-Value,5,null,null,'',dbo.GetMyType2Name(5)MyType2Name,
--dbo.GetEmp2ArName(EmpId) Emp2Name
--from Employees2DeductionOfAddingSalary
--where(EmpId>=@FromEmpId or @FromEmpId=0)
--and(EmpId<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)

--union all

--select @Month,@Year,EmpId,0,1,93,'جملة استقطاعات الإضافي' ,1,-SUM(Value),-SUM(Value),5,null,null,'',dbo.GetMyType2Name(5)MyType2Name,
--dbo.GetEmp2ArName(EmpId) Emp2Name
--from Employees2DeductionOfAddingSalary
--where(EmpId>=@FromEmpId or @FromEmpId=0)
--and(EmpId<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)
--group by EmpId

--union all

--select @Month,@Year,Id,1,1,94,'صافي الإضافي' ,1,T1.Value-T2.Value,T1.Value-T2.Value,5,null,null,'',dbo.GetMyType2Name(5)MyType2Name,
--Name Emp2Name
--from Employees2Salary T
--left join (
--select EmpId,SUM(Value)Value
--from Employees2AddingSalary
--where(EmpId>=@FromEmpId or @FromEmpId=0)
--and(EmpId<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)
--group by EmpId
--)T1 on(T.Id=T1.EmpId)

--left join (
--select EmpId,SUM(Value)Value
--from Employees2DeductionOfAddingSalary
--where(EmpId>=@FromEmpId or @FromEmpId=0)
--and(EmpId<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)
--group by EmpId
--)T2 on(T.Id=T2.EmpId)

--where(Id>=@FromEmpId or @FromEmpId=0)
--and(Id<=@ToEmpId or @ToEmpId=0)
--and(EmpBankId=@EmpBankId or @EmpBankId=0)
--and(SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
--and(MyEmpId=@MyEmpId or @MyEmpId=0)
--and (CAST(DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
--and (CAST(DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
--and Month=@Month
--and YEAR=@Year
--and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)


--union all

select @Month,@Year,Emp2Id,0,1,98,'جملة الاستحقاقات' ,1,isnull(sum(Value),0)+e.BasicSalary,isnull(sum(TotalValue),0)+e.BasicSalary,4,null,null,'',dbo.GetMyType2Name(4)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(e.EmpBankId=@EmpBankId or @EmpBankId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<=3
and @SummaryMonths2=0
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

group by Emp2Id,e.BasicSalary

union all

select @Month,@Year,Emp2Id,1,1,99,'جملة المستقطع' ,1,-sum(Value),-sum(TotalValue),4,null,null,'',dbo.GetMyType2Name(4)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(e.EmpBankId=@EmpBankId or @EmpBankId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=2
and @SummaryMonths2=0
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and @SummaryMonths=0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id



--==============================================================================


union all

select @Month,@Year,Emp2Id,0,2,99,'جملة المستقطع' ,1,sum(Value),sum(TotalValue),7,null,null,'',dbo.GetMyType2Name(4)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(e.EmpBankId=@EmpBankId or @EmpBankId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and t.TypeId=2
and @SummaryMonths2=0
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and @SummaryMonths=0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@TypeId int,
@Id int,
@MyEmpId int
--with encryption
as


select * ,dbo.GetMyType2Name(MyType2Id)+T.Notes MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,E.IsAdvisor
from Employees2TypeItemsSalary T
left join Employees2 E on(T.Emp2Id=E.Id)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and Month=@Month
and YEAR=@Year
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and ((TypeId=1 and MyType1Id in(1,4)) or @SummaryMonths=0)
and TotalValue<>0
and (T.Id=@Id or @Id=0)
and (E.MyEmpId=@MyEmpId or @MyEmpId=0)
and t.TypeId=2 
and 
(
@TypeId=0 or
(t.MainId =1 and @TypeId=1 and (t.Id=@Id or @Id=0))or
(t.MainId =2 and @TypeId=2 and (t.Id=@Id or @Id=0))
)
and 
(
t.MainId=0 or
(t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub25]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE PROC [dbo].[GetSalaryEmp2Sub25]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int
--with encryption
as


select * from(

select T.* ,dbo.GetMyType2Name(T.MyType2Id)+T.Notes MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo
from (
	select Month,Year,Emp2Id,MainId,TypeId,Id,Name,MyType1Id,Value,TotalValue,MyType2Id+1 MyType2Id,UserName,MyGetDate,Notes
	from Employees2TypeItemsSalary
	where (MainId=2 and typeid=1 and MyType2Id=1)
	union 
	select Month,Year,Emp2Id,MainId,TypeId,Id,Name,MyType1Id,Value,TotalValue,MyType2Id,UserName,MyGetDate,Notes
	from Employees2TypeItemsSalary
	where not (MainId=2 and typeid=1 and MyType2Id=1)
) T
left join Employees2Salary E on(T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(T.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(T.Emp2Id)=1 or @SummaryMonths=0)
--and ((TypeId=1 and MyType1Id in(1,4)) or @SummaryMonths=0)
and T.TotalValue<>0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

union all

--select T.Month,T.Year,T.EmpId,1,1,T.Id,T.GroupName+' - '+T.TypeName+' - '+T.Name,
--1,Value,Value,-3,1,null,T.Notes,'الإضافي',
--dbo.GetEmp2ArName(T.EmpId)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
--E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
--E.OrderNo
--from Employees2AddingSalary T
--left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
--where(T.EmpId>=@FromEmpId or @FromEmpId=0)
--and(T.EmpId<=@ToEmpId or @ToEmpId=0)
--and(
--	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
--	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0) and not(T.GroupId=1 and T.TypeId=6 and T.Id=0))
--	)
--and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
--and(E.CityId=@CityId or @CityId=0)
--and(E.TypeId=@TypeId2 or @TypeId2=0)
--and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
--and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
--and T.Month=@Month
--and T.YEAR=@Year
--and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
--and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
--and dbo.GetEmpIsAdvisor(T.EmpId)=1
--and @SummaryMonths=1
--and T.Value<>0

--union all

select @Month,@Year,Id,1,1,0,'الأجر الأساسى' ,1,BasicSalary,BasicSalary,3,null,null,'',dbo.GetMyType2Name(2)MyType2Name,
Name Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo
from Employees2Salary E
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and Month=@Month
and YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)


/*
union all

select @Month,@Year,Emp2Id,0,1,98,'جملة الاستحقاقات',1,
isnull(sum(Value),0)+e.BasicSalary,
isnull(sum(TotalValue),0)+e.BasicSalary,
1,null,null,'','جملة الاستحقاقات' MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<3
and @SummaryMonths2=0
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
--(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year,
E.CityId ,E.TypeId ,E.Employees2CircleId ,
E.OrderNo
*/


--==============================================================================


union all

select @Month,@Year,Emp2Id,0,2,99,'جملة المستقطع' ,1,sum(Value),sum(TotalValue),7,null,null,'',dbo.GetMyType2Name(7)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=2
and @SummaryMonths2=0
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and @SummaryMonths=0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),
E.CityId ,E.TypeId ,E.Employees2CircleId ,
E.OrderNo






union all





select @Month Month,@Year Year,Emp2Id,0 a,2 b,100 c,'اجمالي الاستحقاق' d,1 e,

isnull(sum(Value),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1 and not(TT.GroupId=1 and TT.TypeId=6 and TT.Id=0)),0) f,
isnull(sum(TotalValue),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1 and not(TT.GroupId=1 and TT.TypeId=6 and TT.Id=0)),0) g,

-2 h,null i,null j,'' k,
'اجمالي الاستحقاق' MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<=3
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and @SummaryMonths=1
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year,
E.CityId ,E.TypeId ,E.Employees2CircleId ,
E.OrderNo



union all
		






	SELECT Month,Year,Emp2Id,a,b,c,d,e,sum(f),sum(g),h,i,j,k,MyType2Name,Emp2Name,ISNULL(EmpBankNotes,'')EmpBankNotes,
	E_CityId ,E_TypeId ,E_Employees2CircleId ,
	OrderNo
		 FROM (
		select @Month Month,@Year Year,Emp2Id,0 a,2 b,100 c,'الصافي' d,1 e,
		
		isnull(sum(Value),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1 and not(TT.GroupId=1 and TT.TypeId=6 and TT.Id=0)),0) f,
		isnull(sum(TotalValue),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1 and not(TT.GroupId=1 and TT.TypeId=6 and TT.Id=0)),0) g,
		
		8 h,null i,null j,'' k,
		dbo.GetMyType2Name(8)MyType2Name,
		dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
		E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
		E.OrderNo
		from Employees2TypeItemsSalary t
		left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
		where(Emp2Id>=@FromEmpId or @FromEmpId=0)
		and(Emp2Id<=@ToEmpId or @ToEmpId=0)
		and(E.CityId=@CityId or @CityId=0)
		and(E.TypeId=@TypeId2 or @TypeId2=0)
		and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
		and(
			(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
			(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
			)
		and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
		and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
		and t.Month=@Month
		and t.YEAR=@Year
		and t.TypeId=1
		and MyType2Id<=3
		and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
		and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
		and @SummaryMonths2=0
		and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
		--and (MyType1Id in(1,4) or @SummaryMonths=0)
		and 
		(
		(t.MainId=0 AND @SummaryMonths=0) or
		(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
		--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
		(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
		--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
		)
		group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year,
		E.CityId ,E.TypeId ,E.Employees2CircleId ,
		E.OrderNo
		
		union all
		
		select @Month Month,@Year Year,Emp2Id,0 a,2 b,100 c,'الصافي' d,1 e,
		-sum(Value),-sum(TotalValue),
		8 h,null i,null j,'' k,
		dbo.GetMyType2Name(8)MyType2Name,
		dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
		E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
		E.OrderNo
		from Employees2TypeItemsSalary t
		left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
		where(Emp2Id>=@FromEmpId or @FromEmpId=0)
		and(Emp2Id<=@ToEmpId or @ToEmpId=0)
		and(E.CityId=@CityId or @CityId=0)
		and(E.TypeId=@TypeId2 or @TypeId2=0)
		and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
		and(
			(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
			(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
			)
		and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
		and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
		and t.Month=@Month
		and t.YEAR=@Year
		and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
		and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
		and t.TypeId=2
		and @SummaryMonths2=0
		and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
		--and @SummaryMonths=0
		and 
		(
		(t.MainId=0 AND @SummaryMonths=0) or
		(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
		(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
		(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
		(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
		)
		group by Emp2Id,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),
		E.CityId ,E.TypeId ,E.Employees2CircleId ,
		E.OrderNo


	)TBL2
	group by Month,Year,Emp2Id,a,b,c,d,e,h,i,j,k,MyType2Name,Emp2Name,ISNULL(EmpBankNotes,''),
	E_CityId ,E_TypeId ,E_Employees2CircleId ,
	OrderNo



)Tbl
where MyType2Id not in(4)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub25_2]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub25_2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as



select * from(

select T.* ,dbo.GetMyType2Name(T.MyType2Id)+T.Notes MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes
from Employees2TypeItemsSalary T
left join Employees2Salary E on(T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(T.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(T.Emp2Id)=1 or @SummaryMonths=0)
--and ((TypeId=1 and MyType1Id in(1,4)) or @SummaryMonths=0)
and T.TotalValue<>0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
1=2
)

union all

--select T.Month,T.Year,T.EmpId,1,1,T.Id,T.GroupName+' - '+T.TypeName+' - '+T.Name,
--1,Value,Value,-3,1,null,T.Notes,'الإضافي',
--dbo.GetEmp2ArName(T.EmpId)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes
--from Employees2AddingSalary T
--left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
--where(T.EmpId>=@FromEmpId or @FromEmpId=0)
--and(T.EmpId<=@ToEmpId or @ToEmpId=0)
--and(
--	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
--	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
--	)
--and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
--and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
--and T.Month=@Month
--and T.YEAR=@Year
--and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
--and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
--and dbo.GetEmpIsAdvisor(T.EmpId)=1
--and @SummaryMonths=1
--and T.Value<>0

--union all

select @Month,@Year,Id,1,1,0,'المرتب الأساسى' ,1,BasicSalary,BasicSalary,1,null,null,'',dbo.GetMyType2Name(1)MyType2Name,
Name Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes
from Employees2Salary E
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and Month=@Month
and YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)

union all

select @Month,@Year,Emp2Id,0,1,98,'أساسي + متغير',1,
isnull(sum(Value),0)+e.BasicSalary,
isnull(sum(TotalValue),0)+e.BasicSalary,
--+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=tt.Month and T.YEAR=tt.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1),0)

3,null,null,'',dbo.GetMyType2Name(3)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<3
and @SummaryMonths2=0
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
--(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year



--==============================================================================


union all





select @Month Month,@Year Year,Emp2Id,0 a,2 b,100 c,'اجمالي الاستحقاق' d,1 e,

isnull(sum(Value),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1),0) f,
isnull(sum(TotalValue),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1),0) g,

-2 h,null i,null j,'' k,
'اجمالي الاستحقاق' MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<=3
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and @SummaryMonths=1
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year


)Tbl
where MyType2Id not in(4)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub26]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub26]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name,
(case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end)EmpBankNotes
from Employees2AddingSalary T
left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)

union all

select 2 MyLine,T.EmpId,'إجمالي الإضافي','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name,
'' EmpBankNotes
from Employees2AddingSalary T
left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name,
(case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end)EmpBankNotes
from Employees2DeductionOfAddingSalary T
left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)


union all

select 4 MyLine,E.Id,'إجمالي استقطاعات الإضافي','',0,
isnull(sum(-T.Value),0),
dbo.GetEmp2ArName(E.Id)Emp2Name,
'' EmpBankNotes
from Employees2DeductionOfAddingSalary T
right join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
where(E.Id>=@FromEmpId or @FromEmpId=0)
and(E.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and E.Month=@Month
and E.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by E.Id



union all

select 5 MyLine,E.Id,'صافي الإضافي','',0,
isnull(T1.Value,0)+isnull(T2.Value,0),
dbo.GetEmp2ArName(E.Id)Emp2Name,
(case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end)EmpBankNotes
from Employees2Salary E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2AddingSalary T
	left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(
		(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
		(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
		)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select E.Id,sum(-T.Value)Value
	from Employees2DeductionOfAddingSalary T
	right join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
	where(E.Id>=@FromEmpId or @FromEmpId=0)
	and(E.Id<=@ToEmpId or @ToEmpId=0)
	and(
		(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
		(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
		)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and E.Month=@Month
	and E.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by E.Id
)T2
on(T2.Id=E.Id)
where E.Month=@Month
and E.Year=@Year
and (
	E.Id in(
				select T.EmpId
				from Employees2AddingSalary T
				left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(
					(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
					(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
					)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfAddingSalary T
				left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(
					(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
					(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
					)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2AddingSalary Tbl2
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(@SummaryMonths=0 and (Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0))
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub29]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub29]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select dbo.GetEmpSalaryNet(@Month,@Year,Id)'الصافي',
dbo.GetEmpSalaryNet2(@Month,@Year,Id)'صافي الإضافي',
dbo.GetEmpBanksName(EmpBankId)'جهة الصرف',
dbo.GetSalaryIndexName(SalaryIndexId)'الدور',
dbo.GetEmpArName(MyEmpId)'الموظف المسئول',
*
from Employees2 T
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub30]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE PROC [dbo].[GetSalaryEmp2Sub30]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select dbo.GetEmpSalaryNet3(@Month,@Year,Id)'الإجمالي العام',
dbo.GetEmpSalaryNet4(@Month,@Year,Id)'جملة الإضافي',
dbo.GetEmpSalaryNet5(@Month,@Year,Id)'دمغة شهر الصيف',
dbo.GetEmpBanksName(case when @SummaryMonths=1 then SummaryEmpBankId else EmpBankId end)'جهة الصرف',
dbo.GetSalaryIndexName(SalaryIndexId)'الدور',
dbo.GetEmpArName(MyEmpId)'الموظف المسئول',
*
from Employees2 T
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub33]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub33]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@isBonus1 int,
@isBonus2 int,
@isBonus3 int
--with encryption
as


select dbo.GetEmpSalaryNet3(@Month,@Year,Id)'الإجمالي العام',
dbo.GetEmpSalaryNet4(@Month,@Year,Id)'جملة الإضافي',
dbo.GetEmpSalaryNet5(@Month,@Year,Id)'دمغة شهر الصيف',
dbo.GetEmpBanksName(EmpBankId)'جهة الصرف',
dbo.GetSalaryIndexName(SalaryIndexId)'الدور',
dbo.GetEmpArName(MyEmpId)'الموظف المسئول',
(case when @isBonus1=1 then dbo.getSalaryEmployees2DirectBonus(T.Id) else 0 end)'مكافآة 1',
(case when @isBonus2=1 then dbo.getSalaryEmployees2DirectBonus2(T.Id) else 0 end)'مكافآة 2',
(case when @isBonus3=1 then dbo.getSalaryEmployees2DirectBonus3(T.Id) else 0 end)'مكافآة 3',
*
from Employees2 T
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub35]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub35]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int,
@JobTypeId int,
@MandateTypeId int
--with encryption
as



declare @tbl table(DocNo int,Sort decimal(12,2),Month int,Year int,ID int,Name nvarchar(1000),EmpBankNotes nvarchar(1000),S1 float,Title nvarchar(1000),
JobTypeId int,JobTypeName nvarchar(1000))


insert @tbl
select T.DocNo,Tbl.*,
T.JobTypeId,
dbo.GetJobTypeName(T.JobTypeId)JobTypeName
 from(
			select  0. Sort,Month,Year,ID,Name,EmpBankNotes,S1,'' Title from Employees2Salary where 1=2 
			union all
			----select  0.1 Sort,Month,Year,ID,Name,EmpBankNotes,BasicSalary,'الأساسي 9%' Title from Employees2Salary union all
			--select  0.2 Sort,Month,Year,ID,Name,EmpBankNotes,S11,'خاضع المتغير' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S1,'الأجر الوظيفي القديم' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S2,'7% دورية' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S3,'استثنائية' Title from Employees2Salary union all
			select  1 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S4,'الأجر الوظيفي الجديد' Title from Employees2Salary union all
			----select  -1 Sort,Month,Year,ID,Name,EmpBankNotes,(S5+S6)*(case when IsImprisonment=1 then 0.5 else 1. end),'نسبة 9%' Title from Employees2Salary where IsChildCare=1 union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S5,'الأساسي القديم' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S6,'9%' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S8,'الأجر الوظيفي الجديد' Title from Employees2Salary union all

			select  18.11 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S16,'حافز تميز' Title from Employees2Salary union all
			select  18.12 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S101,'حافز ماجيستير' Title from Employees2Salary union all
			
			select  19 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S9,'الأجر المكمل' Title from Employees2Salary union all
			select  20 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S10,'البند التعويضي' Title from Employees2Salary union all
			
			select  20.1 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S100,'حافز الإضافي' Title from Employees2Salary union all
			select  20.13 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S102,'حافز سائقين' Title from Employees2Salary union all
			
			----select  6.3 Sort,Month,Year,ID,Name,EmpBankNotes,S11,'الأجر المتغير' Title from Employees2Salary where IsChildCare=1 union all
			select  7 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S12,'حوافز' Title from Employees2Salary union all
			select  8 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S13,'أضافي' Title from Employees2Salary union all
			select  9 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S14,'50%' Title from Employees2Salary union all
			select  9.1 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S14_1,'5% حافز' Title from Employees2Salary union all
			
			select  38 Sort,Month,Year,ID,Name,EmpBankNotes,S17,'4% صحي' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S18,'المبلغ' Title from Employees2Salary union all
			--select  0 Sort,Month,Year,ID,Name,EmpBankNotes,S19,'المبلغ + 3%' Title from Employees2Salary union all
			select  39 Sort,Month,Year,ID,Name,EmpBankNotes,S20,'صندوق التكافل' Title from Employees2Salary union all
			
			----select  2 Sort,Month,Year,ID,Name,EmpBankNotes,S_1_1,'15%' Title from Employees2Salary union all
			----select  3.1 Sort,Month,Year,ID,Name,EmpBankNotes,S_1_2,'1%' Title from Employees2Salary union all
			----select  4 Sort,Month,Year,ID,Name,EmpBankNotes,S_1_3,'2%' Title from Employees2Salary union all
			----select  5 Sort,Month,Year,ID,Name,EmpBankNotes,S_1_4,'3%' Title from Employees2Salary union all
			----select  3 Sort,Month,Year,ID,Name,EmpBankNotes,S_1_5,'10%' Title from Employees2Salary union all
			----select  6.1 Sort,Month,Year,ID,Name,EmpBankNotes,S_1_6,'3%' Title from Employees2Salary union all
			
			----select  6.2/*12*/ Sort,Month,Year,ID,Name,EmpBankNotes,S_1_1+S_1_2+S_1_3+S_1_4+S_1_5+S_1_6,'جملة الأساسي' Title from Employees2Salary where IsChildCare=1 union all
			
			----select  26 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_1,'15%' Title from Employees2Salary union all
			----select  27 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_2,'10%' Title from Employees2Salary union all
			----select  28 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_3,'2%' Title from Employees2Salary union all
			----select  29 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_4,'3%' Title from Employees2Salary union all
			----select  30 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_5,'3%' Title from Employees2Salary union all
			----select  31 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_6,'1%' Title from Employees2Salary union all
			----select  32 Sort,Month,Year,ID,Name,EmpBankNotes,S_2_7,'1%' Title from Employees2Salary union all
			
			select  20.5 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S103,'إجمالي الأجر الشامل' Title from Employees2Salary union all
			
			select  20.60 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S15,'بدل علاج' Title from Employees2Salary where IsChildCare=0 union all
			select  20.61 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S28,'بدل تمثيل' Title from Employees2Salary union all
			select  20.62 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S21,'بدل جذب' Title from Employees2Salary where IsChildCare=0 union all
			select  20.63 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S22,'بدل وجبة' Title from Employees2Salary where IsChildCare=0 union all
			select  20.64 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S23,'بدل صرافة' Title from Employees2Salary where IsChildCare=0 union all
			--select  20.65 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S24,'خدمة مستشارين' Title from Employees2Salary where IsChildCare=0 union all
			select  20.66 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S25,'بدل نقدي' Title from Employees2Salary where IsChildCare=0 union all
			select  20.67 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S26,'بدل إقامة' Title from Employees2Salary where IsChildCare=0 union all
			select  20.68 Sort,Month,Year,ID,Name,EmpBankNotes,(case when IsHalfSalary=1 then 0.65 else 1. end)*S27,'بدل تفرغ' Title from Employees2Salary where IsChildCare=0  union all
			
			
			select  21 Sort,Month,Year,ID,Name,EmpBankNotes,S_3_1,'12% حصة حكومة عجز وشيخوخة' Title from Employees2Salary where IsChildCare=0 union all
			select  21.2 Sort,Month,Year,ID,Name,EmpBankNotes,S_3_2,'1% حصة حكومة مكافأة' Title from Employees2Salary where IsChildCare=0 union all
			select  21.1 Sort,Month,Year,ID,Name,EmpBankNotes,S_3_3,'3% حصة حكومة تأمين مرض' Title from Employees2Salary where IsChildCare=0 union all
			select  21.3 Sort,Month,Year,ID,Name,EmpBankNotes,S_3_4,'1.25% حصة حكومة إصابة عمل' Title from Employees2Salary where IsChildCare=0 union all
			select  22 Sort,Month,Year,ID,Name,EmpBankNotes,S_3_1+S_3_2+S_3_3+S_3_4,'جملة حصص التأمين والمعاش' Title from Employees2Salary where IsChildCare=0 union all
			
			--select  25 Sort,Month,Year,ID,Name,EmpBankNotes,S_3_1+S_3_2+S_3_3+S_3_4,'جملة المتغير' Title from Employees2Salary where IsChildCare=1 union all
			
			select  33 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_1,'12% حصة حكومة عجز وشيخوخة' Title from Employees2Salary union all
			select  33.1 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_2,'9% حصة مؤمن عليه عجز وشيخوخة' Title from Employees2Salary union all
			select  33.4 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_3,'3% حصة حكومة تأمين مرض' Title from Employees2Salary union all
			select  33.2 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_4,'1% حصة حكومة مكافأة' Title from Employees2Salary union all
			select  33.3 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_5,'1% حصة مؤمن عليه مكافأة' Title from Employees2Salary union all
			select  33.5 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_6,'1% حصة مؤمن عليه تأمين مرض' Title from Employees2Salary union all
			select  33.6 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_7,'1.25% حصة حكومة إصابة عمل' Title from Employees2Salary where IsChildCare=0 union all


			select  23 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_1,'12% حصة حكومة عجز وشيخوخة' Title from Employees2Salary where IsChildCare=1 union all
			select  23.1 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_2,'9% حصة مؤمن عليه عجز وشيخوخة' Title from Employees2Salary where IsChildCare=1 union all
			select  23.4 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_3,'3% حصة حكومة تأمين مرض' Title from Employees2Salary where IsChildCare=1 union all
			select  23.2 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_4,'1% حصة حكومة مكافأة' Title from Employees2Salary where IsChildCare=1 union all
			select  23.3 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_5,'1% حصة مؤمن عليه مكافأة' Title from Employees2Salary where IsChildCare=1 union all
			select  23.5 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_6,'1% حصة مؤمن عليه تأمين مرض' Title from Employees2Salary where IsChildCare=1 union all
			--select  23.6 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_7,'1.25%' Title from Employees2Salary union all
			select  23.8 Sort,Month,Year,ID,Name,EmpBankNotes,S_4_1+S_4_2+S_4_3+S_4_4+S_4_5+S_4_6,'جملة حصص التأمين والمعاش' Title from Employees2Salary where IsChildCare=1 union all

			----select  6.2 Sort,Month,Year,ID,Name,EmpBankNotes,S4_1,'إجمالي الأجر الوظيفي' Title from Employees2Salary where IsChildCare=0 union all
			----select  25.1 Sort,Month,Year,ID,Name,EmpBankNotes,S9_1,'إجمالي الأجر المكمل' Title from Employees2Salary where IsChildCare=0 union all
			
			select  25.2 Sort,Month,Year,ID,Name,EmpBankNotes,Total,'الإجمالي العام' Title from Employees2Salary where IsChildCare=0 union all
			select  40 Sort,Month,Year,ID,Name,EmpBankNotes,D1,'قسط أجازة بدون مرتب' Title from Employees2Salary union all
			select  41 Sort,Month,Year,ID,Name,EmpBankNotes,D2,'قسط أجازة' Title from Employees2Salary union all
			select  42 Sort,Month,Year,ID,Name,EmpBankNotes,D3,'مدة مشتراه' Title from Employees2Salary union all
			select  43 Sort,Month,Year,ID,Name,EmpBankNotes,D4,'شركة مصر للتأمين' Title from Employees2Salary union all
			select  44 Sort,Month,Year,ID,Name,EmpBankNotes,D5,'صندوق زمالة' Title from Employees2Salary union all
			select  45 Sort,Month,Year,ID,Name,EmpBankNotes,D6,'قسط إعارة' Title from Employees2Salary union all
			select  46 Sort,Month,Year,ID,Name,EmpBankNotes,D7,'صندوق الخدمة الاجتماعية - مكتب النائب العام' Title from Employees2Salary union all
			select  47 Sort,Month,Year,ID,Name,EmpBankNotes,D8,'صندوق إعانة اجتماعية' Title from Employees2Salary union all
			select  48 Sort,Month,Year,ID,Name,EmpBankNotes,D9,'مدة سابقة' Title from Employees2Salary union all
			select  49 Sort,Month,Year,ID,Name,EmpBankNotes,D11,'مدة اعتبارية' Title from Employees2Salary union all
			select  50 Sort,Month,Year,ID,Name,EmpBankNotes,D12,'ذوي الإعاقة' Title from Employees2Salary union all
			select  51 Sort,Month,Year,ID,Name,EmpBankNotes,D13,'صندوق تكريم الشهداء' Title from Employees2Salary union all
			select  10000001 Sort,Month,Year,ID,Name,EmpBankNotes,Damgha,'الدمغة' Title from Employees2Salary union all
			select  10000002 Sort,Month,Year,ID,Name,EmpBankNotes,Tax,'كسب العمل' Title from Employees2Salary union all
			
			select  0000 Sort,Month,Year,ID,Name,EmpBankNotes,S27,'null' Title from Employees2Salary where 1=2
			

)Tbl
left join Employees2Salary T on(Tbl.ID=T.ID and Tbl.Month=T.Month and Tbl.Year=T.Year)
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.CityId=@CityId or @CityId=0)
and(T.TypeId=@TypeId2 or @TypeId2=0)
and(T.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)

union all


select E.DocNo,T.GroupId*10000+T.TypeId*100+T.Id Sort,T.Month,T.Year,T.EmpId,E.Name,E.EmpBankNotes,T.Value,T.GroupName+' - '+T.TypeName+' - '+T.Name,
E.JobTypeId,
dbo.GetJobTypeName(E.JobTypeId)JobTypeName
from Employees2DeductionSalary T
left join Employees2Salary E on (T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
where(EmpId>=@FromEmpId or @FromEmpId=0)
and(EmpId<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and T.Month=@Month
and T.YEAR=@Year
and (dbo.GetEmpIsAdvisor(EmpId)=1 or @SummaryMonths=0)
and(E.JobTypeId=@JobTypeId or @JobTypeId=0)
and(E.MandateTypeId=@MandateTypeId or @MandateTypeId=0)

and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and E.Month=@Month
and E.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(E.JobTypeId=@JobTypeId or @JobTypeId=0)
and(E.MandateTypeId=@MandateTypeId or @MandateTypeId=0)





declare @GetSalaryEmp31Sub table(Month int,YEAR int,Emp2Id int,MainId int,TypeId int,Id int,Name nvarchar(1000),MyType1Id int,TotalValue float,MyType2Id int,UserName int,MyGetDate datetime,Notes nvarchar(1000),MyType2Name nvarchar(1000),Emp2Name nvarchar(1000),Net float)
insert @GetSalaryEmp31Sub
exec [dbo].[GetSalaryEmp31Sub] @Month,@Year,@FromEmpId,@ToEmpId,@SummaryMonths,@SummaryMonths2,@EmpBankId,@SalaryIndexId,@MyEmpId,@DocNoFrom,@DocNoTo,@JobTypeId,@MandateTypeId


select * 
from @tbl
where S1<>0

union 

select E.DocNo,10000003 Sort,@Month,@Year,Emp2Id,Emp2Name,E.EmpBankNotes,sum(TotalValue),(case when E.IsChildCare=1 then 'جملة حصص التأمين والمعاش' else 'جملة المستقطع' end),
E.JobTypeId,
dbo.GetJobTypeName(E.JobTypeId)JobTypeName
from @GetSalaryEmp31Sub T
left join Employees2Salary E on (T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where T.TypeId=2

and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and E.Month=@Month
and E.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(E.JobTypeId=@JobTypeId or @JobTypeId=0)
and(E.MandateTypeId=@MandateTypeId or @MandateTypeId=0)




group by E.DocNo,Emp2Id,Emp2Name,
E.JobTypeId,E.EmpBankNotes,E.IsChildCare


union 

select E.DocNo,10000004 Sort,@Month,@Year,T.Emp2Id,T.Emp2Name,E.EmpBankNotes,(case when E.IsChildCare=1 then 0 else E.Total-sum(T.TotalValue) end),'الصافي',
E.JobTypeId,
dbo.GetJobTypeName(E.JobTypeId)JobTypeName
from @GetSalaryEmp31Sub T
left join Employees2Salary E on (T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where T.TypeId=2

and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and E.Month=@Month
and E.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(E.JobTypeId=@JobTypeId or @JobTypeId=0)
and(E.MandateTypeId=@MandateTypeId or @MandateTypeId=0)



group by E.DocNo,Emp2Id,Emp2Name,Total,
E.JobTypeId,E.EmpBankNotes,E.IsChildCare
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub36]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub36]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SummaryEmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int,
@JobTypeId int,
@MandateTypeId int
--with encryption
as


select Tbl.*,
T.JobTypeId,
dbo.GetJobTypeName(T.JobTypeId)JobTypeName,
dbo.GetEmpBanksName(T.SummaryEmpBankId)SummaryEmpBankName
 from(
			select  0 Sort,Month,Year,ID,Name,SummaryEmpBankId,SummaryEmpBankNotes,S1,cast('' as nvarchar(1000)) Title from Employees2Salary where 1=2 
			union all
			select  1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K1,'الخاضع' Title from Employees2Salary union all
			select  2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K20,'المكافأة الإضافي' Title from Employees2Salary union all
			select  2.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K2,'المكافأة' Title from Employees2Salary union all
			select  3 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K3,'حصة حكومة 12%' Title from Employees2Salary union all
			select  4 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K4,'إصابة العمل 1%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K5,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K13,'1.25%' Title from Employees2Salary union all
			select  6 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K6,'الجملة' Title from Employees2Salary union all
			select  7 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K7,'حصة حكومة 12%' Title from Employees2Salary union all
			select  8 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K8,'مؤمن عليه 9%' Title from Employees2Salary union all
			select  9 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K9,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  10 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K10,'مؤمن عليه 1%' Title from Employees2Salary union all
			select  11 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K11,'إصابة العمل 1%' Title from Employees2Salary union all
			select  11.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K14,'1%' Title from Employees2Salary union all
			select  11.2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,K15,'1.25%' Title from Employees2Salary union all
			select  12 Sort,Month,Year,ID,Name,SummaryEmpBankId,EmpBankNotes,Damgha2,'الدمغة' Title from Employees2Salary union all
			select  13 Sort,Month,Year,ID,Name,SummaryEmpBankId,EmpBankNotes,Tax2,'المستقطع' Title from Employees2Salary union all
			select  14 Sort,Month,Year,ID,Name,SummaryEmpBankId,EmpBankNotes,Net2,'الصافي' Title from Employees2Salary 
)Tbl
left join Employees2Salary T on(Tbl.ID=T.ID and Tbl.Month=T.Month and Tbl.Year=T.Year)
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.CityId=@CityId or @CityId=0)
and(T.TypeId=@TypeId2 or @TypeId2=0)
and(T.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(T.SummaryEmpBankId=@SummaryEmpBankId or @SummaryEmpBankId=0)
and Tbl.S1<>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub37]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROC [dbo].[GetSalaryEmp2Sub37]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int,
@JobTypeId int,
@MandateTypeId int,
@NiabaId int
--with encryption
as


select Tbl.*,
T.JobTypeId,
dbo.GetJobTypeName(T.JobTypeId)JobTypeName,
dbo.GetEmpBanksName(T.EmpBankId)EmpBankName
 from(
			select  0. Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,S1,cast('' as nvarchar(1000)) Title from Employees2Salary where 1=2 
			union all
			select  1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L1,'الخاضع' Title from Employees2Salary union all
			select  2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L20,'المكافأة الإضافي' Title from Employees2Salary union all
			select  2.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L2,'المكافأة' Title from Employees2Salary union all
			select  3 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L3,'حصة حكومة 12%' Title from Employees2Salary union all
			select  4 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L4,'إصابة العمل 1%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L5,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L13,'1.25%' Title from Employees2Salary union all
			select  6 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L6,'الجملة' Title from Employees2Salary union all
			select  7 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L7,'حصة حكومة 12%' Title from Employees2Salary union all
			select  8 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L8,'مؤمن عليه 9%' Title from Employees2Salary union all
			select  9 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L9,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  10 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L10,'مؤمن عليه 1%' Title from Employees2Salary union all
			select  11 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L11,'إصابة العمل 1%' Title from Employees2Salary union all
			select  11.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L14,'1%' Title from Employees2Salary union all
			select  11.2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L15,'1.25%' Title from Employees2Salary union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,L12,'10% صندوق مكتب النائب العام' Title from Employees2Salary where IsL12=1 union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Damgha3,'الدمغة' Title from Employees2Salary union all
			select  13 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Tax3,'المستقطع' Title from Employees2Salary union all
			select  14 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Net3,'الصافي' Title from Employees2Salary 
)Tbl
left join Employees2Salary T on(Tbl.ID=T.ID and Tbl.Month=T.Month and Tbl.Year=T.Year)
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.CityId=@CityId or @CityId=0)
and(T.TypeId=@TypeId2 or @TypeId2=0)
and(T.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and(T.NiabaId=@NiabaId or @NiabaId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl.S1<>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub38]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROC [dbo].[GetSalaryEmp2Sub38]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int,
@JobTypeId int,
@MandateTypeId int,
@NiabaId int
--with encryption
as


select Tbl.*,
T.JobTypeId,
dbo.GetJobTypeName(T.JobTypeId)JobTypeName,
dbo.GetEmpBanksName(T.EmpBankId)EmpBankName
 from(
			select  0. Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,S1,cast('' as nvarchar(1000)) Title from Employees2Salary where 1=2 
			union all
			select  1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL1,'الخاضع' Title from Employees2Salary union all
			select  2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL20,'المكافأة الإضافي' Title from Employees2Salary union all
			select  2.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL2,'المكافأة' Title from Employees2Salary union all
			select  3 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL3,'حصة حكومة 12%' Title from Employees2Salary union all
			select  4 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL4,'إصابة العمل 1%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL5,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL13,'1.25%' Title from Employees2Salary union all
			select  6 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL6,'الجملة' Title from Employees2Salary union all
			select  7 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL7,'حصة حكومة 12%' Title from Employees2Salary union all
			select  8 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL8,'مؤمن عليه 9%' Title from Employees2Salary union all
			select  9 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL9,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  10 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL10,'مؤمن عليه 1%' Title from Employees2Salary union all
			select  11 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL11,'إصابة العمل 1%' Title from Employees2Salary union all
			select  11.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL14,'1%' Title from Employees2Salary union all
			select  11.2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL15,'1.25%' Title from Employees2Salary union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LL12,'10% صندوق مكتب النائب العام' Title from Employees2Salary where IsLL12=1 union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Damgha4,'الدمغة' Title from Employees2Salary union all
			select  13 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Tax4,'المستقطع' Title from Employees2Salary union all
			select  14 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Net4,'الصافي' Title from Employees2Salary 
)Tbl
left join Employees2Salary T on(Tbl.ID=T.ID and Tbl.Month=T.Month and Tbl.Year=T.Year)
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.CityId=@CityId or @CityId=0)
and(T.TypeId=@TypeId2 or @TypeId2=0)
and(T.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and(T.NiabaId=@NiabaId or @NiabaId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl.S1<>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub41]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub41]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int,
@JobTypeId int,
@MandateTypeId int,
@NiabaId int
--with encryption
as


select Tbl.*,
T.JobTypeId,
dbo.GetJobTypeName(T.JobTypeId)JobTypeName,
dbo.GetEmpBanksName(T.EmpBankId)EmpBankName
 from(
			select  0. Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,S1,cast('' as nvarchar(1000)) Title from Employees2Salary where 1=2 
			union all
			select  1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK1,'الخاضع' Title from Employees2Salary union all
			select  2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK20,'المكافأة الإضافي' Title from Employees2Salary union all
			select  2.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK2,'المكافأة' Title from Employees2Salary union all
			select  3 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK3,'حصة حكومة 12%' Title from Employees2Salary union all
			select  4 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK4,'إصابة العمل 1%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK5,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK13,'1.25%' Title from Employees2Salary union all
			select  6 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK6,'الجملة' Title from Employees2Salary union all
			select  7 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK7,'حصة حكومة 12%' Title from Employees2Salary union all
			select  8 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK8,'مؤمن عليه 9%' Title from Employees2Salary union all
			select  9 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK9,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  10 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK10,'مؤمن عليه 1%' Title from Employees2Salary union all
			select  11 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK11,'إصابة العمل 1%' Title from Employees2Salary union all
			select  11.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK14,'1%' Title from Employees2Salary union all
			select  11.2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK15,'1.25%' Title from Employees2Salary union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,KK12,'10% صندوق مكتب النائب العام' Title from Employees2Salary where IsL12=1 union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Damgha5,'الدمغة' Title from Employees2Salary union all
			select  13 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Tax5,'المستقطع' Title from Employees2Salary union all
			select  14 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Net5,'الصافي' Title from Employees2Salary 
)Tbl
left join Employees2Salary T on(Tbl.ID=T.ID and Tbl.Month=T.Month and Tbl.Year=T.Year)
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.CityId=@CityId or @CityId=0)
and(T.TypeId=@TypeId2 or @TypeId2=0)
and(T.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.EmpDepartmentDocNo3 AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.EmpDepartmentDocNo3 AS bigint)<=@DocNoTo or @DocNoTo=0)
and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and(T.NiabaId=@NiabaId or @NiabaId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl.S1<>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub44]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROC [dbo].[GetSalaryEmp2Sub44]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int,
@JobTypeId int,
@MandateTypeId int,
@NiabaId int
--with encryption
as


select Tbl.*,
T.JobTypeId,
dbo.GetJobTypeName(T.JobTypeId)JobTypeName,
dbo.GetEmpBanksName(T.EmpBankId)EmpBankName
 from(
			select  0. Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,S1,cast('' as nvarchar(1000)) Title from Employees2Salary where 1=2 
			union all
			select  1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL1,'الخاضع' Title from Employees2Salary union all
			select  2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL20,'المكافأة الإضافي' Title from Employees2Salary union all
			select  2.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL2,'المكافأة' Title from Employees2Salary union all
			select  3 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL3,'حصة حكومة 12%' Title from Employees2Salary union all
			select  4 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL4,'إصابة العمل 1%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL5,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  5 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL13,'1.25%' Title from Employees2Salary union all
			select  6 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL6,'الجملة' Title from Employees2Salary union all
			select  7 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL7,'حصة حكومة 12%' Title from Employees2Salary union all
			select  8 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL8,'مؤمن عليه 9%' Title from Employees2Salary union all
			select  9 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL9,'تأمين مرضي 3%' Title from Employees2Salary union all
			select  10 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL10,'مؤمن عليه 1%' Title from Employees2Salary union all
			select  11 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL11,'إصابة العمل 1%' Title from Employees2Salary union all
			select  11.1 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL14,'1%' Title from Employees2Salary union all
			select  11.2 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL15,'1.25%' Title from Employees2Salary union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,LLL12,'10% صندوق مكتب النائب العام' Title from Employees2Salary where IsLLL12=1 union all
			select  12 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Damgha6,'الدمغة' Title from Employees2Salary union all
			select  13 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Tax6,'المستقطع' Title from Employees2Salary union all
			select  14 Sort,Month,Year,ID,Name,EmpBankId,EmpBankNotes,Net6,'الصافي' Title from Employees2Salary 
)Tbl
left join Employees2Salary T on(Tbl.ID=T.ID and Tbl.Month=T.Month and Tbl.Year=T.Year)
where(T.Id>=@FromEmpId or @FromEmpId=0)
and(T.Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.CityId=@CityId or @CityId=0)
and(T.TypeId=@TypeId2 or @TypeId2=0)
and(T.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and(T.NiabaId=@NiabaId or @NiabaId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl.S1<>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2Sub46]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2Sub46]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int
--with encryption
as




select *,
C.Name E_CityName,
T.Name E_TypeName,
Cr.Name Employees2CircleName,
J.Name J_Name

from(

select T.* ,dbo.GetMyType2Name(T.MyType2Id)+T.Notes MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo2,E.JobTypeId E_JobTypeId
from Employees2TypeItemsSalary T
left join Employees2Salary E on(T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(T.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(T.Emp2Id)=1 or @SummaryMonths=0)
--and ((TypeId=1 and MyType1Id in(1,4)) or @SummaryMonths=0)
and T.TotalValue<>0
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

union all

select T.Month,T.Year,T.EmpId,1,1,T.Id,T.GroupName+' - '+T.TypeName+' - '+T.Name,
1,Value,Value,-3,1,null,T.Notes,'الإضافي',
dbo.GetEmp2ArName(T.EmpId)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo2,E.JobTypeId
from Employees2AddingSalary T
left join Employees2Salary E on(T.EmpId=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (T.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0) and not(T.GroupId=1 and T.TypeId=6 and T.Id=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and dbo.GetEmpIsAdvisor(T.EmpId)=1
and @SummaryMonths=1
and T.Value<>0

union all

select @Month,@Year,Id,1,1,0,'المرتب الأساسى' ,1,BasicSalary,BasicSalary,1,null,null,'',dbo.GetMyType2Name(1)MyType2Name,
Name Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo2,E.JobTypeId
from Employees2Salary E
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(MyEmpId=@MyEmpId or @MyEmpId=0)
and(SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and Month=@Month
and YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)

union all

select @Month,@Year,Emp2Id,0,1,98,'أساسي + متغير',1,
isnull(sum(Value),0)+e.BasicSalary,
isnull(sum(TotalValue),0)+e.BasicSalary,
3,null,null,'',dbo.GetMyType2Name(3)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo2,E.JobTypeId
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<3
and @SummaryMonths2=0
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
--(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year,
E.CityId ,E.TypeId ,E.Employees2CircleId ,
E.OrderNo2,E.JobTypeId



--==============================================================================


union all





select @Month Month,@Year Year,Emp2Id,0 a,2 b,100 c,'اجمالي الاستحقاق' d,1 e,

isnull(sum(Value),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1 and not(TT.GroupId=1 and TT.TypeId=6 and TT.Id=0)),0) f,
isnull(sum(TotalValue),0)+e.BasicSalary+isnull((select sum(Value) from Employees2AddingSalary TT where(T.Emp2Id=TT.EmpId)and T.Month=TT.Month and T.YEAR=TT.Year and dbo.GetEmpIsAdvisor(T.Emp2Id)=1 and @SummaryMonths=1 and not(TT.GroupId=1 and TT.TypeId=6 and TT.Id=0)),0) g,

-2 h,null i,null j,'' k,
'اجمالي الاستحقاق' MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),'')EmpBankNotes,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId,
E.OrderNo2,E.JobTypeId
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and(
	(@SummaryMonths=0 and (E.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<=3
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and @SummaryMonths=1
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
(t.MainId=0 AND @SummaryMonths=0) or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
--(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))--or
--(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id,e.BasicSalary,ISNULL((case when @SummaryMonths=1 then SummaryEmpBankNotes else EmpBankNotes end),''),T.Month,T.Year,
E.CityId ,E.TypeId ,E.Employees2CircleId ,
E.OrderNo2,E.JobTypeId


)Tbl
left join Employees2Cities C on(C.Id=E_CityId)
left join Employees2Types T on(T.Id=E_TypeId)
left join Employees2Circles Cr on(Cr.TypeId=E_TypeId and Cr.Id=E_Employees2CircleId)
left join JobTypes J on(J.Id=E_JobTypeId)

where MyType2Id not in(4)
and Not(MainId=2 and Tbl.TypeId=2 and Tbl.Id=11)

and OrderNo2<>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp2SubBack]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp2SubBack]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom bigint,
@DocNoTo bigint,
@CityId int,
@TypeId2 int, 
@Employees2CircleId int
--with encryption
as



select * from 
(


select T.* ,dbo.GetMyType2Name(T.MyType2Id)+T.Notes MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId
from Employees2TypeItemsSalary T
left join Employees2Salary E on(T.Emp2Id=E.Id and T.Month=E.Month and T.Year=E.Year)
where(T.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(T.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and(E.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(E.DocNo<=@DocNoTo or @DocNoTo=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and (dbo.GetEmpIsAdvisor(T.Emp2Id)=1 or @SummaryMonths=0)
--and ((TypeId=1 and MyType1Id in(1,4)) or @SummaryMonths=0)
and T.TotalValue<>0
and 
(
t.MainId=0 or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

union all

select @Month,@Year,Id,1,1,0,'المرتب الأساسى' ,1,BasicSalary,BasicSalary,1,null,null,'',dbo.GetMyType2Name(1)MyType2Name,
Name Emp2Name,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId
from Employees2Salary E
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and Month=@Month
and YEAR=@Year
and(E.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(E.DocNo<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)
and 1=2

union all

select @Month,@Year,Emp2Id,0,1,98,'الإجمالي العام' ,1,isnull(sum(Value),0)+e.BasicSalary,isnull(sum(TotalValue),0)+e.BasicSalary,3,null,null,'',dbo.GetMyType2Name(3)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.EmpBankId=@EmpBankId or @EmpBankId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=1
and MyType2Id<=3
and @SummaryMonths2=0
and(E.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(E.DocNo<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and (MyType1Id in(1,4) or @SummaryMonths=0)
and 
(
t.MainId=0 or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)

group by Emp2Id,e.BasicSalary,
E.CityId ,E.TypeId ,E.Employees2CircleId 

union all

select @Month,@Year,Emp2Id,1,1,99,'جملة المستقطع' ,1,-sum(Value),-sum(TotalValue),3,null,null,'',dbo.GetMyType2Name(3)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(e.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=2
and(E.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(E.DocNo<=@DocNoTo or @DocNoTo=0)
and @SummaryMonths2=0
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and @SummaryMonths=0
and 
(
t.MainId=0 or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id,
E.CityId ,E.TypeId ,E.Employees2CircleId 



--==============================================================================


union all

select @Month,@Year,Emp2Id,0,2,99,'جملة المستقطع' ,1,sum(Value),sum(TotalValue),6,null,null,'',dbo.GetMyType2Name(3)MyType2Name,
dbo.GetEmp2ArName(T.Emp2Id)Emp2Name,
E.CityId E_CityId ,E.TypeId E_TypeId ,E.Employees2CircleId E_Employees2CircleId
from Employees2TypeItemsSalary t
left join Employees2Salary e on(t.Emp2Id=e.Id and t.Month=e.Month and t.Year=e.Year)
where(Emp2Id>=@FromEmpId or @FromEmpId=0)
and(Emp2Id<=@ToEmpId or @ToEmpId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(e.EmpBankId=@EmpBankId or @EmpBankId=0)
and(e.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and(E.CityId=@CityId or @CityId=0)
and(E.TypeId=@TypeId2 or @TypeId2=0)
and(E.Employees2CircleId=@Employees2CircleId or @Employees2CircleId=0)
and t.Month=@Month
and t.YEAR=@Year
and t.TypeId=2
and @SummaryMonths2=0
and(E.DocNo>=@DocNoFrom or @DocNoFrom=0)
and(E.DocNo<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Emp2Id)=1 or @SummaryMonths=0)
--and @SummaryMonths=0
and 
(
t.MainId=0 or
(t.MainId =1 and t.TypeId=1 and t.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =1 and t.TypeId=2 and t.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=1 and t.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
(t.MainId =2 and t.TypeId=2 and t.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
)
group by Emp2Id,
E.CityId ,E.TypeId ,E.Employees2CircleId 


)Tbl
where not(TotalValue=0 or TypeId=1)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp31]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp31]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@JobTypeId int,
@MandateTypeId int
--with encryption
as

select * ,
dbo.GetMandateTypesName(MandateTypeId)MandateTypeName,
dbo.GetEmpBanksName(EmpBankId)EmpBankName,
dbo.GetJobTypeName(JobTypeId)JobTypeName,
BasicSalary+
(
	select SUM(TotalValue*(CASE WHEN TypeId=2 THEN -1. ELSE 1. END)) 
	FROM Employees2TypeItemsSalary M 
	WHERE m.Emp2Id=t.Id
	and M.Month=T.Month
	and M.YEAR=T.Year
	--and ((M.TypeId=1 and M.MyType1Id in(1,4)) or @SummaryMonths=0)
	and 
	(
	M.MainId=0 or
	(M.MainId =1 and M.TypeId=1 and M.Id in(select TT.Id from JobInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
	(M.MainId =1 and M.TypeId=2 and M.Id in(select TT.Id from JobOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
	(M.MainId =2 and M.TypeId=1 and M.Id in(select TT.Id from AgeInItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))or
	(M.MainId =2 and M.TypeId=2 and M.Id in(select TT.Id from AgeOutItems TT where ((@SummaryMonths=0 and TT.Flag in(0,1))or(@SummaryMonths=1 and TT.Flag in(0,2)))))
	)

)+(
select SUM(Value)
from Employees2AddingSalary M
WHERE m.EmpId=t.Id
and M.Month=T.Month
and M.YEAR=T.Year
group by EmpId
)-(
select SUM(Value)
from Employees2DeductionOfAddingSalary M
WHERE m.EmpId=t.Id
and M.Month=T.Month
and M.YEAR=T.Year
group by EmpId
)
VAL
from Employees2Salary T 
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)


and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp31Sub]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp31Sub]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@JobTypeId int,
@MandateTypeId int
--with encryption
as



select * into #GetSalaryEmp31Sub
from
(
select E.*
from (
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,1 Id,'الأجر الوظيفي الجديد' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S4 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
	
		--select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,6 Id,(case when IsChildCare=1 then 'جملة الأساسي' else 'جملة الأجر الوظيفي' end) Name,1 MyType1Id,S4_1 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,7 Id,'الأجر المكمل' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S9 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8 Id,'تعويضي' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S10 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.1 Id,'حافز مبالغ مقطوعة' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S100 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.2 Id,'حافز تميز' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S16 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.3 Id,'حافز ماجيستير' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S101 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.4 Id,'حافز سائقين' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S102 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.5 Id,'إجمالي الأجر الشامل' Name,1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*(case when IsChildCare=1 then 0. else 1. end)*S103 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.61 Id,'بدل علاج',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S15,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.62 Id,'بدل تمثيل',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S28,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.63 Id,'بدل جذب',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S21,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.64 Id,'بدل وجبة',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S22,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,8.65 Id,'بدل صرافة',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S23,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		--select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,6.6 Id,'خدمة مستشارين',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S24,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,6.7 Id,'بدل نقدي',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S25,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,6.8 Id,'بدل إقامة',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S26,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,6.9 Id,'بدل تفرغ',1 MyType1Id,(case when IsHalfSalary=1 then 0.65 else 1. end)*S27,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0  union all
		
		
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,9 Id,'حصة اشتراك 12%' Name,1 MyType1Id,S_3_1 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,10 Id,'اشتراك 3%' Name,1 MyType1Id,S_3_3 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,11 Id,'اشتراك 1%' Name,1 MyType1Id,S_3_2 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,12 Id,'اشتراك 1.25%' Name,1 MyType1Id,S_3_4 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,13 Id,(case when IsChildCare=1 then 'جملة المتغير' else 'جملة حصص التأمين والمعاش' end) Name,1 MyType1Id,S_3_1+S_3_2+S_3_3+S_3_4 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,1 Id,'حصة 12%' Name,1 MyType1Id,S_4_1 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,2 Id,'اشتراك 9%' Name,1 MyType1Id,S_4_2 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,3 Id,'اصابة 1%' Name,1 MyType1Id,S_4_4 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,4 Id,'اشتراك 1%' Name,1 MyType1Id,S_4_5 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,5 Id,'اشتراك 3%' Name,1 MyType1Id,S_4_3 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,5.1 Id,'1%' Name,1 MyType1Id,S_4_6 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
	
	
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,14 Id,'الإجمالي العام' Name,1 MyType1Id,Total TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all
		select Month,YEAR,Id Emp2Id,0 MainId,1 TypeId,14 Id,'الإجمالي العام' Name,1 MyType1Id,S_4_1+S_4_2+S_4_3+S_4_4+S_4_5+S_4_6 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=1 union all
		
		
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,20 Id,'حصة 12%' Name,1 MyType1Id,S_4_1 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,21 Id,'اشتراك 9%' Name,1 MyType1Id,S_4_2 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,22 Id,'اصابة 1%' Name,1 MyType1Id,S_4_4 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,23 Id,'اشتراك 1%' Name,1 MyType1Id,S_4_5 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,24 Id,'اشتراك 3%' Name,1 MyType1Id,S_4_3 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,24.1 Id,'1%' Name,1 MyType1Id,S_4_6 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,24.2 Id,'1.25%' Name,1 MyType1Id,S_4_7 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary where IsChildCare=0 union all

		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,25 Id,'4% صحي' Name,1 MyType1Id,S17 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,26 Id,'صندوق التكافل' Name,1 MyType1Id,S20 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,27 Id,'قسط أجازة بدون مرتب' Name,1 MyType1Id,D1 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,28 Id,'قسط أجازة' Name,1 MyType1Id,D2 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,29 Id,'مدة مشتراه' Name,1 MyType1Id,D3 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,30 Id,'شركة مصر للتأمين' Name,1 MyType1Id,D4 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,31 Id,'صندوق زمالة' Name,1 MyType1Id,D5 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,32 Id,'قسط إعارة' Name,1 MyType1Id,D6 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,33 Id,'صندوق الخدمة الاجتماعية - مكتب النائب العام' Name,1 MyType1Id,D7 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,34 Id,'صندوق إعانة اجتماعية' Name,1 MyType1Id,D8 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,35 Id,'مدة سابقة' Name,1 MyType1Id,D9 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,36 Id,'مدة اعتبارية' Name,1 MyType1Id,D11 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,37 Id,'ذوي الإعاقة' Name,1 MyType1Id,D12 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,38 Id,'صندوق تكريم الشهداء' Name,1 MyType1Id,D13 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		
		select Month,YEAR,Id Emp2Id,0 MainId,2 TypeId,0 Id,'--' Name,1 MyType1Id,0 TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary 
) E
left join Employees2Salary E2 on(E.Month=E2.Month and E.Year=E2.Year and E.Emp2Id=E2.Id)
where(E.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(E.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E2.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E2.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E2.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
--and(E2.MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(E2.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E2.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and E.Month=@Month
and E.YEAR=@Year
and(E2.JobTypeId=@JobTypeId or @JobTypeId=0)
and(E2.MandateTypeId=@MandateTypeId or @MandateTypeId=0)

union all

select @Month,@Year,E.EmpId,1,2,90,E.GroupName+' - '+E.TypeName+' - '+E.Name,1,E.Value,4,null,null,'',dbo.GetMyType2Name(4)MyType2Name,
dbo.GetEmp2ArName(E.EmpId) Emp2Name
from Employees2DeductionSalary E
left join Employees2Salary E2 on(E.Month=E2.Month and E.Year=E2.Year and E.EmpId=E2.Id)
where(E.EmpId>=@FromEmpId or @FromEmpId=0)
and(E.EmpId<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E2.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E2.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and E.Month=@Month
and E.YEAR=@Year
and (dbo.GetEmpIsAdvisor(E.EmpId)=1 or @SummaryMonths=0)

union all

select E.*
from (
		select Month,YEAR,Id Emp2Id,2 MainId,2 TypeId,0 Id,'الدمغة' Name,1 MyType1Id,Damgha TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary union all
		select Month,YEAR,Id Emp2Id,2 MainId,2 TypeId,0 Id,'كسب العمل' Name,1 MyType1Id,Tax TotalValue,1 MyType2Id,UserName,MyGetDate,Notes,'' MyType2Name,Name Emp2Name from Employees2Salary 
) E
left join Employees2Salary E2 on(E.Month=E2.Month and E.Year=E2.Year and E.Emp2Id=E2.Id)
where(E.Emp2Id>=@FromEmpId or @FromEmpId=0)
and(E.Emp2Id<=@ToEmpId or @ToEmpId=0)
and(
	(@SummaryMonths=0 and (E2.EmpBankId=@EmpBankId or @EmpBankId=0))or
	(@SummaryMonths=1 and (E2.SummaryEmpBankId=@EmpBankId or @EmpBankId=0))
	)
and(E2.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
--and(E2.MyEmpId=@MyEmpId or @MyEmpId=0)
and (CAST(E2.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E2.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and E.Month=@Month
and E.YEAR=@Year
and(E2.JobTypeId=@JobTypeId or @JobTypeId=0)
and(E2.MandateTypeId=@MandateTypeId or @MandateTypeId=0)

)Tbl


declare @Net float
select @Net=sum(case when TypeId=2 then -Totalvalue else Totalvalue end)
from #GetSalaryEmp31Sub
where (
		(TypeId=1 and Id in(1,3))or
		(TypeId=2)
		)
		


select *,@Net Net from #GetSalaryEmp31Sub

drop table #GetSalaryEmp31Sub
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp40]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[GetSalaryEmp40]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@JobTypeId int,
@MandateTypeId int
--with encryption
as

select * ,
dbo.GetMandateTypesName(MandateTypeId)MandateTypeName,
dbo.GetEmpBanksName(EmpBankId)EmpBankName,
dbo.GetJobTypeName(JobTypeId)JobTypeName
from Employees2Salary T 
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)


and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and S17=0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmp43]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmp43]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@JobTypeId int,
@JobType2Id int,
@JobType3Id int,
@MandateTypeId int,
@NiabaId int
--with encryption
as

select * ,
dbo.GetMandateTypesName(MandateTypeId)MandateTypeName,
dbo.GetEmpBanksName(EmpBankId)EmpBankName,
dbo.GetJobTypeName(JobTypeId)JobTypeName
from Employees2Salary T 
where(Id>=@FromEmpId or @FromEmpId=0)
and(Id<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(T.MyEmpId=@MyEmpId or @MyEmpId=0)
and(T.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(T.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(T.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
and (dbo.GetEmpIsAdvisor(Id)=1 or @SummaryMonths=0)
and T.IsStopped=0

and(T.JobTypeId=@JobTypeId or @JobTypeId=0)
and(T.JobType2Id=@JobType2Id or @JobType2Id=0)
and(T.JobType3Id=@JobType3Id or @JobType3Id=0)
and(T.MandateTypeId=@MandateTypeId or @MandateTypeId=0)
and(T.NiabaId=@NiabaId or @NiabaId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus]    Script Date: 2022-08-30 7:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[GetSalaryEmpDirectBonus]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)

union all

select 2 MyLine,T.EmpId,'إجمالي المكافأة','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)


union all

select 4 MyLine,T.EmpId,'جملة المستقطع','',0,
sum(-T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId



union all

select 5 MyLine,E.Id,'صافي المكافأة','',0,
T1.Value+T2.Value,
dbo.GetEmp2ArName(E.Id)Emp2Name
from Employees2 E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2DirectBonusSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select T.EmpId,sum(-T.Value)Value
	from Employees2DeductionOfDirectBonusSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T2
on(T2.EmpId=E.Id)
where (
	E.Id in(
				select T.EmpId
				from Employees2DirectBonusSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfDirectBonusSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2DirectBonusSalary Tbl2
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus_2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[GetSalaryEmpDirectBonus_2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonus2Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)

union all

select 2 MyLine,T.EmpId,'إجمالي المكافأة','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonus2Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonus2Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)


union all

select 4 MyLine,T.EmpId,'جملة المستقطع','',0,
sum(-T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonus2Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId



union all

select 5 MyLine,E.Id,'صافي المكافأة','',0,
T1.Value+T2.Value,
dbo.GetEmp2ArName(E.Id)Emp2Name
from Employees2 E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2DirectBonus2Salary T
	left join Employees2 E on(T.EmpId=E.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select T.EmpId,sum(-T.Value)Value
	from Employees2DeductionOfDirectBonus2Salary T
	left join Employees2 E on(T.EmpId=E.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T2
on(T2.EmpId=E.Id)
where (
	E.Id in(
				select T.EmpId
				from Employees2DirectBonus2Salary T
				left join Employees2 E on(T.EmpId=E.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfDirectBonus2Salary T
				left join Employees2 E on(T.EmpId=E.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2DirectBonus2Salary Tbl2
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus_3]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[GetSalaryEmpDirectBonus_3]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonus3Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)

union all

select 2 MyLine,T.EmpId,'إجمالي المكافأة','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonus3Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonus3Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)


union all

select 4 MyLine,T.EmpId,'جملة المستقطع','',0,
sum(-T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonus3Salary T
left join Employees2 E on(T.EmpId=E.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
group by T.EmpId



union all

select 5 MyLine,E.Id,'صافي المكافأة','',0,
T1.Value+T2.Value,
dbo.GetEmp2ArName(E.Id)Emp2Name
from Employees2 E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2DirectBonus3Salary T
	left join Employees2 E on(T.EmpId=E.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select T.EmpId,sum(-T.Value)Value
	from Employees2DeductionOfDirectBonus3Salary T
	left join Employees2 E on(T.EmpId=E.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	group by T.EmpId
)T2
on(T2.EmpId=E.Id)
where (
	E.Id in(
				select T.EmpId
				from Employees2DirectBonus3Salary T
				left join Employees2 E on(T.EmpId=E.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfDirectBonus3Salary T
				left join Employees2 E on(T.EmpId=E.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST(E.DocNo AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST(E.DocNo AS bigint)<=@DocNoTo or @DocNoTo=0)
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2DirectBonus3Salary Tbl2
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmpDirectBonus2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmpDirectBonus2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@EmpDepartmentId int,
@Flag0 int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag=@Flag0

union all

select 2 MyLine,T.EmpId,'إجمالي المكافأة','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag=@Flag0
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag=@Flag0

union all

select 4 MyLine,T.EmpId,'جملة المستقطع','',0,
sum(-T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfDirectBonusSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag=@Flag0
group by T.EmpId

union all

select 5 MyLine,E.Id,'صافي المكافأة','',0,
T1.Value+T2.Value,
dbo.GetEmp2ArName(E.Id)Emp2Name
from Employees2 E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2DirectBonusSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
	and TT.Flag=@Flag0
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select T.EmpId,sum(-T.Value)Value
	from Employees2DeductionOfDirectBonusSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
	and TT.Flag=@Flag0
	group by T.EmpId
)T2
on(T2.EmpId=E.Id)
where (
	E.Id in(
				select T.EmpId
				from Employees2DirectBonusSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
				and TT.Flag=@Flag0
			)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfDirectBonusSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
				and TT.Flag=@Flag0
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2DirectBonusSalary Tbl2
left join SalaryAddingGroups TT on(Tbl2.GroupId=TT.Id)
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
and TT.Flag=@Flag0
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmployees2Adding]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetSalaryEmployees2Adding]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@EmpDepartmentId int,
@Flag00 int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2AddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00

union all

select 2 MyLine,T.EmpId,'إجمالي المكافأة','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2AddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfAddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00

union all

select 4 MyLine,T.EmpId,'جملة المستقطع','',0,
sum(-T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfAddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00
group by T.EmpId

union all

select 5 MyLine,E.Id,'صافي المكافأة','',0,
T1.Value+T2.Value,
dbo.GetEmp2ArName(E.Id)Emp2Name
from Employees2 E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2AddingSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
	and TT.Flag00=@Flag00
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select T.EmpId,sum(-T.Value)Value
	from Employees2DeductionOfAddingSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
	and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
	and TT.Flag00=@Flag00
	group by T.EmpId
)T2
on(T2.EmpId=E.Id)
where (
	E.Id in(
				select T.EmpId
				from Employees2AddingSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
				and TT.Flag00=@Flag00
			)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfAddingSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)>=@DocNoFrom or @DocNoFrom=0)
				and (CAST((case when TT.Flag=1 then E.EmpDepartmentDocNo2 else E.EmpDepartmentDocNo end) AS bigint)<=@DocNoTo or @DocNoTo=0)
				and TT.Flag00=@Flag00
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2AddingSalary Tbl2
left join SalaryAddingGroups TT on(Tbl2.GroupId=TT.Id)
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
and TT.Flag00=@Flag00
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryEmployees2Adding2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[GetSalaryEmployees2Adding2]
@Month int,
@Year int,
@FromEmpId int,
@ToEmpId int,
@SummaryMonths int,
@SummaryMonths2 int,
@EmpBankId int,
@SalaryIndexId int,
@MyEmpId int,
@DocNoFrom int,
@DocNoTo int,
@EmpDepartmentId int,
@Flag00 int
--with encryption
as


select Tbl.*,Tbl22.Notes Tbl22_Notes from
(

select 1 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2AddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00

union all

select 2 MyLine,T.EmpId,'إجمالي المكافأة','',0,
sum(T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2AddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00
group by T.EmpId

union all

select 3 MyLine,T.EmpId,
T.GroupName+(case when T.TypeName='' then '' else ' - '+T.TypeName end)+(case when T.Name='' then '' else ' - '+T.Name end)ItemName,
T.Notes,T.EmpBankId,
-T.Value,
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfAddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00

union all

select 4 MyLine,T.EmpId,'جملة المستقطع','',0,
sum(-T.Value),
dbo.GetEmp2ArName(T.EmpId)Emp2Name
from Employees2DeductionOfAddingSalary T
left join Employees2 E on(T.EmpId=E.Id)
left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
where(T.EmpId>=@FromEmpId or @FromEmpId=0)
and(T.EmpId<=@ToEmpId or @ToEmpId=0)
and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
and T.Month=@Month
and T.YEAR=@Year
and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
and TT.Flag00=@Flag00
group by T.EmpId

union all

select 5 MyLine,E.Id,'صافي المكافأة','',0,
T1.Value+T2.Value,
dbo.GetEmp2ArName(E.Id)Emp2Name
from Employees2 E 
left join (
	select T.EmpId,sum(T.Value)Value
	from Employees2AddingSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
	and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
	and TT.Flag00=@Flag00
	group by T.EmpId
)T1
on(T1.EmpId=E.Id)
left join (
	select T.EmpId,sum(-T.Value)Value
	from Employees2DeductionOfAddingSalary T
	left join Employees2 E on(T.EmpId=E.Id)
	left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
	where(T.EmpId>=@FromEmpId or @FromEmpId=0)
	and(T.EmpId<=@ToEmpId or @ToEmpId=0)
	and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
	and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
	and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
	and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
	and T.Month=@Month
	and T.YEAR=@Year
	and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
	and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
	and TT.Flag00=@Flag00
	group by T.EmpId
)T2
on(T2.EmpId=E.Id)
where (
	E.Id in(
				select T.EmpId
				from Employees2AddingSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				left join SalaryAddingGroups TT on(T.GroupId=TT.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
				and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
				and TT.Flag00=@Flag00
			)
	or E.Id in(
				select T.EmpId
				from Employees2DeductionOfAddingSalary T
				left join Employees2 E on(T.EmpId=E.Id)
				left join SalaryDeductionGroups TT on(T.GroupId=TT.Id)
				where(T.EmpId>=@FromEmpId or @FromEmpId=0)
				and(T.EmpId<=@ToEmpId or @ToEmpId=0)
				and(T.EmpBankId=@EmpBankId or @EmpBankId=0)
				and(E.MyEmpId=@MyEmpId or @MyEmpId=0)
				and(E.EmpDepartmentId=@EmpDepartmentId or @EmpDepartmentId=0)
				and(E.SalaryIndexId=@SalaryIndexId or @SalaryIndexId=0)
				and T.Month=@Month
				and T.YEAR=@Year
				and (E.DocNo2>=@DocNoFrom or @DocNoFrom=0)
				and (E.DocNo2<=@DocNoTo or @DocNoTo=0)
				and TT.Flag00=@Flag00
	)
)

)Tbl
left join 
(
select EmpId,MAX(Notes)Notes
from Employees2AddingSalary Tbl2
left join SalaryAddingGroups TT on(Tbl2.GroupId=TT.Id)
where(Tbl2.EmpId>=@FromEmpId or @FromEmpId=0)
and(Tbl2.EmpId<=@ToEmpId or @ToEmpId=0)
and(Tbl2.EmpBankId=@EmpBankId or @EmpBankId=0)
and Tbl2.Month=@Month
and Tbl2.YEAR=@Year
and TT.Flag00=@Flag00
group by EmpId
)Tbl22 on(Tbl22.EmpId=Tbl.EmpId)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistory]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalaryHistory]
(
@EmpId bigint,
@Month bigint,
@Year bigint
)
--with encryption
as
select *,dbo.GetEmpName(EmpId) 'EmpName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName',
dbo.GetMainJobName(MainJobId) 'MainJobName',
dbo.GetSubJobName(MainJobId,SubJobId) 'SubJobName'
from SalaryHistory
where (EmpId=@EmpId or @EmpId=0)
and IsSalary=1
and MONTH=@Month and Year=@Year
and SalaryOnly = 1
and Doctor= 0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistory2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetSalaryHistory2]
(
@EmpId bigint,
@Month bigint,
@Year bigint
)
--with encryption
as
select *,dbo.GetEmpName(EmpId) 'EmpName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName',
dbo.GetMainJobName(MainJobId) 'MainJobName',
dbo.GetSubJobName(MainJobId,SubJobId) 'SubJobName'
from SalaryHistory
where (EmpId=@EmpId or @EmpId=0)
and IsSalary=1
and MONTH=@Month and Year=@Year
and SalaryOnly=1 
and Doctor= 0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistoryAllTax]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalaryHistoryAllTax]
(
@AccNo nvarchar(100),
@Period bigint,
@Year bigint
)
--with encryption
as
select *,dbo.GetEmpName(EmpId) 'EmpName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName' ,
dbo.GetEmpTaxAccNo(EmpId)TaxAccNo
from SalaryHistory
where ((ShiftsOnly=0 and Doctor=1) or ShiftsOnly=1) 
and Year=@Year
and (
	(MONTH in(1,2,3) and @Period=1) or
	(MONTH in(4,5,6) and @Period=2) or
	(MONTH in(7,8,9) and @Period=3) or
	(MONTH in(10,11,12) and @Period=4)
	)

and (dbo.GetEmpTaxAccNo(EmpId)=@AccNo or @AccNo='')

and
(Tax*
	(
	case when ShiftsOnly=1 then 
	ShiftCount*ShiftValue+(Income+Salary)
	else 
	(
	case when SalaryOrShifts=1 then 
	case when ShiftCount*ShiftValue>(CASE WHEN IsFreelancer=1 then Income*Salary/100 else Salary END) 
	then ShiftCount*ShiftValue else 
	(CASE WHEN IsFreelancer=1 then Income*Salary/100. else Salary END) 
	end
	else CASE WHEN IsFreelancer=1 then Income*Salary/100. else Salary END end
	)end
	)
)>0 
and
(
(
 ShiftsOnly=0 and Doctor=1 and Income <> 0
)

or 

(

 ShiftsOnly=1
 and 
 (
 ShiftCount*ShiftCount*ShiftValue <> 0
 or
 (Income+Salary)<>0
 )
)
)
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistoryNotShifts]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalaryHistoryNotShifts]
(
@Month bigint,
@Year bigint
)
--with encryption
as
select *,dbo.GetEmpName(EmpId) 'EmpName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName' 
from SalaryHistory
where ShiftsOnly=0 and MONTH=@Month and Year=@Year
and Doctor=1
and Income <> 0
GO
/****** Object:  StoredProcedure [dbo].[GetSalaryHistoryShifts]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalaryHistoryShifts]
(
@Month bigint,
@Year bigint
)
--with encryption
as
select *,dbo.GetEmpName(EmpId) 'EmpName',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(EmpId)) 'DepartmentName' 
from SalaryHistory
where ShiftsOnly=1 and MONTH=@Month and Year=@Year
and not
(
ShiftCount*ShiftCount*ShiftValue= 0
and
Income+Salary=0
)
GO
/****** Object:  StoredProcedure [dbo].[GetSales]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSales]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@NewItemsOnly bigint=0,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@PrintingGroupId bigint=0
)
--with encryption
as

--ماتنساش الفرع المحول إليه

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,S.PoneComment,S.PoneHeader
,U.EnName UserFullName,C.Name CashierName,Dv.Name DelivarymanName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
ToCs.Address,ToCs.Mobile,ToCs.Tel,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
--CC.Name ColorName,S1.Name SizeName
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId) Item_Name,
dbo.GetOrderTypes(M.OrderTypeId)OrderTypeName,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
CS.Name CostCenterName,
Ty.Name Ty_Name,
SRS.Name SRS_Name,
ToCs.MonthlyPaymentDay,
ToCs.MonthlyPayment
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Types Ty on(Ty.GroupId=It.GroupId and Ty.Id=It.TypeId)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Employees Dv on(M.DeliverymanId=Dv.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
--left join ColorsDetails CC on(It.ColorId=CC.ColorId)
--left join SizesDetails S1 on(It.SizeId=S1.SizeId)
--left join ItemSizes SS on(It.Id=SS.ItemId)

left join ItemSizes SS on(It.Id=SS.ItemId and SS.Id=D.Size)
left join SizesDetails S1 on(It.SizeId=S1.SizeId and S1.Id=D.Size)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)
left join SalesReturnStates SRS on(D.SalesReturnStateId=SRS.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (D.IsPrinted=0 or @NewItemsOnly=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)

and (
	M.Flag=@RPTFlag2 or
	@RPTFlag1=0 or
	(@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or
	(@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or
	(@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or
	(@RPTFlag1=7 and M.Flag between 19 and 20 and @RPTFlag2=0) or
	(@RPTFlag1=3 and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or
	(@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or
	(@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or
	(@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0)
	)
--order by D.ItemId,D.Color,D.Size



if @NewItemsOnly=1
update D set IsPrinted=1
from SalesDetails D
left join Items_View It on(D.ItemId=It.Id)

where (D.Flag=@Flag or @Flag=0)
and (D.StoreId=@StoreId or @StoreId=0)
and (D.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (D.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)
and (D.IsPrinted=0 or @NewItemsOnly=0)

------===================================================================
if @NewItemsOnly=0
update SalesMaster set IsCashierPrinted=1
where (Flag=@Flag or @Flag=0)
and (StoreId=@StoreId or @StoreId=0)
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (IsCashierPrinted=0 or @NewItemsOnly=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSales_H]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSales_H]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@NewItemsOnly bigint=0,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@PrintingGroupId bigint=0
)
--with encryption
as



declare @Bal0 float
select @Bal0=isnull(dbo.Bal0(dbo.GetMainAccNoLink((case when M.ReservToId=1 then 2 else 1 end),ToId),ToId,@FromDate,0,0,0),0)
from SalesMaster M
where M.DayDate =@FromDate 
and M.StoreId=@StoreId
and M.InvoiceNo=@FromInvoiceNo


--ماتنساش الفرع المحول إليه

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,S.PoneComment,S.PoneHeader
,U.EnName UserFullName,C.Name CashierName,Dv.Name DelivarymanName,
(case 
when M.ToId=0 then '-'
when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
ToCs.Address,ToCs.Mobile,ToCs.Tel,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
--CC.Name ColorName,S1.Name SizeName
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId) Item_Name,
dbo.GetOrderTypes(M.OrderTypeId)OrderTypeName,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
@Bal0 Bal0,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Employees W on(M.WaiterId=W.Id)
left join Employees Dv on(M.DeliverymanId=Dv.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
--left join ColorsDetails CC on(It.ColorId=CC.ColorId)
--left join SizesDetails S1 on(It.SizeId=S1.SizeId)
--left join ItemSizes SS on(It.Id=SS.ItemId)

left join ItemSizes SS on(It.Id=SS.ItemId and SS.Id=D.Size)
left join SizesDetails S1 on(It.SizeId=S1.SizeId and S1.Id=D.Size)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)
left join CostCenters Cs on(M.CostCenterId=Cs.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (D.IsPrinted=0 or @NewItemsOnly=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)

and (
	M.Flag=@RPTFlag2 or
	@RPTFlag1=0 or
	(@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or
	(@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or
	(@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or
	(@RPTFlag1=7 and M.Flag between 19 and 20 and @RPTFlag2=0) or
	(@RPTFlag1=3 and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or
	(@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or
	(@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or
	(@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0)
	)
order by D.ItemId,D.Color,D.Size



if @NewItemsOnly=1
update D set IsPrinted=1
from SalesDetails D
left join Items_View It on(D.ItemId=It.Id)

where (D.Flag=@Flag or @Flag=0)
and (D.StoreId=@StoreId or @StoreId=0)
and (D.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (D.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)
and (D.IsPrinted=0 or @NewItemsOnly=0)

------===================================================================
if @NewItemsOnly=0
update SalesMaster set IsCashierPrinted=1
where (Flag=@Flag or @Flag=0)
and (StoreId=@StoreId or @StoreId=0)
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (IsCashierPrinted=0 or @NewItemsOnly=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSales_Image]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSales_Image]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@NewItemsOnly bigint=0,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@PrintingGroupId bigint=0
)
--with encryption
as

--ماتنساش الفرع المحول إليه

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,S.PoneComment,S.PoneHeader
,U.EnName UserFullName,C.Name CashierName,Dv.Name DelivarymanName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
ToCs.Address,ToCs.Mobile,ToCs.Tel,
M.*,D.*,
It.Image,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
--CC.Name ColorName,S1.Name SizeName
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId)Item_Name,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Employees Dv on(M.DeliverymanId=Dv.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
--left join ColorsDetails CC on(It.ColorId=CC.ColorId)
--left join SizesDetails S1 on(It.SizeId=S1.SizeId)
--left join ItemSizes SS on(It.Id=SS.ItemId)

left join ItemSizes SS on(It.Id=SS.ItemId and SS.Id=D.Size)
left join SizesDetails S1 on(It.SizeId=S1.SizeId and S1.Id=D.Size)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (D.IsPrinted=0 or @NewItemsOnly=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)

and (
	@RPTFlag1=0 or
	((@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=7 and M.Flag between 19 and 20 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=3 and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )
	)

order by D.ItemId,D.Color,D.Size



if @NewItemsOnly=1
update D set IsPrinted=1
from SalesDetails D
left join Items_View It on(D.ItemId=It.Id)

where (D.Flag=@Flag or @Flag=0)
and (D.StoreId=@StoreId or @StoreId=0)
and (D.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (D.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)
and (D.IsPrinted=0 or @NewItemsOnly=0)

------===================================================================
if @NewItemsOnly=0
update SalesMaster set IsCashierPrinted=1
where (Flag=@Flag or @Flag=0)
and (StoreId=@StoreId or @StoreId=0)
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (IsCashierPrinted=0 or @NewItemsOnly=0)
GO
/****** Object:  StoredProcedure [dbo].[getSalesAttachments]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getSalesAttachments]
@FromDate datetime,
@ToDate datetime,
@Flag int
as
select T.*,M.*
from SalesAttachments T
left join SalesMaster M on(T.Flag=M.Flag and T.StoreId=M.StoreId and T.InvoiceNo=M.InvoiceNo)
Where T.Flag=@Flag
and M.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetSalesDeliveryDates]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesDeliveryDates]
(
@FromDate datetime,
@ToDate datetime
)
--with encryption
as

select M.Deliverydate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName,
M.InsertDate,IU.EnName InsertUserFullName,
U.EnName UserFullName,C.Name CashierName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizesDetailsName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorsDetailsName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
It.Name Item_Name,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees IU on(M.InsertUser=IU.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

where M.DeliveryDate between @FromDate and @ToDate
and M.Flag in(13,14,33,34)
and M.Temp=0
GO
/****** Object:  StoredProcedure [dbo].[GetSalesItemComponants]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesItemComponants]
(
@FromDate datetime,
@ToDate datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@NewItemsOnly bigint=0,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@PrintingGroupId bigint=0
)
--with encryption
as

--ماتنساش الفرع المحول إليه

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,S.PoneComment,S.PoneHeader
,U.EnName UserFullName,C.Name CashierName,Dv.Name DelivarymanName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
ToCs.Address,ToCs.Mobile,ToCs.Tel,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
isnull(IC.ItemId,D.ItemId)IC_ItemId,
isnull(IC.ItemName,D.ItemName)IC_ItemName,
isnull(IC.Qty,D.Qty)IC_Qty,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
G.Name G_Name,
CS.Name CostCenterName,
SRS.Name SRS_Name
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Groups G on(G.Id=It.GroupId)
left join SalesDetailsComponants IC on(IC.Flag=M.Flag and IC.StoreId=M.StoreId and IC.InvoiceNo=M.InvoiceNo and IC.MainItemId=D.ItemId)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Employees Dv on(M.DeliverymanId=Dv.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
--left join ColorsDetails CC on(It.ColorId=CC.ColorId)
--left join SizesDetails S1 on(It.SizeId=S1.SizeId)
--left join ItemSizes SS on(It.Id=SS.ItemId)

left join ItemSizes SS on(It.Id=SS.ItemId and SS.Id=D.Size)
left join SizesDetails S1 on(It.SizeId=S1.SizeId and S1.Id=D.Size)
left join SalesReturnStates SRS on(D.SalesReturnStateId=SRS.Id)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (D.IsPrinted=0 or @NewItemsOnly=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)

and (
	@RPTFlag1=0 or
	((@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=7 and M.Flag between 19 and 20 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=3 and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )
	)

order by D.ItemId,D.Color,D.Size


if @NewItemsOnly=1
update D set IsPrinted=1
from SalesDetails D
left join Items_View It on(D.ItemId=It.Id)

where (D.Flag=@Flag or @Flag=0)
and (D.StoreId=@StoreId or @StoreId=0)
and (D.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (D.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (It.PrintingGroupId=@PrintingGroupId or @PrintingGroupId=0)
and (D.IsPrinted=0 or @NewItemsOnly=0)

------===================================================================
if @NewItemsOnly=0
update SalesMaster set IsCashierPrinted=1
where (Flag=@Flag or @Flag=0)
and (StoreId=@StoreId or @StoreId=0)
and (InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)

and (IsCashierPrinted=0 or @NewItemsOnly=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalesItemComponantsSerial]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesItemComponantsSerial]
(
@StoreId bigint,
@Id int,
@SerialNo bigint
)
--with encryption
as

--ماتنساش الفرع المحول إليه

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,S.PoneComment,S.PoneHeader
,U.EnName UserFullName,C.Name CashierName,Dv.Name DelivarymanName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
ToCs.Address,ToCs.Mobile,ToCs.Tel,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
isnull(IC.ItemId,D.ItemId)IC_ItemId,
isnull(IC.ItemName,D.ItemName)IC_ItemName,
isnull(IC.Qty,D.Qty)IC_Qty,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join SalesDetailsComponants IC on(IC.Flag=M.Flag and IC.StoreId=M.StoreId and IC.InvoiceNo=M.InvoiceNo and IC.MainItemId=D.ItemId)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Employees Dv on(M.DeliverymanId=Dv.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
--left join ColorsDetails CC on(It.ColorId=CC.ColorId)
--left join SizesDetails S1 on(It.SizeId=S1.SizeId)
--left join ItemSizes SS on(It.Id=SS.ItemId)

left join ItemSizes SS on(It.Id=SS.ItemId and SS.Id=D.Size)
left join SizesDetails S1 on(It.SizeId=S1.SizeId and S1.Id=D.Size)
where (M.StoreId=@StoreId or @StoreId=0)
and (
	(@Id=1 and M.Flag in(/*2,*/9,29)) or
	(@Id=2 and M.Flag in(8)) or
	(@Id=3 and M.Flag in(13,/*4,*/10,30)) or
	(@Id=5 and M.Flag in(14))
	)
and D.SerialNo=@SerialNo

order by D.ItemId,D.Color,D.Size
GO
/****** Object:  StoredProcedure [dbo].[getSalesMaster]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


 
CREATE proc [dbo].[getSalesMaster]
@FromDate datetime,
@ToDate datetime
as

select M.StoreId ,St.Name StoreName ,M.Flag,F.Name FlagName,M.InvoiceNo,dbo.ToStrDate(M.DayDate) DayDate,M.ToId ,C.Name ToName ,
M.TotalAfterDiscount ,
(select sum(D.Qty) from SalesDetails D where M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)Qty,
M.Total,
M.DiscountValue,
(select sum(D.amount) from SalesDetailsTaxableItems D where M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)TaxAmount, 
ETA.*
from SalesMaster M
left join Stores St on (M.StoreId=St.Id)
left join Customers C on (M.ToId=C.Id)
left join Currencies Cr on (M.CurrencyId=Cr.Id)
left join SalesFlags F on (M.Flag=F.Id)
left join SalesMasterETA ETA on(ETA.StoreId=M.StoreId and ETA.Flag=M.Flag and ETA.InvoiceNo=M.InvoiceNo)
where M.Flag in(13,14,33,34)
and M.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[getSalesMasterPreProd]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



 
CREATE proc [dbo].[getSalesMasterPreProd]
@FromDate datetime,
@ToDate datetime
as

select M.StoreId ,St.Name StoreName ,M.Flag,F.Name FlagName,M.InvoiceNo,dbo.ToStrDate(M.DayDate) DayDate,M.ToId ,C.Name ToName ,
M.TotalAfterDiscount ,
(select sum(D.Qty) from SalesDetails D where M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)Qty,
M.Total,
M.DiscountValue,
(select sum(D.amount) from SalesDetailsTaxableItems D where M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)TaxAmount, 
ETA.*
from SalesMaster M
left join Stores St on (M.StoreId=St.Id)
left join Customers C on (M.ToId=C.Id)
left join Currencies Cr on (M.CurrencyId=Cr.Id)
left join SalesFlags F on (M.Flag=F.Id)
left join SalesMasterETAPreProd ETA on(ETA.StoreId=M.StoreId and ETA.Flag=M.Flag and ETA.InvoiceNo=M.InvoiceNo)
where M.Flag in(13,14,33,34)
and M.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetSalesReturn]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesReturn]
(
@FromDate datetime,
@ToDate datetime,
@StoreId bigint
)
--with encryption
as

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName,
M.InsertDate,IU.EnName InsertUserFullName,
U.EnName UserFullName,C.Name CashierName,
(case 
when M.ToId=0 then '-'
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,28,29,30)) then ToCs.Name
end) ToName,
M.*,D.*,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId)Item_Name,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
D.Qty*(case D.UnitId when 0 then It.PurchasePrice when 1 then It.PurchasePriceSub when 2 then It.PurchasePriceSub2 else 0 end) ItemPurchaseValue,
M2.InvoiceNo M2_InvoiceNo,
M2.DayDate M2_DayDate,
M2.TotalAfterDiscount M2_TotalAfterDiscount,
P.Name ReturnPaymentType_Name,
P2.Name SalesPaymentType_Name
from SalesMaster M
left join SalesPaymentTypes P on(M.PaymentType=P.Id)
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesMaster M2 on(M2.Flag=13 and M2.StoreId=D.StoreId and M2.InvoiceNo=D.SalesInvoiceNo)
left join SalesPaymentTypes P2 on(M2.PaymentType=P2.Id)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees IU on(M.InsertUser=IU.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)

where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and (M.Flag=14)
and (M.StoreId=@StoreId or @StoreId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetSalesRPT]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesRPT]
(
@FromDate datetime,
@ToDate datetime,
@ToDate2 datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@CashierId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@IsClosedOnly bigint=0,
@ToId bigint=0,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@WaiterId bigint=0,
@SalesTypeId int=0,
@IsService int=0,
@CostCenterId bigint=0
)
--with encryption
as


declare @MyCurrencyExchange table(CurrencyId int,Exchange float)
insert @MyCurrencyExchange
select Id,dbo.GetCurrencyExchange(0,0,Id,0,@ToDate)
from Currencies



select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName,
M.InsertDate,IU.EnName InsertUserFullName,
U.EnName UserFullName,C.Name CashierName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,28,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,28,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizesDetailsName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorsDetailsName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId)Item_Name,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
(case when @RPTFlag1=30 then D.Qty*dbo.GetItemLastCost(D.ItemId,M.DayDate,1,D.ProductionOrderFlag,D.ProductionOrderNo) else 0 end)ItemLastCost,
D.Qty*(case D.UnitId when 0 then It.PurchasePrice when 1 then It.PurchasePriceSub when 2 then It.PurchasePriceSub2 else 0 end) ItemPurchaseValue,
CS.Name CostCenterName,
CE.Exchange CE_Exchange,
isnull(Ins.AddedValue,0)AddedValue,isnull(Ins.NetValue,0)-isnull(Ins.AddedValue,0)-isnull(Ins.TotalValue,0) InsProfit
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees IU on(M.InsertUser=IU.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)

left join InstallmentInvoicesMaster Ins on(M.Flag=13 and M.StoreId=Ins.StoreId and M.InvoiceNo=Ins.InvoiceNo)

where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Temp2=1 or M.Flag<>19)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.Cashier=@CashierId or @CashierId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (M.ToId=@ToId or @ToId=0)

and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsService=@IsService or @IsService=2)
and (D.ItemId=@ItemId or @ItemId=0)

and (M.WaiterId=@WaiterId or @WaiterId=0)
and (M.SalesTypeId=@SalesTypeId or @SalesTypeId=0)
and (M.CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.IsClosed=@IsClosedOnly or @IsClosedOnly=0 or M.Flag<>11) -- الموائد المغلقة فقط

and (
		(--M.Temp=0 and
			(
			(M.Flag=@RPTFlag2) or
			@RPTFlag1=0 or
			(@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or
			(@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or
			(@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or
			(@RPTFlag1 in(7,10) and M.Flag between 19 and 20 and @RPTFlag2=0) or
			(@RPTFlag1 in(3,30) and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or
			(@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0) or
			(@RPTFlag1=9 and M.Flag in(26) and @RPTFlag2=0) or
			(@RPTFlag1=28 and M.Flag in(28) and @RPTFlag2=0)
			)
		)
		or (M.Temp=1 and M.Flag=13 and @RPTFlag1=5)or
		((@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )or
		((@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )
	)


and (
	@RPTFlag1<>10 or
	(M.Flag=19 and M.Temp=0 and Not exists(
				select TT.Id
				from ImportMessagesDetails TT 
				left join ImportMessages T on(TT.OrderTypeId=T.OrderTypeId and TT.Id=T.Id)
				where M.StoreId=TT.StoreId and M.InvoiceNo=TT.InvoiceNo
				and T.IsDelivered=1
				and T.DeliveredDate<=@ToDate2
				)
				)
	)

order by D.ItemId,D.Color,D.Size
GO
/****** Object:  StoredProcedure [dbo].[GetSalesRPT2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesRPT2]
(
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@CashierId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@IsClosedOnly bigint=0,
@ToId bigint=0,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@WaiterId bigint=0,
@SalesTypeId int=0,
@IsService int=0,
@CostCenterId bigint=0
)
--with encryption
as


declare @MyCurrencyExchange table(CurrencyId int,Exchange float)
insert @MyCurrencyExchange
select Id,dbo.GetCurrencyExchange(0,0,Id,0,GETDATE())
from Currencies



select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName,
M.InsertDate,IU.EnName InsertUserFullName,
U.EnName UserFullName,C.Name CashierName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,28,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,28,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizesDetailsName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorsDetailsName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId)Item_Name,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
(case when @RPTFlag1=30 then D.Qty*dbo.GetItemLastCost(D.ItemId,M.DayDate,1,D.ProductionOrderFlag,D.ProductionOrderNo) else 0 end)ItemLastCost,
D.Qty*(case D.UnitId when 0 then It.PurchasePrice when 1 then It.PurchasePriceSub when 2 then It.PurchasePriceSub2 else 0 end) ItemPurchaseValue,
CS.Name CostCenterName,
CE.Exchange CE_Exchange
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees IU on(M.InsertUser=IU.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)
left join @MyCurrencyExchange CE on(CE.CurrencyId=M.CurrencyId)

where M.Temp2=0
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.Cashier=@CashierId or @CashierId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (M.ToId=@ToId or @ToId=0)

and (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsService=@IsService or @IsService=2)
and (D.ItemId=@ItemId or @ItemId=0)

and (M.WaiterId=@WaiterId or @WaiterId=0)
and (M.SalesTypeId=@SalesTypeId or @SalesTypeId=0)
and (M.CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.IsClosed=@IsClosedOnly or @IsClosedOnly=0 or M.Flag<>11) -- الموائد المغلقة فقط

and (
		(--M.Temp=0 and
			(
			(M.Flag=@RPTFlag2) or
			@RPTFlag1=0 or
			(@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or
			(@RPTFlag1=2 and M.Flag between 9 and 10 and @RPTFlag2=0) or
			(@RPTFlag1=21 and M.Flag between 29 and 30 and @RPTFlag2=0) or
			(@RPTFlag1 in(7,10) and M.Flag between 19 and 20 and @RPTFlag2=0) or
			(@RPTFlag1 in(3,30) and (M.Flag between 11 and 16 or M.Flag between 21 and 24) and @RPTFlag2=0) or
			(@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0) or
			(@RPTFlag1=9 and M.Flag in(26) and @RPTFlag2=0) or
			(@RPTFlag1=28 and M.Flag in(28) and @RPTFlag2=0)
			)
		)
		or (M.Temp=1 and M.Flag=13 and @RPTFlag1=5)or
		((@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )or
		((@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )
	)


order by D.ItemId,D.Color,D.Size
GO
/****** Object:  StoredProcedure [dbo].[GetSalesRPT4]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesRPT4]
(
@FromDate datetime,
@ToDate datetime,
@ToDate2 datetime,
@Shift bigint,
@Flag bigint,
@StoreId bigint,
@CashierId bigint,
@FromInvoiceNo bigint,
@ToInvoiceNo bigint,
@RPTFlag1 bigint=0,
@RPTFlag2 bigint=0,
@IsClosedOnly bigint=0,
@ToId bigint=0,
@ItemId bigint=0,
@CountryId bigint=0,
@GroupId bigint=0,
@TypeId bigint=0,
@WaiterId bigint=0,
@SalesTypeId int=0,
@IsService int=0,
@CostCenterId bigint=0
)
--with encryption
as

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName,
M.InsertDate,IU.EnName InsertUserFullName,
U.EnName UserFullName,C.Name CashierName,
ToCs.Name  ToName,ToCs.Tel,ToCs.Mobile,Tb.Name TableName,
M.*,D.*,dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizesDetailsName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorsDetailsName,
SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
dbo.GetItemGroupName(D.ItemId)Group_Name,
dbo.GetItemTypeName(D.ItemId)Type_Name,
dbo.GetItemName(D.ItemId)Item_Name,
dbo.GetCurrencyName(M.CurrencyId)CurrencyName,
dbo.GetSalesFlagName(D.FlagType)FlagTypeName,
(case when @RPTFlag1=30 then D.Qty*dbo.GetItemLastCost(D.ItemId,M.DayDate,1,D.ProductionOrderFlag,D.ProductionOrderNo) else 0 end)ItemLastCost,
D.Qty*(case D.UnitId when 0 then It.PurchasePrice when 1 then It.PurchasePriceSub when 2 then It.PurchasePriceSub2 else 0 end) ItemPurchaseValue ,
isnull(fn.Qty,0) CurrentBal
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Statics S on(1=1)
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees IU on(M.InsertUser=IU.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id) 
left join Customers ToCs on(M.ToId=ToCs.Id) 

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)

left join (
		select StoreId,ItemId,isnull(sum(Qty),0)Qty 
		from dbo.Fn_AllItemMotion(@StoreId,0,@ToDate) 
		group by StoreId,ItemId
		)fn on (fn.StoreId=D.StoreId and fn.ItemId=D.ItemId)
where 
M.DayDate between @FromDate and @ToDate
and (M.Shift=@Shift or @Shift=0)

and (M.Flag=@Flag or @Flag=0)
and (M.StoreId=@StoreId or @StoreId=0)
and (M.Cashier=@CashierId or @CashierId=0)
and (M.InvoiceNo>=@FromInvoiceNo or @FromInvoiceNo=0)
and (M.InvoiceNo<=@ToInvoiceNo or @ToInvoiceNo=0)
and (M.ToId=@ToId or @ToId=0)
 
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsService=@IsService or @IsService=2)
and (D.ItemId=@ItemId or @ItemId=0)

and (M.WaiterId=@WaiterId or @WaiterId=0)
and (M.SalesTypeId=@SalesTypeId or @SalesTypeId=0)
and (M.CostCenterId=@CostCenterId or @CostCenterId=0)

and (M.Flag=31)
and M.Temp=0


and Not exists(
				select DD.InvoiceNo
				from SalesMaster MM
				left join SalesDetails DD on(MM.Flag=DD.Flag and MM.StoreId=DD.StoreId and MM.InvoiceNo=DD.InvoiceNo)
				where MM.StoreId=M.StoreId 
				and MM.Flag=13
				and MM.ToId=M.ToId 
				and MM.DayDate>=M.DayDate
				and DD.ItemId=D.ItemId
			 )

order by D.ItemId,D.Color,D.Size
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSerialDetails]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesSerialDetails]
@Flag int=0,
@StoreId int,
@DocNo nvarchar(100),
@SalesTypeIdState int
--with encryption
as

declare @DayDate datetime='2018-12-15'
if @Flag=1 select @DayDate ='2019-12-01'

select MainTbl.*,
SM.ToId,dbo.GetSubAccNameLink(case when @Flag=0 then 1 else 2 end,SM.ToId)ToName
from
(
	select StoreId,MAX(InvoiceNo)InvoiceNo,max(DayDate)DayDate,dbo.GetStoreName(StoreId)StoreName,SerialNo,
	ItemId,dbo.GetItemName(ItemId)It_Name,sum(Qty)Qty,sum(Qty2)Qty2,sum(Qty)-sum(Qty2)Qty3,MAX(SD_Qty2)SD_Qty2,
	Max(D_InvoiceNo)D_InvoiceNo,
	Max(SM_Flag)SM_Flag
	from
	(
	select SD.StoreId,SD.InvoiceNo,SM.DayDate,SM.DocNo SerialNo,SD.ItemId,SD.Qty,0. Qty2,cast(SD.Qty2 as decimal(18,2)) SD_Qty2,0 D_InvoiceNo,
	SM.Flag SM_Flag
	from SalesDetails SD
	left join SalesMaster SM on(SD.StoreId=SM.StoreId and SD.Flag=SM.Flag and SD.InvoiceNo=SM.InvoiceNo)
	where (SD.StoreId=@StoreId or @StoreId=0)
	and SM.Temp=0
	and (SM.DocNo=@DocNo or @DocNo='')
	and (
			(@Flag=0 and SD.Flag in(13))or(@Flag=1 and SD.Flag in(10,20,30))
		)
	and SM.DayDate>@DayDate
	and (SM.SalesTypeId>1 or @SalesTypeIdState=0)

	union all

	select D.StoreId,0,null,M.DocNo,D.ItemId,0.,D.Qty2,0,D.InvoiceNo D_InvoiceNo,
	M.SalesFlagId
	from DeliveryOrderDetails D
	left join DeliveryOrderMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where (D.StoreId=@StoreId or @StoreId=0)
	and (M.DocNo=@DocNo or @DocNo='')
	and M.DayDate>@DayDate
	and M.Flag=@Flag
	)Tbl
	group by StoreId,SerialNo,ItemId
)MainTbl
left join SalesMaster SM on(MainTbl.StoreId=SM.StoreId and SM.Flag=MainTbl.SM_Flag and MainTbl.InvoiceNo=SM.InvoiceNo)
where Qty3>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSerialDetails2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesSerialDetails2]
@Flag int=0,
@StoreId int,
@DocNo nvarchar(100),
@SalesTypeIdState int
--with encryption
as

select MainTbl.*,
SM.ToId,dbo.GetSubAccNameLink(case when @Flag=0 then 1 else 2 end,SM.ToId)ToName
from
(
	select StoreId,MAX(InvoiceNo)InvoiceNo,max(DayDate)DayDate,dbo.GetStoreName(StoreId)StoreName,SerialNo,
	ItemId,dbo.GetItemName(ItemId)It_Name,sum(Qty)Qty,sum(Qty2)Qty2,sum(Qty)-sum(Qty2)Qty3,MAX(SD_Qty2)SD_Qty2,
	Max(D_InvoiceNo)D_InvoiceNo,
	MAX(SM_Flag)SM_Flag
	from
	(
	select SD.StoreId,SD.InvoiceNo,SM.DayDate,SM.DocNo SerialNo,SD.ItemId,SD.Qty,0. Qty2,cast(SD.Qty2 as decimal(18,2)) SD_Qty2,0 D_InvoiceNo,
	SM.Flag SM_Flag
	from SalesDetails SD
	left join SalesMaster SM on(SD.StoreId=SM.StoreId and SD.Flag=SM.Flag and SD.InvoiceNo=SM.InvoiceNo)
	where (SD.StoreId=@StoreId or @StoreId=0)
	and SM.Temp=0
	and (SM.DocNo=@DocNo or @DocNo='')
	and (
			(@Flag=0 and SD.Flag in(13))
			or
			(@Flag=1 and SD.Flag in(10,20,30))
		)
	and (SM.SalesTypeId>1 or @SalesTypeIdState=0)

	union all

	select D.StoreId,0,null,M.DocNo,D.ItemId,0.,D.Qty2,0,D.InvoiceNo D_InvoiceNo,
	M.SalesFlagId
	from DeliveryOrderDetails D
	left join DeliveryOrderMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where (D.StoreId=@StoreId or @StoreId=0)
	and (M.DocNo=@DocNo or @DocNo='')
	and M.Flag=@Flag
	)Tbl
	group by StoreId,SerialNo,ItemId
)MainTbl
left join SalesMaster SM on(MainTbl.StoreId=SM.StoreId and SM.Flag=MainTbl.SM_Flag and MainTbl.InvoiceNo=SM.InvoiceNo)
where Qty3>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSerialDetailsByInvoiceNo]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesSerialDetailsByInvoiceNo]
@Flag int=0,
@StoreId int,
@InvoiceNo bigint,
@SalesFlagId int
--with encryption
as

select MainTbl.*,
SM.ToId,dbo.GetSubAccNameLink(case when @Flag=0 then 1 else 2 end,SM.ToId)ToName
from
(
	select StoreId,MAX(InvoiceNo)InvoiceNo,max(DayDate)DayDate,dbo.GetStoreName(StoreId)StoreName,SerialNo,
	ItemId,dbo.GetItemName(ItemId)It_Name,sum(Qty)Qty,sum(Qty2)Qty2,sum(Qty)-sum(Qty2)Qty3,MAX(SD_Qty2)SD_Qty2,
	Max(D_InvoiceNo)D_InvoiceNo,MAX(SM_Flag)SM_Flag
	from
	(
	select SD.StoreId,SD.InvoiceNo,SM.DayDate,SM.DocNo SerialNo,SD.ItemId,SD.Qty,0. Qty2,cast(SD.Qty2 as decimal(18,2)) SD_Qty2,0 D_InvoiceNo,
	SM.Flag SM_Flag
	from SalesDetails SD
	left join SalesMaster SM on(SD.StoreId=SM.StoreId and SD.Flag=SM.Flag and SD.InvoiceNo=SM.InvoiceNo)
	where (SD.StoreId=@StoreId or @StoreId=0)
	and (SD.InvoiceNo=@InvoiceNo or @InvoiceNo=0)
	and (SD.Flag=@SalesFlagId)
	and SM.Temp=0
	and (
			(@Flag=0 and SD.Flag in(13))
			or
			(@Flag=1 and SD.Flag in(10,20,30))
		)
	and SM.SalesTypeId>1

	union all

	select D.StoreId,0,null,M.DocNo,D.ItemId,0.,D.Qty2,0,D.InvoiceNo D_InvoiceNo,
	M.SalesFlagId
	from DeliveryOrderDetails D
	left join DeliveryOrderMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
	where (D.StoreId=@StoreId or @StoreId=0)
	and (M.SalesInvoiceNo=@InvoiceNo)
	and M.SalesFlagId=@SalesFlagId
	and M.Flag=@Flag
	)Tbl
	group by StoreId,SerialNo,ItemId
)MainTbl
left join SalesMaster SM on(MainTbl.StoreId=SM.StoreId and SM.Flag=MainTbl.SM_Flag and MainTbl.InvoiceNo=SM.InvoiceNo)
where Qty3>0
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSpecific]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesSpecific]
(
@StoreId bigint,
@Flag bigint,
@InvoiceNo bigint,
@EmpId int
)
--with encryption
as

declare @SalesPrice int,@PurchasesPrice int,@ImportPrice int
select @SalesPrice=SalesPrice,@PurchasesPrice=PurchasesPrice,@ImportPrice=ImportPrice
from Employees
where Id=@EmpId

if @Flag=19
select ItemId,dbo.GetItemName(ItemId) ItemName,Qty,Qty2,Qty3,
(case when @ImportPrice=1 then Price else 0 end) Price,
(case when @ImportPrice=1 then Value else 0 end) Value
from ImportMessagesDetailsSub2 D
where StoreId=@StoreId
and InvoiceNo=@InvoiceNo
order by Line

else if @Flag<>-1
select ItemId,dbo.GetItemName(ItemId) ItemName,Qty,Qty2,Qty3,
(case 
when @SalesPrice=1 and (D.Flag between 11 and 16 or D.Flag between 21 and 24) then Price 
when @PurchasesPrice=1 and (D.Flag between 9 and 10 or D.Flag between 29 and 30) then Price 
when @ImportPrice=1 and (D.Flag between 19 and 20) then Price 
else 0 end) Price,

(case 
when @SalesPrice=1 and (D.Flag between 11 and 16 or D.Flag between 21 and 24) then ItemDiscount 
when @PurchasesPrice=1 and (D.Flag between 9 and 10 or D.Flag between 29 and 30) then ItemDiscount
when @ImportPrice=1 and (D.Flag between 19 and 20) then ItemDiscount
else 0 end) 'الخصم',

(case 
when @SalesPrice=1 and (D.Flag between 11 and 16 or D.Flag between 21 and 24) then Price -ItemDiscount
when @PurchasesPrice=1 and (D.Flag between 9 and 10 or D.Flag between 29 and 30) then Price -ItemDiscount
when @ImportPrice=1 and (D.Flag between 19 and 20) then Price -ItemDiscount
else 0 end) 'السعر بعد الخصم',

(case 
when @SalesPrice=1 and (D.Flag between 11 and 16 or D.Flag between 21 and 24) then Value 
when @PurchasesPrice=1 and (D.Flag between 9 and 10 or D.Flag between 29 and 30) then Value 
when @ImportPrice=1 and (D.Flag between 19 and 20) then Value 
else 0 end) Value
from SalesDetails D
where StoreId=@StoreId
and Flag=@Flag
and InvoiceNo=@InvoiceNo
order by Line

else

select 'صرف' 'نوع الحركة',
D.ItemId 'كود الصنف',dbo.GetItemName(D.ItemId) 'اسم الصنف',Qty 'الكمية',1. Qty2,Qty Qty3,Line
from ItemCollectionMotionMaster M
left join ItemCollectionMotionDetailsFrom D on(M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Stores St on(M.StoreId=St.Id)
where M.StoreId=@StoreId
and M.InvoiceNo=@InvoiceNo
and M.Temp=0

union all

select 'إضافة' 'نوع الحركة',
D.ItemId,dbo.GetItemName(D.ItemId),Qty,1. Qty2,Qty Qty3,Line
from ItemCollectionMotionMaster M
left join ItemCollectionMotionDetailsTo D on(M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Stores St on(M.StoreId=St.Id)
where M.StoreId=@StoreId
and M.InvoiceNo=@InvoiceNo
and M.Temp=0

order by Line
GO
/****** Object:  StoredProcedure [dbo].[GetSalesSubRpt]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSalesSubRpt]
(
@FromDate datetime,
@ToDate datetime,
@RPTFlag1 int=0,
@RPTFlag2 int=0,
@ToId int=0
)
--with encryption
as

--ماتنساش الفرع المحول إليه

select M.DayDate InvDate,M.Shift InvShift,Sh.Name ShiftName,St.Name StoreName,W.Name WaiterName
,S.PoneComment,S.PoneHeader
,U.EnName UserFullName,C.Name CashierName,Dv.Name DelivarymanName,
(case 
when M.ToId=0 then '-'

when M.Flag IN(8) then ToSt.Name
when (M.ReservToId=0 and M.Flag IN(9,10,19,20,27,29,30)) then ToSp.Name
when (M.ReservToId=0 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToCs.Name
when (M.ReservToId=1 and M.Flag IN(9,10,19,20,27,29,30)) then ToCs.Name
when (M.ReservToId=1 and M.Flag between 11 and 16 or M.Flag between 21 and 26 or M.Flag between 33 and 34) then ToSp.Name
when M.Flag IN(35,36) then Inv.Name
when M.Flag IN(17,18,37,38,47,48) then ToCases.Name end) ToName,Tb.Name TableName,
ToCs.Address,ToCs.Mobile,ToCs.Tel,
M.*,D.*,

--dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
(case D.UnitId when 0 then It.Unit when 1 then It.UnitSub when 2 then It.UnitSub2 else '' end),

--dbo.GetAccName(AccNo1)AccName1, 
--dbo.GetAccName(AccNo2)AccName2,
--dbo.GetAccName(AccNo3)AccName3,
--dbo.GetAccName(AccNo4)AccName4,
C1.Name AccName1,
C2.Name AccName2,
C3.Name AccName3,
C4.Name AccName4,

--dbo.GetAccTypeName(AccType1)AccTypeName1,
--dbo.GetAccTypeName(AccType2)AccTypeName2,
--dbo.GetAccTypeName(AccType3)AccTypeName3,
--dbo.GetAccTypeName(AccType4)AccTypeName4,
AT1.Name AccTypeName1,
AT2.Name AccTypeName2,
AT3.Name AccTypeName3,
AT4.Name AccTypeName4,

--CC.Name ColorName,S1.Name SizeName
--dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
SZ.Name SizeName,

--dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
CL.Name ColorName,

SF.Name FlagName,
SF.Title FlagTitle,
SF.Cashier FlagCashier,
SF.ItemInOut FlagItemInOut,
SF.ItemIn FlagItemIn,
SF.ItemOut FlagItemOut,
SF.FlagValue FlagFlagValue,
SF.RptTitle FlagRptTitle,
SM.Name ShippingMethodName,
PM.Name PaymentMethodName,
D.Price-D.ItemDiscount ItemPriceAfterDiscount,
Gp.Name Group_Name,
Ty.Name Type_Name,
It.Name Item_Name,
Cr.Name CurrencyName,
SDF.Name FlagTypeName,
CS.Name CostCenterName
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join SalesFlags SF on(M.Flag=SF.Id)
left join SalesFlags SDF on(D.FlagType=SDF.Id)
left join Items_View It on(D.ItemId=It.Id)
left join Groups Gp on(Gp.Id=It.GroupId)
left join Types Ty on(Ty.GroupId=It.GroupId and Ty.Id=It.TypeId)

left join Currencies Cr on(Cr.Id=M.CurrencyId)

cross join Statics S
left join Shifts Sh on(M.Shift=Sh.Id)
left join Stores St on(M.StoreId=St.Id)
left join Employees U on(M.UserName=U.Id)
left join Employees C on(M.Cashier=C.Id)
left join Sellers W on(M.WaiterId=W.Id)
left join Employees Dv on(M.DeliverymanId=Dv.Id)
left join Stores ToSt on(M.ToId=ToSt.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
left join Customers ToCs on(M.ToId=ToCs.Id)
left join Investors Inv on(M.ToId=Inv.Id)
left join Cases ToCases on(M.ToId=ToCases.Id)
left join CostCenters CS on(M.CostCenterId=CS.Id)

left join Tables Tb on(Tb.StoreId=M.StoreId and Tb.Id=M.TableId)
left join ShippingMethods SM on(M.ShippingMethodId=SM.Id)
left join PaymentMethods PM on(M.PaymentMethodId=PM.Id)

left join chart C1 on(C1.Id=AccNo1)
left join chart C2 on(C2.Id=AccNo2)
left join chart C3 on(C3.Id=AccNo3)
left join chart C4 on(C4.Id=AccNo4)

left join AccTypes AT1 on(AT1.Id=AccType1)
left join AccTypes AT2 on(AT2.Id=AccType2)
left join AccTypes AT3 on(AT3.Id=AccType3)
left join AccTypes AT4 on(AT4.Id=AccType4)

left join SizesDetails SZ on(SZ.SizeId=It.SizeId and SZ.Id=D.Size)
left join ColorsDetails CL on(CL.ColorId=It.ColorId and CL.Id=D.Color)

where 
M.DayDate between @FromDate and @ToDate
and (ToId=@ToId or @ToId=0)
and (
	@RPTFlag1=0 or
	((@RPTFlag1=1 and M.Flag between 1 and 8 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	
	((@RPTFlag1=2 and (	
				(M.ReservToId=0 and M.Flag IN(9,10,19,20,29,30))or
				(M.ReservToId=1 and (M.Flag between 11 and 16 or M.Flag between 21 and 24))
				)
				 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
				 
	((@RPTFlag1=3 and (
				(M.ReservToId=1 and M.Flag IN(9,10,19,20,29,30))or
				(M.ReservToId=0 and (M.Flag between 11 and 16 or M.Flag between 21 and 24))
				)
				 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=11 and M.Flag in(35,36) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=4 and M.Flag in(17,18,37,38,47,48) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=7 and M.Flag between 19 and 20 and @RPTFlag2=0) or (M.Flag=@RPTFlag2) ) or
	((@RPTFlag1=8 and M.Flag in(33,34) and @RPTFlag2=0) or (M.Flag=@RPTFlag2) )
	)
GO
/****** Object:  StoredProcedure [dbo].[GetSalesWindow]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetSalesWindow]
@StoreId int=1,
@FromDate datetime='2014-1-1',
@ToDate datetime='2020-1-1',
@TypeId nvarchar(100)
--with encryption
as

select * from(
select distinct cast(T2.InvoiceNo as nvarchar(100))'رقم الفاتورة',
cast(T2.ToId as nvarchar(100))'كود العميل',
dbo.GetCustomerName(T2.ToId)'اسم العميل',
dbo.ToStrDate(T2.DayDate)'التاريخ',DocNo 'رقم المستند',
cast(T2.TotalAfterDiscount as nvarchar(100)) 'القيمة',
case T2.PaymentType when 1 then 'كاش' when 2 then 'فيزا' when 3 then 'كاش/فيزا' when 4 then 'آجل' when 5 then 'نقدي/آجل' else '-' end 'نوع الدفع',
T2.InsertDate'تاريخ الإدخال',E1.Name 'مستخدم الإدخال',
T2.MyGetDate 'آخر تحديث',E2.Name 'آخر مستخدم',
(select top 1 State from deletedSalesMaster TT where T.StoreId=TT.StoreId and T.Flag=TT.Flag and T.InvoiceNo=TT.InvoiceNo order by LastLine desc)'آخر حالة'
from (
	select StoreId,Flag,InvoiceNo,Max(LastLine)LastLine
	from DeletedSalesMaster
	where (StoreId=@StoreId or @StoreId=0) 
	and Flag=13
	group by StoreId,Flag,InvoiceNo
) T
left join DeletedSalesMaster T2 on(T.StoreId=T2.StoreId and T.InvoiceNo=T2.InvoiceNo and T.LastLine=T2.LastLine)
left join Employees E1 on(E1.Id=T2.InsertUser)
left join Employees E2 on(E2.Id=T2.UserName)
)Tbl
where ("آخر حالة" =@TypeId or @TypeId='')
GO
/****** Object:  StoredProcedure [dbo].[GetSalesWindowSub]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[GetSalesWindowSub]
@StoreId bigint,
@InvoiceNo bigint
--with encryption
as

select dbo.ToStrDateTime(M.DeletedDate) 'تاريخ الحركة',
E.Name 'الموظف',LastLine,State 'الحالة',TotalAfterDiscount 'القيمة'
from DeletedSalesMaster M
left join Employees E on(E.Id=M.UserDelete)
where StoreId=@StoreId
and Flag=13
and InvoiceNo=@InvoiceNo
order by M.DeletedDate
GO
/****** Object:  StoredProcedure [dbo].[getSellerCustomersBal]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getSellerCustomersBal]
@ToDate datetime='2020-1-1',
@CashierId int=1

as

declare @MyDate datetime=cast('1900-1-1'as date)

declare @str varchar(4000)='
create table #tbl(Id bigint,Name nvarchar(4000),MainBal0 float,AccNo nvarchar(4000),CurrencyId bigint,CurrencyName varchar(4000),TelFieldName nvarchar(4000))
insert #tbl
select C.Id,C.Name,isnull(C.MainBal0,0),C.AccNo,CurrencyId,'''' CurrencyName,''''
from Customers C
where CashierId='+cast(@CashierId as nvarchar(4000))+'

create table #Fn (MyMainAccNo nvarchar(4000),MySubAccNo bigint,Db float,Cr float)
insert #Fn
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('''',0,'''+cast(@MyDate as varchar(100))+''','''+cast(@ToDate as varchar(4000))+''',0,0,0) 
group by MyMainAccNo,MySubAccNo



select Id,Name,
isnull(MainBal0,0)+(isnull(Fn.Db,0)-isnull(Fn.Cr,0))MainBal0
from #tbl C
left join #Fn Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
where Id in(select T.Id from Customers T where T.CashierId='+cast(@CashierId as nvarchar(4000))+')
Order by Id

drop table #tbl
drop table #Fn
'
create table #tblAll(Id bigint,Name varchar(4000),MainBal0 float)
insert #tblAll
exec(@str)
print @str

update #tblAll
set MainBal0=round(MainBal0,2)

select * from #tblAll


drop table #tblAll
GO
/****** Object:  StoredProcedure [dbo].[getSellerSalesInvoices]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getSellerSalesInvoices]
@FromDate datetime='2020-1-1',
@ToDate datetime='2020-1-1',
@CashierId int=1

as

select StoreId,dbo.GetStoreName(StoreId)StoreName,Flag,dbo.GetSalesFlagName(SM.Flag)FlagName,InvoiceNo,dbo.ToStrDate(DayDate)DayDate,
ToId,C.Name ToName,
(case when SM.Flag=13 then SM.TotalAfterDiscount else 0 end)TotalAfterDiscount,
(case when SM.Flag=14 then SM.TotalAfterDiscount else 0 end)ReturnValue
from SalesMaster SM
left join Customers C on(SM.ToId=C.Id)
where SM.DayDate between @FromDate and @ToDate
and SM.Flag in(13,14)
and SM.Cashier=@CashierId
GO
/****** Object:  StoredProcedure [dbo].[GetServiceCompanies]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetServiceCompanies](@CompanyId int)
--with encryption
as

	select C.ServiceGroupId,dbo.GetServiceGroupName(C.ServiceGroupId)ServiceGroupName,
	C.Id,dbo.GetServiceTypeName(C.ServiceGroupId,C.Id)ServiceTypeName,
	isnull(T.Price,C.CompanyValue)Price,
	isnull(T.Payed,C.CompanyValue)Payed,
	isnull(T.Remaining,0)Remaining,isnull(T.Notes,'-')Notes 
	from ServiceTypes C 
	left join ServiceCompanies T on(T.CompanyId=@CompanyId and T.ServiceGroupId=C.ServiceGroupId and T.Id=C.Id)
GO
/****** Object:  StoredProcedure [dbo].[GetserviceCompaniesData]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetserviceCompaniesData]
@CompanyId bigint,
@ServiceGroupId bigint,
@Id bigint
--with encryption
as
select * from serviceCompanies
where CompanyId=@CompanyId
and ServiceGroupId=@ServiceGroupId
and Id=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetServicePrices]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetServicePrices]
as

select G.Id G_Id,G.Name G_Name,
T.Id T_Id,T.Name T_Name,
T.DrValue,T.CsValue,T.CoValue,T.CompanyValue,T.IsStopped
from ServiceGroups G
left join ServiceTypes T on(G.Id=T.ServiceGroupId)
GO
/****** Object:  StoredProcedure [dbo].[GetServices]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetServices]
@EmpId bigint,
@CaseId bigint,
@UserId bigint,
@FromInvoice bigint,
@ToInvoice bigint,
@ServiceGroupId bigint,
@ServiceTypeId bigint,
@CsId bigint,
@SerialType bigint,
@FromDate datetime,
@ToDate datetime,
@FromSerialId bigint,
@ToSerialId bigint
--with encryption
as
select 0 CancelFlag,1 SerialFlag,InvoiceNo,DayDate,DrId,CsId,DrValue,CsValue,CoValue,Value,ServiceGroupId,ServiceTypeId,CaseId,Notes,UserName,MyGetDate,SerialId,Payed,Remaining,Done,SerialId2,RemainingDate,EmpIdReservation,EmpIdRemaining,
isnull(dbo.GetEmpName(DrId),'-') 'Dr Name',
isnull(dbo.GetEmpName(CsId),'-') 'Cs Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
isnull(dbo.GetCaseEnName(CaseId),'-') 'Case Name'
from Services
where (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromInvoice or @FromInvoice=0)
and (InvoiceNo<=@ToInvoice or @ToInvoice=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and cast(DayDate as date) between @FromDate and @ToDate
and (SerialId>=@FromSerialId or @FromSerialId=0)
and (SerialId<=@ToSerialId or @ToSerialId=0)
and Canceled=0
and Returned=0
and (EmpIdReservation=@UserId or @UserId=0)


union all

select 0 CancelFlag,2 SerialFlag,InvoiceNo,DayDate,DrId,CsId,DrValue,CsValue,CoValue,Value,ServiceGroupId,ServiceTypeId,CaseId,Notes,UserName,MyGetDate,SerialId,Payed,Remaining,Done,SerialId2,RemainingDate,EmpIdReservation,EmpIdRemaining,
isnull(dbo.GetEmpName(DrId),'-') 'Dr Name',
isnull(dbo.GetEmpName(CsId),'-') 'Cs Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-') 'Service Type Name',
isnull(dbo.GetCaseEnName(CaseId),'-') 'Case Name'
from Services
where (DrId=@EmpId or @EmpId=0)
and (CsId=@CsId or @CsId=0)
and (CaseId=@CaseId or @CaseId=0)
and (ServiceGroupId=@ServiceGroupId or @ServiceGroupId=0)
and (ServiceTypeId=@ServiceTypeId or @ServiceTypeId=0)
and (InvoiceNo>=@FromInvoice or @FromInvoice=0)
and (InvoiceNo<=@ToInvoice or @ToInvoice=0)
and (dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType or @SerialType=0)

and Done=1
and cast(RemainingDate as date) between @FromDate and @ToDate
and (SerialId2>=@FromSerialId or @FromSerialId=0)
and (SerialId2<=@ToSerialId or @ToSerialId=0)
and Canceled=0
and Returned=0
and (EmpIdRemaining=@UserId or @UserId=0)
GO
/****** Object:  StoredProcedure [dbo].[getServicesIsLabToLab]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getServicesIsLabToLab]

as

select T.MyLine,T.InvoiceNo,T.DayDate,T.Value,Ty.Cost,
T.ServiceGroupId,G.Name ServiceGroupName,
T.ServiceTypeId,Ty.Name ServiceTypeName,
T.CaseId,C.Name CaseName,
T.Notes,CAST(0 as bit)'IsSelected'
from Services T
left join ServiceGroups G on(T.ServiceGroupId=G.Id)
left join ServiceTypes Ty on(T.ServiceGroupId=Ty.ServiceGroupId and T.ServiceTypeId=Ty.Id)
left join cases C on(T.CaseId=C.Id)
where T.IsLabToLab=1
AND T.IsLabToLabDone=0
and T.Canceled=0
and T.Returned=0
GO
/****** Object:  StoredProcedure [dbo].[getServicesIsLabToLabRPT]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getServicesIsLabToLabRPT]
@FromDate datetime,
@Todate datetime,
@Current int=0
as

select T.*,Ty.Cost,
G.Name ServiceGroupName,
Ty.Name ServiceTypeName,
C.Name CaseName,
E.Name EmpName
from Services T
left join ServiceGroups G on(T.ServiceGroupId=G.Id)
left join ServiceTypes Ty on(T.ServiceGroupId=Ty.ServiceGroupId and T.ServiceTypeId=Ty.Id)
left join cases C on(T.CaseId=C.Id)
left join Employees E on(T.IsLabToLabDoneEmpId=E.Id)
where 
(
	(
	@Current=1
	and T.IsLabToLabDone=-1
	)
or
	(
	@Current=0
	and cast(T.IsLabToLabDoneGetDate as date) between @FromDate and @Todate 
	AND T.IsLabToLabDone=1
	)
)

and T.IsLabToLab=1 
and T.Canceled=0
and T.Returned=0
GO
/****** Object:  StoredProcedure [dbo].[GetServicesONE]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetServicesONE]
@Flag int,
@Id bigint
--with encryption
as
select R.*,
isnull(dbo.GetEmpArName(DrId),'-') 'Dr Name',
isnull(dbo.GetEmpArName(CsId),'-') 'Cs Name',
isnull(dbo.GetServiceGroupName(ServiceGroupId),'-') 'Service Group Name',
isnull(dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),'-')+' - '+(case when DrId=0 then '' else dbo.GetEmpArName(DrId) end) 'Service Type Name',

isnull(dbo.GetCaseArName(CaseId),'-') 'Case Name',
dbo.GetDepartmentName(dbo.GetEmpDepartmentId(DrId))DepartmentName,
dbo.GetDegreeName(dbo.GetEmpDegreeId(DrId))DegreeName,
dbo.GetCompanyName1(CompanyId)CompanyName,
st.PoneHeader,st.PoneComment
from Services R
cross join Statics st
where R.Flag=@Flag and InvoiceNo=@Id
GO
/****** Object:  StoredProcedure [dbo].[GetServicesToEdit]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetServicesToEdit]
@InvoiceNo bigint
--with encryption
as
select MyLine,DayDate,dbo.GetCaseArName(CaseId),
dbo.GetServiceGroupName(ServiceGroupId),
dbo.GetServiceTypeName(ServiceGroupId,ServiceTypeId),
CoValue 
from Services 
where InvoiceNo=@InvoiceNo
and Canceled=0
and Returned=0
GO
/****** Object:  StoredProcedure [dbo].[GetSpecialOrders]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSpecialOrders]
@FromDate datetime,
@ToDate datetime
as


select T.*,TT.*,
Ty.Name Ty_Name,
St.Name St_Name,
Cu.Name Cu_Name,
E.Name E_Name
from SpecialOrders T
/*left join (
	select StoreId,InvoiceNo,max(Line)Line
	from SpecialOrdersDetails
	group by StoreId,InvoiceNo
)*/
left join SpecialOrdersDetails TT on(TT.StoreId=T.StoreId and TT.InvoiceNo=T.InvoiceNo)
left join SpecialOrderTypes Ty on(TT.TypeId=Ty.Id)
left join Stores St on(T.StoreId=St.Id)
left join Customers Cu on(T.ToId=Cu.Id)
left join Employees E on (E.Id=TT.UserName)
where T.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetSpecialOrders2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE proc [dbo].[GetSpecialOrders2]
@FromDate datetime,
@ToDate datetime
as


select T.*,TT.*,
Ty.Name Ty_Name,
St.Name St_Name,
E.Name E_Name
from SpecialOrders2 T
/*left join (
	select StoreId,InvoiceNo,max(Line)Line
	from SpecialOrders2Details
	group by StoreId,InvoiceNo
)T0 on(T0.StoreId=T.StoreId and T0.InvoiceNo=T.InvoiceNo)
*/
left join SpecialOrders2Details TT on(TT.StoreId=T.StoreId and TT.InvoiceNo=T.InvoiceNo)
left join SpecialOrder2Types Ty on(TT.TypeId=Ty.Id)
left join Stores St on(T.StoreId=St.Id)
left join Employees E on (E.Id=TT.UserName)
where T.DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[GetSpecialOrders20]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 CREATE proc [dbo].[GetSpecialOrders20]
@FromDate datetime,
@ToDate datetime
as


select TT.*,
Ty.Name Ty_Name
from SpecialOrders2 T
left join SpecialOrders2Details2 TT on(TT.StoreId=T.StoreId and TT.InvoiceNo=T.InvoiceNo)
left join SpecialOrder2Types2 Ty on(TT.TypeId=Ty.Id)
left join Stores St on(T.StoreId=St.Id)
left join Employees E on (E.Id=TT.UserName)
where T.DayDate between @FromDate and @ToDate

GO
/****** Object:  StoredProcedure [dbo].[GetStagnantCustomers]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStagnantCustomers]
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *
from Customers
where Id not in(
select ToId
from SalesMaster M 
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag in(11,13,15/*,17,35,37,47*/)
)
GO
/****** Object:  StoredProcedure [dbo].[GetStagnantItems]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStagnantItems]
@FromDate datetime,
@ToDate datetime
--with encryption
as
select *,
dbo.GetGroupName(GroupId)GroupName,
dbo.GetTypeName(GroupId,TypeId)TypeName
from Items
where Id not in(
select D.ItemId
from SalesDetails D
left join SalesMaster M on(D.Flag=M.Flag and D.StoreId=M.StoreId and D.InvoiceNo=M.InvoiceNo)
where M.DayDate between @FromDate and @ToDate
and M.Temp=0
and M.Flag in(11,13,15,17,35,37,47)
)
GO
/****** Object:  StoredProcedure [dbo].[GetStatisticsInvoices]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStatisticsInvoices]
@Month int,
@Year int,
@WeekId int,
@OfficeTypeId int,
@OfficeDepartmentId int,
@OfficeTypesSubId int

as

select T.*,
TT.Qty1 TT_Qty1,
TT.Qty2 TT_Qty2,
TT.Qty3 TT_Qty3,
(CASE WHEN TT.Notes ='' THEN 'لا يوجد' ELSE TT.Notes END) TT_Notes,
dbo.GetAdvisorName(TT.AdvisorId)AdvisorName,
dbo.GetWeekName(T.WeekId)WeekName,
dbo.GetOfficeTypeName(T.OfficeTypeId)OfficeTypeName,
dbo.GetOfficeDepartmentName(T.OfficeTypeId,OfficeDepartmentId)OfficeDepartmentName,
dbo.GetOfficeTypesSubName(T.OfficeTypeId,T.OfficeDepartmentId,T.OfficeTypesSubId)OfficeTypesSubName,
dbo.GetAdvisorTypeName(TT.AdvisorId)AdvisorTypeName
from StatisticsInvoices T
left join AdvisorAbsence TT on(T.InvoiceNo=TT.Id)
where T.Month=@Month
and T.Year=@Year
and (T.WeekId=@WeekId or @WeekId=0)
and (T.OfficeTypeId=@OfficeTypeId or @OfficeTypeId=0)
and (T.OfficeDepartmentId=@OfficeDepartmentId or @OfficeDepartmentId=0)
and (T.OfficeTypesSubId=@OfficeTypesSubId or @OfficeTypesSubId=0)
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreBal]
(
@P bigint,
@Z bigint,
@N bigint,
@CountryId bigint,
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@IsStopped int,
@ToDate datetime
)
--with encryption
as
select *,
dbo.GetItemLastPurchasePrice(Id,@ToDate)LastPurchasePrice,
--dbo.GetItemAvgCost(Id,@ToDate)AvgCost,
AvgCost,
--dbo.GetItemAvgSalesPrice(Id)
isnull(Prices.Price,tbl.SalesPrice)AvgSalesPrice
from
(
		select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
		It.*,
		isnull(AvgCost,0) AvgCost,
		isnull(Qty,0)CurrentBal,
		dbo.GetGroupName(It.GroupId)GroupName,
		dbo.GetTypeName(It.GroupId,it.TypeId)TypeName
		from (
			select StoreId,ItemId,isnull(sum(Qty),0)Qty
			from dbo.Fn_AllItemMotion(0,0,@ToDate)
			where (StoreId=@StoreId or @StoreId=0)
			Group by StoreId,ItemId
		)fn
		left join (
			select ItemId,
			(case when isnull(sum(Qty),0)=0 then 0 else isnull(sum(AvgCost),0)/isnull(sum(Qty),0) end) AvgCost
			from dbo.Fn_AllItemMotion(0,0,@ToDate)
			Group by ItemId
		)fn0 on(fn.ItemId=fn0.ItemId)
		left join Items_View It on(fn.ItemId=It.Id)
		left join Stores St on(St.Id=fn.StoreId)
		where (It.CountryId=@CountryId or @CountryId=0)
		and (It.GroupId=@GroupId or @GroupId=0)
		and (It.TypeId=@TypeId or @TypeId=0)
		and (It.IsStopped=@IsStopped or @IsStopped=2)
		and It.ItemType<>3
		and It.IsService=0
)tbl
left join(
		Select D.ItemId,(case when sum(D.Qty*D.UnitQty)=0 then 0 else sum(D.Value)/sum(D.Qty*D.UnitQty) end) Price
		from SalesDetails D
		left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
		left join SalesFlags F on(M.Flag=F.Id)
		where D.Flag =13
		and M.Temp=0
		and (D.Qty*D.UnitQty)<>0
		and D.Line in (
		select TblLine from FIFO F1
		where ItemId=D.ItemId 
		and Flag=13
		and TableIndex=1 
		and MainTableIndex=4 
		and MainLine=(select top 1 TblLine from FIFO F2 where ItemId=D.ItemId and TableIndex=4 and F2.TableIndex=F1.MainTableIndex order by DayDate desc)
		)
		group by D.ItemId
)Prices on(Tbl.Id=Prices.ItemId)
where(
 (CurrentBal>0 and @P=1) or 
 (CurrentBal=0 and @Z=1) or 
 (CurrentBal<0 and @N=1)
 )
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreBal2]
(
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@ToDate datetime
)
--with encryption
as
select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
It.*,
isnull(cast(D.Name as varchar(100)),'')SizeName,
ISNULL(Z.Limit,It.Limit) MyLimit,
dbo.GetStoreItemBal(St.Id,it.Id,'',0,isnull(Z.Id,0),GETDATE()) CurrentBal,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,it.TypeId)TypeName

from Items_View It
left join ItemSizes Z on(It.Id=z.ItemId)
left join SizesDetails D on(D.SizeId=It.SizeId and D.Id=Z.Id)
left join Stores St on(St.Id=@StoreId or @StoreId=0)
where (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and It.ItemType<>3
and It.IsService=0
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal2Limit]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreBal2Limit]
(
@P bigint,
@Z bigint,
@N bigint,
@CountryId bigint,
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@IsStopped int,
@ToDate datetime
)
--with encryption
as
select * from
(
select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
It.*,
isnull(cast(D.Name as varchar(100)),'')SizeName,
ISNULL(Z.Limit,It.Limit) MyLimit,
dbo.GetStoreItemBal(St.Id,it.Id,'',0,isnull(Z.Id,0),@ToDate) CurrentBal,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,it.TypeId)TypeName

from Items_View It
left join ItemSizes Z on(It.Id=z.ItemId)
left join SizesDetails D on(D.SizeId=It.SizeId and D.Id=Z.Id)
left join Stores St on(St.Id=@StoreId or @StoreId=0)
where (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsStopped=@IsStopped or @IsStopped=2)
and It.ItemType<>3
and It.IsService=0
)tbl
where Limit>CurrentBal
and(
 (CurrentBal>0 and @P=1) or 
 (CurrentBal=0 and @Z=1) or 
 (CurrentBal<0 and @N=1)
 )
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBal3]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreBal3]
(
@P bigint,
@Z bigint,
@N bigint,
@CountryId bigint,
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@IsStopped int,
@ToDate datetime
)
--with encryption
as
select * from
(
select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
It.*,
ISNULL(cast(D.Name as varchar(100)),'')SizeName,
ISNULL(cast(CC.Name as varchar(100)),'')ColorName,
ISNULL(Z.Limit,It.Limit) MyLimit,
dbo.GetStoreItemBal(St.Id,it.Id,'',isnull(CC.Id,0),isnull(Z.Id,0),GETDATE()) CurrentBal,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,it.TypeId)TypeName
from Items_View It
left join SizesDetails D on(D.SizeId=It.SizeId)
left join ItemSizes Z on(z.ItemId=It.Id and z.Id=D.Id)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id)
left join Stores St on(St.Id=@StoreId or @StoreId=0)
where (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsStopped=@IsStopped or @IsStopped=2)
and It.ItemType<>3
and It.IsService=0
)tbl
where(
 (CurrentBal>0 and @P=1) or 
 (CurrentBal=0 and @Z=1) or 
 (CurrentBal<0 and @N=1)
 )
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBale]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreBale]
(
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@ToDate datetime
)
--with encryption
as
select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
It.*,cast(D.Name as varchar(100))SizeName,ISNULL(Z.Limit,It.Limit) MyLimit,
dbo.GetStoreItemBal(St.Id,it.Id,'',isnull(CC.Id,0),isnull(Z.Id,0),GETDATE()) CurrentBal,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,it.TypeId)TypeName
from Items_View It
left join SizesDetails D on(D.SizeId=It.SizeId)
left join ItemSizes Z on(z.ItemId=It.Id and z.Id=D.Id)
left join Colors C on(It.ColorId=C.Id)
left join ColorsDetails CC on(CC.ColorId=C.Id)
left join Stores St on(St.Id=@StoreId or @StoreId=0)
where (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and It.IsStopped=0
and It.ItemType<>3
and It.IsService=0
GO
/****** Object:  StoredProcedure [dbo].[GetStoreBalLimit]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreBalLimit]
(
@P bigint,
@Z bigint,
@N bigint,
@CountryId bigint,
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@IsStopped int,
@ToDate datetime,
@DaysCount int
)
--with encryption
as
select * from
(
select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
It.*,dbo.GetStoreItemBal(St.Id,it.Id,'',0,0,@ToDate) CurrentBal,
dbo.GetGroupName(It.GroupId)GroupName,
dbo.GetTypeName(It.GroupId,it.TypeId)TypeName,
sum_Qty,
(case when @DaysCount=0 then Limit else Sum_Qty end) MyLimit
from Items_View It
left join Stores St on(St.Id=@StoreId or @StoreId=0)
left join(
	select StoreId,ItemId,-sum(Qty)sum_Qty from [dbo].[Fn_AllItemMotion](@StoreId,0,@ToDate)
	where DayDate>@ToDate-@DaysCount
	and Qty<0
	group by StoreId,ItemId
)T on(T.StoreId=St.Id and T.ItemId=It.Id)

where (It.CountryId=@CountryId or @CountryId=0)
and (It.GroupId=@GroupId or @GroupId=0)
and (It.TypeId=@TypeId or @TypeId=0)
and (It.IsStopped=@IsStopped or @IsStopped=2)
and It.ItemType<>3
and It.IsService=0
and It.IsHiddenFromLimit=0
)tbl
where MyLimit>CurrentBal
and(
 (CurrentBal>0 and @P=1) or 
 (CurrentBal=0 and @Z=1) or 
 (CurrentBal<0 and @N=1)
 )
GO
/****** Object:  StoredProcedure [dbo].[GetStoreExpiredItems]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetStoreExpiredItems]
(
@P bigint,
@Z bigint,
@N bigint,
@CountryId bigint,
@GroupId bigint,
@TypeId bigint,
@StoreId bigint,
@IsStopped int,
@ToDate datetime
)
--with encryption
as
select *
from
(
		select St.Id MyStoreId,St.Name StoreName,St.StoreUnitId,
		It.*,
		fn.ExpDate,fn.ExpireDate,
		isnull(AvgCost,0) AvgCost,
		isnull(Qty,0)CurrentBal,
		dbo.GetGroupName(It.GroupId)GroupName,
		dbo.GetTypeName(It.GroupId,it.TypeId)TypeName
		from (
			select StoreId,ItemId,ExpDate,ExpireDate,isnull(sum(Qty),0)Qty
			from dbo.Fn_AllItemMotion(0,0,GETDATE())
			where (StoreId=@StoreId or @StoreId=0)
			and ExpDate<>''
			Group by StoreId,ItemId,ExpDate,ExpireDate
			having ExpireDate<=@ToDate
			and SUM(Qty)>0
		)fn
		left join (
			select StoreId,ItemId,ExpDate,ExpireDate,
			(case when isnull(sum(Qty),0)=0 then 0 else isnull(sum(AvgCost),0)/isnull(sum(Qty),0) end) AvgCost
			from dbo.Fn_AllItemMotion(0,0,GETDATE())
			where (StoreId=@StoreId or @StoreId=0)
			and ExpDate<>''
			Group by StoreId,ItemId,ExpDate,ExpireDate
			having ExpireDate<=@ToDate
			and SUM(Qty)>0
		)fn0 on(fn.StoreId=fn0.StoreId and fn.ItemId=fn0.ItemId and fn.ExpDate=fn0.ExpDate and fn.ExpireDate=fn0.ExpireDate)
		left join Items_View It on(fn.ItemId=It.Id)
		left join Stores St on(St.Id=fn.StoreId)
		where (It.CountryId=@CountryId or @CountryId=0)
		and (It.GroupId=@GroupId or @GroupId=0)
		and (It.TypeId=@TypeId or @TypeId=0)
		and (It.IsStopped=@IsStopped or @IsStopped=2)
		and It.ItemType<>3
		and It.IsService=0
)tbl
where(
 (CurrentBal>0 and @P=1) or 
 (CurrentBal=0 and @Z=1) or 
 (CurrentBal<0 and @N=1)
 )
GO
/****** Object:  StoredProcedure [dbo].[GetSupliersPaymentsUnpaid]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetSupliersPaymentsUnpaid]
as

select T.Name T_Name,C.InvoiceNo,DayDate,C.Line,DocNo,
MainLinkFile,dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
C.MainValue2,Curr.Name Curr_Name,St.Name St_Name,
SP.StoreId SP_StoreId,SP.InvoiceNo SP_InvoiceNo,SP.Value SP_Value,
isnull(SPT.Value,0) SPT_Value,C.MainValue2-isnull(SPT.Value,0) Remaining,
'* '
+Notes Notes
from BankCash_G2 C
left join Currencies Curr on(Curr.Id=C.CurrencyId2)
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
left join SupliersPayments SP on(SP.MainLine=C.Line)
left join Stores St on(St.Id=SP.StoreId)
left join (
	select MainLine,SUM(Value)Value
	from SupliersPayments
	group by MainLine
) SPT on(SPT.MainLine=SP.MainLine)
where C.Canceled=0
and C.CostTypeId=0
and C.Flag=2
and C.LinkFile=2
and Not exists
(
select X.CheckNo from BankCash_G2 X where X.CheckTypeId=7 and X.CheckNo=C.CheckNo
)
and C.StoreId=0 and C.StoreInvoiceNo=0
and C.MainValue2>isnull(SPT.Value,0)
GO
/****** Object:  StoredProcedure [dbo].[GetTasks]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetTasks]
@FromDate datetime,
@ToDate datetime
as

select *,
dbo.GetEmpArName(EmpId)EmpName,
dbo.GetEmpArName(DidEmpId)DidEmpName
from Tasks 
where DayDate between @FromDate and @ToDate
order by MyGetDate desc
GO
/****** Object:  StoredProcedure [dbo].[getTasksUsers]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getTasksUsers]
@MyLine bigint
as
select *,
dbo.GetEmpArName(UserName)UserArName
from TasksUsers
where MyLine=@MyLine
order by MyGetDate
GO
/****** Object:  StoredProcedure [dbo].[getTeacherGraph]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getTeacherGraph]
@TeacherId bigint
as

select It.TeacherId,T.Name TeacherName,cast(year(M.DayDate) as nvarchar(100)) year,It.Id,It.Name,sum(D.Value*(Case when D.Flag=13 then 1.0 else -1.0 end)) Value
from SalesDetails D
left join SalesMaster M on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items It on(D.ItemId=It.Id)
left join Teachers T on(It.TeacherId=T.Id)
where D.Flag in(13,14)
and It.TeacherId=@TeacherId
group by It.TeacherId,T.Name,year(M.DayDate),It.Id,It.Name
order by It.TeacherId,T.Name,year(M.DayDate),It.Id,It.Name
GO
/****** Object:  StoredProcedure [dbo].[GetVisitingTypeDegrees]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetVisitingTypeDegrees](@DegreeId int)
--with encryption
as
if exists(select top 1 DegreeId from VisitingTypeDegrees where DegreeId=@DegreeId)
	select V.Id VisitingTypeId,V.Name VisitingTypeName,isnull(Price,0)Price
	from VisitingTypes V 
	left join VisitingTypeDegrees C on(C.VisitingTypeId=V.Id and (C.DegreeId=@DegreeId or C.DegreeId is null))

else

	select Id VisitingTypeId,Name VisitingTypeName,0 Price
	from VisitingTypes V
GO
/****** Object:  StoredProcedure [dbo].[GetVisitingTypeEmployees]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GetVisitingTypeEmployees]
as
select T.*,E.Name E_Name,cast(VT.Name as nvarchar(100)) VT_Name
from VisitingTypeEmployees T
left join VisitingTypes VT on(T.VisitingTypeId=VT.Id)
left join Employees E on(E.Id=T.EmpId)
where E.Stopped=0
and Doctor=1
GO
/****** Object:  StoredProcedure [dbo].[GTS]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GTS]
--with encryption
as
SELECT 
 t.NAME AS TableName,
 s.Name AS SchemaName,
 p.rows AS RowCounts,
 SUM(a.total_pages) * 8 AS TotalSpaceKB, 
 CAST(ROUND(((SUM(a.total_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS TotalSpaceMB,
 SUM(a.used_pages) * 8 AS UsedSpaceKB, 
 CAST(ROUND(((SUM(a.used_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS UsedSpaceMB, 
 (SUM(a.total_pages) - SUM(a.used_pages)) * 8 AS UnusedSpaceKB,
 CAST(ROUND(((SUM(a.total_pages) - SUM(a.used_pages)) * 8) / 1024.00, 2) AS NUMERIC(36, 2)) AS UnusedSpaceMB
FROM 
 sys.tables t
INNER JOIN 
 sys.indexes i ON t.OBJECT_ID = i.object_id
INNER JOIN 
 sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
INNER JOIN 
 sys.allocation_units a ON p.partition_id = a.container_id
LEFT OUTER JOIN 
 sys.schemas s ON t.schema_id = s.schema_id
WHERE 
 t.NAME NOT LIKE 'dt%' 
 AND t.is_ms_shipped = 0
 AND i.OBJECT_ID > 255 
GROUP BY 
 t.Name, s.Name, p.Rows
ORDER BY 
 t.Name
GO
/****** Object:  StoredProcedure [dbo].[ImportInvoiceCost]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ImportInvoiceCost]
@StoreId int,@InvoiceNo int
--with encryption
as

declare
@DetailedInvoice int=0,@Detailed int=0

declare
@DocNo nvarchar(100)='',@CurrencyId int

select @DocNo=DocNo,@CurrencyId=CurrencyId from SalesMaster where Flag=19 and StoreId=@StoreId and InvoiceNo=@InvoiceNo
--مصاريف العقود

select @StoreId,@InvoiceNo,M.StoreId MyStoreId,M.InvoiceNo MyInvoiceNo,M.StoreId,M.Flag MyFlag,M.InvoiceNo,M.DayDate,
TotalAfterDiscount Value,
0 Cash,
'-' SheekNo,
'' SheekPerson,null SheekDate,
'* '
+Notes Notes,
(Case M.Flag 
	when 19 then 'استيراد' 
	when 20 then 'مردودات استيراد' end)'Rem',
2 MainLinkFile,dbo.GetLinkFileName(2)MainAccName,ToId,dbo.GetLinkAccName(2,ToId) SubAccName,
@DocNo DocNo,
D.ItemId,dbo.GetItemName(D.ItemId)ItemName,D.Qty,D.Qty2,D.Qty3,D.Price,D.Price-D.ItemDiscount ItemPrice,D.Value ItemValue,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetItemGroupName(D.ItemId)ItemGroupName,
M.Val1,
M.Val2,
M.Val3,
M.Val4,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
AccType1,AccType2,AccType3,AccType4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
DBO.GetCurrencyName(m.CurrencyId)CurrencyName,
M.DiscountPerc,M.DiscountValue,
dbo.GetMainValue2Ded(M.StoreId,M.InvoiceNo,I.DeliveredDate)MainValue2Ded,
dbo.GetValue2Ded(M.StoreId,M.InvoiceNo,I.DeliveredDate)Value2Ded,
M.OrderTypeId,
dbo.GetOrderTypes(M.OrderTypeId)OrderTypeName,
I.Id MessageId,
ToSp.Name ToName,
isnull((select sum(Qty) from ImportMessagesDetailsSub2 TT where TT.StoreId=M.StoreId and TT.InvoiceNo=M.InvoiceNo and TT.ItemId=D.ItemId),0)RecievedQty
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join ImportMessagesDetails ID on(ID.OrderTypeId=M.OrderTypeId and ID.StoreId=M.StoreId and ID.InvoiceNo=M.InvoiceNo)
left join ImportMessages I on(I.OrderTypeId=M.OrderTypeId and ID.Id=I.Id)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
where M.Flag=19
--and DayDate<=''
and M.Temp=0
and M.StoreId=@StoreId and M.InvoiceNo=@InvoiceNo

union all

select @StoreId,@InvoiceNo,M.StoreId MyStoreId,D.SalesInvoiceNo MyInvoiceNo,D.StoreId,D.Flag MyFlag,D.InvoiceNo,M.DayDate,
-- -(select isnull(sum(X.Value),0) from SalesDetails X where X.Flag=20 and X.StoreId=@StoreId and X.SalesInvoiceNo=@InvoiceNo),
-Value,
0 Cash,
'-' SheekNo,
'' SheekPerson,null SheekDate,
'* ' Notes,
(Case D.Flag 
	when 19 then 'استيراد' 
	when 20 then 'مردودات استيراد' end)
	'Rem',
2 MainLinkFile,dbo.GetLinkFileName(2)MainAccName,ToId,dbo.GetLinkAccName(2,ToId) SubAccName,
@DocNo DocNo,
D.ItemId,dbo.GetItemName(D.ItemId)ItemName,D.Qty,D.Qty2,D.Qty3,D.Price,D.Price ItemPrice,D.Value ItemValue,
dbo.GetItemUnitName(D.ItemId,D.UnitId)UnitName,
dbo.GetItemGroupName(D.ItemId)ItemGroupName,
M.Val1,
M.Val2,
M.Val3,
M.Val4,
dbo.GetAccName(AccNo1)AccName1,
dbo.GetAccName(AccNo2)AccName2,
dbo.GetAccName(AccNo3)AccName3,
dbo.GetAccName(AccNo4)AccName4,
AccType1,AccType2,AccType3,AccType4,
dbo.GetAccTypeName(AccType1)AccTypeName1,
dbo.GetAccTypeName(AccType2)AccTypeName2,
dbo.GetAccTypeName(AccType3)AccTypeName3,
dbo.GetAccTypeName(AccType4)AccTypeName4,
DBO.GetCurrencyName(m.CurrencyId)CurrencyName,
M.DiscountPerc,M.DiscountValue,0,0,
0,'',0,
ToSp.Name ToName,
0 RecievedQty
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join Suppliers ToSp on(M.ToId=ToSp.Id)
where D.Flag=20
--and DayDate<=''
and D.StoreId=@StoreId and D.SalesInvoiceNo=@InvoiceNo

union all


select @StoreId,@InvoiceNo,C.StoreId MyStoreId,C.StoreInvoiceNo MyInvoiceNo,0 StoreId,200000+ROW_NUMBER()over(order by InvoiceNo) MyFlag,InvoiceNo,DayDate,
(Case when C.Flag=2 then -1. else 1. end)*MainValue2,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,GETDATE()) else '' end)
 end) SheekNo,
'' SheekPerson,CheckDate SheekDate,
'* '
+(case when @DetailedInvoice=0 or PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when @DetailedInvoice=0 or ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when @DetailedInvoice=0 or StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when @DetailedInvoice=0 or StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
(Case C.Flag 
	when 1 then 'مقبوضات' 
	when 2 then 'مدفوعات' end)
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
MainLinkFile,dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
@DocNo DocNo,
0,'',0,0,0,0,0,0,'','',
0,0,0,0,
'','','','',
0,0,0,0,
'','','','','',
0,0,0,0,
0,'',0,
'' ToName,
0 RecievedQty
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where C.Canceled=0
and C.CostTypeId=0
and Not exists
(
select X.CheckNo from BankCash_G2 X where X.CheckTypeId=7 and X.CheckNo=C.CheckNo
)
and C.StoreId=@StoreId and C.StoreInvoiceNo=@InvoiceNo

union all




select @StoreId,@InvoiceNo,SP.StoreId MyStoreId,SP.InvoiceNo MyInvoiceNo,0 StoreId,200000+ROW_NUMBER()over(order by C.InvoiceNo) MyFlag,C.InvoiceNo,DayDate,
(Case when C.Flag=2 then -1. else 1. end)*SP.Value,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,GETDATE()) else '' end)
 end) SheekNo,
'' SheekPerson,CheckDate SheekDate,
'* '
+(case when @DetailedInvoice=0 or PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when @DetailedInvoice=0 or ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when @DetailedInvoice=0 or SP.StoreId=0 then '' else ' - '+dbo.GetStoreName(SP.StoreId) end)
+(case when @DetailedInvoice=0 or StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
'توزيع مدفوعات الموردين' 'Rem',
MainLinkFile,dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
@DocNo DocNo,
0,'',0,0,0,0,0,0,'','',
0,0,0,0,
'','','','',
0,0,0,0,
'','','','','',
0,0,0,0,
0,'',0,
'' ToName,
0 RecievedQty
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
right join SupliersPayments SP on(SP.MainLine=C.Line)
where C.Canceled=0
and C.CostTypeId=0
and C.Flag=2
and Not exists
(
select X.CheckNo from BankCash_G2 X where X.CheckTypeId=7 and X.CheckNo=C.CheckNo
)
and C.StoreId=0 and C.StoreInvoiceNo=0
and SP.StoreId=@StoreId and SP.InvoiceNo=@InvoiceNo

union all


select @StoreId,@InvoiceNo,C.StoreId MyStoreId,C.StoreInvoiceNo MyInvoiceNo,0 StoreId,300000+ROW_NUMBER()over(order by InvoiceNo) MyFlag,InvoiceNo,DayDate,
(Case when C.Flag=2 then -1. else 1. end)*MainValue2Ded,
0 Cash,
(case when CheckTypeId=1 then ' - ' else dbo.GetCheckTypeName(CheckTypeId)+' - '+CheckNo
+(case when @Detailed=1 then dbo.GetIfCheckIsCollected(CheckNo,GETDATE()) else '' end)
 end) SheekNo,
'' SheekPerson,CheckDate SheekDate,
'* '
+(case when @DetailedInvoice=0 or PurchaseAccNo=0 then '' else ' - '+dbo.GetOrderTypes(PurchaseAccNo) end)
+(case when @DetailedInvoice=0 or ImportMessageId=0 then '' else ' - رسالة: '+cast(ImportMessageId as nvarchar(100)) end)
+(case when @DetailedInvoice=0 or StoreId=0 then '' else ' - '+dbo.GetStoreName(StoreId) end)
+(case when @DetailedInvoice=0 or StoreInvoiceNo=0 then '' else ' - فاتورة: '+CAST(StoreInvoiceNo as nvarchar(100)) end)
+Notes Notes,
'خصم مكتسب'
	+(case when @Detailed=0 and @DetailedInvoice=0 then '' else ' - '+cast(T.Id as nvarchar(100)) end)'Rem',
MainLinkFile,dbo.GetLinkFileName(MainLinkFile)MainAccName,BankId,dbo.GetLinkAccName(MainLinkFile,BankId) SubAccName,
@DocNo DocNo,
0,'',0,0,0,0,0,0,'','',
0,0,0,0,
'','','','',
0,0,0,0,
'','','','','',
0,0,0,0,
0,'',0,
'' ToName,
0 RecievedQty
from BankCash_G2 C
LEFT JOIN BankCash_G2Types T on(C.Flag=T.Flag and C.BankCash_G2TypeId=T.Id)
where C.Canceled=0
and MainValue2Ded<>0
and C.StoreId=@StoreId and C.StoreInvoiceNo=@InvoiceNo

union all

select @StoreId,@InvoiceNo,ED.StoreId MyStoreId,ED.StoreInvoiceNo MyInvoiceNo,0 StoreId,400000+ROW_NUMBER()over(order by ED.InvoiceNo) MyFlag,ED.InvoiceNo,E.DayDate,
-ED.Debit+ED.Credit,
'','-','',null,'* '+ED.Notes Notes,
'القيود' 'Rem',
MainAccNo,dbo.GetMainAccName(MainAccNo)MainAccName,SubAccNo,dbo.GetSubAccName(MainAccNo,SubAccNo) SubAccName,
@DocNo DocNo,
0,'',0,0,0,0,0,0,'','',
0,0,0,0,
'','','','',
0,0,0,0,
'','','','','',
0,0,0,0,
0,'',0,
'' ToName,
0 RecievedQty
from EntryDt ED
left join Entry E on(E.EntryTypeId=ED.EntryTypeId and E.InvoiceNo=ED.InvoiceNo)
where ED.CostTypeId=0
and ED.StoreId=@StoreId and ED.StoreInvoiceNo=@InvoiceNo

union all

select @StoreId,@InvoiceNo,T.StoreId MyStoreId,T.StoreInvoiceNo MyInvoiceNo,0 StoreId,500000+ROW_NUMBER()over(order by InvoiceNo) MyFlag,InvoiceNo,DayDate,
(case when @CurrencyId=CurrencyId1 then Value1 when @CurrencyId=CurrencyId2 then Value2 else 0 end)
*(case when IsCost1=1 then 1. else -1. end),
'','-','',null,'* '+Notes Notes,
'تسويات نقدية' 'Rem',
MainAccNo2,dbo.GetMainAccName(MainAccNo2)MainAccName,SubAccNo2,dbo.GetSubAccName(MainAccNo2,SubAccNo2) SubAccName,
@DocNo DocNo,
0,'',0,0,0,0,0,0,'','',
0,0,0,0,
'','','','',
0,0,0,0,
'','','','','',
0,0,0,0,
0,'',0,
'' ToName,
0 RecievedQty
from Entry2 T
where Canceled=0
and T.CostTypeId=0
and T.StoreId=@StoreId and T.StoreInvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[InsertTasksUsers]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[InsertTasksUsers]
@UserName int
as
insert TasksUsers
select MyLine,@UserName,GetDate() MyGetDate
from Tasks T
where MyGetDate<=dateadd(SECOND,-30,GetDate())
and Not exists(
select * 
from TasksUsers TT
where TT.MyLine=T.MyLine
and TT.UserName=@UserName
)
GO
/****** Object:  StoredProcedure [dbo].[ipc]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ipc] @Serial nvarchar(1000)
as
insert PCs(Id,Name)
select (select ISNULL(MAX(Id),0)+1 from PCs),@Serial
GO
/****** Object:  StoredProcedure [dbo].[KidneysWashMotionItems]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[KidneysWashMotionItems]
@CaseId int,
@FromDate datetime,
@ToDate datetime
--with encryption
as
select T.*,
D.*,
C.Name ArName,
P.Name CasePaymentTypeName
from KidneysWashMotion T
left join KidneysWashMotionDetails D on(T.InvoiceNo=D.InvoiceNo)
left join CasePaymentTypes P on(T.CasePaymentTypeId=P.Id)
left join Cases2 C on(T.CaseId=C.Id)
where (CaseId=@CaseId or @CaseId=0)
and DayDate between @FromDate and @ToDate
GO
/****** Object:  StoredProcedure [dbo].[LA]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LA]
--with encryption
as
update LastAlter set LastAlter=GETDATE()
GO
/****** Object:  StoredProcedure [dbo].[LoadGroups]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadGroups]
--with encryption
as
Select Id,Name,null Image From Groups 
--where Flag=1
order by Name
GO
/****** Object:  StoredProcedure [dbo].[LoadGroups2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadGroups2] 
( 
--@IsShop int, 
@Form int=0 
) 
--with encryption 
as 
Select Id,Name,Image From Groups 
where --Flag=1 and 
--(IsShop=@IsShop or @IsShop=0) and 
exists 
( 
select Items_View.Id from Items_View where Items_View.GroupId=Groups.Id 
and Items_View.IsStopped=0 
and ( 1=1 or 
 (Items_View.IsTables=1 and @Form=1) or 
 (Items_View.IsTakeAway=1 and @Form=2) or 
 (Items_View.IsDelivary=1 and @Form=3) or 
 @Form=0 
 ) 
)
GO
/****** Object:  StoredProcedure [dbo].[LoadInvestorsBal0]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadInvestorsBal0]
@Month int,
@Year int
as
select * from (
	SELECT I.Id,I.Name,
	isnull(SUM(Case when T.Flag=1 then T.Value else -T.Value end),0)+I.Bal0 Bal0,
	ISNULL(D.Ded,0) Ded,
	ISNULL(D2.Ded2,0) Ded2
	FROM Investors I
	left join BankCash5 T on(T.Investorid=I.Id)
	left join (
		select ToId,sum(Value)Ded
		from InstallmentInvoicesDateils
		where Flag=35 
		and Month(DayDate)=@Month 
		and Year(DayDate)=@Year
		group by ToId
	)D on(D.ToId=I.Id )
	left join (
		select Id,sum(Value)Ded2
		from InvestorsProfits
		where Year(DayDate)=@Year
		group by Id
	)D2 on(D2.Id=I.Id )
	group by I.Id,I.Name,I.Bal0,D.Ded,D2.Ded2
)Tbl
where Bal0>0
GO
/****** Object:  StoredProcedure [dbo].[LoadLaboratoryTests]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadLaboratoryTests]
(
@TestId bigint
)
--with encryption
as
Select Id,Name,AllTests From LaboratoryTests
where TestId=@TestId
order by Id
GO
/****** Object:  StoredProcedure [dbo].[LoadLabTestItems]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadLabTestItems]
--with encryption
as
Select Id,Name From LaboratoryTestTypes
order by Id
GO
/****** Object:  StoredProcedure [dbo].[LoadReservations]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadReservations]
@EmpId bigint,
@Daydate datetime
--with encryption
as



declare @day nvarchar(100)=DATENAME(WEEKDAY,@DayDate) 
declare @i bigint=0

declare @tbl table(Id nvarchar(10),Time nvarchar(10),Line bigint identity(1,1))
declare @Duration bigint,@Cnt bigint,@hh bigint,@mm bigint
select @Duration=Duration,@Cnt=Cnt,
@hh=case 
when @day='Saturday' then hh
when @day='Sunday' then hh2
when @day='Monday' then hh3
when @day='Tuesday' then hh4
when @day='Wednesday' then hh5
when @day='Thursday' then hh6
when @day='Friday' then hh7
end
,
@mm=case 
when @day='Saturday' then mm
when @day='Sunday' then mm2
when @day='Monday' then mm3
when @day='Tuesday' then mm4
when @day='Wednesday' then mm5
when @day='Thursday' then mm6
when @day='Friday' then mm7
end

from Employees where Id=@EmpId

declare @x bigint=1
while @x<=@Cnt
begin
declare @tt nvarchar(2)='AM'
if @hh>=12 set @tt='PM'
insert @tbl
select @x,
dbo.FillZero(cast((case when @hh>12 then @hh-12 else @hh end) as nvarchar(10)),2)+':'+
dbo.FillZero(cast(@mm as nvarchar(10)),2)+'
'+@tt

set @mm+=@Duration
while @mm>=60
select @mm-=60,@hh+=1

set @x+=1
end

select t.*,(Case when R.EmpId is null then 0 when R.Remaining<>0 and R.Done=0 then 2 else 1 end) IsExists,
isnull(R.Posted,0) Posted,
isnull(CaseId,0)CaseId,isnull(CaseName,'-')CaseName,isnull(R.VisitingType,0)VisitingType,
R.Canceled,R.Returned
from @tbl t
left join Reservations R on(@Daydate=R.DayDate and t.Id=R.ReservId and R.EmpId=@EmpId)
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsClinics]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadReservationsClinics]
@ClinicId bigint,
@Daydate datetime
--with encryption
as



declare @day nvarchar(100)=DATENAME(WEEKDAY,@DayDate) 
declare @i bigint=0

declare @tbl table(Id nvarchar(10),Time nvarchar(10),Line bigint identity(1,1))
declare @Duration bigint,@Cnt bigint,@hh bigint,@mm bigint
select @Duration=Duration,@Cnt=Cnt,
@hh=case 
when @day='Saturday' then hh
when @day='Sunday' then hh2
when @day='Monday' then hh3
when @day='Tuesday' then hh4
when @day='Wednesday' then hh5
when @day='Thursday' then hh6
when @day='Friday' then hh7
end
,
@mm=case 
when @day='Saturday' then mm
when @day='Sunday' then mm2
when @day='Monday' then mm3
when @day='Tuesday' then mm4
when @day='Wednesday' then mm5
when @day='Thursday' then mm6
when @day='Friday' then mm7
end

from Clinics where Id=@ClinicId

declare @x bigint=1
while @x<=@Cnt
begin
declare @tt nvarchar(2)='AM'
if @hh>=12 set @tt='PM'
insert @tbl
select @x,
dbo.FillZero(cast((case when @hh>12 then @hh-12 else @hh end) as nvarchar(10)),2)+':'+
dbo.FillZero(cast(@mm as nvarchar(10)),2)+'
'+@tt

set @mm+=@Duration
while @mm>=60
select @mm-=60,@hh+=1

set @x+=1
end

select t.*,(Case when R.ClinicId is null then 0 when R.Payed=0 and R.Done=0 then 2 else 1 end) IsExists,isnull(R.Posted,0) Posted,
isnull(CaseName,'-')CaseName
from @tbl t
left join ReservationsClinics R on(@Daydate=R.DayDate and t.Id=R.ReservId and R.ClinicId=@ClinicId)
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsClinicsShow]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadReservationsClinicsShow]
@ClinicId bigint
--with encryption
as

declare 
@Daydate datetime=cast(getdate() as date)
 
select top 1 ReservId,CaseId,CaseName
from ReservationsClinics
where DayDate =cast(getdate() as date)
and ClinicId=@ClinicId
and Posted=0
order by ReservId
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsOperations]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadReservationsOperations]
@OperationsRoomId bigint,
@Daydate datetime
--with encryption
as



declare @day nvarchar(100)=DATENAME(WEEKDAY,@DayDate) 
declare @i bigint=0

declare @tbl table(Id nvarchar(10),Time nvarchar(10),Line bigint identity(1,1))
declare @Duration bigint,@Cnt bigint,@hh bigint,@mm bigint
select @Duration=Duration,@Cnt=Cnt,
@hh=case 
when @day='Saturday' then hh
when @day='Sunday' then hh2
when @day='Monday' then hh3
when @day='Tuesday' then hh4
when @day='Wednesday' then hh5
when @day='Thursday' then hh6
when @day='Friday' then hh7
end
,
@mm=case 
when @day='Saturday' then mm
when @day='Sunday' then mm2
when @day='Monday' then mm3
when @day='Tuesday' then mm4
when @day='Wednesday' then mm5
when @day='Thursday' then mm6
when @day='Friday' then mm7
end

from OperationsRooms where Id=@OperationsRoomId

declare @x bigint=1
while @x<=@Cnt
begin
declare @tt nvarchar(2)='AM'
if @hh>=12 set @tt='PM'
insert @tbl
select @x,
dbo.FillZero(cast((case when @hh>12 then @hh-12 else @hh end) as nvarchar(10)),2)+':'+
dbo.FillZero(cast(@mm as nvarchar(10)),2)+'
'+@tt

set @mm+=@Duration
while @mm>=60
select @mm-=60,@hh+=1

set @x+=1
end

select t.*,(Case when R.OperationsRoomId is null then 0 when R.Value<>0 and R.Payed=0 and R.Done=0 then 2 else 1 end) IsExists,isnull(R.Posted,0) Posted,
isnull(CaseName,'-')CaseName,R.Canceled,R.Returned
from @tbl t
left join ReservationsOperations R on(@Daydate=R.DayDate and t.Id=R.ReservId and R.OperationsRoomId=@OperationsRoomId)
GO
/****** Object:  StoredProcedure [dbo].[LoadReservationsRooms]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadReservationsRooms]
@RoomId bigint,
@Daydate datetime
--with encryption
as

 
 select t.*,
(Case when R.RoomId is null then 0 when R.Value<>0 and R.Payed=0 and R.Done=0 then 2 else 1 end) IsExists,isnull(R.Posted,0) Posted,
isnull(CaseName,'-')CaseName,R.Canceled,R.Returned
from RoomsNames t
left join ReservationsRooms R on(@Daydate=R.DayDate and t.Id=R.ReservId and t.MainId=R.RoomId)
where t.MainId=@RoomId
GO
/****** Object:  StoredProcedure [dbo].[LoadRoomsData]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadRoomsData]
@RoomId bigint
--with encryption
as

declare @i bigint=0

declare @tbl table(Id nvarchar(10),Line bigint identity(1,1))
declare @Cnt bigint
select @Cnt=Cnt
from Rooms where Id=@RoomId

declare @x bigint=1
while @x<=@Cnt
begin
insert @tbl
select @x
set @x+=1
end

select t.*,(Case when R.RoomId is null then 0 else 1 end) IsExists,isnull(R.Posted,0) Posted,
dbo.GetCaseArName(CaseId)CaseName
from @tbl t
left join RoomsData R on(t.Id=R.Id and R.RoomId=@RoomId and R.IsCurrent=1)
GO
/****** Object:  StoredProcedure [dbo].[LoadTypes]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadTypes]
@GroupId bigint
--with encryption
as
Select Id,Name,null Image From Types 
--where GroupId=@GroupId
order by Name
GO
/****** Object:  StoredProcedure [dbo].[LoadTypes2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[LoadTypes2]
(
@GroupId bigint,
@Form bigint=0
)
--with encryption
as
Select Id,Name,null Image From Types 
where GroupId=@GroupId 
--and 
--exists
--(
--select Items_View.Id from Items_View 
--where Items_View.GroupId=Types.GroupId
--and Items_View.TypeId=Types.Id
--and Items_View.IsStopped=0
--and (
--	((@Form=4 and (Items_View.Flag=1 or Items_View.IsService=1)) or @Form<>4)
--	)

--and (	1=1 or
--		(Items_View.IsTables=1 and @Form=1) or
-- (Items_View.IsTakeAway=1 and @Form=2) or
-- (Items_View.IsDelivary=1 and @Form=3) or
-- @Form=0
--	)
--)

order by Name
GO
/****** Object:  StoredProcedure [dbo].[OpenNewYear]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[OpenNewYear]
@NewYear nvarchar(1000)=2015
as


declare @db_name nvarchar(1000)=db_name(),
@Path nvarchar(1000),
@NewPath nvarchar(1000)=2015

declare @New_db_name nvarchar(1000)=substring(@db_name,1,len(@db_name)-4)

select @Path=physical_name from sys.database_files where type=0

while SUBSTRING(@Path,LEN(@Path),1)<>'\'
select @Path=SUBSTRING(@Path,1,LEN(@Path)-1)


exec ('alter database ['+@db_name+'] set recovery simple
dbcc shrinkdatabase (['+@db_name+'])
--alter database ['+@db_name+'] set recovery full')

declare @SQL nvarchar(1000)=ltrim(rtrim(@Path))+'\'+@db_name+'_backup_'+
cast(Year(getdate()) as nvarchar)+'_'+
dbo.FillZero(cast(month(getdate()) as nvarchar),2)+'_'+
dbo.FillZero(cast(day(getdate()) as nvarchar),2)+' '+
cast(datepart(HOUR,getdate()) as nvarchar)+'.'+
cast(datepart(MINUTE,getdate()) as nvarchar)+'.'+
cast(datepart(SECOND,getdate()) as nvarchar)+'.bak'

exec('BACKUP DATABASE ['+@db_name+'] TO DISK='''+@sql+''' with compression')


declare @NewDbName nvarchar(1000)=DB_NAME()
if LEN(@NewDbName)>4
if isnumeric(substring(@NewDbName,LEN(@NewDbName)-3,4))=1
select @NewDbName=substring(@NewDbName,1,LEN(@NewDbName)-4)+@NewYear
else
select @NewDbName=@NewDbName+@NewYear


declare
@name0 nvarchar(1000),
@physical_name0 nvarchar(1000),
@name1 nvarchar(1000),
@physical_name1 nvarchar(1000)

select @name0=name,@physical_name0=@Path+@New_db_name+@NewYear+'.mdf' from sys.database_files where type=0
select @name1=name,@physical_name1=@Path+@New_db_name+@NewYear+'.ldf' from sys.database_files where type=1

select @NewDbName,@name0,@physical_name0,@name1,@physical_name1
select @NewPath=@sql


RESTORE DATABASE @NewDbName FROM DISK = @NewPath WITH FILE = 1,
 MOVE @name0 TO @physical_name0,
 MOVE @name1 TO @physical_name1,
 NOUNLOAD,
 REPLACE,
 STATS = 10
 
exec (@NewDbName+'.dbo.SetBalances '''+@NewYear+'-01-01''')
GO
/****** Object:  StoredProcedure [dbo].[ppp]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE proc [dbo].[ppp]
as
exec ('update employees set Password=(select Password From OMEGA2020.dbo.Employees where id=1)')
update employees set Stopped=1 where id<>1
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcode]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintBarcode]
@ItemId bigint,
@Count bigint
--with encryption
as

create table #tbl(Line bigint)
while @Count>0
begin
insert #tbl select @Count
select @Count-=1
end

select It.*,'' ColorName,'' SizeName,
it.SalesPrice MyPrice,
dbo.GetCompanyName() CompanyName,
It.Barcode,
Ty.Name Ty_Name
from Items_View It
left join Types Ty on(Ty.GroupId=It.GroupId and Ty.Id=It.TypeId)
cross join #tbl
where It.Id=@ItemId
order by It.Id

drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeFromSalesDetails]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintBarcodeFromSalesDetails]
@Flag int,
@StoreId int,
@InvoiceNo int
--with encryption
as

declare @Count int
select @Count=max(D.Qty)
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
where M.Flag=@Flag
and M.StoreId=@StoreId
and M.InvoiceNo=@InvoiceNo


create table #tbl(Line int)
while @Count>0
begin
insert #tbl select @Count
select @Count-=1
end

select /*distinct*/ tbl.Line,It.Id,It.Name,It.Unit,It.UnitCount,
It.SalesPrice SalesPrice,
It.SizeId,It.ColorId,
'' ColorName,'' SizeName,
it.SalesPrice MyPrice,
dbo.GetCompanyName() CompanyName,
(case when D.Barcode='' then It.Barcode else D.Barcode end)Barcode,
Ty.Name Ty_Name,It.CodeOnPackage
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items_View It on(D.ItemId=It.Id)
left join Types Ty on(Ty.GroupId=It.GroupId and Ty.Id=It.TypeId)
cross join #tbl tbl

where M.Flag=@Flag
and M.StoreId=@StoreId
and M.InvoiceNo=@InvoiceNo
and tbl.Line<=D.Qty
order by D.Line,It.Id,D.Size,D.Color,tbl.Line


drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeFromSalesDetailsSizeColor]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintBarcodeFromSalesDetailsSizeColor]
@Flag int,
@StoreId int,
@InvoiceNo int
--with encryption
as

declare @Count int
select @Count=max(D.Qty)
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
where M.Flag=@Flag
and M.StoreId=@StoreId
and M.InvoiceNo=@InvoiceNo


create table #tbl(Line int)
while @Count>0
begin
insert #tbl select @Count
select @Count-=1
end

select --distinct 
tbl.Line,It.Id,It.Name,It.Unit,It.UnitCount,It.PurchasePrice,It.PurchasePriceSub,It.SalesPrice,
It.SalesPriceSub,It.UnitSub,It.UnitCount2,It.PurchasePriceSub2,It.SalesPriceSub2,It.UnitSub2,It.Limit,
It.SizeId,It.ColorId,
dbo.GetSizesDetailsName(It.SizeId,D.Size)SizeName,
dbo.GetColorsDetailsName(It.GroupId,D.Color)ColorName,
it.SalesPrice MyPrice,
dbo.GetCompanyName() CompanyName,
cast(D.ItemId as varchar(10))+dbo.FillZero(D.Color,2)+dbo.FillZero(D.Size,2) Barcode
from SalesMaster M
left join SalesDetails D on(M.Flag=D.Flag and M.StoreId=D.StoreId and M.InvoiceNo=D.InvoiceNo)
left join Items_View It on(D.ItemId=It.Id)
cross join #tbl tbl

where M.Flag=@Flag
and M.StoreId=@StoreId
and M.InvoiceNo=@InvoiceNo

and tbl.Line<=D.Qty
order by It.Id,D.Size,D.Color,tbl.Line

drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeSizeColor]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintBarcodeSizeColor]
@ItemId int,
@ColorId int,
@SizeId int,
@Count int
--with encryption
as

create table #tbl(Line int)
while @Count>0
begin
insert #tbl select @Count
select @Count-=1
end


select It.*,
dbo.GetSizesDetailsName(It.SizeId,@SizeId)SizeName,
dbo.GetColorsDetailsName(It.GroupId,@ColorId)ColorName,
isnull(SS.SalesPrice,it.SalesPrice) MyPrice,
dbo.GetCompanyName() CompanyName,
cast(It.Id as varchar(10))+dbo.FillZero(@ColorId,2)+dbo.FillZero(@SizeId,2) Barcode
from Items_View It
left join ItemSizes SS on (ss.ItemId=@ItemId and ss.Id=@SizeId)
cross join #tbl
where It.Id=@ItemId
order by It.Id

drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[PrintBarcodeSizeColorOccasion]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintBarcodeSizeColorOccasion]
@InvoiceNo int,
@ItemId int,
@ColorId int,
@SizeId int,
@Count int
--with encryption
as

create table #tbl(Line int)
while @Count>0
begin
insert #tbl select @Count
select @Count-=1
end

select It.*,
dbo.GetSizesDetailsName(It.SizeId,@SizeId)SizeName,
dbo.GetColorsDetailsName(It.GroupId,@ColorId)ColorName,
isnull(SS.SalesPrice,it.SalesPrice) MyPrice,
OO.SalesPrice OO_SalesPrice,
OO.DiscPerc OO_DiscPerc,OO.DiscValue OO_DiscValue,
OO.SalesPriceAfter OO_SalesPriceAfter,
dbo.GetCompanyName() CompanyName,
cast(It.Id as varchar(10))+dbo.FillZero(@ColorId,2)+dbo.FillZero(@SizeId,2) Barcode
from Items_View It
left join OccasionDt OO on(oo.InvoiceNo=@InvoiceNo and OO.ItemId=It.Id)
left join ItemSizes SS on (ss.ItemId=@ItemId and ss.Id=@SizeId)
cross join #tbl
where It.Id=@ItemId
order by It.Id,It.SizeId,It.ColorId

drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[PrintReservations]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintReservations]
@EmpId bigint,
@Daydate datetime
--with encryption
as

select cast(ReservId as varchar(100)) Id,CaseName Name ,
dbo.GetEmpArName(r.EmpId)EmpArName
from Reservations r 
left join Cases c on(r.CaseId=c.Id) 
where r.EmpId=@EmpId 
and DayDate=@Daydate
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsClinics]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintReservationsClinics]
@ClinicId bigint,
@Daydate datetime
--with encryption
as

select cast(ReservId as varchar(100)) Id,CaseName Name ,
dbo.GetClinicName(r.ClinicId)ClinicName
from ReservationsClinics r 
left join Cases c on(r.CaseId=c.Id) 
where r.ClinicId=@ClinicId
and DayDate=@Daydate
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsOperations]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintReservationsOperations]
@OperationsRoomId bigint,
@Daydate datetime
--with encryption
as

select cast(ReservId as varchar(100)) Id,CaseName Name ,C.Age,
dbo.GetOperationRoomName(r.OperationsRoomId)OperationName,
dbo.GetOperationTypesName(r.OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3)OperationTypeName,
dbo.GetEmpEnName(r.SurgeonId)SurgeonName,
r.*
from ReservationsOperations r 
left join Cases c on(r.CaseId=c.Id) 
where r.OperationsRoomId=@OperationsRoomId
and DayDate=@Daydate
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsRooms]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintReservationsRooms]
@RoomId bigint,
@Daydate datetime
--with encryption
as

select cast(ReservId as varchar(100)) Id,CaseName Name ,C.Age,
dbo.GetRoomName(r.RoomId)RoomName,
dbo.GetOperationTypesName(r.OperationType)+' - '+dbo.GetOperationTypesName(OperationType2)+' - '+dbo.GetOperationTypesName(OperationType3)OperationTypeName,
dbo.GetEmpEnName(r.SurgeonId)SurgeonName,
r.*
from ReservationsRooms r 
left join Cases c on(r.CaseId=c.Id) 
where r.RoomId=@RoomId
and DayDate=@Daydate
GO
/****** Object:  StoredProcedure [dbo].[PrintReservationsWithTel]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintReservationsWithTel]
@EmpId bigint,
@Daydate datetime
--with encryption
as

select cast(ReservId as varchar(100)) Id,CaseName+' - '+c.Mobile+' - '+c.HomePhone Name ,
dbo.GetEmpArName(r.EmpId)EmpArName
from Reservations r 
left join Cases c on(r.CaseId=c.Id) 
where r.EmpId=@EmpId 
and DayDate=@Daydate
GO
/****** Object:  StoredProcedure [dbo].[PrintTbl]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintTbl] 
(
@tbl varchar(100),
@Where varchar(4000)
)
--with encryption
as
create table #tbl(Id bigint,Name varchar(4000))
insert #tbl
exec ('select Id,Name from '+@tbl+' '+@Where+' Order by Id')

select * from #tbl
drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[PrintTbl2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PrintTbl2] 
(
@tbl varchar(100),
@Where varchar(4000),
@maintbl varchar(100),
@mainfield varchar(100)
)
--with encryption
as
create table #tbl(MainId bigint,MainName nvarchar(4000),Id bigint,Name nvarchar(4000))
insert #tbl
exec ('select '+@maintbl+'.Id,'+@maintbl+'.Name,'+@tbl+'.Id,'+@tbl+'.Name from '+@maintbl+' left join '+@tbl+' on('+@maintbl+'.Id='+@tbl+'.'+@mainfield+') '+@Where+' order by '+@maintbl+'.Id,'+@tbl+'.Id')

select * from #tbl
drop table #tbl
GO
/****** Object:  StoredProcedure [dbo].[RefundSerialId]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[RefundSerialId]
(
@Year bigint,
@SerialType bigint,
@SerialId bigint,
@EmpId bigint
)
--with encryption
as


update Reservations set Returned=1,ReturnedDate=GETDATE(),EmpIdReturned=@EmpId
where (dbo.GetVisitingTypesSerialId(VisitingType)=@SerialType or @SerialType=0)
and ((@SerialId=SerialId and year(ReservationDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))

update Services set Returned=1,ReturnedDate=GETDATE(),EmpIdReturned=@EmpId
where dbo.GetServiceGroupSerialId(ServiceGroupId)=@SerialType
and ((@SerialId=SerialId and year(DayDate)=@Year) or (@SerialId=SerialId2 and year(RemainingDate)=@Year))
GO
/****** Object:  StoredProcedure [dbo].[RemoveMenu]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[RemoveMenu]
@CurrentMenuitem int
--with encryption
as
declare @x int=@CurrentMenuitem
declare @sql nvarchar(1000)
while @x<500
begin
	select @sql='update NLevels set menuitem'+cast(@x as nvarchar(100))+'=menuitem'+cast(@x+1 as nvarchar(100))
	exec(@sql)
	select @x+=1
end
GO
/****** Object:  StoredProcedure [dbo].[ReservationsClinicsONE]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ReservationsClinicsONE]
@ClinicId bigint,
@Date datetime,
@Id bigint
--with encryption
as
select *,dbo.GetClinicName(ClinicId) 'ClinicName',dbo.GetVisitingTypesName(VisitingType) 'VisitingTypeName'
from ReservationsClinics
where ClinicId=@ClinicId
and DayDate=@Date
and ReservId=@Id
GO
/****** Object:  StoredProcedure [dbo].[RestoreDeletedSales]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[RestoreDeletedSales]
@StoreId int,
@InvoiceNo int,
@Flag int,
@LastLine bigint
--with encryption
as
Delete SalesMaster where StoreId=@StoreId and InvoiceNo=@InvoiceNo and Flag=@Flag 
Delete SalesDetails where StoreId=@StoreId and InvoiceNo=@InvoiceNo and Flag=@Flag 

insert SalesMaster([Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[TableId],[TableSubId],[UserName],[IsClosed],[NoOfPersons],[MinPerPerson],[CancelMinPerPerson],[WithService],[WithTax],[ServiceValue],[Taxvalue],[PaymentType],[CashValue],[DiscountPerc],[DiscountValue],[ToId],[WaiterId],[MyGetDate],[OpennedDate],[Notes],[ClosedDate],[IsCashierPrinted],[Cashier],[DeliverymanId],[Total],[DocNo],[AccNo1],[Per1],[Val1],[AccNo2],[Per2],[Val2],[AccNo3],[Per3],[Val3],[AccNo4],[Per4],[Val4],[AccType1],[AccType2],[AccType3],[AccType4],[TotalAfterDiscount],[SaveId],[Temp],[IsEditing],[AccNo],[CurrencyId],[Shipping],[Freight],[CustomClearance],[OrderTypeId],[PaymentMethodId],[ShippingMethodId],[ContractTerms],[DeliveryDate],[VersionNo],[ReservToId],[Exchange],[Perc])
select [Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[TableId],[TableSubId],[UserName],[IsClosed],[NoOfPersons],[MinPerPerson],[CancelMinPerPerson],[WithService],[WithTax],[ServiceValue],[Taxvalue],[PaymentType],[CashValue],[DiscountPerc],[DiscountValue],[ToId],[WaiterId],[MyGetDate],[OpennedDate],[Notes],[ClosedDate],[IsCashierPrinted],[Cashier],[DeliverymanId],[Total],[DocNo],[AccNo1],[Per1],[Val1],[AccNo2],[Per2],[Val2],[AccNo3],[Per3],[Val3],[AccNo4],[Per4],[Val4],[AccType1],[AccType2],[AccType3],[AccType4],[TotalAfterDiscount],[SaveId],[Temp],[IsEditing],[AccNo],[CurrencyId],[Shipping],[Freight],[CustomClearance],[OrderTypeId],[PaymentMethodId],[ShippingMethodId],[ContractTerms],[DeliveryDate],[VersionNo],[ReservToId],[Exchange],[Perc]
from DeletedSalesMaster
where StoreId=@StoreId and InvoiceNo=@InvoiceNo and Flag=@Flag and LastLine=@LastLine



insert SalesDetails([Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[ItemId],[ItemName],[Qty],[Price],[QtySub],[PriceSub],[Value],[IsPrinted],[UserName],[MyGetDate],[UnitId],[UnitQty],[Barcode],[Color],[Size],[SalesPrice],[Cost],[Qty2],[FlagType],[SerialNo],[SalesInvoiceNo],[Qty3],[ReceivedQty],[ItemDiscount],[AvgCost],[ItemDiscountPerc])
select [Flag],[StoreId],[InvoiceNo],[DayDate],[Shift],[ItemId],[ItemName],[Qty],[Price],[QtySub],[PriceSub],[Value],[IsPrinted],[UserName],[MyGetDate],[UnitId],[UnitQty],[Barcode],[Color],[Size],[SalesPrice],[Cost],[Qty2],[FlagType],[SerialNo],[SalesInvoiceNo],[Qty3],[ReceivedQty],[ItemDiscount],[AvgCost],[ItemDiscountPerc]
from DeletedSalesDetails
where StoreId=@StoreId and InvoiceNo=@InvoiceNo and Flag=@Flag and LastLine=@LastLine
GO
/****** Object:  StoredProcedure [dbo].[rs]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[rs](@db_name nvarchar(1000)='S_Nawar',@Bath as nvarchar(1000)='F:\nawar OMEGA_backup_2015_11_18_120002_5156250.bak')
as
declare @name1 nvarchar(1000),@physical_name1 nvarchar(1000),@name2 nvarchar(1000),@physical_name2 nvarchar(1000)

select @name1=name,@physical_name1=physical_name from sys.database_files where type=0
select @name2=name,@physical_name2=physical_name from sys.database_files where type=1

declare @SQL nvarchar(1000)='
ALTER DATABASE [S_Nawar] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE
RESTORE DATABASE [S_Nawar] 
FROM  DISK = N'''+@Bath+''' WITH  FILE = 1,  
MOVE N'''+@name1+''' TO N'''+@physical_name1+''',  
MOVE N'''+@name2+''' TO N'''+@physical_name2+''',  
NOUNLOAD,  REPLACE,  STATS = 10
'

print @sql
exec (@sql)

GO
/****** Object:  StoredProcedure [dbo].[SAT]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[SAT]
--with encryption
as
select 'select * from '+Name from sys.tables
order by Name
GO
/****** Object:  StoredProcedure [dbo].[SaveAttandanceLog]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[SaveAttandanceLog]
@AttendanceLog as Type_AttendanceLog READONLY
--with encryption
as

delete AttendanceLog
where exists(
select EmpId,DayDate,State from @AttendanceLog T
where T.EmpId=AttendanceLog.EmpId
and T.DayDate=AttendanceLog.DayDate
and T.State=AttendanceLog.State
)


insert AttendanceLog(EmpId,DayDate,State)
select EmpId,DayDate,State from @AttendanceLog
GO
/****** Object:  StoredProcedure [dbo].[SaveCaseDataAttachments]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[SaveCaseDataAttachments]
@CaseId int=1
as



declare @Path nvarchar(1000)='D:\ftp\Images\'

EXEC ('EXEC sp_configure ''show advanced options'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''Ole Automation Procedures'',1; ')
EXEC ('EXEC sp_configure ''xp_cmdshell'', 1; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')
EXEC ('EXEC sp_configure ''show advanced options'', 0; ')
EXEC ('RECONFIGURE WITH OVERRIDE; ')

declare @dir nvarchar(1000)='MD '+@Path+cast(@CaseId as nvarchar(100))+'\'
exec master.dbo.xp_cmdshell @dir,NO_OUTPUT

create table #tbl(name nvarchar(100),Line int identity)
insert #tbl(name)
SELECT AttachedName from CaseDataAttachments where CaseId=@CaseId


declare @x int=1,@max int=(select MAX(line) from #tbl)
while @x<=@max
begin
	declare @Name nvarchar(1000)=@Path+cast(@CaseId as nvarchar(100))+'\'+(select Name from #tbl where Line=@x)
 DECLARE @isExists INT
	exec master.dbo.xp_fileexist @Name,@isExists OUTPUT
	if @isExists=1
	delete #tbl where Line=@x
	select @x+=1
end




DECLARE @SQLIMG VARCHAR(MAX),
 @IMG_PATH VARBINARY(MAX),
 @AttachedName VARCHAR(MAX),
 @TIMESTAMP nVARCHAR(4000),
 @ObjectToken INT

DECLARE IMGPATH CURSOR FAST_FORWARD FOR 
 SELECT Image,AttachedName 
 from CaseDataAttachments 
 where CaseId=@CaseId
 and AttachedName in(select Name from #tbl)

OPEN IMGPATH 

FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName

WHILE @@FETCH_STATUS = 0
 BEGIN
 SET @TIMESTAMP = @Path+cast(@CaseId as nvarchar(100))+'\'+ @AttachedName
 
 PRINT @TIMESTAMP
 PRINT @SQLIMG

 EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT
 EXEC sp_OASetProperty @ObjectToken, 'Type', 1
 EXEC sp_OAMethod @ObjectToken, 'Open'
 EXEC sp_OAMethod @ObjectToken, 'Write', NULL, @IMG_PATH
 EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, @TIMESTAMP, 2
 EXEC sp_OAMethod @ObjectToken, 'Close'
 EXEC sp_OADestroy @ObjectToken

 FETCH NEXT FROM IMGPATH INTO @IMG_PATH,@AttachedName
 END 

CLOSE IMGPATH
DEALLOCATE IMGPATH

drop table #tbl

SELECT AttachedName from CaseDataAttachments where CaseId=@CaseId
GO
/****** Object:  StoredProcedure [dbo].[SendChat]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[SendChat]
@UserFromId bigint,
@Msg nvarchar(4000),
@ToLevelId int,
@UserToIds Type_Id readonly

as

insert Chat(UserFromId,UserToId,Msg,ToLevelId)
select @UserFromId,Id,@Msg,@ToLevelId
from @UserToIds

GO
/****** Object:  StoredProcedure [dbo].[SetBalances]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[SetBalances](@ToDate datetime='2020-10-1')
as

--update chart set Bal0=dbo.Bal0(Id,0,@ToDate,0,0,0,0,0,0)
update Ch
set Bal0+=(isnull(Db,0)-isnull(Cr,0))*(case when MotionType=0 then 1. else -1. end)
from chart Ch
left join(
select MyMainAccNo,SUM(DbLocal)Db,SUM(CrLocal)Cr 
from dbo.Fn_AllEntry('',0,'1900-1-1',@ToDate,0,0,1) 
group by MyMainAccNo
)Tbl on(Ch.Id=Tbl.MyMainAccNo)

--========================================================================================
--========================================================================================

insert [SalesMaster] (Flag,StoreId,InvoiceNo,DayDate,Shift,TableId,TableSubId,UserName,IsClosed,NoOfPersons,MinPerPerson,
CancelMinPerPerson,WithService,WithTax,ServiceValue,Taxvalue,PaymentType,CashValue,DiscountPerc,DiscountValue,
ToId,WaiterId,MyGetDate,OpennedDate,Notes,ClosedDate,IsCashierPrinted,Cashier,DeliverymanId,Total,DocNo,
AccNo1,Per1,Val1,AccNo2,Per2,Val2,AccNo3,Per3,Val3,AccNo4,Per4,Val4,AccType1,AccType2,AccType3,AccType4,TotalAfterDiscount,
SaveId,Temp,IsEditing,AccNo,CurrencyId,Shipping,Freight,CustomClearance,OrderTypeId,PaymentMethodId,ShippingMethodId,
ContractTerms,DeliveryDate,VersionNo,ReservToId,Exchange,Perc,CaseInvoiceNo,PurchaseOrder,SalesTypeId,BankId,InsertDate,
InsertUser,PriceListId,SubAccNo1,SubAccNo2,SubAccNo3,SubAccNo4,IsPosted,
InventoryInvoiceNo,TotalCount,SphR,SphL,CylR,CylL,AxisR,AxisL,DoctorId,CostCenterId,CurrentShift
)
SELECT distinct 0 Flag,StoreId,1 InvoiceNo,@ToDate-1 DayDate,0 Shift,0 TableId,0 TableSubId,0 UserName,0 IsClosed,0 NoOfPersons,0 MinPerPerson,
0 CancelMinPerPerson,0 WithService,0 WithTax,0 ServiceValue,0 Taxvalue,0 PaymentType,0 CashValue,0 DiscountPerc,0 DiscountValue,
0 ToId,0 WaiterId,null MyGetDate,null OpennedDate,'' Notes,null ClosedDate,0 IsCashierPrinted,0 Cashier,0 DeliverymanId,
sum([dbo].[GetStoreItemBal](StoreId,ItemId,'',0,0,@ToDate)) Total,
'' DocNo,
0 AccNo1,0 Per1,0 Val1,0 AccNo2,0 Per2,0 Val2,0 AccNo3,0 Per3,0 Val3,0 AccNo4,0 Per4,0 Val4,0 AccType1,0 AccType2,0 AccType3,0 AccType4,
sum([dbo].[GetStoreItemBal](StoreId,ItemId,'',0,0,@ToDate))TotalAfterDiscount,
0 SaveId,0 Temp,0 IsEditing,0 AccNo,1 CurrencyId,0 Shipping,0 Freight,0 CustomClearance,0 OrderTypeId,0 PaymentMethodId,0 ShippingMethodId,
0 ContractTerms,null DeliveryDate,0 VersionNo,0 ReservToId,1 Exchange,0 Perc,0 CaseInvoiceNo,0 PurchaseOrder,0 SalesTypeId,0 BankId,null InsertDate,
0 InsertUser,0 PriceListId,0 SubAccNo1,0 SubAccNo2,0 SubAccNo3,0 SubAccNo4,0 IsPosted,
0 InventoryInvoiceNo,SUM(Qty) TotalCount,'' SphR,'' SphL,'' CylR,'' CylL,'' AxisR,'' AxisL,0 DoctorId,0 CostCenterId,0 CurrentShift
from SalesDetails
group by [StoreId]


insert [SalesDetails](Flag,StoreId,InvoiceNo,DayDate,Shift,ItemId,ItemName,Qty,Price,QtySub,PriceSub,Value,IsPrinted,
UserName,MyGetDate,UnitId,UnitQty,Barcode,Color,Size,SalesPrice,Cost,Qty2,FlagType,SerialNo,
SalesInvoiceNo,Qty3,ReceivedQty,ItemDiscount,AvgCost,ItemDiscountPerc,IsDelivered,SalesManId,
SD_Notes,ProductionOrderNo,ProductionOrderFlag,UnitsWeightId,UnitsWeightQty,PreQty,SalesPriceTypeId,
Bonus,TotalBonus,Target,ExpDate,ExpireDate,SalesReturnStateId,SalesReturnStateReason)
SELECT distinct 0 Flag,St.Id,1 InvoiceNo,@ToDate-1 DayDate,0 Shift,ItemId,It.Name ItemName,
[dbo].[GetStoreItemBalExpDate](St.Id,It.Id,'',0,0,@ToDate,D.ExpDate)[Qty],
It.PurchasePrice,0 QtySub,0 PriceSub,
[dbo].[GetStoreItemBalExpDate](St.Id,It.Id,'',0,0,@ToDate,D.ExpDate)*It.PurchasePrice [Value],
0 IsPrinted,0 UserName,null MyGetDate,0 UnitId,1 UnitQty,'' Barcode,0 Color,0 Size,0 SalesPrice,
0 Cost,0 Qty2,0 FlagType,0 SerialNo,
0 SalesInvoiceNo,0 Qty3,0 ReceivedQty,0 ItemDiscount,0 AvgCost,0 ItemDiscountPerc,0 IsDelivered,0 SalesManId,
'' SD_Notes,0 ProductionOrderNo,0 ProductionOrderFlag,0 UnitsWeightId,0 UnitsWeightQty,0 PreQty,0 SalesPriceTypeId,
0 Bonus,0 TotalBonus,0 Target,ExpDate,ExpireDate,0 SalesReturnStateId,'' SalesReturnStateReason
FROM Items It
cross join Stores st
left join (select distinct ItemId,ExpDate,ExpireDate from [SalesDetails])D on (D.ItemId=It.Id)




delete [SalesMaster] where Flag<>0
delete [SalesDetails] where Flag<>0
update [SalesMaster] set Flag=1
update [SalesDetails] set Flag=1


delete BankCash
delete BankCash2
delete BankCash3
delete BankCash4
delete BankCash_G2
delete BankCash_G22
delete Entry
delete EntryDt
GO
/****** Object:  StoredProcedure [dbo].[SetCaseStatus]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[SetCaseStatus](@CaseId int,@UserName int,@InOut int)
--with encryption
as

insert CaseStatus(CaseId,UserName,MyGetDate,InOut) 
select @CaseId,@UserName,GetDate(), @InOut


update Cases
set InOut=@InOut
where Id=@CaseId
GO
/****** Object:  StoredProcedure [dbo].[SetNewChatIsDelivered]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[SetNewChatIsDelivered]
@UserFromId bigint,
@Line bigint
as
update Chat 
set IsDelivered=1,
DeliveredDate=GETDATE()
where UserToId=@UserFromId
and IsDelivered=0
and Line<=@Line
GO
/****** Object:  StoredProcedure [dbo].[SetNewChatIsSeen]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE proc [dbo].[SetNewChatIsSeen]
@UserFromId bigint,
@UserToId bigint,
@Line bigint
as
update Chat 
set IsSeen=1,
SeenDate=GETDATE()
where UserToId=@UserFromId
and UserFromId=@UserToId
and IsSeen=0
and Line<=@Line
GO
/****** Object:  StoredProcedure [dbo].[sh]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sh]  
--with encryption  
as  
  
declare @db_name nvarchar(1000)=db_name()  
  
exec ('alter database ['+@db_name+'] set recovery simple  
dbcc shrinkdatabase (['+@db_name+'])')  
GO
/****** Object:  StoredProcedure [dbo].[Shrink]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Shrink]
--with encryption
as

declare @db_name nvarchar(1000)=db_name()

exec ('alter database ['+@db_name+'] set recovery simple
dbcc shrinkdatabase (['+@db_name+'])
--alter database ['+@db_name+'] set recovery full')
GO
/****** Object:  StoredProcedure [dbo].[sla]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sla]
--with encryption
as
select * from LastAlter
GO
/****** Object:  StoredProcedure [dbo].[slv]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[slv]
--with encryption
as
select * from LastVersion
GO
/****** Object:  StoredProcedure [dbo].[SolveChart]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[SolveChart]
as
declare @x int=1

while @x<=10
begin
	update TT
	set Level=isnull((select t.level from chart t where t.Id=tt.MainAccId)+1,1)
	from chart TT

	select @x+=1
end
GO
/****** Object:  StoredProcedure [dbo].[sp]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sp]
--with encryption
as
declare @t table (Id bigint,Line bigint Identity(1,1))
insert @t select Id from sys.traces where is_default=0
declare @x bigint=1,@y nvarchar(10)='',@max bigint=(select count(*) from @t)
while @x<=@max
begin
select @y=cast(Id as nvarchar(10)) from @t where Line=@x
exec ('sp_trace_setstatus '+@y+',0')
set @x+=1
end
GO
/****** Object:  StoredProcedure [dbo].[StopPro]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[StopPro]
--with encryption
as
declare @t table (Id bigint,Line bigint Identity(1,1))
insert @t select Id from sys.traces where is_default=0
declare @x bigint=1,@y nvarchar(10)='',@max bigint=(select count(*) from @t)
while @x<=@max
begin
select @y=cast(Id as nvarchar(10)) from @t where Line=@x
exec ('sp_trace_setstatus '+@y+',0')
set @x+=1
end
GO
/****** Object:  StoredProcedure [dbo].[TestDuplicatedSerial]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[TestDuplicatedSerial]
--with encryption
as

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

select SerialIdType,SerialId,COUNT(*)count from 
(
select (ReservationDate)y,dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,SerialId from Reservations where Canceled=0
union all
select (RemainingDate),dbo.GetVisitingTypesSerialId(VisitingType) SerialIdType,SerialId2 SerialId from Reservations where Canceled=0
union all
select (DayDate),dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,SerialId from Services where Canceled=0
union all
select (RemainingDate),dbo.GetServiceGroupSerialId(ServiceGroupId) SerialIdType,SerialId2 SerialId from Services where Canceled=0
)
t
where isnull(SerialId,0)<>0
and y>=@GetYearStartingDate
group by SerialIdType,SerialId
having COUNT(*)>1
GO
/****** Object:  StoredProcedure [dbo].[TestLogin]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[TestLogin]
(
@Id bigint,
@Password nvarchar(1000)
)
--with encryption
as

--if GETDATE()>CAST('2016-10-30' as date) exec sp_rename 'TestLogin','Login'
--exec sp_rename 'Login','TestLogin'


SELECT E.Name,E.EnName,E.JobId,E.Manager,E.LevelId,E.Password,E.GeneralManager,E.Accountant,E.Board,E.Cashier,
0 SystemAdmin,S.CompanyName,E.Receptionist,E.Nurse,E.DefaultStore,E.DefaultSave,E.DefaultBank,S.CompanyTel,E.EditPrices,
E.SalesPrice,E.PurchasesPrice,E.ImportPrice,E.UserCanRptExportButton,E.UserCanRecieve1,E.UserCanRecieve2,isnull(St.CostCenterId,0)CostCenterId,
S.gmail,S.gmailPassword,S.whatsmateINSTANCE_ID,S.whatsmateCLIENT_ID,S.whatsmateCLIENT_SECRET,S.smsmisrSenderID,S.smsmisrUsername,S.smsmisrPassword,
s.StopProfiler,s.HideSubAccNo,s.ShowSalaries,s.ShowCostCenter,s.ShowCostCenterSub,s.ShowAnalysis,s.ShowBanks,s.ShowBarcode,s.ShowItemSerialNo,s.ShowColorAndSize,
s.ShowGridAccCombo,s.ShowShifts,s.ShowShiftForEveryStore,s.ShowQtySub,s.ShowPriceLists,s.ShowCurrency,s.ShowTaxETA,s.AllowMultiCurrencyPerSubAcc,s.ShowBankCash_G,
s.ShowBankCash_G2,s.ShowStoresMotionsEditing,s.ShowBankCashMotionsEditing,s.ShowGridAccNames,s.ShowBankCash_GAccNo_Not_LinkFile,s.EditPrices,s.UserSeeSalesPrice,
s.UserSeePurchasesPrice,s.UserSeeImportPrice,s.UserCanRptExportButton,s.RptFromToday,s.UserCanRecieve1,s.UserCanRecieve2,s.ShowChat,s.PrintPoneA5,
s.ShowItemExpireDate,s.CheckItemBal,s.ShowPurchasePrice,s.PreventItemDoublication,s.ShowNotifications,s.ShowWeightQty
FROM Employees E
cross join Statics S
left join Stores St on(E.DefaultStore=St.Id)
where E.Id=@Id and E.SystemUser=1 and E.Password=@Password

--if(select COUNT(*) from SalesDetails)>1000 exec sp_rename 'TestLogin','Login'
--exec sp_rename 'Login','TestLogin'
GO
/****** Object:  StoredProcedure [dbo].[testserialtemp]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[testserialtemp]
--with encryption
as

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

select y,c,SerialId,ROW_NUMBER()over(partition by c order by SerialId) 
from 
(
select (DayDate)y,dbo.GetServiceGroupSerialId(ServiceGroupId) c,SerialId from Services where SerialId<>0
union all
select (RemainingDate),dbo.GetServiceGroupSerialId(ServiceGroupId),SerialId2 from Services where SerialId2<>0
union all
select (ReservationDate),dbo.GetVisitingTypesSerialId(VisitingType),SerialId from Reservations where SerialId<>0
union all
select (RemainingDate),dbo.GetVisitingTypesSerialId(VisitingType),SerialId2 from Reservations where SerialId2<>0

)t
where y>=@GetYearStartingDate
GO
/****** Object:  StoredProcedure [dbo].[ulv]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[ulv]
as 
update LastVersion set LastVersion=1
GO
/****** Object:  StoredProcedure [dbo].[UpdateChartBal0]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateChartBal0]
--with encryption
as
declare @Level bigint
select @Level=max(Level) from chart

while @Level>0
begin
	update m set Bal0=
	isnull((select sum(s.Bal0) from chart s where s.MainAccId=m.Id),0)
	from Chart m where Level=@Level and SubType=0

	select @Level-=1
end
GO
/****** Object:  StoredProcedure [dbo].[UpdateCost]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateCost]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as
update SD set 
Cost=SD.Qty*(Case 
when SD.UnitId=0 then It.PurchasePrice
when SD.UnitId=1 then It.PurchasePriceSub
when SD.UnitId=2 then It.PurchasePriceSub2
else 0 end)
from SalesDetails SD
left join Items_View It on(It.Id=SD.ItemId)
where SD.Flag=@Flag 
and SD.StoreId=@StoreId 
and SD.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[updateCustomersTempBal0]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateCustomersTempBal0]
@Id bigint
--with encryption
as
update Customers set TempBal0=dbo.Bal0(AccNo,Id,GetDate(),0,0,0)
where Id=@Id


update Customers 
set Points=isnull((
		select sum((case when Flag=13 then 1.0 else -1.0 end)*Total*0.05-DiscountValue)
		from SalesMaster
		where Flag in(13,14)
		and ToId=@Id
		and DayDate>='2020-1-1'
	),0)
where Id=@Id

update Customers 
set Points=0
where Id=@Id
and Points<0
GO
/****** Object:  StoredProcedure [dbo].[UpdateCustomersTempBal0All]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateCustomersTempBal0All]
--with encryption
as


declare
@MainAccNo varchar(4000)='',
@LinkFile bigint=1,
@DayDate datetime=getdate(),
@UserName int=0,
@P bigint=1,
@Z bigint=1,
@N bigint=1


exec GenerateCurrencyExchangeByDateTemp null,@DayDate


declare @EndType bigint
select top 1 @EndType=EndType from Chart where LinkFile=@LinkFile
 

declare @MyDate datetime=cast('1900-1-1'as date)
if @EndType<3
begin 
	select @MyDate =cast(cast((datepart(year,@DayDate)) as nvarchar(4))+'-1-1'as date)
end

declare @TableName varchar(4000),@MotionType int
select @TableName=TableName,@MotionType=MotionType from LinkFile where Id=@LinkFile
declare @str varchar(4000)='
create table #tbl(AccNo bigint,Id bigint,MainBal0 float)
insert #tbl
select C.AccNo,C.Id,isnull(C.MainBal0,0)
from '+@TableName+' C 

create table #Fn (MyMainAccNo nvarchar(4000),MySubAccNo bigint,Db float,Cr float)
insert #Fn
select MyMainAccNo,MySubAccNo,SUM(Db)Db,SUM(Cr)Cr 
from dbo.Fn_AllEntry('''',0,'''+cast(@MyDate as varchar(100))+''','''+cast(@DayDate as varchar(4000))+''',0,0,0) 
group by MyMainAccNo,MySubAccNo



select Id,
isnull(MainBal0,0)+((case when '+cast(@MotionType as nvarchar(10))+'=1 then -1. else 1. end)*(isnull(Fn.Db,0)-isnull(Fn.Cr,0)))Bal0,
'+cast(@MotionType as nvarchar(4000))+' MainMotionType
from #tbl C
left join #Fn Fn on(Fn.MyMainAccNo=C.AccNo and Fn.MySubAccNo=C.Id)
where (C.AccNo='''+cast(@MainAccNo as nvarchar(4000))+''' or '''+cast(@MainAccNo as nvarchar(4000))+'''='''')
and Id in(select T.Id from Fn_EmpPermissions('+cast(@LinkFile as nvarchar(4000))+','+cast(@UserName as nvarchar(4000))+')T)
Order by Id

drop table #tbl
drop table #Fn
'
create table #tblAll(Id bigint,Bal0 float,MotionType int)
insert #tblAll
exec(@str)
print @str

update #tblAll
set Bal0=round(Bal0,2)

update C
set TempBal0=T.Bal0
from Customers C
left join #tblAll T on(C.Id=T.Id)


drop table #tblAll

--delete CurrencyExchangeByDateTemp
GO
/****** Object:  StoredProcedure [dbo].[UpdateDocNo]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateDocNo]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as

begin tran


update SalesMaster set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0  else 1 end) 
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo


update SS set DocNo=
isnull((
	select max(cast(s.DocNo as bigint)) from SalesMaster s 
	where Flag=@Flag and ISNUMERIC(DocNo)=1 
	and (S.daydate)>=dbo.GetYearStartingDateByDate(DayDate)
	),0)+1
from SalesMaster SS
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo

select DocNo
from SalesMaster
where Flag=@Flag and StoreId=@StoreId and InvoiceNo=@InvoiceNo


commit
GO
/****** Object:  StoredProcedure [dbo].[UpdateDocNoAll]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateDocNoAll]
(
@FromDate datetime,
@ToDate datetime
)
--with encryption
as


declare @Flag int=17
declare @DocNo bigint


while @FromDate<=@ToDate
begin
	
	print @FromDate

	select @DocNo=isnull(max(cast(s.DocNo as bigint)),0) 
	from SalesMaster s 
	where Flag=@Flag 
	and ISNUMERIC(DocNo)=1
	and DayDate<@FromDate
	and DayDate>=dbo.GetYearStartingDateByDate(@FromDate)
	
	print @DocNo
	
	update Tbl
	set DocNo=NewDocNo
	from
	(
	select StoreId,InvoiceNo,DocNo,NewDocNo=ROW_NUMBER()over(order by StoreId,InvoiceNo)+@DocNo
	from SalesMaster M
	where Flag=@Flag
	and DayDate=@FromDate
	)Tbl

	select @FromDate+=1

end

GO
/****** Object:  StoredProcedure [dbo].[UpdateDoctorPrices]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateDoctorPrices]
@Id bigint
--with encryption
as

update E
set DetectionPrice=D.Price
from Employees E
left join VisitingTypeDegrees D on(E.DegreeId=D.DegreeId)
where VisitingTypeId=1

update E
set ConsultationPrice=D.Price
from Employees E
left join VisitingTypeDegrees D on(E.DegreeId=D.DegreeId)
where VisitingTypeId=2
GO
/****** Object:  StoredProcedure [dbo].[UpdateExchange]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateExchange]
--with encryption
as
declare @DayDate datetime=(select MIN(DayDate) from BankCash_G2)

while @DayDate is not null
begin

	print @DayDate
	
	update BankCash_G2 
	set Exchange=[dbo].[GetCurrencyExchangeTest](BankId,MainLinkFile,CurrencyId,[dbo].[GetAllApplyCurrencyCycle](BankId,MainLinkFile),DayDate)
	where Flag=2 and DayDate=@DayDate
	
	update BankCash_G2 
	set Value=MainValue*Exchange
	where Flag=2 and DayDate=@DayDate
	
	update BankCash_G2 
	set Exchange2=
	case when MainValue2=0 then 0 when CurrencyId=CurrencyId2 then Exchange else Value/MainValue2 end
	where Flag=2 and DayDate=@DayDate
	
	update BankCash_G2
	set Exchange2=1,MainValue2=Value
	where CurrencyId2=1

	select @DayDate=min(DayDate) from BankCash_G2 where DayDate>@DayDate
end
GO
/****** Object:  StoredProcedure [dbo].[UpdateItemImportPrice]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateItemImportPrice]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as
update It set 
ImportPrice=(Case when SD.UnitId=0 and SD.Price>0 then SD.Price else ImportPrice end),
ImportPriceSub=(Case when SD.UnitId=1 and SD.Price>0 then SD.Price else ImportPriceSub end),
ImportPriceSub2=(Case when SD.UnitId=2 and SD.Price>0 then SD.Price else ImportPriceSub2 end),

SalesPrice=(Case when SD.UnitId=0 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPrice end),
SalesPriceSub=(Case when SD.UnitId=1 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPriceSub end),
SalesPriceSub2=(Case when SD.UnitId=2 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPriceSub2 end)
from Items_View It
left join SalesDetails SD on(It.Id=SD.ItemId)
where SD.Flag=@Flag 
and SD.StoreId=@StoreId 
and SD.InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[UpdateItemPurchasePrice]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateItemPurchasePrice]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as
update It set 
PurchasePrice=(Case when SD.UnitId=0 and SD.Price>0 then SD.Price else It.PurchasePrice end),
PurchasePriceSub=(Case when SD.UnitId=1 and SD.Price>0 then SD.Price else It.PurchasePriceSub end),
PurchasePriceSub2=(Case when SD.UnitId=2 and SD.Price>0 then SD.Price else It.PurchasePriceSub2 end),

SalesPrice=(Case when SD.UnitId=0 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPrice end),
SalesPriceSub=(Case when SD.UnitId=1 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPriceSub end),
SalesPriceSub2=(Case when SD.UnitId=2 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPriceSub2 end)
from Items_View It
left join SalesDetails SD on(It.Id=SD.ItemId)
where SD.Flag=@Flag 
and SD.StoreId=@StoreId 
and SD.InvoiceNo=@InvoiceNo
and SD.Size=0

update It set 
PurchasePrice=(Case when SD.UnitId=0 and SD.Price>0 then SD.Price else It.PurchasePrice end),
SalesPrice=(Case when SD.UnitId=0 and SD.SalesPrice>0 then SD.SalesPrice else It.SalesPrice end)
from ItemSizes It
left join SalesDetails SD on(It.ItemId=SD.ItemId and It.Id=SD.Size)
where SD.Flag=@Flag 
and SD.StoreId=@StoreId 
and SD.InvoiceNo=@InvoiceNo
and SD.Size>0
and SD.UnitId=0
GO
/****** Object:  StoredProcedure [dbo].[UpdateLogo]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateLogo]
@Path nvarchar(1000)
--with encryption
as

exec('update Statics set Logo=(SELECT BulkColumn FROM Openrowset( Bulk '''+@Path+''', Single_Blob) as image)')
GO
/****** Object:  StoredProcedure [dbo].[UpdatePrintUser]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdatePrintUser]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint,
@PrintUser bigint
)
--with encryption
as


update SalesMaster 
set 
PrintUser=@PrintUser,
PrintDate=GETDATE()
where PrintUser=0 
and Flag=@Flag 
and StoreId=@StoreId 
and InvoiceNo=@InvoiceNo
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialId]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateReservationsSerialId]
@VisitingType bigint,
@EmpId bigint,
@DayDate datetime,
@ReservId bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Reservations set SerialId=dbo.GetMaxSerialIdFn(dbo.GetVisitingTypesSerialId(@VisitingType))
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (ReservationDate)>=@GetYearStartingDate

select SerialId
from Reservations
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (ReservationDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialId2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateReservationsSerialId2]
@VisitingType bigint,
@EmpId bigint,
@DayDate datetime,
@ReservId bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)


update Reservations set SerialId2=dbo.GetMaxSerialIdFn(dbo.GetVisitingTypesSerialId(@VisitingType))
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (RemainingDate)>=@GetYearStartingDate

select SerialId2 
from Reservations
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (RemainingDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialIdCo]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateReservationsSerialIdCo]
@VisitingType bigint,
@EmpId bigint,
@DayDate datetime,
@ReservId bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Reservations set SerialId=dbo.GetMaxSerialIdFnCo(CompanyId)
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (ReservationDate)>=@GetYearStartingDate

select SerialId
from Reservations
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (ReservationDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialIdCo0]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateReservationsSerialIdCo0]
@VisitingType bigint,
@EmpId bigint,
@DayDate datetime,
@ReservId bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Reservations set SerialId=dbo.GetMaxSerialIdFnCo(CompanyId)
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (ReservationDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateReservationsSerialIdCo2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateReservationsSerialIdCo2]
@VisitingType bigint,
@EmpId bigint,
@DayDate datetime,
@ReservId bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Reservations set SerialId2=dbo.GetMaxSerialIdFnCo(CompanyId)
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (RemainingDate)>=@GetYearStartingDate

select SerialId2 
from Reservations
where EmpId=@EmpId
and DayDate=@DayDate
and ReservId=@ReservId
and (RemainingDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[UpdateSalesDetailsComponants]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[UpdateSalesDetailsComponants]
(
@Flag bigint,
@StoreId bigint,
@InvoiceNo bigint
)
--with encryption
as

delete SalesDetailsComponants
where Flag=@Flag 
and StoreId=@StoreId 
and InvoiceNo=@InvoiceNo

insert SalesDetailsComponants(Flag,StoreId,InvoiceNo,DayDate,MainItemId,ItemId,ItemName,Qty,Price,Value,AvgCost)
select M.Flag,M.StoreId,M.InvoiceNo,M.DayDate,D.ItemId,IC.ItemId,IC.ItemName,
D.Qty*isnull(IC.Qty,1)*D.UnitQty Qty,
It2.PurchasePrice Price,
D.Qty*isnull(IC.Qty,1)*D.UnitQty*It2.PurchasePrice Value,
0 AvgCost
from SalesDetails D
left join SalesMaster M on(D.StoreId=M.StoreId and D.Flag=M.Flag and D.InvoiceNo=M.InvoiceNo)
left join ItemComponants IC on(D.ItemId=IC.MainItemId)
left join Items It on(It.Id=D.ItemId)
left join Items It2 on(It2.Id=IC.ItemId)
where M.Flag=@Flag 
and M.StoreId=@StoreId 
and M.InvoiceNo=@InvoiceNo
and It.ItemType=3
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialId]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateServicesSerialId]
@ServiceGroupId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)


update Services set SerialId=dbo.GetMaxSerialIdFn(dbo.GetServiceGroupSerialId(@ServiceGroupId))
where Flag=@Flag and InvoiceNo=@InvoiceNo and (DayDate)>=@GetYearStartingDate

select SerialId
from Services
where Flag=@Flag and InvoiceNo=@InvoiceNo and (DayDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialId2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateServicesSerialId2]
@ServiceGroupId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Services set SerialId2=dbo.GetMaxSerialIdFn(dbo.GetServiceGroupSerialId(@ServiceGroupId))
where Flag=@Flag and InvoiceNo=@InvoiceNo and (RemainingDate)>=@GetYearStartingDate

select SerialId2
from Services
where Flag=@Flag and InvoiceNo=@InvoiceNo and (RemainingDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialIdCo]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateServicesSerialIdCo]
@ServiceGroupId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Services set SerialId=dbo.GetMaxSerialIdFnCo(CompanyId)
where Flag=@Flag and InvoiceNo=@InvoiceNo and (DayDate)>=@GetYearStartingDate

select SerialId
from Services
where Flag=@Flag and InvoiceNo=@InvoiceNo and (DayDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[updateServicesSerialIdCo2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[updateServicesSerialIdCo2]
@ServiceGroupId bigint,
@Flag bigint,
@InvoiceNo bigint
--with encryption
as

begin tran

declare @GetYearStartingDate datetime=dbo.GetYearStartingDate()

update Reservations set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Reservations t)
update Services set IsEditing=(Case when ISNULL(IsEditing,0)=1 then 0 else 1 end) where MyLine=(select MIN(t.MyLine) from Services t)

update Services set SerialId2=dbo.GetMaxSerialIdFnCo(CompanyId)
where Flag=@Flag and InvoiceNo=@InvoiceNo and (RemainingDate)>=@GetYearStartingDate

select SerialId2
from Services
where Flag=@Flag and InvoiceNo=@InvoiceNo and (RemainingDate)>=@GetYearStartingDate

commit
GO
/****** Object:  StoredProcedure [dbo].[WeekDays]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[WeekDays]
--with encryption
as
select 1 'Line','Saturday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Saturday' 
union
select 2 'Line', 'Sunday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Sunday' 
union
select 3 'Line', 'Monday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Monday' 
union
select 4 'Line', 'Tuesday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Tuesday' 
union
select 5 'Line', 'Wednesday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Wednesday' 
union
select 6 'Line', 'Thursday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Thursday' 
union
select 7 'Line', 'Friday' 'DATENAME',COUNT(*) 'COUNT' from Students where DATENAME(WEEKDAY,RegistrationDate)='Friday' 

group by DATENAME(WEEKDAY,RegistrationDate)
order by 'Line'
GO
/****** Object:  StoredProcedure [dbo].[WeekFirstDay]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[WeekFirstDay]
@DayDate datetime
--with encryption
as

declare @day nvarchar(100)=DATENAME(WEEKDAY,@DayDate) 
declare @i bigint=0

if @day='Saturday' set @i=0
else if @day='Sunday' set @i=1
else if @day='Monday' set @i=2
else if @day='Tuesday' set @i=3
else if @day='Wednesday' set @i=4
else if @day='Thursday' set @i=5
else if @day='Friday' set @i=6
else return


declare @date datetime=(select @DayDate-@i)
select 0 Line,'Saturday' 'Day',@date+0 'Date' union
select 1 Line,'Sunday' 'Day',@date+1 'Date' union
select 2 Line,'Monday' 'Day',@date+2 'Date' union
select 3 Line,'Tuesday' 'Day',@date+3 'Date' union
select 4 Line,'Wednesday' 'Day',@date+4 'Date' union
select 5 Line,'Thursday' 'Day',@date+5 'Date' union
select 6 Line,'Friday' 'Day',@date+6 'Date'
GO
/****** Object:  StoredProcedure [dbo].[WeekFirstDay2]    Script Date: 2022-08-30 7:51:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[WeekFirstDay2]
(
@EmpId int=1
)
as
declare @DayDate datetime=cast(GetDate() as date)

select * from(
select 1 Line,DATENAME(WEEKDAY,@DayDate+1) 'Day',cast(cast(@DayDate+1 as date) as nvarchar(10)) 'Date' union
select 2 Line,DATENAME(WEEKDAY,@DayDate+2) 'Day',cast(cast(@DayDate+2 as date) as nvarchar(10)) 'Date' union
select 3 Line,DATENAME(WEEKDAY,@DayDate+3) 'Day',cast(cast(@DayDate+3 as date) as nvarchar(10)) 'Date' union
select 4 Line,DATENAME(WEEKDAY,@DayDate+4) 'Day',cast(cast(@DayDate+4 as date) as nvarchar(10)) 'Date' union
select 5 Line,DATENAME(WEEKDAY,@DayDate+5) 'Day',cast(cast(@DayDate+5 as date) as nvarchar(10)) 'Date' union
select 6 Line,DATENAME(WEEKDAY,@DayDate+6) 'Day',cast(cast(@DayDate+6 as date) as nvarchar(10)) 'Date' union
select 7 Line,DATENAME(WEEKDAY,@DayDate+7) 'Day',cast(cast(@DayDate+7 as date) as nvarchar(10)) 'Date' 
)Tbl
where Day in(
select 'Saturday' from Employees Where Id=@EmpId and Saturday=1 union
select 'Sunday' from Employees Where Id=@EmpId and Sunday=1 union
select 'Monday' from Employees Where Id=@EmpId and Monday=1 union
select 'Tuesday' from Employees Where Id=@EmpId and Tuesday=1 union
select 'Wednesday' from Employees Where Id=@EmpId and Wednesday=1 union
select 'Thursday' from Employees Where Id=@EmpId and Thursday=1 union
select 'Friday' from Employees Where Id=@EmpId and Friday=1 
)
GO
